
_build_lpc40xx_freertos/lpc40xx_freertos.elf:     file format elf32-littlearm
_build_lpc40xx_freertos/lpc40xx_freertos.elf
architecture: armv7e-m, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000000e5

Program Header:
0x70000001 off    0x0001ddfc vaddr 0x0000ddfc paddr 0x0000ddfc align 2**2
         filesz 0x00000008 memsz 0x00000008 flags r--
    LOAD off    0x00010000 vaddr 0x00000000 paddr 0x00000000 align 2**16
         filesz 0x0000de04 memsz 0x0000de04 flags r-x
    LOAD off    0x00020000 vaddr 0x10000000 paddr 0x0000de04 align 2**16
         filesz 0x00000384 memsz 0x00000384 flags rw-
    LOAD off    0x00020388 vaddr 0x10000388 paddr 0x0000e188 align 2**16
         filesz 0x00000000 memsz 0x000010f8 flags rw-
    LOAD off    0x00030000 vaddr 0x20000000 paddr 0x20000000 align 2**16
         filesz 0x00000000 memsz 0x00000028 flags rw-
private flags = 5000400: [Version5 EABI] [hard-float ABI]

Sections:
Idx Name             Size      VMA       LMA       File off  Algn  Flags
  0 .text            0000ddfc  00000000  00000000  00010000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx       00000008  0000ddfc  0000ddfc  0001ddfc  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data            00000384  10000000  0000de04  00020000  2**2  CONTENTS, ALLOC, LOAD, DATA
  3 .bss             000010f8  10000388  0000e188  00020388  2**3  ALLOC
  4 .persistent_ram2 00000028  20000000  20000000  00030000  2**2  ALLOC
  5 .debug_info      00027096  00000000  00000000  00020384  2**0  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev    00006c2c  00000000  00000000  0004741a  2**0  CONTENTS, READONLY, DEBUGGING
  7 .debug_aranges   00001040  00000000  00000000  0004e046  2**0  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges    00001f50  00000000  00000000  0004f086  2**0  CONTENTS, READONLY, DEBUGGING
  9 .debug_line      00014d57  00000000  00000000  00050fd6  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_str       00006f8f  00000000  00000000  00065d2d  2**0  CONTENTS, READONLY, DEBUGGING
 11 .comment         00000076  00000000  00000000  0006ccbc  2**0  CONTENTS, READONLY
 12 .ARM.attributes  00000032  00000000  00000000  0006cd32  2**0  CONTENTS, READONLY
 13 .debug_frame     0000494c  00000000  00000000  0006cd64  2**2  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc       00014c63  00000000  00000000  000716b0  2**0  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
0000ddfc l    d  .ARM.exidx	00000000 .ARM.exidx
10000000 l    d  .data	00000000 .data
10000388 l    d  .bss	00000000 .bss
20000000 l    d  .persistent_ram2	00000000 .persistent_ram2
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 interrupt_vector_table.c
00000158 l     F .text	0000001a isr_hard_fault
0000016c l       .text	00000000 handler_address
00000174 l     F .text	0000005c halt
0000c3f0 l     O .text	00000040 table.8042
00000000 l    df *ABS*	00000000 entry_point.c
0000c258 l     O .text	0000000c __FUNCTION__.8190
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 crash.c
20000000 l     O .persistent_ram2	00000028 crash_registers
00000000 l    df *ABS*	00000000 sbrk.c
10000000 l     O .data	00000004 next_free_heap.5390
10000004 l     O .data	00000004 next_free_heap.5399
00000000 l    df *ABS*	00000000 startup.c
00000000 l    df *ABS*	00000000 acceleration.c
00000000 l    df *ABS*	00000000 sensors.c
00000000 l    df *ABS*	00000000 ff.c
00000490 l     F .text	00000010 ld_dword
000004a0 l     F .text	00000010 st_dword
000004b0 l     F .text	0000001c mem_cmp
000004cc l     F .text	00000016 clst2sect
000004e2 l     F .text	0000001e sum_sfn
00000500 l     F .text	0000002a get_ldnumber
0000052a l     F .text	00000012 mem_cpy.part.0
0000053c l     F .text	0000001c ld_clust.isra.3
00000558 l     F .text	00000018 st_clust.isra.4
00000570 l     F .text	00000040 sync_window.part.6
000005b0 l     F .text	00000044 move_window
000005f4 l     F .text	00000074 check_fs
00000668 l     F .text	000002c0 find_volume
00000928 l     F .text	000000f8 put_fat
00000a20 l     F .text	000000b4 get_fat.isra.10
00000ad4 l     F .text	00000082 dir_sdi
00000b56 l     F .text	000000e8 create_chain
00000c3e l     F .text	0000006e remove_chain
00000cac l     F .text	00000016 unlock_fs
00000cc2 l     F .text	00000050 validate
00000d12 l     F .text	0000005c dir_clear
00000d6e l     F .text	000000aa dir_next
00000e18 l     F .text	00000148 dir_find
00000f60 l     F .text	00000294 follow_path
000011f4 l     F .text	000000a0 sync_fs
00001294 l     F .text	00000288 dir_register
10000388 l     O .bss	00000004 FatFs
1000038c l     O .bss	00000002 Fsid
0000c5c0 l     O .text	00000080 ExCvt
0000c640 l     O .text	0000000d LfnOfs
00000000 l    df *ABS*	00000000 ffsystem.c
10000390 l     O .bss	00000050 mutex_struct.8002
00000000 l    df *ABS*	00000000 ffunicode.c
0000c668 l     O .text	000001f2 cvt1.8022
0000c85a l     O .text	000000bc cvt2.8023
0000c916 l     O .text	00000100 uc437
00000000 l    df *ABS*	00000000 disk_glue_logic.c
00000000 l    df *ABS*	00000000 fatfs_time.c
00000000 l    df *ABS*	00000000 sd_card.c
00001b9a l     F .text	00000028 sd_card__wait_for_ready
00001bc4 l     F .text	00000020 sd_card__power_off
00001be4 l     F .text	0000005a sd_card__transmit_datablock
00001c3e l     F .text	00000086 sd_card__send_command
00001cc4 l     F .text	00000042 sd_card__read_datablock
100003e0 l     O .bss	00000001 g_card_type
10000008 l     O .data	00000001 g_disk_status
00000000 l    df *ABS*	00000000 system_calls.c
000021a8 l     F .text	0000001e system_calls__print_and_halt
00000000 l    df *ABS*	00000000 app_cli.c
000022b4 l     F .text	000000bc app_cli__private_print_list_of_all_commands
00000000 l    df *ABS*	00000000 sj2_cli.c
00002548 l     F .text	00000012 sj2_cli__output_function
0000255c l     F .text	00000098 sj2_cli__task
100003e4 l     O .bss	00000010 sj2_cli_struct.8695
100003f4 l     O .bss	00000800 task_stack.8702
10000bf4 l     O .bss	0000005c task_struct.8703
1000000c l     O .data	00000010 crash.8697
1000001c l     O .data	00000010 i2c.8698
1000002c l     O .data	00000010 resume.8701
1000003c l     O .data	00000010 suspend.8700
1000004c l     O .data	00000010 task_list.8699
1000005c l     O .data	00000010 uart3_transmit.8696
00000000 l    df *ABS*	00000000 handler_i2c.c
00002694 l     F .text	00000104 cli__i2c_read
00002798 l     F .text	0000012c cli__i2c_write
00000000 l    df *ABS*	00000000 handlers_general.c
0000cf48 l     O .text	00000014 task_status_table.8139
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 peripherals_init.c
10000c50 l     O .bss	00000050 binary_semaphore_struct.9224
10000ca0 l     O .bss	00000050 mutex_struct.9225
10000cf0 l     O .bss	00000020 rxq_storage.9216
10000d10 l     O .bss	00000050 rxq_struct.9214
10000d60 l     O .bss	00000238 sd_card_drive.9207
10000f98 l     O .bss	00000080 txq_storage.9217
10001018 l     O .bss	00000050 txq_struct.9215
0000cf5c l     O .text	00000011 __FUNCTION__.9195
00000000 l    df *ABS*	00000000 ssp2_mutex.c
10001068 l     O .bss	00000004 spi2_mutex_handle
1000106c l     O .bss	00000050 spi2_mutex_memory
00000000 l    df *ABS*	00000000 sys_time.c
00002c8c l     F .text	00000024 sys_time__one_minute_isr
100010bc l     O .bss	00000004 sys_time__one_minute_counter
00000000 l    df *ABS*	00000000 uart_printf.c
00000000 l    df *ABS*	00000000 rtos_hooks.c
100010c0 l     O .bss	00000008 freertos_run_time_counter_offset
100010c8 l     O .bss	00000190 uxIdleTaskStack.7857
10001258 l     O .bss	0000005c xIdleTaskTCB.7856
00000000 l    df *ABS*	00000000 sl_string.c
00000000 l    df *ABS*	00000000 freertos_interrupt_handlers.c
00000000 l    df *ABS*	00000000 heap_selector.c
00000000 l    df *ABS*	00000000 port.c
00003438 l     F .text	00000022 prvPortStartFirstTask
00003460 l     F .text	0000000e vPortEnableVFP
00003474 l     F .text	0000003c prvTaskExitError
00003500 l       .text	00000000 pxCurrentTCBConst2
000035d0 l       .text	00000000 pxCurrentTCBConst
100012b4 l     O .bss	00000001 ucMaxSysCallPriority
100012b8 l     O .bss	00000004 ulMaxPRIGROUPValue
100012bc l     O .bss	00000004 uxCriticalNesting
00000000 l    df *ABS*	00000000 event_groups.c
00000000 l    df *ABS*	00000000 list.c
00000000 l    df *ABS*	00000000 queue.c
000039b2 l     F .text	00000016 prvIsQueueEmpty
000039c8 l     F .text	0000006a prvCopyDataToQueue
00003a32 l     F .text	0000002a prvCopyDataFromQueue
00003a5c l     F .text	00000070 prvUnlockQueue
00000000 l    df *ABS*	00000000 tasks.c
0000428c l     F .text	0000002e prvResetRunTimeStatsInList
000042bc l     F .text	000000f4 prvAddNewTaskToReadyList
000043b0 l     F .text	00000028 prvIdleTask
000043d8 l     F .text	00000024 prvResetNextTaskUnblockTime
000043fc l     F .text	00000038 prvTaskIsTaskSuspended
00004434 l     F .text	00000098 prvInitialiseNewTask.isra.2
000044cc l     F .text	0000008c prvAddCurrentTaskToDelayedList
00004e24 l     F .text	0000005a prvListTasksWithinSingleList
100012c4 l     O .bss	00000004 pxDelayedTaskList
100012c8 l     O .bss	00000004 pxOverflowDelayedTaskList
100012cc l     O .bss	000000c8 pxReadyTasksLists
10001394 l     O .bss	00000004 ulTaskSwitchedInTime
10001398 l     O .bss	00000004 uxCurrentNumberOfTasks
1000139c l     O .bss	00000004 uxPendedTicks
100013a0 l     O .bss	00000004 uxSchedulerSuspended
100013a4 l     O .bss	00000004 uxTaskNumber
100013a8 l     O .bss	00000004 uxTopReadyPriority
100013ac l     O .bss	00000014 xDelayedTaskList1
100013c0 l     O .bss	00000014 xDelayedTaskList2
100013d4 l     O .bss	00000004 xIdleTaskHandle
100013d8 l     O .bss	00000004 xNextTaskUnblockTime
100013dc l     O .bss	00000004 xNumOfOverflows
100013e0 l     O .bss	00000014 xPendingReadyList
100013f4 l     O .bss	00000004 xSchedulerRunning
100013f8 l     O .bss	00000014 xSuspendedTaskList
1000140c l     O .bss	00000004 xTickCount
10001410 l     O .bss	00000004 xYieldPending
00000000 l    df *ABS*	00000000 board_io.c
10001414 l     O .bss	00000001 board_io__led0
10001415 l     O .bss	00000001 board_io__led1
10001416 l     O .bss	00000001 board_io__led2
10001417 l     O .bss	00000001 board_io__led3
10001418 l     O .bss	00000001 board_io__sw0
10001419 l     O .bss	00000001 board_io__sw1
1000141a l     O .bss	00000001 board_io__sw2
1000141b l     O .bss	00000001 board_io__sw3
00000000 l    df *ABS*	00000000 gpio.c
0000d864 l     O .text	00000018 gpio_memory_map
00000000 l    df *ABS*	00000000 hw_timer.c
0000d87c l     O .text	00000030 hw_timers
00000000 l    df *ABS*	00000000 i2c.c
000055b4 l     F .text	0000005e i2c__transfer_unprotected
00005614 l     F .text	00000128 i2c__handle_interrupt
0000573c l     F .text	0000000c i2c2_isr
00005748 l     F .text	0000000c i2c1_isr
00005754 l     F .text	0000000c i2c0_isr
1000006c l     O .data	00000060 i2c_structs
00000000 l    df *ABS*	00000000 lpc_peripherals.c
0000590c l     F .text	00000002 lpc_peripheral__halt_handler
1000141c l     O .bss	00000004 memory_write_to_avoid_spurious_interrupt.7702
100000cc l     O .data	000000a4 lpc_peripheral__isr_registrations
0000d8df l     O .text	0000005a lpc_peripheral_pconp_bit_map
00000000 l    df *ABS*	00000000 ssp2.c
000059bc l     F .text	00000098 ssp2__dma_transfer_block
00000000 l    df *ABS*	00000000 uart.c
00005ae4 l     F .text	00000094 uart__isr_common
00005b78 l     F .text	0000000c uart3_isr
00005b84 l     F .text	0000000c uart2_isr
00005b90 l     F .text	0000000c uart1_isr
00005b9c l     F .text	0000000c uart0_isr
10000170 l     O .data	00000040 uarts
0000d954 l     O .text	00000010 uart__isrs
0000d964 l     O .text	00000004 uart_peripheral_ids
00000000 l    df *ABS*	00000000 main.c
00005e08 l     F .text	00000070 producer_task
00005e78 l     F .text	00000068 watchdog_task
00005fc8 l     F .text	0000007c consumer_task
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 getchar.c
00000000 l    df *ABS*	00000000 lock.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
000069bc l     F .text	0000002e __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_float.c
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 nano-vfscanf_float.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strcasecmp.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 strncasecmp.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 strncpy.c
00000000 l    df *ABS*	00000000 strstr.c
00000000 l    df *ABS*	00000000 strtod.c
00007cfc l     F .text	00000038 sulp
0000dc00 l     O .text	00000014 fpi.7522
0000dc14 l     O .text	00000014 fpinan.7558
0000dc28 l     O .text	00000028 tinytens
00000000 l    df *ABS*	00000000 strtol.c
000088dc l     F .text	000000f0 _strtol_l.isra.0
00000000 l    df *ABS*	00000000 vsnprintf.c
00000000 l    df *ABS*	00000000 vsscanf.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00008c34 l     F .text	00000112 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00009a64 l     F .text	00000048 std
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
00009c84 l     F .text	00000074 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
0000a16c l     F .text	00000024 L_shift
00000000 l    df *ABS*	00000000 getc.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 lib_a-memchr.o
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 mprec.c
0000ddc8 l     O .text	0000000c p05.7444
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00000000 l    df *ABS*	00000000 nano-vfscanf.c
00000000 l    df *ABS*	00000000 nano-vfscanf_i.c
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 s_nan.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strtoul.c
0000b7d0 l     F .text	000000ec _strtoul_l.isra.0
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 refill.c
0000ba30 l     F .text	00000012 lflush
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_unorddf2.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 _arm_fixunsdfsi.o
00000000 l    df *ABS*	00000000 _arm_truncdfsf2.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 impure.c
100001b4 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 lnumeric.c
10000214 l     O .data	00000002 numempty
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 reent.c
0000b9fc g     F .text	00000010 _malloc_usable_size_r
00006c60 g     F .text	000000ba __cvt
000078d8 g     F .text	00000028 putchar
0000b34c g     F .text	000000b0 _scanf_chars
00003292 g     F .text	00000036 sl_string__erase_last
0000c090 g     F .text	0000002c .hidden __aeabi_dcmpun
0000acb6 g     F .text	00000042 __any_on
0000b9b8 g     F .text	00000020 _isatty_r
0000c054 g     F .text	00000012 .hidden __aeabi_dcmple
00005d8c g     F .text	0000007c uart__put
00007900 g     F .text	000000dc _puts_r
0000bf90 g     F .text	0000007a .hidden __cmpdf2
0000b9d8 g     F .text	00000024 _lseek_r
00002e9e g     F .text	00000032 sl_string__is_full
00004bb8 g     F .text	00000054 vTaskPlaceOnUnorderedEventList
0000bf90 g     F .text	0000007a .hidden __eqdf2
00005a54 g     F .text	0000002c ssp2__set_max_clock
00003548 g     F .text	00000028 vPortExitCritical
0000048c g     F .text	00000004 sensors__init
00006360 g     F .text	0000005a .hidden __floatdidf
00005c08 g     F .text	00000028 uart__is_initialized
00002370 g     F .text	00000016 app_cli__initialize
000078a8 g     F .text	00000030 printf
10001470 g     O .bss	00000001 __lock___atexit_recursive_mutex
00002cb0 g     F .text	0000002c sys_time__init
0000b7a2 g     F .text	00000024 __sseek
00009b14 g     F .text	00000070 __sinit
00004da8 g     F .text	0000007c vTaskGetInfo
00008ab4 g     F .text	000000a4 __swbuf_r
00009ab8 g     F .text	0000002c __sfmoreglue
00008a58 g     F .text	00000048 _vsiscanf_r
0000a4fc g     F .text	0000000c __malloc_unlock
000003e8 g     F .text	00000018 startup__initialize_interrupts
000088d0 g     F .text	0000000c _strtod_r
00009cf8 g     F .text	0000002a __hexdig_fun
10001471 g     O .bss	00000001 __lock___arc4random_mutex
00006828 g     F .text	00000034 memmove
00005358 g     F .text	0000000c board_io__get_led3
00003db0 g     F .text	000000bc xQueueGenericSendFromISR
0000a508 g     F .text	00000068 _Balloc
0000de04 g       .ARM.exidx	00000000 __exidx_end
0000598c g     F .text	00000030 lpc_peripheral__enable_interrupt
0000bf80 g     F .text	0000008a .hidden __gtdf2
000051ec g     F .text	00000010 vRunTimeStatIsrExit
100012c0 g     O .bss	00000004 pxCurrentTCB
0000c1ec g     F .text	0000002e .hidden __aeabi_d2lz
0000b994 g     F .text	00000024 _fstat_r
00003330 g     F .text	00000070 sl_string__erase_int
1000147c g     O .bss	00000004 errno
0000b3fc g     F .text	000001e8 _scanf_i
0000b766 g     F .text	00000004 __seofread
00000422 g     F .text	0000006a acceleration__get_data
0000de04 g       .ARM.exidx	00000000 _etext
10001428 g     O .bss	00000004 Check_In
0000c01c g     F .text	00000010 .hidden __aeabi_cdcmple
00002e48 g     F .text	00000026 sl_string__initialize
00005ba8 g     F .text	00000060 uart__init
00001a70 g     F .text	0000008c ff_wtoupper
00008aa0 g     F .text	00000014 vsscanf
0000022c g     F .text	00000040 clock__initialize_system_clock_96mhz
00004d10 g     F .text	00000018 vTaskInternalSetTimeOutState
000037a4 g     F .text	00000108 xEventGroupWaitBits
000055a4 g     F .text	00000010 hw_timer__set_value
00005cc8 g     F .text	00000024 uart__polled_put
0000a2d8 g     F .text	00000080 _getc_r
00003630 g     F .text	00000100 xPortStartScheduler
0000680c g     F .text	0000001c memcpy
00004b88 g     F .text	00000030 vTaskPlaceOnEventList
0000a1b8 g     F .text	00000120 __hexnan
00004c8c g     F .text	00000084 vTaskRemoveFromUnorderedEventList
0000c00c g     F .text	00000020 .hidden __aeabi_cdrcmple
00007a0c g     F .text	00000184 setvbuf
00009aac g     F .text	0000000c _cleanup_r
0000ae18 g     F .text	000001f0 _svfprintf_r
000062e8 g     F .text	00000022 .hidden __floatsidf
00003600  w    F .text	00000030 vPortSetupTimerInterrupt
0000bf88 g     F .text	00000082 .hidden __ltdf2
000035d4 g     F .text	0000002c xPortSysTickHandler
00001afc g     F .text	0000001c disk_initialize
000063bc g     F .text	00000000 .hidden __aeabi_uldivmod
000079dc g     F .text	00000010 puts
00003d84 g     F .text	0000002a xQueueCreateMutexStatic
0000341c g     F .text	0000001a vPortFree
00002f76 g     F .text	0000003c sl_string__set
0000ac1c g     F .text	00000066 __ratio
00005340 g     F .text	0000000c board_io__get_led1
0000404c g     F .text	00000180 xQueueSemaphoreTake
00005320 g     F .text	00000014 board_io__sd_card_is_present
000019e0 g     F .text	0000000a ff_del_syncobj
000067ec g     F .text	00000010 malloc
00003730 g     F .text	00000058 vPortValidateInterruptPriority
00005968 g     F .text	00000024 lpc_peripheral__is_powered_on
000021fc g     F .text	00000004 _fstat
0000dd00 g     O .text	000000c8 __mprec_tens
00005760 g     F .text	000000b8 i2c__initialize
00003570 g     F .text	00000064 xPortPendSVHandler
00008a3c g     F .text	0000001c vsnprintf
10000388 g       .bss	00000000 _bss_start
0000c10c g     F .text	00000040 .hidden __fixunsdfsi
0000394c g     F .text	00000018 vListInsertEnd
0000b082 g     F .text	0000003a __ssrefill_r
00001b18 g     F .text	0000000a disk_status
00003788 g     F .text	0000001c xEventGroupCreate
000062c8 g     F .text	0000001e .hidden __aeabi_ui2d
0000a358 g     F .text	00000008 _localeconv_r
20008000 g       *ABS*	00000000 __top_ram_32k
0000a730 g     F .text	00000012 __i2b
0000544c g     F .text	00000020 gpio__set_as_output
000063ec g     F .text	000002d0 .hidden __udivmoddi4
00006044 g     F .text	00000000 .hidden __aeabi_drsub
000079ec g     F .text	00000020 _sbrk_r
0000292c g     F .text	00000044 cli__uart3_transmit
00005400 g     F .text	00000024 gpio__set_as_input
1000142c g     O .bss	00000040 string
000033fa g     F .text	00000004 xPortSysTickHandler_wrapper
0000538e g     F .text	0000002a gpio__construct_with_function
0000ba0c g     F .text	00000024 _read_r
00003946 g     F .text	00000006 vListInitialiseItem
00001b72 g     F .text	00000024 disk_ioctl
0000c040 g     F .text	00000012 .hidden __aeabi_dcmplt
00003f10 g     F .text	0000013c xQueueReceive
00009a40 g     F .text	00000024 fflush
0000630c g     F .text	00000042 .hidden __extendsfdf2
0000b0bc g     F .text	00000290 __ssvfscanf_r
0000bdb0 g     F .text	000001d0 .hidden __aeabi_ddiv
00006050 g     F .text	00000276 .hidden __adddf3
20008000 g       *ABS*	00000000 _heap_end
0000aae0 g     F .text	000000a0 __b2d
0000ddfc g       .text	00000000 __exidx_start
10001472 g     O .bss	00000001 __lock___env_recursive_mutex
0000bb5c g     F .text	00000254 .hidden __aeabi_dmul
000021c8 g     F .text	00000028 _isatty
10001473 g     O .bss	00000001 __lock___sinit_recursive_mutex
0000dbb4 g     O .text	00000004 _global_impure_ptr
000038ac g     F .text	00000084 xEventGroupSetBits
0000ad14 g     F .text	0000004c _realloc_r
00007c40 g     F .text	00000044 strncasecmp
00002a94 g     F .text	00000014 cli__suspend_task
000053d8 g     F .text	00000028 gpio__enable_pull_down_resistors
00005c58 g     F .text	00000070 uart__enable_queues
0000dcd8 g     O .text	00000028 __mprec_bigtens
0000a614 g     F .text	0000007c __s2b
000054d4 g     F .text	0000001c gpio__reset
000054b8 g     F .text	0000001c gpio__set
000062c8 g     F .text	0000001e .hidden __floatunsidf
00005ac4 g     F .text	00000014 ssp2__exchange_byte
00000344 g     F .text	00000054 _sbrk
0000a9a6 g     F .text	00000034 __mcmp
000033fe g     F .text	0000001e pvPortMalloc
10010000 g       *ABS*	00000000 __end_of_unused_ram64
00003174 g     F .text	00000034 sl_string__to_int
00004268 g     F .text	00000024 vQueueDelete
00003930 g     F .text	00000016 vListInitialise
000089d0 g     F .text	00000014 strtol
00002d54 g     F .text	0000002a uart_puts__polled
0000c14c g     F .text	0000009e .hidden __aeabi_d2f
00080000 g       *ABS*	00000000 __top_flash
10001480 g       .bss	00000000 _bss_end
00004794 g     F .text	0000000c xTaskGetTickCount
0000c21c g     F .text	0000003c .hidden __aeabi_d2ulz
00003c28 g     F .text	0000015c xQueueGenericSend
00001a08 g     F .text	00000040 ff_uni2oem
00002c34 g     F .text	00000034 spi2_mutex__acquire
00007d38 g     F .text	00000b98 _strtod_l
000058f4 g     F .text	00000018 i2c__write_single
0000a190 g     F .text	00000028 __match
00005558 g     F .text	00000024 hw_timer__enable_match_isr
00002b08 g     F .text	0000012c peripherals_init
00002d1a g     F .text	0000003a uart_puts
00008a3c g     F .text	0000001c vsniprintf
00002f4e g     F .text	00000028 sl_string__scanf
0000a690 g     F .text	00000040 __hi0bits
000051fc g     F .text	00000104 board_io__initialize
00004e80 g     F .text	00000098 uxTaskGetSystemState
000032fc g     F .text	00000032 sl_string__erase_first_word
0000c0bc g     F .text	0000004e .hidden __fixdfsi
00004fdc g     F .text	0000009c xTaskPriorityDisinherit
20000028 g       .persistent_ram2	00000000 _heap_start
10001474 g     O .bss	00000001 __lock___malloc_recursive_mutex
00005494 g     F .text	00000024 gpio__get
00003136 g     F .text	0000003c sl_string__begins_with_ignore_case
00001e74 g     F .text	0000008c sd_card__read
00005158 g     F .text	0000006c vTaskResetRunTimeStats
00002aa8 g     F .text	00000014 cli__resume_task
0000b5e4 g     F .text	00000090 _putc_r
10001480 g       .bss	00000000 __start_of_unused_ram64
00004c0c g     F .text	00000080 xTaskRemoveFromEventList
00002d9c g     F .text	00000010 vApplicationMallocFailedHook
000001d0 g     F .text	0000004c isr_hard_fault_handler
000066c0 g     F .text	00000024 fprintf
00006050 g     F .text	00000276 .hidden __aeabi_dadd
0000bf88 g     F .text	00000082 .hidden __ledf2
10000000 g       .data	00000000 _bdata_vma
00003066 g     F .text	0000004e sl_string__append
0000a864 g     F .text	0000009c __pow5mult
00006350 g     F .text	0000006a .hidden __aeabi_ul2d
0000dc60 g     O .text	00000020 __sf_fake_stderr
00005510 g     F .text	00000048 hw_timer__enable
000067e8 g     F .text	00000002 __retarget_lock_release_recursive
00000398 g     F .text	0000003c startup__initialize_ram
00001d28 g     F .text	0000013c sd_card__initialize
0000ad60 g     F .text	000000b6 __ssputs_r
00000224 g     F .text	00000008 clock__get_peripheral_clock_hz
00005140 g     F .text	00000018 pvTaskIncrementMutexHeldCount
00000284 g     F .text	000000c0 crash__report_if_occurred
0000c07c g     F .text	00000012 .hidden __aeabi_dcmpgt
10010000 g       *ABS*	00000000 __top_ram_64k
000069ea g     F .text	00000024 __sfputs_r
00009ae4 g     F .text	0000000c __sfp_lock_acquire
0000a450 g     F .text	00000000 memchr
00006d80  w    F .text	00000454 _printf_float
00004d28 g     F .text	00000074 xTaskCheckForTimeOut
0000686c g     F .text	0000009c _free_r
00004f38 g     F .text	000000a4 xTaskPriorityInherit
0000c068 g     F .text	00000012 .hidden __aeabi_dcmpge
0000b674 g     F .text	00000058 __srget_r
0000b008 g     F .text	0000007a _sungetc_r
0000199c g     F .text	00000028 f_close
0000604c g     F .text	0000027a .hidden __aeabi_dsub
00004784 g     F .text	00000010 vTaskSuspendAll
00004620 g     F .text	0000006c eTaskGetState
00007cce g     F .text	0000002e strstr
00006350 g     F .text	0000006a .hidden __floatundidf
00002200 g     F .text	00000004 _lseek
0000a900 g     F .text	000000a6 __lshift
000054f0 g     F .text	0000001e gpio__toggle
00002e88 g     F .text	00000016 sl_string__get_length
00003992 g     F .text	00000020 uxListRemove
000032c8 g     F .text	00000034 sl_string__erase_at_substring
00002dbc g     F .text	00000040 configASSERT_callback
00007c84 g     F .text	00000024 strncmp
00002970 g     F .text	00000018 cli__crash_me
0000a742 g     F .text	00000120 __multiply
00004558 g     F .text	0000006c xTaskCreateStatic
000019c4 g     F .text	0000001c ff_cre_syncobj
00007ca8 g     F .text	00000026 strncpy
0000468c g     F .text	00000084 vTaskResume
0000ab80 g     F .text	0000009c __d2b
00007bdc g     F .text	00000038 strcasecmp
00002988 g     F .text	0000010c cli__task_list
000049f8 g     F .text	000000bc vTaskSwitchContext
0000586c g     F .text	0000001e i2c__read_single
00005424 g     F .text	00000028 gpio__construct_as_input
0000b8bc g     F .text	00000004 _strtoul_r
00003b48 g     F .text	00000094 xQueueGenericCreateStatic
000033a0 g     F .text	00000052 sl_string__trim_end
00005c44 g     F .text	00000014 uart__is_receive_queue_initialized
0000b974 g     F .text	00000020 _close_r
000062e8 g     F .text	00000022 .hidden __aeabi_i2d
00002dfc g     F .text	00000018 vApplicationGetIdleTaskMemory
00001f00 g     F .text	000000a8 sd_card__write
10000384 g       .data	00000000 _data_end
00008b58 g     F .text	000000dc __swsetup_r
00005ad8 g     F .text	00000006 ssp2__dma_write_block
00002d80 g     F .text	0000001c vApplicationStackOverflowHook
000066bc  w    F .text	00000002 .hidden __aeabi_ldiv0
00004ab4 g     F .text	000000d4 vTaskSuspend
0000bdb0 g     F .text	000001d0 .hidden __divdf3
00009b84 g     F .text	0000008c __sfp
0000ac82 g     F .text	00000034 __copybits
00009b08 g     F .text	0000000c __sinit_lock_release
000031fa g     F .text	00000030 sl_string__ends_with_newline
000089e4 g     F .text	00000058 _vsnprintf_r
00002d08 g     F .text	00000012 sys_time__get_uptime_ms
00000000 g       .text	00000000 __base_flash
0000bb5c g     F .text	00000254 .hidden __muldf3
0000534c g     F .text	0000000c board_io__get_led2
0000b744 g     F .text	00000022 __sread
00001b96 g     F .text	00000004 get_fattime
0000a4f0 g     F .text	0000000c __malloc_lock
000099c8 g     F .text	00000078 _fflush_r
00005d38 g     F .text	00000054 uart__polled_get
0000acf8 g     F .text	0000001c _calloc_r
00002cdc g     F .text	0000002c sys_time__get_uptime_us
0000dc80 g     O .text	00000020 __sf_fake_stdin
000067e6 g     F .text	00000002 __retarget_lock_acquire_recursive
0000685c g     F .text	00000010 memset
000058dc g     F .text	00000018 i2c__detect
00005ee0 g     F .text	00000090 main
000067e4 g     F .text	00000002 __retarget_lock_init_recursive
00001fa8 g     F .text	00000200 sd_card__ioctl
000018fa g     F .text	000000a2 f_sync
10000000 g       .text	00000000 __base_ram_64k
00003964 g     F .text	0000002e vListInsert
0000b7c6 g     F .text	00000008 __sclose
0000c14c g     F .text	0000009e .hidden __truncdfsf2
000089cc g     F .text	00000004 _strtol_r
000067c0 g     F .text	00000024 getchar
000000e4 g       .text	00000000 __init_array_end
000034e0 g     F .text	00000024 vPortSVCHandler
00008d48 g     F .text	00000b74 _dtoa_r
00006908 g     F .text	000000b4 _malloc_r
0000b934 g     F .text	0000001a __ascii_wctomb
00006360 g     F .text	0000005a .hidden __aeabi_l2d
000030dc g     F .text	00000024 sl_string__equals_to_ignore_case
0000151c g     F .text	00000070 f_mount
0000b8c0 g     F .text	00000074 __submore
00002e28 g     F .text	00000014 freertos_hooks__reset_run_time_stats
0000326a g     F .text	00000028 sl_string__erase_first
00009c10 g     F .text	00000038 _fwalk
000041cc g     F .text	0000009c xQueueReceiveFromISR
00002390 g     F .text	000001b8 app_cli__process_input
00003bdc g     F .text	0000004c xQueueGenericCreate
00005c30 g     F .text	00000014 uart__is_transmit_queue_initialized
00001a48 g     F .text	00000028 ff_oem2uni
00005a80 g     F .text	00000044 ssp2__initialize
00001e64 g     F .text	00000010 sd_card__status
0000c21c g     F .text	0000003c .hidden __fixunsdfdi
0000bf90 g     F .text	0000007a .hidden __nedf2
000033f6 g     F .text	00000004 xPortPendSVHandler_wrapper
00005818 g     F .text	00000054 i2c__read_slave_data
000078a8 g     F .text	00000030 iprintf
000019fc g     F .text	0000000a ff_rel_grant
000048c4 g     F .text	000000ec xTaskResumeAll
00007b9c g     F .text	00000040 sprintf
000033f2 g     F .text	00000004 vPortSVCHandler_wrapper
00004710 g     F .text	00000074 vTaskStartScheduler
00006d1a g     F .text	00000064 __exponent
00005910 g     F .text	00000034 lpc_peripheral__interrupt_dispatcher
0000c1ec g     F .text	0000002e .hidden __fixdfdi
00002e6e g     F .text	0000001a sl_string__get_capacity
0000b950 g     F .text	00000024 _write_r
0000021c g     F .text	00000008 clock__get_core_clock_hz
00007b90 g     F .text	0000000c nanf
000071d4 g     F .text	000000ea _printf_common
100001b0 g     O .data	00000004 _impure_ptr
000098bc g     F .text	0000010c __sflush_r
000000e4 g       .text	00000000 __preinit_array_end
000053b8 g     F .text	00000020 gpio__enable_open_drain
00005300 g     F .text	00000010 board_io__sd_card_cs
00002c68 g     F .text	00000024 spi2_mutex__release
0000ae18 g     F .text	000001f0 _svfiprintf_r
0000ba44 g     F .text	00000118 __srefill_r
0000a428 g     F .text	00000024 __ascii_mbtowc
0000aa94 g     F .text	0000004c __ulp
00004d9c g     F .text	0000000c vTaskMissedYield
00005310 g     F .text	00000010 board_io__sd_card_ds
0000dcc0 g     O .text	0000000c _C_numeric_locale
1000146c g     O .bss	00000004 sd_card_Q
000089e4 g     F .text	00000058 _vsniprintf_r
0000026c g     F .text	00000018 crash__record_get
00001d08 g     F .text	00000020 sd_card__update_status
0000c10c g     F .text	00000040 .hidden __aeabi_d2uiz
00002e3c g     F .text	0000000c sl_utils__pointer_distance
0000b6d0 g     F .text	00000010 nan
000047a0 g     F .text	00000124 xTaskIncrementTick
0000b0bc g     F .text	00000290 __ssvfiscanf_r
00002e14 g     F .text	00000014 freertos_hooks__get_run_time_counter_value
0000a360 g     F .text	00000048 __swhatbuf_r
10010000 g       *ABS*	00000000 _estack
00003100 g     F .text	00000036 sl_string__begins_with_limited_chars
00002f20 g     F .text	0000002e sl_string__printf
00002ed0 g     F .text	0000000e sl_string__c_str
0000c02c g     F .text	00000012 .hidden __aeabi_dcmpeq
00000400 g     F .text	00000022 acceleration__init
00003acc g     F .text	0000007c xQueueGenericReset
00002204 g     F .text	00000070 _write
00002afc g     F .text	0000000c delay__ms
00002fb2 g     F .text	00000026 sl_string__initialize_from
00000000 g     O .text	000000e4 interrupt_vector_table
10001475 g     O .bss	00000001 __lock___at_quick_exit_mutex
00001758 g     F .text	000001a2 f_write
000066e4 g     F .text	000000cc _fputs_r
20000000 g       .text	00000000 __base_ram_32k
000045c4 g     F .text	0000005a xTaskCreate
00008a58 g     F .text	00000048 _vsscanf_r
0000b76a g     F .text	00000038 __swrite
0000158c g     F .text	000001cc f_open
00001b4a g     F .text	00000028 disk_write
000066c0 g     F .text	00000024 fiprintf
00006a10 g     F .text	00000250 _vfiprintf_r
00009c48 g     F .text	0000003c _fwalk_reent
00005364 g     F .text	0000002a gpio__set_function
00002efc g     F .text	00000024 sl_string__vprintf
0000a9da g     F .text	000000ba __mdiff
0000c0bc g     F .text	0000004e .hidden __aeabi_d2iz
000019ea g     F .text	00000012 ff_req_grant
00008aa0 g     F .text	00000014 vsiscanf
0000de04 g       *ABS*	00000000 _bdata_lma
000049b0 g     F .text	00000048 vTaskDelay
00009af0 g     F .text	0000000c __sfp_lock_release
0000dca0 g     O .text	00000020 __sf_fake_stdout
00007b9c g     F .text	00000040 siprintf
0000b6e0 g     F .text	00000064 __sccl
00004f18 g     F .text	00000020 xTaskGetSchedulerState
0000dab3 g     O .text	00000101 _ctype_
00005078 g     F .text	000000b0 vTaskPriorityDisinheritAfterTimeout
00002274 g     F .text	00000040 _read
000000e4 g       .text	00000000 __init_array_start
000066bc  w    F .text	00000002 .hidden __aeabi_idiv0
0000c090 g     F .text	0000002c .hidden __unorddf2
0000557c g     F .text	00000018 hw_timer__acknowledge_interrupt
000003d4 g     F .text	00000014 startup__initialize_fpu
00005f70 g     F .text	00000058 write_file_using_fatfs_pi
10001476 g     O .bss	00000001 __lock___dd_hash_mutex
0000a3a8 g     F .text	00000080 __smakebuf_r
10001477 g     O .bss	00000001 __lock___tz_mutex
00007c2e g     F .text	00000010 strlen
00001b22 g     F .text	00000028 disk_read
000034b0 g     F .text	0000002c pxPortInitialiseStack
000072c0 g     F .text	00000228 _printf_i
00005cec g     F .text	0000004c uart__get
0000c01c g     F .text	00000010 .hidden __aeabi_cdcmpeq
00005334 g     F .text	0000000c board_io__get_led0
0000bf80 g     F .text	0000008a .hidden __gedf2
00009d24 g     F .text	00000446 __gethex
10001424 g     O .bss	00000004 __malloc_sbrk_start
000030b4 g     F .text	00000028 sl_string__append_char
0000588c g     F .text	00000050 i2c__write_slave_data
00002abc g     F .text	00000040 delay__us
00007c14 g     F .text	0000001a strchr
000031a8 g     F .text	00000052 sl_string__begins_with_whole_word
0000630c g     F .text	00000042 .hidden __aeabi_f2d
000067b0 g     F .text	00000010 fputs
00003504 g     F .text	00000044 vPortEnterCritical
00005944 g     F .text	00000024 lpc_peripheral__turn_on_power_to
10001420 g     O .bss	00000004 __malloc_free_list
00002386 g     F .text	0000000a app_cli__add_command_handler
0000604c g     F .text	0000027a .hidden __subdf3
00006a10 g     F .text	00000250 _vfprintf_r
000000e4 g       .text	00000000 __preinit_array_start
00005594 g     F .text	00000010 hw_timer__get_value
0000a6d0 g     F .text	00000060 __lo0bits
000051c4 g     F .text	00000028 vRunTimeStatIsrEntry
000000e4 g     F .text	00000074 entry_point
0000546c g     F .text	00000028 gpio__construct_as_output
00005128 g     F .text	00000018 uxTaskResetEventItemValue
10000218 g     O .data	0000016c __global_locale
00002fd8 g     F .text	0000008e sl_string__insert_at
000025f4 g     F .text	000000a0 sj2_cli__init
00005ade g     F .text	00000006 ssp2__dma_read_block
10001478 g     O .bss	00000001 __lock___sfp_recursive_mutex
00003e6c g     F .text	000000a4 xQueueGiveFromISR
0000322a g     F .text	00000040 sl_string__erase_after
000021f0 g     F .text	0000000c _close
000067fc g     F .text	00000010 free
000028c4 g     F .text	00000068 cli__i2c
00009afc g     F .text	0000000c __sinit_lock_acquire
000074e8  w    F .text	000003c0 _scanf_float
0000a59e g     F .text	00000076 __multadd
0000a570 g     F .text	0000002e _Bfree
00002ede g     F .text	0000001e sl_string__clear
00002dac g     F .text	00000010 vApplicationIdleHook



Disassembly of section .text:

00000000 <interrupt_vector_table>:
__base_flash():
       0:	00 00 01 10 e5 00 00 00 75 01 00 00 59 01 00 00     ........u...Y...
      10:	75 01 00 00 75 01 00 00 75 01 00 00 75 01 00 00     u...u...u...u...
      20:	75 01 00 00 75 01 00 00 75 01 00 00 f3 33 00 00     u...u...u....3..
      30:	75 01 00 00 75 01 00 00 f7 33 00 00 fb 33 00 00     u...u....3...3..
      40:	11 59 00 00 11 59 00 00 11 59 00 00 11 59 00 00     .Y...Y...Y...Y..
      50:	11 59 00 00 11 59 00 00 11 59 00 00 11 59 00 00     .Y...Y...Y...Y..
      60:	11 59 00 00 11 59 00 00 11 59 00 00 11 59 00 00     .Y...Y...Y...Y..
      70:	11 59 00 00 11 59 00 00 11 59 00 00 11 59 00 00     .Y...Y...Y...Y..
      80:	11 59 00 00 11 59 00 00 11 59 00 00 11 59 00 00     .Y...Y...Y...Y..
      90:	11 59 00 00 11 59 00 00 11 59 00 00 11 59 00 00     .Y...Y...Y...Y..
      a0:	11 59 00 00 11 59 00 00 11 59 00 00 11 59 00 00     .Y...Y...Y...Y..
      b0:	11 59 00 00 11 59 00 00 11 59 00 00 11 59 00 00     .Y...Y...Y...Y..
      c0:	11 59 00 00 11 59 00 00 11 59 00 00 11 59 00 00     .Y...Y...Y...Y..
      d0:	11 59 00 00 11 59 00 00 11 59 00 00 11 59 00 00     .Y...Y...Y...Y..
      e0:	11 59 00 00                                         .Y..

000000e4 <entry_point>:
entry_point():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/entry_point.c:18
extern void main(void);
static void entry_point__halt(void);
static void entry_point__handle_crash_report(void);
static void entry_point__rtos_trace_init_after_mounting_sd_card(void);

void entry_point(void) {
      e4:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/entry_point.c:19
  startup__initialize_ram();
      e6:	f000 f957 	bl	398 <startup__initialize_ram>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/entry_point.c:20
  startup__initialize_fpu();
      ea:	f000 f973 	bl	3d4 <startup__initialize_fpu>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/entry_point.c:21
  clock__initialize_system_clock_96mhz();
      ee:	f000 f89d 	bl	22c <clock__initialize_system_clock_96mhz>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/entry_point.c:34
   *  - Initialize trace here so that the trace library APIs are accessible
   * early
   */
  vTraceEnable(TRC_INIT);

  startup__initialize_interrupts();
      f2:	f000 f979 	bl	3e8 <startup__initialize_interrupts>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/entry_point.c:35
  sys_time__init(clock__get_peripheral_clock_hz());
      f6:	f000 f895 	bl	224 <clock__get_peripheral_clock_hz>
      fa:	f002 fdd9 	bl	2cb0 <sys_time__init>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/entry_point.c:39

  // Peripherals init initializes UART and then we can print the crash report if
  // applicable
  peripherals_init();
      fe:	f002 fd03 	bl	2b08 <peripherals_init>
entry_point__handle_crash_report():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/entry_point.c:62
  while (1) {
  }
}

static void entry_point__handle_crash_report(void) {
  if (crash__report_if_occurred()) {
     102:	f000 f8bf 	bl	284 <crash__report_if_occurred>
     106:	b140      	cbz	r0, 11a <entry_point+0x36>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/entry_point.c:63
    while (sys_time__get_uptime_ms() < 5000) {
     108:	f241 3487 	movw	r4, #4999	; 0x1387
     10c:	2500      	movs	r5, #0
     10e:	f002 fdfb 	bl	2d08 <sys_time__get_uptime_ms>
     112:	428d      	cmp	r5, r1
     114:	bf08      	it	eq
     116:	4284      	cmpeq	r4, r0
     118:	d2f9      	bcs.n	10e <entry_point+0x2a>
entry_point():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/entry_point.c:42
  if (!sensors__init()) {
     11a:	f000 f9b7 	bl	48c <sensors__init>
     11e:	b918      	cbnz	r0, 128 <entry_point+0x44>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/entry_point.c:43
    printf("\n%s(): WARNING: Sensor errors on this board\n", __FUNCTION__);
     120:	4908      	ldr	r1, [pc, #32]	; (144 <entry_point+0x60>)
     122:	4809      	ldr	r0, [pc, #36]	; (148 <entry_point+0x64>)
     124:	f007 fbc0 	bl	78a8 <iprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/entry_point.c:48
  printf("\n%s(): Entering main()\n", __FUNCTION__);
     128:	4906      	ldr	r1, [pc, #24]	; (144 <entry_point+0x60>)
     12a:	4808      	ldr	r0, [pc, #32]	; (14c <entry_point+0x68>)
     12c:	f007 fbbc 	bl	78a8 <iprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/entry_point.c:49
  main();
     130:	f005 fed6 	bl	5ee0 <main>
entry_point__halt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/entry_point.c:56
  fprintf(stderr, "ERROR: main() should never return, program has been halted");
     134:	4b06      	ldr	r3, [pc, #24]	; (150 <entry_point+0x6c>)
     136:	4807      	ldr	r0, [pc, #28]	; (154 <entry_point+0x70>)
     138:	681b      	ldr	r3, [r3, #0]
     13a:	68d9      	ldr	r1, [r3, #12]
     13c:	f006 fb38 	bl	67b0 <fputs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/entry_point.c:58
  }
     140:	e7fe      	b.n	140 <entry_point+0x5c>
     142:	bf00      	nop
     144:	0000c258 	.word	0x0000c258
     148:	0000c264 	.word	0x0000c264
     14c:	0000c291 	.word	0x0000c291
     150:	100001b0 	.word	0x100001b0
     154:	0000c2a9 	.word	0x0000c2a9

00000158 <isr_hard_fault>:
isr_hard_fault():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:137
/**
 * Explanation of register usage dictated by ARM's EABI:
 * https://stackoverflow.com/questions/261419/what-registers-to-save-in-the-arm-c-calling-convention
 */
static void isr_hard_fault(void) {
  __asm__ volatile("tst lr, #4                                    \n"
     158:	f01e 0f04 	tst.w	lr, #4
     15c:	bf0c      	ite	eq
     15e:	f3ef 8008 	mrseq	r0, MSP
     162:	f3ef 8009 	mrsne	r0, PSP
     166:	6981      	ldr	r1, [r0, #24]
     168:	4a00      	ldr	r2, [pc, #0]	; (16c <handler_address>)
     16a:	4710      	bx	r2

0000016c <handler_address>:
     16c:	000001d1 	.word	0x000001d1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:145
                   "mrsne r0, psp                                 \n"
                   "ldr r1, [r0, #24]                             \n"
                   "ldr r2, handler_address                       \n"
                   "bx r2                                         \n"
                   "handler_address: .word isr_hard_fault_handler \n");
}
     170:	4770      	bx	lr
handler_address():
     172:	Address 0x0000000000000172 is out of bounds.


00000174 <halt>:
halt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:106
static void halt(void) {
     174:	b538      	push	{r3, r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:111
  fprintf(stderr, "Unexpected CPU exception ");
     176:	4c0f      	ldr	r4, [pc, #60]	; (1b4 <halt+0x40>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:110
  const unsigned isr_num = (*((uint8_t *)0xE000ED04));
     178:	4b0f      	ldr	r3, [pc, #60]	; (1b8 <halt+0x44>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:111
  fprintf(stderr, "Unexpected CPU exception ");
     17a:	4810      	ldr	r0, [pc, #64]	; (1bc <halt+0x48>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:110
  const unsigned isr_num = (*((uint8_t *)0xE000ED04));
     17c:	781d      	ldrb	r5, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:111
  fprintf(stderr, "Unexpected CPU exception ");
     17e:	6823      	ldr	r3, [r4, #0]
     180:	68d9      	ldr	r1, [r3, #12]
     182:	f006 fb15 	bl	67b0 <fputs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:112
  fprintf(stderr, "%u (interrupt) has occured and the program will now halt\n",
     186:	6823      	ldr	r3, [r4, #0]
     188:	490d      	ldr	r1, [pc, #52]	; (1c0 <halt+0x4c>)
     18a:	68d8      	ldr	r0, [r3, #12]
     18c:	462a      	mov	r2, r5
     18e:	f006 fa97 	bl	66c0 <fiprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:115
  if (isr_num < 16) {
     192:	2d0f      	cmp	r5, #15
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:121
    fprintf(stderr, "Exception appears to be '%s'\n", table[isr_num]);
     194:	6823      	ldr	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:115
  if (isr_num < 16) {
     196:	d807      	bhi.n	1a8 <halt+0x34>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:121
    fprintf(stderr, "Exception appears to be '%s'\n", table[isr_num]);
     198:	4a0a      	ldr	r2, [pc, #40]	; (1c4 <halt+0x50>)
     19a:	490b      	ldr	r1, [pc, #44]	; (1c8 <halt+0x54>)
     19c:	f852 2025 	ldr.w	r2, [r2, r5, lsl #2]
     1a0:	68d8      	ldr	r0, [r3, #12]
     1a2:	f006 fa8d 	bl	66c0 <fiprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:128 (discriminator 1)
    ;
     1a6:	e7fe      	b.n	1a6 <halt+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:123
    fprintf(stderr, "Did you register the interrupt correctly using "
     1a8:	68d9      	ldr	r1, [r3, #12]
     1aa:	4808      	ldr	r0, [pc, #32]	; (1cc <halt+0x58>)
     1ac:	f006 fb00 	bl	67b0 <fputs>
     1b0:	e7f9      	b.n	1a6 <halt+0x32>
     1b2:	bf00      	nop
     1b4:	100001b0 	.word	0x100001b0
     1b8:	e000ed04 	.word	0xe000ed04
     1bc:	0000c2e4 	.word	0x0000c2e4
     1c0:	0000c2fe 	.word	0x0000c2fe
     1c4:	0000c3f0 	.word	0x0000c3f0
     1c8:	0000c338 	.word	0x0000c338
     1cc:	0000c356 	.word	0x0000c356

000001d0 <isr_hard_fault_handler>:
isr_hard_fault_handler():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:147

void isr_hard_fault_handler(unsigned long *hardfault_args) {
     1d0:	b510      	push	{r4, lr}
     1d2:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:148
  crash__registers_s *c = crash__record_get();
     1d4:	f000 f84a 	bl	26c <crash__record_get>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:150

  c->registers[0] = ((unsigned long)hardfault_args[0]);
     1d8:	6823      	ldr	r3, [r4, #0]
     1da:	6083      	str	r3, [r0, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:151
  c->registers[1] = ((unsigned long)hardfault_args[1]);
     1dc:	6863      	ldr	r3, [r4, #4]
     1de:	60c3      	str	r3, [r0, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:152
  c->registers[2] = ((unsigned long)hardfault_args[2]);
     1e0:	68a3      	ldr	r3, [r4, #8]
     1e2:	6103      	str	r3, [r0, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:153
  c->registers[3] = ((unsigned long)hardfault_args[3]);
     1e4:	68e3      	ldr	r3, [r4, #12]
     1e6:	6143      	str	r3, [r0, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:155

  c->r12 = ((unsigned long)hardfault_args[4]);
     1e8:	6923      	ldr	r3, [r4, #16]
     1ea:	6243      	str	r3, [r0, #36]	; 0x24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:156
  c->lr = ((unsigned long)hardfault_args[5]) - 1;
     1ec:	6963      	ldr	r3, [r4, #20]
     1ee:	3b01      	subs	r3, #1
     1f0:	61c3      	str	r3, [r0, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:157
  c->pc = ((unsigned long)hardfault_args[6]);
     1f2:	69a3      	ldr	r3, [r4, #24]
     1f4:	6183      	str	r3, [r0, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:158
  c->psr = ((unsigned long)hardfault_args[7]);
     1f6:	69e3      	ldr	r3, [r4, #28]
     1f8:	6203      	str	r3, [r0, #32]
__DSB():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/cmsis_gcc.h:946
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
     1fa:	f3bf 8f4f 	dsb	sy
__NVIC_SystemReset():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1938
__NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
{
  __DSB();                                                          /* Ensure all outstanding memory accesses included
                                                                       buffered write are completed before reset */
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
     1fe:	4905      	ldr	r1, [pc, #20]	; (214 <isr_hard_fault_handler+0x44>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1937
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
     200:	4b05      	ldr	r3, [pc, #20]	; (218 <isr_hard_fault_handler+0x48>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1938
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
     202:	68ca      	ldr	r2, [r1, #12]
     204:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1937
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
     208:	4313      	orrs	r3, r2
     20a:	60cb      	str	r3, [r1, #12]
__DSB():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/cmsis_gcc.h:946
     20c:	f3bf 8f4f 	dsb	sy
__NVIC_SystemReset():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1944
                            SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchanged */
  __DSB();                                                          /* Ensure completion of memory access */

  for(;;)                                                           /* wait until reset */
  {
    __NOP();
     210:	bf00      	nop
     212:	e7fd      	b.n	210 <isr_hard_fault_handler+0x40>
     214:	e000ed00 	.word	0xe000ed00
     218:	05fa0004 	.word	0x05fa0004

0000021c <clock__get_core_clock_hz>:
clock__get_core_clock_hz():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/clock.c:13
 *
 * We use fixed CPU frequency because clock__initialize_system_clock_96mhz()
 * configures fixed CPU frequency. It is rare that anyone needs to change this
 * (ever).
 */
uint32_t clock__get_core_clock_hz(void) { return (UINT32_C(96) * 1000 * 1000); }
     21c:	4800      	ldr	r0, [pc, #0]	; (220 <clock__get_core_clock_hz+0x4>)
     21e:	4770      	bx	lr
     220:	05b8d800 	.word	0x05b8d800

00000224 <clock__get_peripheral_clock_hz>:
clock__get_peripheral_clock_hz():
     224:	4800      	ldr	r0, [pc, #0]	; (228 <clock__get_peripheral_clock_hz+0x4>)
     226:	4770      	bx	lr
     228:	05b8d800 	.word	0x05b8d800

0000022c <clock__initialize_system_clock_96mhz>:
clock__initialize_system_clock_96mhz():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/clock.c:24

void clock__initialize_system_clock_96mhz(void) {
  // Step 3 from UM: Write PLL new setup values to the PLL CFG register
  const uint8_t multiplier = 8; // 8 * 12Mhz = 96Mhz

  LPC_SC->PLL0CFG = ((multiplier - 1) << 0);
     22c:	4b0e      	ldr	r3, [pc, #56]	; (268 <clock__initialize_system_clock_96mhz+0x3c>)
     22e:	2207      	movs	r2, #7
     230:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/clock.c:28
  LPC_SC->PLL0CON = 1; // PLL enable

  // Necessary feed sequence to ensure the changes are intentional
  LPC_SC->PLL0FEED = 0xAA;
     234:	21aa      	movs	r1, #170	; 0xaa
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/clock.c:25
  LPC_SC->PLL0CON = 1; // PLL enable
     236:	2201      	movs	r2, #1
     238:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/clock.c:28
  LPC_SC->PLL0FEED = 0xAA;
     23c:	f8c3 108c 	str.w	r1, [r3, #140]	; 0x8c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/clock.c:29
  LPC_SC->PLL0FEED = 0x55;
     240:	2155      	movs	r1, #85	; 0x55
     242:	f8c3 108c 	str.w	r1, [r3, #140]	; 0x8c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/clock.c:32

  // Step 4 from UM: Setup necessary clock dividers
  LPC_SC->PCLKSEL = 1; // APB peripherals receive clock/1 (divided by 1)
     246:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/clock.c:36 (discriminator 1)

  // Step 5 from UM: Wait for PLL to lock
  const uint32_t pll_lock_bit_mask = (1 << 10);
  while (!(LPC_SC->PLL0STAT & pll_lock_bit_mask)) {
     24a:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
     24e:	0552      	lsls	r2, r2, #21
     250:	d5fb      	bpl.n	24a <clock__initialize_system_clock_96mhz+0x1e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/clock.c:42
    ;
  }

  // Before we switch to the faster clock, we need to configure flash memory
  // access properly with respect to core clock
  uint32_t flash_cfg = LPC_SC->FLASHCFG;
     252:	681a      	ldr	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/clock.c:43
  flash_cfg &= ~(0xF << 12);
     254:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/clock.c:44
  flash_cfg |= (0x4 << 12); // 5 cpu clocks for use with up to 100Mhz
     258:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/clock.c:45
  LPC_SC->FLASHCFG = flash_cfg;
     25c:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/clock.c:49

  // Step 6 from UM: Connect the PLL to the CPU
  const uint32_t cpu_on_pll_clock = (1 << 8) | (1 << 0);
  LPC_SC->CCLKSEL = cpu_on_pll_clock; // CPU uses PLL clock (Table 20)
     25e:	f240 1201 	movw	r2, #257	; 0x101
     262:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/clock.c:50
}
     266:	4770      	bx	lr
     268:	400fc000 	.word	0x400fc000

0000026c <crash__record_get>:
crash__record_get():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:18

static void crash__clear_record(void);

crash__registers_s *crash__record_get(void) {
  // Record the crash signature first before returning the struct
  crash_registers.signature = crash__signature;
     26c:	4802      	ldr	r0, [pc, #8]	; (278 <crash__record_get+0xc>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:19
  crash_registers.signature_inverted = ~crash__signature;
     26e:	4a03      	ldr	r2, [pc, #12]	; (27c <crash__record_get+0x10>)
     270:	4b03      	ldr	r3, [pc, #12]	; (280 <crash__record_get+0x14>)
     272:	e9c0 2300 	strd	r2, r3, [r0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:22

  return &crash_registers;
}
     276:	4770      	bx	lr
     278:	20000000 	.word	0x20000000
     27c:	deadbeef 	.word	0xdeadbeef
     280:	21524110 	.word	0x21524110

00000284 <crash__report_if_occurred>:
crash__report_if_occurred():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:24

bool crash__report_if_occurred(void) {
     284:	b538      	push	{r3, r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:27
  bool crash_occured = false;

  if (crash__signature == crash_registers.signature &&
     286:	4c22      	ldr	r4, [pc, #136]	; (310 <crash__report_if_occurred+0x8c>)
     288:	4b22      	ldr	r3, [pc, #136]	; (314 <crash__report_if_occurred+0x90>)
     28a:	6822      	ldr	r2, [r4, #0]
     28c:	429a      	cmp	r2, r3
     28e:	d13d      	bne.n	30c <crash__report_if_occurred+0x88>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:27 (discriminator 1)
     290:	6862      	ldr	r2, [r4, #4]
     292:	4b21      	ldr	r3, [pc, #132]	; (318 <crash__report_if_occurred+0x94>)
     294:	429a      	cmp	r2, r3
     296:	d139      	bne.n	30c <crash__report_if_occurred+0x88>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:31
      ~crash__signature == crash_registers.signature_inverted) {
    crash_occured = true;

    fprintf(stderr, "----------------------------------------\n"
     298:	4d20      	ldr	r5, [pc, #128]	; (31c <crash__report_if_occurred+0x98>)
     29a:	4821      	ldr	r0, [pc, #132]	; (320 <crash__report_if_occurred+0x9c>)
     29c:	682b      	ldr	r3, [r5, #0]
     29e:	68d9      	ldr	r1, [r3, #12]
     2a0:	f006 fa86 	bl	67b0 <fputs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:34
                    "---- WARNING: We crashed previously ----\n");

    fprintf(stderr, "  PC: 0x%08lX\n", crash_registers.pc);
     2a4:	682b      	ldr	r3, [r5, #0]
     2a6:	69a2      	ldr	r2, [r4, #24]
     2a8:	491e      	ldr	r1, [pc, #120]	; (324 <crash__report_if_occurred+0xa0>)
     2aa:	68d8      	ldr	r0, [r3, #12]
     2ac:	f006 fa08 	bl	66c0 <fiprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:35
    fprintf(stderr, "  LR: 0x%08lX\n", crash_registers.lr);
     2b0:	682b      	ldr	r3, [r5, #0]
     2b2:	69e2      	ldr	r2, [r4, #28]
     2b4:	491c      	ldr	r1, [pc, #112]	; (328 <crash__report_if_occurred+0xa4>)
     2b6:	68d8      	ldr	r0, [r3, #12]
     2b8:	f006 fa02 	bl	66c0 <fiprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:36
    fprintf(stderr, " PSR: 0x%08lX\n", crash_registers.psr);
     2bc:	682b      	ldr	r3, [r5, #0]
     2be:	6a22      	ldr	r2, [r4, #32]
     2c0:	491a      	ldr	r1, [pc, #104]	; (32c <crash__report_if_occurred+0xa8>)
     2c2:	68d8      	ldr	r0, [r3, #12]
     2c4:	f006 f9fc 	bl	66c0 <fiprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:38

    fprintf(stderr, "  R0: 0x%08lX\n", crash_registers.registers[0]);
     2c8:	682b      	ldr	r3, [r5, #0]
     2ca:	68a2      	ldr	r2, [r4, #8]
     2cc:	4918      	ldr	r1, [pc, #96]	; (330 <crash__report_if_occurred+0xac>)
     2ce:	68d8      	ldr	r0, [r3, #12]
     2d0:	f006 f9f6 	bl	66c0 <fiprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:39
    fprintf(stderr, "  R1: 0x%08lX\n", crash_registers.registers[1]);
     2d4:	682b      	ldr	r3, [r5, #0]
     2d6:	68e2      	ldr	r2, [r4, #12]
     2d8:	4916      	ldr	r1, [pc, #88]	; (334 <crash__report_if_occurred+0xb0>)
     2da:	68d8      	ldr	r0, [r3, #12]
     2dc:	f006 f9f0 	bl	66c0 <fiprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:40
    fprintf(stderr, "  R2: 0x%08lX\n", crash_registers.registers[2]);
     2e0:	682b      	ldr	r3, [r5, #0]
     2e2:	6922      	ldr	r2, [r4, #16]
     2e4:	4914      	ldr	r1, [pc, #80]	; (338 <crash__report_if_occurred+0xb4>)
     2e6:	68d8      	ldr	r0, [r3, #12]
     2e8:	f006 f9ea 	bl	66c0 <fiprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:41
    fprintf(stderr, "  R3: 0x%08lX\n", crash_registers.registers[3]);
     2ec:	682b      	ldr	r3, [r5, #0]
     2ee:	6962      	ldr	r2, [r4, #20]
     2f0:	4912      	ldr	r1, [pc, #72]	; (33c <crash__report_if_occurred+0xb8>)
     2f2:	68d8      	ldr	r0, [r3, #12]
     2f4:	f006 f9e4 	bl	66c0 <fiprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:43

    fprintf(stderr,
     2f8:	682b      	ldr	r3, [r5, #0]
     2fa:	4811      	ldr	r0, [pc, #68]	; (340 <crash__report_if_occurred+0xbc>)
     2fc:	68d9      	ldr	r1, [r3, #12]
     2fe:	f006 fa57 	bl	67b0 <fputs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:29
    crash_occured = true;
     302:	2001      	movs	r0, #1
crash__clear_record():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:56
  crash__clear_record();
  return crash_occured;
}

static void crash__clear_record(void) {
  crash_registers.signature = 0;
     304:	2300      	movs	r3, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:57
  crash_registers.signature_inverted = 0;
     306:	e9c4 3300 	strd	r3, r3, [r4]
crash__report_if_occurred():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:53
}
     30a:	bd38      	pop	{r3, r4, r5, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:25
  bool crash_occured = false;
     30c:	2000      	movs	r0, #0
     30e:	e7f9      	b.n	304 <crash__report_if_occurred+0x80>
     310:	20000000 	.word	0x20000000
     314:	deadbeef 	.word	0xdeadbeef
     318:	21524110 	.word	0x21524110
     31c:	100001b0 	.word	0x100001b0
     320:	0000c430 	.word	0x0000c430
     324:	0000c483 	.word	0x0000c483
     328:	0000c492 	.word	0x0000c492
     32c:	0000c4a1 	.word	0x0000c4a1
     330:	0000c4b0 	.word	0x0000c4b0
     334:	0000c4bf 	.word	0x0000c4bf
     338:	0000c4ce 	.word	0x0000c4ce
     33c:	0000c4dd 	.word	0x0000c4dd
     340:	0000c4ec 	.word	0x0000c4ec

00000344 <_sbrk>:
sbrk_ram1():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:32
  // These symbols are defined by the linker script
  extern uint32_t _heap_start;
  extern uint32_t _heap_end;

  static void *next_free_heap = (void *)&_heap_start;
  void *memory_to_return = next_free_heap;
     344:	4a0e      	ldr	r2, [pc, #56]	; (380 <_sbrk+0x3c>)
     346:	6813      	ldr	r3, [r2, #0]
_sbrk():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:12
void *_sbrk(size_t requested_byte_count) {
     348:	b510      	push	{r4, lr}
sbrk_ram1():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:43
   * couple of reasons:
   *   1. Maybe we still have a small chunk we could still serve in the future
   *   2. We do not want to increment next_free_heap and go out of bounds to
   * wrap
   */
  if (!((next_free_heap >= (void *)&_heap_start) &&
     34a:	4c0e      	ldr	r4, [pc, #56]	; (384 <_sbrk+0x40>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:33
  next_free_heap += requested_byte_count;
     34c:	1819      	adds	r1, r3, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:43
  if (!((next_free_heap >= (void *)&_heap_start) &&
     34e:	42a1      	cmp	r1, r4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:33
  next_free_heap += requested_byte_count;
     350:	6011      	str	r1, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:43
  if (!((next_free_heap >= (void *)&_heap_start) &&
     352:	d302      	bcc.n	35a <_sbrk+0x16>
     354:	4c0c      	ldr	r4, [pc, #48]	; (388 <_sbrk+0x44>)
     356:	42a1      	cmp	r1, r4
     358:	d30b      	bcc.n	372 <_sbrk+0x2e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:46
        (next_free_heap < (void *)&_heap_end))) {
    memory_to_return = NULL;
    next_free_heap -= requested_byte_count;
     35a:	6013      	str	r3, [r2, #0]
sbrk_ram2():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:57
static void *sbrk_ram2(size_t requested_byte_count) {
  extern uint32_t __start_of_unused_ram64;
  extern uint32_t __end_of_unused_ram64;

  static void *next_free_heap = (void *)&__start_of_unused_ram64;
  void *memory_to_return = next_free_heap;
     35c:	4a0b      	ldr	r2, [pc, #44]	; (38c <_sbrk+0x48>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:60
  next_free_heap += requested_byte_count;

  if (!((next_free_heap >= (void *)&__start_of_unused_ram64) &&
     35e:	490c      	ldr	r1, [pc, #48]	; (390 <_sbrk+0x4c>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:57
  void *memory_to_return = next_free_heap;
     360:	6813      	ldr	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:58
  next_free_heap += requested_byte_count;
     362:	4418      	add	r0, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:60
  if (!((next_free_heap >= (void *)&__start_of_unused_ram64) &&
     364:	4288      	cmp	r0, r1
     366:	d308      	bcc.n	37a <_sbrk+0x36>
     368:	490a      	ldr	r1, [pc, #40]	; (394 <_sbrk+0x50>)
     36a:	4288      	cmp	r0, r1
     36c:	d205      	bcs.n	37a <_sbrk+0x36>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:58
  next_free_heap += requested_byte_count;
     36e:	6010      	str	r0, [r2, #0]
     370:	e001      	b.n	376 <_sbrk+0x32>
_sbrk():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:19
  if (NULL == memory_to_return) {
     372:	2b00      	cmp	r3, #0
     374:	d0f2      	beq.n	35c <_sbrk+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:24
}
     376:	4618      	mov	r0, r3
     378:	bd10      	pop	{r4, pc}
sbrk_ram2():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:62
        (next_free_heap < (void *)&__end_of_unused_ram64))) {
    memory_to_return = NULL;
     37a:	2300      	movs	r3, #0
_sbrk():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:23
  return memory_to_return;
     37c:	e7fb      	b.n	376 <_sbrk+0x32>
     37e:	bf00      	nop
     380:	10000000 	.word	0x10000000
     384:	20000028 	.word	0x20000028
     388:	20008000 	.word	0x20008000
     38c:	10000004 	.word	0x10000004
     390:	10001480 	.word	0x10001480
     394:	10010000 	.word	0x10010000

00000398 <startup__initialize_ram>:
startup__init_data_sram():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:62
  extern void *_bdata_vma;
  extern void *_data_end;

  uint8_t *src_flash = (uint8_t *)&_bdata_lma; // Flash
  uint8_t *dest_ram = (uint8_t *)&_bdata_vma;  // RAM
  while (dest_ram < (uint8_t *)&_data_end) {
     398:	4a09      	ldr	r2, [pc, #36]	; (3c0 <startup__initialize_ram+0x28>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:61
  uint8_t *dest_ram = (uint8_t *)&_bdata_vma;  // RAM
     39a:	4b0a      	ldr	r3, [pc, #40]	; (3c4 <startup__initialize_ram+0x2c>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:62
  while (dest_ram < (uint8_t *)&_data_end) {
     39c:	490a      	ldr	r1, [pc, #40]	; (3c8 <startup__initialize_ram+0x30>)
     39e:	428b      	cmp	r3, r1
     3a0:	d305      	bcc.n	3ae <startup__initialize_ram+0x16>
startup__init_bss_sram():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:73

static void startup__init_bss_sram(void) {
  extern void *_bss_start;
  extern void *_bss_end;

  uint8_t *sram_ptr = (uint8_t *)&_bss_start;
     3a2:	4b0a      	ldr	r3, [pc, #40]	; (3cc <startup__initialize_ram+0x34>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:74
  while (sram_ptr < (uint8_t *)&_bss_end) {
     3a4:	4a0a      	ldr	r2, [pc, #40]	; (3d0 <startup__initialize_ram+0x38>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:75
    *sram_ptr = 0U;
     3a6:	2100      	movs	r1, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:74
  while (sram_ptr < (uint8_t *)&_bss_end) {
     3a8:	4293      	cmp	r3, r2
     3aa:	d305      	bcc.n	3b8 <startup__initialize_ram+0x20>
startup__initialize_ram():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:14
}
     3ac:	4770      	bx	lr
startup__init_data_sram():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:63
    *dest_ram = *src_flash;
     3ae:	f812 0b01 	ldrb.w	r0, [r2], #1
     3b2:	f803 0b01 	strb.w	r0, [r3], #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:65
    src_flash++;
     3b6:	e7f2      	b.n	39e <startup__initialize_ram+0x6>
startup__init_bss_sram():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:75
    *sram_ptr = 0U;
     3b8:	f803 1b01 	strb.w	r1, [r3], #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:76
    sram_ptr++;
     3bc:	e7f4      	b.n	3a8 <startup__initialize_ram+0x10>
     3be:	bf00      	nop
     3c0:	0000de04 	.word	0x0000de04
     3c4:	10000000 	.word	0x10000000
     3c8:	10000384 	.word	0x10000384
     3cc:	10000388 	.word	0x10000388
     3d0:	10001480 	.word	0x10001480

000003d4 <startup__initialize_fpu>:
startup__initialize_fpu():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:22
  SCB->CPACR |= (0xF << 20); // Set [23:20]
     3d4:	4a03      	ldr	r2, [pc, #12]	; (3e4 <startup__initialize_fpu+0x10>)
     3d6:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
     3da:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
     3de:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:23
}
     3e2:	4770      	bx	lr
     3e4:	e000ed00 	.word	0xe000ed00

000003e8 <startup__initialize_interrupts>:
__NVIC_SetPriority():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1813
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
     3e8:	4804      	ldr	r0, [pc, #16]	; (3fc <startup__initialize_interrupts+0x14>)
startup__initialize_interrupts():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:39
  for (int peripheral = first_peripheral; peripheral <= last_peripheral;
     3ea:	2300      	movs	r3, #0
__NVIC_SetPriority():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1813
     3ec:	2120      	movs	r1, #32
     3ee:	18c2      	adds	r2, r0, r3
startup__initialize_interrupts():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:40
       peripheral++) {
     3f0:	3301      	adds	r3, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:39
  for (int peripheral = first_peripheral; peripheral <= last_peripheral;
     3f2:	2b29      	cmp	r3, #41	; 0x29
__NVIC_SetPriority():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1813
     3f4:	f882 1300 	strb.w	r1, [r2, #768]	; 0x300
startup__initialize_interrupts():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:39
     3f8:	d1f9      	bne.n	3ee <startup__initialize_interrupts+0x6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:53
}
     3fa:	4770      	bx	lr
     3fc:	e000e100 	.word	0xe000e100

00000400 <acceleration__init>:
acceleration__init():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:14
  acceleration__memory_axis_base = 0x01,
  acceleration__memory_control = 0x2A,
  acceleration__memory_who_am_i = 0x0D,
} acceleration__memory_e;

bool acceleration__init(void) {
     400:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:16
  const uint8_t active_mode_with_100Hz = (1 << 0) | (3 << 3);
  i2c__write_single(acceleration__sensor_bus, acceleration__address,
     402:	222a      	movs	r2, #42	; 0x2a
     404:	2319      	movs	r3, #25
     406:	2138      	movs	r1, #56	; 0x38
     408:	2002      	movs	r0, #2
     40a:	f005 fa73 	bl	58f4 <i2c__write_single>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:21
                    acceleration__memory_control, active_mode_with_100Hz);

  const uint8_t who_am_i_expected_value = 0x2A;
  const uint8_t who_am_i_actual_value =
      i2c__read_single(acceleration__sensor_bus, acceleration__address,
     40e:	220d      	movs	r2, #13
     410:	2138      	movs	r1, #56	; 0x38
     412:	2002      	movs	r0, #2
     414:	f005 fa2a 	bl	586c <i2c__read_single>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:25
                       acceleration__memory_who_am_i);

  return (who_am_i_expected_value == who_am_i_actual_value);
}
     418:	f1a0 032a 	sub.w	r3, r0, #42	; 0x2a
     41c:	4258      	negs	r0, r3
     41e:	4158      	adcs	r0, r3
     420:	bd08      	pop	{r3, pc}

00000422 <acceleration__get_data>:
acceleration__get_data():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:27

acceleration__axis_data_s acceleration__get_data(void) {
     422:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:30
  acceleration__axis_data_s axis_data = {0};

  uint8_t axis_raw_data[6] = {0};
     424:	2300      	movs	r3, #0
     426:	9302      	str	r3, [sp, #8]
     428:	f8ad 300c 	strh.w	r3, [sp, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:31
  i2c__read_slave_data(acceleration__sensor_bus, acceleration__address,
     42c:	2306      	movs	r3, #6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:27
acceleration__axis_data_s acceleration__get_data(void) {
     42e:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:31
  i2c__read_slave_data(acceleration__sensor_bus, acceleration__address,
     430:	9300      	str	r3, [sp, #0]
     432:	2201      	movs	r2, #1
     434:	ab02      	add	r3, sp, #8
     436:	2138      	movs	r1, #56	; 0x38
     438:	2002      	movs	r0, #2
     43a:	f005 f9ed 	bl	5818 <i2c__read_slave_data>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:37
                       acceleration__memory_axis_base, axis_raw_data,
                       sizeof(axis_raw_data));

  // First byte is MSB then LSB
  axis_data.x = ((uint16_t)axis_raw_data[0] << 8) | axis_raw_data[1];
  axis_data.y = ((uint16_t)axis_raw_data[2] << 8) | axis_raw_data[3];
     43e:	f89d 200a 	ldrb.w	r2, [sp, #10]
     442:	f89d 300b 	ldrb.w	r3, [sp, #11]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:38
  axis_data.z = ((uint16_t)axis_raw_data[4] << 8) | axis_raw_data[5];
     446:	f89d 100c 	ldrb.w	r1, [sp, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:36
  axis_data.x = ((uint16_t)axis_raw_data[0] << 8) | axis_raw_data[1];
     44a:	f89d 0008 	ldrb.w	r0, [sp, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:37
  axis_data.y = ((uint16_t)axis_raw_data[2] << 8) | axis_raw_data[3];
     44e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:42

  // Data is at upper 12-bits, so shift the result down by 4
  axis_data.x /= 16;
  axis_data.y /= 16;
     452:	b21b      	sxth	r3, r3
     454:	2b00      	cmp	r3, #0
     456:	bfb8      	it	lt
     458:	330f      	addlt	r3, #15
     45a:	111a      	asrs	r2, r3, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:38
  axis_data.z = ((uint16_t)axis_raw_data[4] << 8) | axis_raw_data[5];
     45c:	f89d 300d 	ldrb.w	r3, [sp, #13]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:45
  axis_data.z /= 16;

  return axis_data;
     460:	8062      	strh	r2, [r4, #2]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:38
  axis_data.z = ((uint16_t)axis_raw_data[4] << 8) | axis_raw_data[5];
     462:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:36
  axis_data.x = ((uint16_t)axis_raw_data[0] << 8) | axis_raw_data[1];
     466:	f89d 1009 	ldrb.w	r1, [sp, #9]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:43
  axis_data.z /= 16;
     46a:	b21b      	sxth	r3, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:36
  axis_data.x = ((uint16_t)axis_raw_data[0] << 8) | axis_raw_data[1];
     46c:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:43
  axis_data.z /= 16;
     470:	2b00      	cmp	r3, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:41
  axis_data.x /= 16;
     472:	b209      	sxth	r1, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:43
  axis_data.z /= 16;
     474:	bfb8      	it	lt
     476:	330f      	addlt	r3, #15
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:41
  axis_data.x /= 16;
     478:	2900      	cmp	r1, #0
     47a:	bfb8      	it	lt
     47c:	310f      	addlt	r1, #15
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:43
  axis_data.z /= 16;
     47e:	111b      	asrs	r3, r3, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:41
  axis_data.x /= 16;
     480:	1109      	asrs	r1, r1, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:46
}
     482:	4620      	mov	r0, r4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:45
  return axis_data;
     484:	8021      	strh	r1, [r4, #0]
     486:	80a3      	strh	r3, [r4, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:46
}
     488:	b004      	add	sp, #16
     48a:	bd10      	pop	{r4, pc}

0000048c <sensors__init>:
sensors__init():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/sensors.c:8
#include "acceleration.h"

bool sensors__init(void) {
  bool status = true;

  status &= acceleration__init();
     48c:	f7ff bfb8 	b.w	400 <acceleration__init>

00000490 <ld_dword>:
ld_dword():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:594
static DWORD ld_dword (const BYTE* ptr)	/* Load a 4-byte little-endian word */
{
	DWORD rv;

	rv = ptr[3];
	rv = rv << 8 | ptr[2];
     490:	8842      	ldrh	r2, [r0, #2]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:595
	rv = rv << 8 | ptr[1];
     492:	7843      	ldrb	r3, [r0, #1]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:596
	rv = rv << 8 | ptr[0];
     494:	7800      	ldrb	r0, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:595
	rv = rv << 8 | ptr[1];
     496:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:598
	return rv;
}
     49a:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
     49e:	4770      	bx	lr

000004a0 <st_dword>:
st_dword():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:626
	*ptr++ = (BYTE)val;
}

static void st_dword (BYTE* ptr, DWORD val)	/* Store a 4-byte word in little-endian */
{
	*ptr++ = (BYTE)val; val >>= 8;
     4a0:	0a0b      	lsrs	r3, r1, #8
     4a2:	7001      	strb	r1, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:627
	*ptr++ = (BYTE)val; val >>= 8;
     4a4:	7043      	strb	r3, [r0, #1]
     4a6:	0c0b      	lsrs	r3, r1, #16
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:628
	*ptr++ = (BYTE)val; val >>= 8;
     4a8:	0e09      	lsrs	r1, r1, #24
     4aa:	7083      	strb	r3, [r0, #2]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:629
	*ptr++ = (BYTE)val;
     4ac:	70c1      	strb	r1, [r0, #3]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:630
}
     4ae:	4770      	bx	lr

000004b0 <mem_cmp>:
mem_cmp():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:680
}


/* Compare memory block */
static int mem_cmp (const void* dst, const void* src, UINT cnt)	/* ZR:same, NZ:different */
{
     4b0:	b510      	push	{r4, lr}
     4b2:	4402      	add	r2, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:685 (discriminator 2)
	const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
	int r = 0;

	do {
		r = *d++ - *s++;
     4b4:	f810 3b01 	ldrb.w	r3, [r0], #1
     4b8:	f811 4b01 	ldrb.w	r4, [r1], #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:686 (discriminator 2)
	} while (--cnt && r == 0);
     4bc:	4290      	cmp	r0, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:685 (discriminator 2)
		r = *d++ - *s++;
     4be:	eba3 0304 	sub.w	r3, r3, r4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:686 (discriminator 2)
	} while (--cnt && r == 0);
     4c2:	d001      	beq.n	4c8 <mem_cmp+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:686 (discriminator 1)
     4c4:	2b00      	cmp	r3, #0
     4c6:	d0f5      	beq.n	4b4 <mem_cmp+0x4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:689

	return r;
}
     4c8:	4618      	mov	r0, r3
     4ca:	bd10      	pop	{r4, pc}

000004cc <clst2sect>:
clst2sect():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1138
	FATFS* fs,		/* Filesystem object */
	DWORD clst		/* Cluster# to be converted */
)
{
	clst -= 2;		/* Cluster number is origin from 2 */
	if (clst >= fs->n_fatent - 2) return 0;		/* Is it invalid cluster number? */
     4cc:	69c3      	ldr	r3, [r0, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1137
	clst -= 2;		/* Cluster number is origin from 2 */
     4ce:	3902      	subs	r1, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1138
	if (clst >= fs->n_fatent - 2) return 0;		/* Is it invalid cluster number? */
     4d0:	3b02      	subs	r3, #2
     4d2:	428b      	cmp	r3, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1139
	return fs->database + fs->csize * clst;		/* Start sector number of the cluster */
     4d4:	bf83      	ittte	hi
     4d6:	8943      	ldrhhi	r3, [r0, #10]
     4d8:	6b00      	ldrhi	r0, [r0, #48]	; 0x30
     4da:	fb01 0003 	mlahi	r0, r1, r3, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1138
	if (clst >= fs->n_fatent - 2) return 0;		/* Is it invalid cluster number? */
     4de:	2000      	movls	r0, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1140
}
     4e0:	4770      	bx	lr

000004e2 <sum_sfn>:
sum_sfn():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2043
/*-----------------------------------------------------------------------*/

static BYTE sum_sfn (
	const BYTE* dir		/* Pointer to the SFN entry */
)
{
     4e2:	4602      	mov	r2, r0
     4e4:	f100 010b 	add.w	r1, r0, #11
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2044
	BYTE sum = 0;
     4e8:	2000      	movs	r0, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2048 (discriminator 1)
	UINT n = 11;

	do {
		sum = (sum >> 1) + (sum << 7) + *dir++;
     4ea:	01c3      	lsls	r3, r0, #7
     4ec:	ea43 0350 	orr.w	r3, r3, r0, lsr #1
     4f0:	f812 0b01 	ldrb.w	r0, [r2], #1
     4f4:	fa50 f383 	uxtab	r3, r0, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2049 (discriminator 1)
	} while (--n);
     4f8:	428a      	cmp	r2, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2048 (discriminator 1)
		sum = (sum >> 1) + (sum << 7) + *dir++;
     4fa:	b2d8      	uxtb	r0, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2049 (discriminator 1)
	} while (--n);
     4fc:	d1f5      	bne.n	4ea <sum_sfn+0x8>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2051
	return sum;
}
     4fe:	4770      	bx	lr

00000500 <get_ldnumber>:
get_ldnumber():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3123
#if FF_STR_VOLUME_ID		/* Find string volume ID */
	const char *sp;
	char c;
#endif

	tt = tp = *path;
     500:	6802      	ldr	r2, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3124
	if (!tp) return vol;	/* Invalid path name? */
     502:	b14a      	cbz	r2, 518 <get_ldnumber+0x18>
     504:	4613      	mov	r3, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3125 (discriminator 2)
	do tc = *tt++; while ((UINT)tc >= (FF_USE_LFN ? ' ' : '!') && tc != ':');	/* Find a colon in the path */
     506:	f813 1b01 	ldrb.w	r1, [r3], #1
     50a:	291f      	cmp	r1, #31
     50c:	d90b      	bls.n	526 <get_ldnumber+0x26>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3125 (discriminator 1)
     50e:	293a      	cmp	r1, #58	; 0x3a
     510:	d1f9      	bne.n	506 <get_ldnumber+0x6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3129

	if (tc == ':') {	/* DOS/Windows style volume ID? */
		i = FF_VOLUMES;
		if (IsDigit(*tp) && tp + 2 == tt) {	/* Is there a numeric volume ID + colon? */
     512:	1c91      	adds	r1, r2, #2
     514:	428b      	cmp	r3, r1
     516:	d002      	beq.n	51e <get_ldnumber+0x1e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3124
	if (!tp) return vol;	/* Invalid path name? */
     518:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3176
	vol = CurrVol;	/* Default drive is current drive */
#else
	vol = 0;		/* Default drive is 0 */
#endif
	return vol;		/* Return the default drive */
}
     51c:	4770      	bx	lr
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3145
		if (i < FF_VOLUMES) {	/* If a volume ID is found, get the drive number and strip it */
     51e:	7812      	ldrb	r2, [r2, #0]
     520:	2a30      	cmp	r2, #48	; 0x30
     522:	d1f9      	bne.n	518 <get_ldnumber+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3147
			*path = tt;		/* Snip the drive prefix off */
     524:	6003      	str	r3, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3175
	return vol;		/* Return the default drive */
     526:	2000      	movs	r0, #0
     528:	4770      	bx	lr

0000052a <mem_cpy.part.0>:
mem_cpy():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:654
static void mem_cpy (void* dst, const void* src, UINT cnt)
     52a:	3801      	subs	r0, #1
     52c:	440a      	add	r2, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:661
			*d++ = *s++;
     52e:	f811 3b01 	ldrb.w	r3, [r1], #1
     532:	f800 3f01 	strb.w	r3, [r0, #1]!
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:662
		} while (--cnt);
     536:	4291      	cmp	r1, r2
     538:	d1f9      	bne.n	52e <mem_cpy.part.0+0x4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:664
}
     53a:	4770      	bx	lr

0000053c <ld_clust.isra.3>:
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     53c:	7eca      	ldrb	r2, [r1, #27]
     53e:	7e8b      	ldrb	r3, [r1, #26]
ld_clust():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1842
	if (fs->fs_type == FS_FAT32) {
     540:	2803      	cmp	r0, #3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1841
	cl = ld_word(dir + DIR_FstClusLO);
     542:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     546:	bf01      	itttt	eq
     548:	7d48      	ldrbeq	r0, [r1, #21]
     54a:	7d0a      	ldrbeq	r2, [r1, #20]
ld_clust():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1843
		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
     54c:	ea42 2200 	orreq.w	r2, r2, r0, lsl #8
     550:	ea43 4302 	orreq.w	r3, r3, r2, lsl #16
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1847
}
     554:	4618      	mov	r0, r3
     556:	4770      	bx	lr

00000558 <st_clust.isra.4>:
st_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:620
	*ptr++ = (BYTE)val; val >>= 8;
     558:	f3c2 2307 	ubfx	r3, r2, #8, #8
     55c:	768a      	strb	r2, [r1, #26]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:621
	*ptr++ = (BYTE)val;
     55e:	76cb      	strb	r3, [r1, #27]
st_clust():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1858
	if (fs->fs_type == FS_FAT32) {
     560:	7803      	ldrb	r3, [r0, #0]
     562:	2b03      	cmp	r3, #3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1859
		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
     564:	bf01      	itttt	eq
     566:	0c12      	lsreq	r2, r2, #16
st_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:620
	*ptr++ = (BYTE)val; val >>= 8;
     568:	750a      	strbeq	r2, [r1, #20]
     56a:	0a12      	lsreq	r2, r2, #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:621
	*ptr++ = (BYTE)val;
     56c:	754a      	strbeq	r2, [r1, #21]
st_clust():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1861
}
     56e:	4770      	bx	lr

00000570 <sync_window.part.6>:
sync_window():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1042
static FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERR */
     570:	b570      	push	{r4, r5, r6, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1050
		if (disk_write(fs->pdrv, fs->win, fs->winsect, 1) == RES_OK) {	/* Write back the window */
     572:	f100 0638 	add.w	r6, r0, #56	; 0x38
     576:	6b42      	ldr	r2, [r0, #52]	; 0x34
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1042
static FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERR */
     578:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1050
		if (disk_write(fs->pdrv, fs->win, fs->winsect, 1) == RES_OK) {	/* Write back the window */
     57a:	2301      	movs	r3, #1
     57c:	4631      	mov	r1, r6
     57e:	7840      	ldrb	r0, [r0, #1]
     580:	f001 fae3 	bl	1b4a <disk_write>
     584:	4605      	mov	r5, r0
     586:	b988      	cbnz	r0, 5ac <sync_window.part.6+0x3c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1052
			if (fs->winsect - fs->fatbase < fs->fsize) {	/* Is it in the 1st FAT? */
     588:	6b61      	ldr	r1, [r4, #52]	; 0x34
     58a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
     58c:	6a22      	ldr	r2, [r4, #32]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1051
			fs->wflag = 0;	/* Clear window dirty flag */
     58e:	70e0      	strb	r0, [r4, #3]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1052
			if (fs->winsect - fs->fatbase < fs->fsize) {	/* Is it in the 1st FAT? */
     590:	1acb      	subs	r3, r1, r3
     592:	4293      	cmp	r3, r2
     594:	d208      	bcs.n	5a8 <sync_window.part.6+0x38>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1053
				if (fs->n_fats == 2) disk_write(fs->pdrv, fs->win, fs->winsect + fs->fsize, 1);	/* Reflect it to 2nd FAT if needed */
     596:	78a3      	ldrb	r3, [r4, #2]
     598:	2b02      	cmp	r3, #2
     59a:	d105      	bne.n	5a8 <sync_window.part.6+0x38>
     59c:	440a      	add	r2, r1
     59e:	2301      	movs	r3, #1
     5a0:	4631      	mov	r1, r6
     5a2:	7860      	ldrb	r0, [r4, #1]
     5a4:	f001 fad1 	bl	1b4a <disk_write>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1060
}
     5a8:	4628      	mov	r0, r5
     5aa:	bd70      	pop	{r4, r5, r6, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1056
			res = FR_DISK_ERR;
     5ac:	2501      	movs	r5, #1
     5ae:	e7fb      	b.n	5a8 <sync_window.part.6+0x38>

000005b0 <move_window>:
move_window():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1068
{
     5b0:	b538      	push	{r3, r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1072
	if (sector != fs->winsect) {	/* Window offset changed? */
     5b2:	6b43      	ldr	r3, [r0, #52]	; 0x34
     5b4:	428b      	cmp	r3, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1068
{
     5b6:	4604      	mov	r4, r0
     5b8:	460d      	mov	r5, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1072
	if (sector != fs->winsect) {	/* Window offset changed? */
     5ba:	d019      	beq.n	5f0 <move_window+0x40>
sync_window():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1049
	if (fs->wflag) {	/* Is the disk access window dirty */
     5bc:	78c3      	ldrb	r3, [r0, #3]
     5be:	b98b      	cbnz	r3, 5e4 <move_window+0x34>
move_window():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1077
			if (disk_read(fs->pdrv, fs->win, sector, 1) != RES_OK) {
     5c0:	2301      	movs	r3, #1
     5c2:	462a      	mov	r2, r5
     5c4:	f104 0138 	add.w	r1, r4, #56	; 0x38
     5c8:	7860      	ldrb	r0, [r4, #1]
     5ca:	f001 faaa 	bl	1b22 <disk_read>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1079
				res = FR_DISK_ERR;
     5ce:	2800      	cmp	r0, #0
     5d0:	bf18      	it	ne
     5d2:	f04f 35ff 	movne.w	r5, #4294967295	; 0xffffffff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1077
			if (disk_read(fs->pdrv, fs->win, sector, 1) != RES_OK) {
     5d6:	4603      	mov	r3, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1081
			fs->winsect = sector;
     5d8:	6365      	str	r5, [r4, #52]	; 0x34
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1079
				res = FR_DISK_ERR;
     5da:	bf0c      	ite	eq
     5dc:	4603      	moveq	r3, r0
     5de:	2301      	movne	r3, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1085
}
     5e0:	4618      	mov	r0, r3
     5e2:	bd38      	pop	{r3, r4, r5, pc}
sync_window():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1085
     5e4:	f7ff ffc4 	bl	570 <sync_window.part.6>
move_window():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1076
		if (res == FR_OK) {			/* Fill sector window with new data */
     5e8:	4603      	mov	r3, r0
     5ea:	2800      	cmp	r0, #0
     5ec:	d1f8      	bne.n	5e0 <move_window+0x30>
     5ee:	e7e7      	b.n	5c0 <move_window+0x10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1069
	FRESULT res = FR_OK;
     5f0:	2300      	movs	r3, #0
     5f2:	e7f5      	b.n	5e0 <move_window+0x30>

000005f4 <check_fs>:
check_fs():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3189

static BYTE check_fs (	/* 0:FAT, 1:exFAT, 2:Valid BS but not FAT, 3:Not a BS, 4:Disk error */
	FATFS* fs,			/* Filesystem object */
	DWORD sect			/* Sector# (lba) to load and check if it is an FAT-VBR or not */
)
{
     5f4:	b538      	push	{r3, r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3190
	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
     5f6:	2300      	movs	r3, #0
     5f8:	70c3      	strb	r3, [r0, #3]
     5fa:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
     5fe:	6343      	str	r3, [r0, #52]	; 0x34
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3189
{
     600:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3191
	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
     602:	f7ff ffd5 	bl	5b0 <move_window>
     606:	4604      	mov	r4, r0
     608:	bb18      	cbnz	r0, 652 <check_fs+0x5e>
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     60a:	f895 2237 	ldrb.w	r2, [r5, #567]	; 0x237
     60e:	f895 3236 	ldrb.w	r3, [r5, #566]	; 0x236
     612:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
check_fs():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3193

	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot record signature (always here regardless of the sector size) */
     616:	f64a 2255 	movw	r2, #43605	; 0xaa55
     61a:	4293      	cmp	r3, r2
     61c:	d11b      	bne.n	656 <check_fs+0x62>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3198

#if FF_FS_EXFAT
	if (!mem_cmp(fs->win + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11)) return 1;	/* Check if exFAT VBR */
#endif
	if (fs->win[BS_JmpBoot] == 0xE9 || fs->win[BS_JmpBoot] == 0xEB || fs->win[BS_JmpBoot] == 0xE8) {	/* Valid JumpBoot code? */
     61e:	f895 3038 	ldrb.w	r3, [r5, #56]	; 0x38
     622:	2beb      	cmp	r3, #235	; 0xeb
     624:	d003      	beq.n	62e <check_fs+0x3a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3198 (discriminator 2)
     626:	3318      	adds	r3, #24
     628:	b2db      	uxtb	r3, r3
     62a:	2b01      	cmp	r3, #1
     62c:	d815      	bhi.n	65a <check_fs+0x66>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3199
		if (!mem_cmp(fs->win + BS_FilSysType, "FAT", 3)) return 0;		/* Is it an FAT VBR? */
     62e:	2203      	movs	r2, #3
     630:	490b      	ldr	r1, [pc, #44]	; (660 <check_fs+0x6c>)
     632:	f105 006e 	add.w	r0, r5, #110	; 0x6e
     636:	f7ff ff3b 	bl	4b0 <mem_cmp>
     63a:	b140      	cbz	r0, 64e <check_fs+0x5a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3200
		if (!mem_cmp(fs->win + BS_FilSysType32, "FAT32", 5)) return 0;	/* Is it an FAT32 VBR? */
     63c:	2205      	movs	r2, #5
     63e:	4909      	ldr	r1, [pc, #36]	; (664 <check_fs+0x70>)
     640:	f105 008a 	add.w	r0, r5, #138	; 0x8a
     644:	f7ff ff34 	bl	4b0 <mem_cmp>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3202
	}
	return 2;	/* Valid BS but not FAT */
     648:	2800      	cmp	r0, #0
     64a:	bf18      	it	ne
     64c:	2402      	movne	r4, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3203
}
     64e:	4620      	mov	r0, r4
     650:	bd38      	pop	{r3, r4, r5, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3191
	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
     652:	2404      	movs	r4, #4
     654:	e7fb      	b.n	64e <check_fs+0x5a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3193
	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot record signature (always here regardless of the sector size) */
     656:	2403      	movs	r4, #3
     658:	e7f9      	b.n	64e <check_fs+0x5a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3202
	return 2;	/* Valid BS but not FAT */
     65a:	2402      	movs	r4, #2
     65c:	e7f7      	b.n	64e <check_fs+0x5a>
     65e:	bf00      	nop
     660:	0000c64d 	.word	0x0000c64d
     664:	0000c651 	.word	0x0000c651

00000668 <find_volume>:
find_volume():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3217
static FRESULT find_volume (	/* FR_OK(0): successful, !=0: an error occurred */
	const TCHAR** path,			/* Pointer to pointer to the path name (drive number) */
	FATFS** rfs,				/* Pointer to pointer to the found filesystem object */
	BYTE mode					/* !=0: Check write protection for write access */
)
{
     668:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3228
	FATFS *fs;
	UINT i;


	/* Get logical drive number */
	*rfs = 0;
     66c:	2300      	movs	r3, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3217
{
     66e:	b085      	sub	sp, #20
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3228
	*rfs = 0;
     670:	600b      	str	r3, [r1, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3217
{
     672:	460f      	mov	r7, r1
     674:	4615      	mov	r5, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3229
	vol = get_ldnumber(path);
     676:	f7ff ff43 	bl	500 <get_ldnumber>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3230
	if (vol < 0) return FR_INVALID_DRIVE;
     67a:	1e06      	subs	r6, r0, #0
     67c:	f2c0 8139 	blt.w	8f2 <find_volume+0x28a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3233

	/* Check if the filesystem object is valid or not */
	fs = FatFs[vol];					/* Get pointer to the filesystem object */
     680:	4ba4      	ldr	r3, [pc, #656]	; (914 <find_volume+0x2ac>)
     682:	f853 4026 	ldr.w	r4, [r3, r6, lsl #2]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3234
	if (!fs) return FR_NOT_ENABLED;		/* Is the filesystem object available? */
     686:	2c00      	cmp	r4, #0
     688:	f000 8135 	beq.w	8f6 <find_volume+0x28e>
lock_fs():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:911
	return ff_req_grant(fs->sobj);
     68c:	6920      	ldr	r0, [r4, #16]
     68e:	f001 f9ac 	bl	19ea <ff_req_grant>
find_volume():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3236
#if FF_FS_REENTRANT
	if (!lock_fs(fs)) return FR_TIMEOUT;	/* Lock the volume */
     692:	2800      	cmp	r0, #0
     694:	f000 8131 	beq.w	8fa <find_volume+0x292>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3238
#endif
	*rfs = fs;							/* Return pointer to the filesystem object */
     698:	603c      	str	r4, [r7, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3241

	mode &= (BYTE)~FA_READ;				/* Desired access mode, write access or not */
	if (fs->fs_type != 0) {				/* If the volume has been mounted */
     69a:	7823      	ldrb	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3240
	mode &= (BYTE)~FA_READ;				/* Desired access mode, write access or not */
     69c:	f005 05fe 	and.w	r5, r5, #254	; 0xfe
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3241
	if (fs->fs_type != 0) {				/* If the volume has been mounted */
     6a0:	b16b      	cbz	r3, 6be <find_volume+0x56>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3242
		stat = disk_status(fs->pdrv);
     6a2:	7860      	ldrb	r0, [r4, #1]
     6a4:	f001 fa38 	bl	1b18 <disk_status>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3243
		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
     6a8:	07c1      	lsls	r1, r0, #31
     6aa:	d408      	bmi.n	6be <find_volume+0x56>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3244
			if (!FF_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
     6ac:	b11d      	cbz	r5, 6b6 <find_volume+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3244 (discriminator 1)
     6ae:	f010 0504 	ands.w	r5, r0, #4
     6b2:	d000      	beq.n	6b6 <find_volume+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3245
				return FR_WRITE_PROTECTED;
     6b4:	250a      	movs	r5, #10
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3444
#endif
#if FF_FS_LOCK != 0			/* Clear file lock semaphores */
	clear_lock(fs);
#endif
	return FR_OK;
}
     6b6:	4628      	mov	r0, r5
     6b8:	b005      	add	sp, #20
     6ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3254
	fs->fs_type = 0;					/* Clear the filesystem object */
     6be:	2300      	movs	r3, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3255
	fs->pdrv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
     6c0:	b2f0      	uxtb	r0, r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3254
	fs->fs_type = 0;					/* Clear the filesystem object */
     6c2:	7023      	strb	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3255
	fs->pdrv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
     6c4:	7060      	strb	r0, [r4, #1]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3256
	stat = disk_initialize(fs->pdrv);	/* Initialize the physical drive */
     6c6:	f001 fa19 	bl	1afc <disk_initialize>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3257
	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
     6ca:	07c2      	lsls	r2, r0, #31
     6cc:	f100 8117 	bmi.w	8fe <find_volume+0x296>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3260
	if (!FF_FS_READONLY && mode && (stat & STA_PROTECT)) { /* Check disk write protection if needed */
     6d0:	b10d      	cbz	r5, 6d6 <find_volume+0x6e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3260 (discriminator 1)
     6d2:	0743      	lsls	r3, r0, #29
     6d4:	d4ee      	bmi.n	6b4 <find_volume+0x4c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3270
	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
     6d6:	2100      	movs	r1, #0
     6d8:	4620      	mov	r0, r4
     6da:	f7ff ff8b 	bl	5f4 <check_fs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3271
	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
     6de:	2802      	cmp	r0, #2
     6e0:	f040 80ee 	bne.w	8c0 <find_volume+0x258>
     6e4:	466f      	mov	r7, sp
     6e6:	f504 71ff 	add.w	r1, r4, #510	; 0x1fe
     6ea:	f204 263e 	addw	r6, r4, #574	; 0x23e
     6ee:	463d      	mov	r5, r7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3274
			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
     6f0:	f811 0c04 	ldrb.w	r0, [r1, #-4]
     6f4:	b110      	cbz	r0, 6fc <find_volume+0x94>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3274 (discriminator 1)
     6f6:	4608      	mov	r0, r1
     6f8:	f7ff feca 	bl	490 <ld_dword>
     6fc:	3110      	adds	r1, #16
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3272 (discriminator 4)
		for (i = 0; i < 4; i++) {		/* Get partition offset */
     6fe:	428e      	cmp	r6, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3274 (discriminator 4)
			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
     700:	f845 0b04 	str.w	r0, [r5], #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3272 (discriminator 4)
		for (i = 0; i < 4; i++) {		/* Get partition offset */
     704:	d1f4      	bne.n	6f0 <find_volume+0x88>
     706:	2500      	movs	r5, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3279
			bsect = br[i];
     708:	f857 6b04 	ldr.w	r6, [r7], #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3280
			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
     70c:	2e00      	cmp	r6, #0
     70e:	f000 80ce 	beq.w	8ae <find_volume+0x246>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3280 (discriminator 1)
     712:	4631      	mov	r1, r6
     714:	4620      	mov	r0, r4
     716:	f7ff ff6d 	bl	5f4 <check_fs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3281 (discriminator 1)
		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
     71a:	2801      	cmp	r0, #1
     71c:	f200 80c8 	bhi.w	8b0 <find_volume+0x248>
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     720:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
     724:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
     728:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
find_volume():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3352
		if (ld_word(fs->win + BPB_BytsPerSec) != SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_BytsPerSec must be equal to the physical sector size) */
     72c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
     730:	f040 80ca 	bne.w	8c8 <find_volume+0x260>
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     734:	f894 304f 	ldrb.w	r3, [r4, #79]	; 0x4f
     738:	f894 504e 	ldrb.w	r5, [r4, #78]	; 0x4e
find_volume():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3355
		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
     73c:	ea55 2503 	orrs.w	r5, r5, r3, lsl #8
     740:	d104      	bne.n	74c <find_volume+0xe4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3355 (discriminator 1)
     742:	f104 005c 	add.w	r0, r4, #92	; 0x5c
     746:	f7ff fea3 	bl	490 <ld_dword>
     74a:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3358
		fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
     74c:	f894 1048 	ldrb.w	r1, [r4, #72]	; 0x48
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3356
		fs->fsize = fasize;
     750:	6225      	str	r5, [r4, #32]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3359
		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
     752:	1e4b      	subs	r3, r1, #1
     754:	2b01      	cmp	r3, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3358
		fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
     756:	70a1      	strb	r1, [r4, #2]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3359
		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
     758:	f200 80b6 	bhi.w	8c8 <find_volume+0x260>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3362
		fs->csize = fs->win[BPB_SecPerClus];			/* Cluster size */
     75c:	f894 9045 	ldrb.w	r9, [r4, #69]	; 0x45
     760:	fa1f f389 	uxth.w	r3, r9
     764:	8163      	strh	r3, [r4, #10]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3363
		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power of 2) */
     766:	2b00      	cmp	r3, #0
     768:	f000 80ae 	beq.w	8c8 <find_volume+0x260>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3363 (discriminator 2)
     76c:	f109 33ff 	add.w	r3, r9, #4294967295	; 0xffffffff
     770:	ea13 0f09 	tst.w	r3, r9
     774:	f040 80a8 	bne.w	8c8 <find_volume+0x260>
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     778:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
     77c:	f894 7049 	ldrb.w	r7, [r4, #73]	; 0x49
     780:	ea47 2703 	orr.w	r7, r7, r3, lsl #8
     784:	b23f      	sxth	r7, r7
     786:	fa1f f887 	uxth.w	r8, r7
find_volume():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3366
		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
     78a:	f018 0f0f 	tst.w	r8, #15
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3365
		fs->n_rootdir = ld_word(fs->win + BPB_RootEntCnt);	/* Number of root directory entries */
     78e:	f8a4 8008 	strh.w	r8, [r4, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3366
		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
     792:	f040 8099 	bne.w	8c8 <find_volume+0x260>
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     796:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
     79a:	f894 004b 	ldrb.w	r0, [r4, #75]	; 0x4b
find_volume():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3369
		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
     79e:	ea50 2003 	orrs.w	r0, r0, r3, lsl #8
     7a2:	d103      	bne.n	7ac <find_volume+0x144>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3369 (discriminator 1)
     7a4:	f104 0058 	add.w	r0, r4, #88	; 0x58
     7a8:	f7ff fe72 	bl	490 <ld_dword>
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     7ac:	f894 2047 	ldrb.w	r2, [r4, #71]	; 0x47
     7b0:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
find_volume():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3372
		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
     7b4:	ea53 2302 	orrs.w	r3, r3, r2, lsl #8
     7b8:	f000 8086 	beq.w	8c8 <find_volume+0x260>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3360
		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
     7bc:	fb05 fc01 	mul.w	ip, r5, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3375
		sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZDIRE);	/* RSV + FAT + DIR */
     7c0:	eb03 1218 	add.w	r2, r3, r8, lsr #4
     7c4:	4462      	add	r2, ip
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3376
		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
     7c6:	4290      	cmp	r0, r2
     7c8:	d37e      	bcc.n	8c8 <find_volume+0x260>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3377
		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
     7ca:	1a80      	subs	r0, r0, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3378
		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
     7cc:	4548      	cmp	r0, r9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3377
		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
     7ce:	fbb0 f1f9 	udiv	r1, r0, r9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3378
		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
     7d2:	d379      	bcc.n	8c8 <find_volume+0x260>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3380
		if (nclst <= MAX_FAT32) fmt = FS_FAT32;
     7d4:	4850      	ldr	r0, [pc, #320]	; (918 <find_volume+0x2b0>)
     7d6:	4281      	cmp	r1, r0
     7d8:	d876      	bhi.n	8c8 <find_volume+0x260>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3381
		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
     7da:	f64f 70f5 	movw	r0, #65525	; 0xfff5
     7de:	4281      	cmp	r1, r0
     7e0:	f240 808f 	bls.w	902 <find_volume+0x29a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3380
		if (nclst <= MAX_FAT32) fmt = FS_FAT32;
     7e4:	f04f 0903 	mov.w	r9, #3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3386
		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
     7e8:	3102      	adds	r1, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3388
		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
     7ea:	4433      	add	r3, r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3389
		fs->database = bsect + sysect;					/* Data start sector */
     7ec:	4432      	add	r2, r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3390
		if (fmt == FS_FAT32) {
     7ee:	f1b9 0f03 	cmp.w	r9, #3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3386
		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
     7f2:	61e1      	str	r1, [r4, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3387
		fs->volbase = bsect;							/* Volume start sector */
     7f4:	6266      	str	r6, [r4, #36]	; 0x24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3388
		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
     7f6:	62a3      	str	r3, [r4, #40]	; 0x28
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3389
		fs->database = bsect + sysect;					/* Data start sector */
     7f8:	6322      	str	r2, [r4, #48]	; 0x30
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3390
		if (fmt == FS_FAT32) {
     7fa:	d169      	bne.n	8d0 <find_volume+0x268>
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     7fc:	f894 2063 	ldrb.w	r2, [r4, #99]	; 0x63
     800:	f894 3062 	ldrb.w	r3, [r4, #98]	; 0x62
     804:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
find_volume():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3391
			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0) */
     808:	431f      	orrs	r7, r3
     80a:	b23f      	sxth	r7, r7
     80c:	2f00      	cmp	r7, #0
     80e:	d15b      	bne.n	8c8 <find_volume+0x260>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3393
			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
     810:	f104 0064 	add.w	r0, r4, #100	; 0x64
     814:	f7ff fe3c 	bl	490 <ld_dword>
     818:	62e0      	str	r0, [r4, #44]	; 0x2c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3394
			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
     81a:	0089      	lsls	r1, r1, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3401
		if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_FATSz must not be less than the size needed) */
     81c:	f201 11ff 	addw	r1, r1, #511	; 0x1ff
     820:	ebb5 2f51 	cmp.w	r5, r1, lsr #9
     824:	d350      	bcc.n	8c8 <find_volume+0x260>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3405
		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
     826:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
     82a:	e9c4 3305 	strd	r3, r3, [r4, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3408
		if (fmt == FS_FAT32				/* Allow to update FSInfo only if BPB_FSInfo32 == 1 */
     82e:	f1b9 0f03 	cmp.w	r9, #3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3406
		fs->fsi_flag = 0x80;
     832:	f04f 0380 	mov.w	r3, #128	; 0x80
     836:	7123      	strb	r3, [r4, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3408
		if (fmt == FS_FAT32				/* Allow to update FSInfo only if BPB_FSInfo32 == 1 */
     838:	d12f      	bne.n	89a <find_volume+0x232>
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     83a:	f894 2069 	ldrb.w	r2, [r4, #105]	; 0x69
     83e:	f894 3068 	ldrb.w	r3, [r4, #104]	; 0x68
     842:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
find_volume():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3409
			&& ld_word(fs->win + BPB_FSInfo32) == 1
     846:	2b01      	cmp	r3, #1
     848:	d127      	bne.n	89a <find_volume+0x232>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3410
			&& move_window(fs, bsect + 1) == FR_OK)
     84a:	1c71      	adds	r1, r6, #1
     84c:	4620      	mov	r0, r4
     84e:	f7ff feaf 	bl	5b0 <move_window>
     852:	bb10      	cbnz	r0, 89a <find_volume+0x232>
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     854:	f894 2237 	ldrb.w	r2, [r4, #567]	; 0x237
     858:	f894 3236 	ldrb.w	r3, [r4, #566]	; 0x236
find_volume():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3412
			fs->fsi_flag = 0;
     85c:	7120      	strb	r0, [r4, #4]
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     85e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
find_volume():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3413
			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSInfo data if available */
     862:	f64a 2255 	movw	r2, #43605	; 0xaa55
     866:	4293      	cmp	r3, r2
     868:	d117      	bne.n	89a <find_volume+0x232>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3414
				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
     86a:	f104 0038 	add.w	r0, r4, #56	; 0x38
     86e:	f7ff fe0f 	bl	490 <ld_dword>
     872:	4b2a      	ldr	r3, [pc, #168]	; (91c <find_volume+0x2b4>)
     874:	4298      	cmp	r0, r3
     876:	d110      	bne.n	89a <find_volume+0x232>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3415
				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
     878:	f504 7007 	add.w	r0, r4, #540	; 0x21c
     87c:	f7ff fe08 	bl	490 <ld_dword>
     880:	4b27      	ldr	r3, [pc, #156]	; (920 <find_volume+0x2b8>)
     882:	4298      	cmp	r0, r3
     884:	d109      	bne.n	89a <find_volume+0x232>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3418
				fs->free_clst = ld_dword(fs->win + FSI_Free_Count);
     886:	f504 7008 	add.w	r0, r4, #544	; 0x220
     88a:	f7ff fe01 	bl	490 <ld_dword>
     88e:	61a0      	str	r0, [r4, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3421
				fs->last_clst = ld_dword(fs->win + FSI_Nxt_Free);
     890:	f504 7009 	add.w	r0, r4, #548	; 0x224
     894:	f7ff fdfc 	bl	490 <ld_dword>
     898:	6160      	str	r0, [r4, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3430
	fs->id = ++Fsid;		/* Volume mount ID */
     89a:	4a22      	ldr	r2, [pc, #136]	; (924 <find_volume+0x2bc>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3429
	fs->fs_type = fmt;		/* FAT sub-type */
     89c:	f884 9000 	strb.w	r9, [r4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3430
	fs->id = ++Fsid;		/* Volume mount ID */
     8a0:	8813      	ldrh	r3, [r2, #0]
     8a2:	3301      	adds	r3, #1
     8a4:	b29b      	uxth	r3, r3
     8a6:	8013      	strh	r3, [r2, #0]
     8a8:	80e3      	strh	r3, [r4, #6]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3443
	return FR_OK;
     8aa:	2500      	movs	r5, #0
     8ac:	e703      	b.n	6b6 <find_volume+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3280
			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
     8ae:	2003      	movs	r0, #3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3281 (discriminator 1)
		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
     8b0:	3501      	adds	r5, #1
     8b2:	2d04      	cmp	r5, #4
     8b4:	f47f af28 	bne.w	708 <find_volume+0xa0>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3283
	if (fmt == 4) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
     8b8:	2804      	cmp	r0, #4
     8ba:	d105      	bne.n	8c8 <find_volume+0x260>
     8bc:	2501      	movs	r5, #1
     8be:	e6fa      	b.n	6b6 <find_volume+0x4e>
     8c0:	2804      	cmp	r0, #4
     8c2:	d0fb      	beq.n	8bc <find_volume+0x254>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3284
	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
     8c4:	2801      	cmp	r0, #1
     8c6:	d901      	bls.n	8cc <find_volume+0x264>
     8c8:	250d      	movs	r5, #13
     8ca:	e6f4      	b.n	6b6 <find_volume+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3269
	bsect = 0;
     8cc:	2600      	movs	r6, #0
     8ce:	e727      	b.n	720 <find_volume+0xb8>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3396
			if (fs->n_rootdir == 0)	return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must not be 0) */
     8d0:	f1b8 0f00 	cmp.w	r8, #0
     8d4:	d0f8      	beq.n	8c8 <find_volume+0x260>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3397
			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
     8d6:	4463      	add	r3, ip
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3399
				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
     8d8:	f1b9 0f02 	cmp.w	r9, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3397
			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
     8dc:	62e3      	str	r3, [r4, #44]	; 0x2c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3398
			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
     8de:	ea4f 0341 	mov.w	r3, r1, lsl #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3399
				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
     8e2:	bf1b      	ittet	ne
     8e4:	185b      	addne	r3, r3, r1
     8e6:	f001 0101 	andne.w	r1, r1, #1
     8ea:	4619      	moveq	r1, r3
     8ec:	eb01 0153 	addne.w	r1, r1, r3, lsr #1
     8f0:	e794      	b.n	81c <find_volume+0x1b4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3230
	if (vol < 0) return FR_INVALID_DRIVE;
     8f2:	250b      	movs	r5, #11
     8f4:	e6df      	b.n	6b6 <find_volume+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3234
	if (!fs) return FR_NOT_ENABLED;		/* Is the filesystem object available? */
     8f6:	250c      	movs	r5, #12
     8f8:	e6dd      	b.n	6b6 <find_volume+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3236
	if (!lock_fs(fs)) return FR_TIMEOUT;	/* Lock the volume */
     8fa:	250f      	movs	r5, #15
     8fc:	e6db      	b.n	6b6 <find_volume+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3258
		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
     8fe:	2503      	movs	r5, #3
     900:	e6d9      	b.n	6b6 <find_volume+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3382
		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
     902:	f640 79f5 	movw	r9, #4085	; 0xff5
     906:	4549      	cmp	r1, r9
     908:	bf8c      	ite	hi
     90a:	f04f 0902 	movhi.w	r9, #2
     90e:	f04f 0901 	movls.w	r9, #1
     912:	e769      	b.n	7e8 <find_volume+0x180>
     914:	10000388 	.word	0x10000388
     918:	0ffffff5 	.word	0x0ffffff5
     91c:	41615252 	.word	0x41615252
     920:	61417272 	.word	0x61417272
     924:	1000038c 	.word	0x1000038c

00000928 <put_fat>:
put_fat():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1237
	if (clst >= 2 && clst < fs->n_fatent) {	/* Check if in valid range */
     928:	2901      	cmp	r1, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1231
{
     92a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
     92e:	4605      	mov	r5, r0
     930:	460c      	mov	r4, r1
     932:	4617      	mov	r7, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1237
	if (clst >= 2 && clst < fs->n_fatent) {	/* Check if in valid range */
     934:	d972      	bls.n	a1c <put_fat+0xf4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1237 (discriminator 1)
     936:	69c3      	ldr	r3, [r0, #28]
     938:	428b      	cmp	r3, r1
     93a:	d96f      	bls.n	a1c <put_fat+0xf4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1238
		switch (fs->fs_type) {
     93c:	7803      	ldrb	r3, [r0, #0]
     93e:	2b02      	cmp	r3, #2
     940:	d03f      	beq.n	9c2 <put_fat+0x9a>
     942:	2b03      	cmp	r3, #3
     944:	d050      	beq.n	9e8 <put_fat+0xc0>
     946:	2b01      	cmp	r3, #1
     948:	d168      	bne.n	a1c <put_fat+0xf4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1240
			bc = (UINT)clst; bc += bc / 2;	/* bc: byte offset of the entry */
     94a:	eb01 0851 	add.w	r8, r1, r1, lsr #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1241
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
     94e:	6a81      	ldr	r1, [r0, #40]	; 0x28
     950:	eb01 2158 	add.w	r1, r1, r8, lsr #9
     954:	f7ff fe2c 	bl	5b0 <move_window>
     958:	4606      	mov	r6, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1242
			if (res != FR_OK) break;
     95a:	bb38      	cbnz	r0, 9ac <put_fat+0x84>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1243
			p = fs->win + bc++ % SS(fs);
     95c:	f105 0938 	add.w	r9, r5, #56	; 0x38
     960:	f108 0a01 	add.w	sl, r8, #1
     964:	f3c8 0808 	ubfx	r8, r8, #0, #9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1244
			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;		/* Put 1st byte */
     968:	f014 0401 	ands.w	r4, r4, #1
     96c:	bf1f      	itttt	ne
     96e:	f819 3008 	ldrbne.w	r3, [r9, r8]
     972:	f003 020f 	andne.w	r2, r3, #15
     976:	013b      	lslne	r3, r7, #4
     978:	f003 03f0 	andne.w	r3, r3, #240	; 0xf0
     97c:	bf14      	ite	ne
     97e:	4313      	orrne	r3, r2
     980:	b2fb      	uxtbeq	r3, r7
     982:	f809 3008 	strb.w	r3, [r9, r8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1246
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
     986:	6aa9      	ldr	r1, [r5, #40]	; 0x28
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1245
			fs->wflag = 1;
     988:	2301      	movs	r3, #1
     98a:	70eb      	strb	r3, [r5, #3]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1246
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
     98c:	eb01 215a 	add.w	r1, r1, sl, lsr #9
     990:	4628      	mov	r0, r5
     992:	f7ff fe0d 	bl	5b0 <move_window>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1247
			if (res != FR_OK) break;
     996:	4606      	mov	r6, r0
     998:	b940      	cbnz	r0, 9ac <put_fat+0x84>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1248
			p = fs->win + bc % SS(fs);
     99a:	f3ca 0a08 	ubfx	sl, sl, #0, #9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1249
			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));	/* Put 2nd byte */
     99e:	b144      	cbz	r4, 9b2 <put_fat+0x8a>
     9a0:	f3c7 1707 	ubfx	r7, r7, #4, #8
     9a4:	f809 700a 	strb.w	r7, [r9, sl]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1270
			fs->wflag = 1;
     9a8:	2301      	movs	r3, #1
     9aa:	70eb      	strb	r3, [r5, #3]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1275
}
     9ac:	4630      	mov	r0, r6
     9ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1249
			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));	/* Put 2nd byte */
     9b2:	f819 300a 	ldrb.w	r3, [r9, sl]
     9b6:	f3c7 2703 	ubfx	r7, r7, #8, #4
     9ba:	f023 030f 	bic.w	r3, r3, #15
     9be:	431f      	orrs	r7, r3
     9c0:	e7f0      	b.n	9a4 <put_fat+0x7c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1254
			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
     9c2:	6a81      	ldr	r1, [r0, #40]	; 0x28
     9c4:	eb01 2114 	add.w	r1, r1, r4, lsr #8
     9c8:	f7ff fdf2 	bl	5b0 <move_window>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1255
			if (res != FR_OK) break;
     9cc:	4606      	mov	r6, r0
     9ce:	2800      	cmp	r0, #0
     9d0:	d1ec      	bne.n	9ac <put_fat+0x84>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1256
			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);	/* Simple WORD array */
     9d2:	0064      	lsls	r4, r4, #1
     9d4:	f105 0338 	add.w	r3, r5, #56	; 0x38
     9d8:	f404 74ff 	and.w	r4, r4, #510	; 0x1fe
     9dc:	191a      	adds	r2, r3, r4
st_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:620
	*ptr++ = (BYTE)val; val >>= 8;
     9de:	551f      	strb	r7, [r3, r4]
     9e0:	f3c7 2707 	ubfx	r7, r7, #8, #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:621
	*ptr++ = (BYTE)val;
     9e4:	7057      	strb	r7, [r2, #1]
put_fat():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1257
			fs->wflag = 1;
     9e6:	e7df      	b.n	9a8 <put_fat+0x80>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1264
			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
     9e8:	6a81      	ldr	r1, [r0, #40]	; 0x28
     9ea:	eb01 11d4 	add.w	r1, r1, r4, lsr #7
     9ee:	f7ff fddf 	bl	5b0 <move_window>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1265
			if (res != FR_OK) break;
     9f2:	4606      	mov	r6, r0
     9f4:	2800      	cmp	r0, #0
     9f6:	d1d9      	bne.n	9ac <put_fat+0x84>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1267
				val = (val & 0x0FFFFFFF) | (ld_dword(fs->win + clst * 4 % SS(fs)) & 0xF0000000);
     9f8:	00a4      	lsls	r4, r4, #2
     9fa:	f105 0338 	add.w	r3, r5, #56	; 0x38
     9fe:	f404 74fe 	and.w	r4, r4, #508	; 0x1fc
     a02:	441c      	add	r4, r3
     a04:	4620      	mov	r0, r4
     a06:	f7ff fd43 	bl	490 <ld_dword>
     a0a:	f027 4770 	bic.w	r7, r7, #4026531840	; 0xf0000000
     a0e:	f000 4170 	and.w	r1, r0, #4026531840	; 0xf0000000
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1269
			st_dword(fs->win + clst * 4 % SS(fs), val);
     a12:	4339      	orrs	r1, r7
     a14:	4620      	mov	r0, r4
     a16:	f7ff fd43 	bl	4a0 <st_dword>
     a1a:	e7c5      	b.n	9a8 <put_fat+0x80>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1234
	FRESULT res = FR_INT_ERR;
     a1c:	2602      	movs	r6, #2
     a1e:	e7c5      	b.n	9ac <put_fat+0x84>

00000a20 <get_fat.isra.10>:
get_fat():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1159
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check if in valid range */
     a20:	2901      	cmp	r1, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1149
static DWORD get_fat (		/* 0xFFFFFFFF:Disk error, 1:Internal error, 2..0x7FFFFFFF:Cluster status */
     a22:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     a24:	4605      	mov	r5, r0
     a26:	460c      	mov	r4, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1159
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check if in valid range */
     a28:	d952      	bls.n	ad0 <get_fat.isra.10+0xb0>
     a2a:	69c3      	ldr	r3, [r0, #28]
     a2c:	4299      	cmp	r1, r3
     a2e:	d24f      	bcs.n	ad0 <get_fat.isra.10+0xb0>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1165
		switch (fs->fs_type) {
     a30:	7803      	ldrb	r3, [r0, #0]
     a32:	2b02      	cmp	r3, #2
     a34:	d029      	beq.n	a8a <get_fat.isra.10+0x6a>
     a36:	2b03      	cmp	r3, #3
     a38:	d038      	beq.n	aac <get_fat.isra.10+0x8c>
     a3a:	2b01      	cmp	r3, #1
     a3c:	d148      	bne.n	ad0 <get_fat.isra.10+0xb0>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1167
			bc = (UINT)clst; bc += bc / 2;
     a3e:	eb01 0651 	add.w	r6, r1, r1, lsr #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1168
			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
     a42:	6a81      	ldr	r1, [r0, #40]	; 0x28
     a44:	eb01 2156 	add.w	r1, r1, r6, lsr #9
     a48:	f7ff fdb2 	bl	5b0 <move_window>
     a4c:	b110      	cbz	r0, a54 <get_fat.isra.10+0x34>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1163
		val = 0xFFFFFFFF;	/* Default value falls on disk error */
     a4e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1216
}
     a52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1169
			wc = fs->win[bc++ % SS(fs)];		/* Get 1st byte of the entry */
     a54:	1c77      	adds	r7, r6, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1170
			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
     a56:	6aa9      	ldr	r1, [r5, #40]	; 0x28
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1169
			wc = fs->win[bc++ % SS(fs)];		/* Get 1st byte of the entry */
     a58:	f3c6 0608 	ubfx	r6, r6, #0, #9
     a5c:	442e      	add	r6, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1170
			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
     a5e:	eb01 2157 	add.w	r1, r1, r7, lsr #9
     a62:	4628      	mov	r0, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1169
			wc = fs->win[bc++ % SS(fs)];		/* Get 1st byte of the entry */
     a64:	f896 6038 	ldrb.w	r6, [r6, #56]	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1170
			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
     a68:	f7ff fda2 	bl	5b0 <move_window>
     a6c:	2800      	cmp	r0, #0
     a6e:	d1ee      	bne.n	a4e <get_fat.isra.10+0x2e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1171
			wc |= fs->win[bc % SS(fs)] << 8;	/* Merge 2nd byte of the entry */
     a70:	f3c7 0708 	ubfx	r7, r7, #0, #9
     a74:	443d      	add	r5, r7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1172
			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);	/* Adjust bit position */
     a76:	07e3      	lsls	r3, r4, #31
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1171
			wc |= fs->win[bc % SS(fs)] << 8;	/* Merge 2nd byte of the entry */
     a78:	f895 0038 	ldrb.w	r0, [r5, #56]	; 0x38
     a7c:	ea46 2000 	orr.w	r0, r6, r0, lsl #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1172
			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);	/* Adjust bit position */
     a80:	bf4c      	ite	mi
     a82:	0900      	lsrmi	r0, r0, #4
     a84:	f3c0 000b 	ubfxpl	r0, r0, #0, #12
     a88:	e7e3      	b.n	a52 <get_fat.isra.10+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1176
			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2))) != FR_OK) break;
     a8a:	6a81      	ldr	r1, [r0, #40]	; 0x28
     a8c:	eb01 2114 	add.w	r1, r1, r4, lsr #8
     a90:	f7ff fd8e 	bl	5b0 <move_window>
     a94:	2800      	cmp	r0, #0
     a96:	d1da      	bne.n	a4e <get_fat.isra.10+0x2e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1177
			val = ld_word(fs->win + clst * 2 % SS(fs));		/* Simple WORD array */
     a98:	0064      	lsls	r4, r4, #1
     a9a:	3538      	adds	r5, #56	; 0x38
     a9c:	f404 74ff 	and.w	r4, r4, #510	; 0x1fe
     aa0:	192b      	adds	r3, r5, r4
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     aa2:	5d28      	ldrb	r0, [r5, r4]
     aa4:	785b      	ldrb	r3, [r3, #1]
get_fat():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1177
			val = ld_word(fs->win + clst * 2 % SS(fs));		/* Simple WORD array */
     aa6:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1178
			break;
     aaa:	e7d2      	b.n	a52 <get_fat.isra.10+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1181
			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
     aac:	6a81      	ldr	r1, [r0, #40]	; 0x28
     aae:	eb01 11d4 	add.w	r1, r1, r4, lsr #7
     ab2:	f7ff fd7d 	bl	5b0 <move_window>
     ab6:	2800      	cmp	r0, #0
     ab8:	d1c9      	bne.n	a4e <get_fat.isra.10+0x2e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1182
			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;	/* Simple DWORD array but mask out upper 4 bits */
     aba:	00a4      	lsls	r4, r4, #2
     abc:	f105 0038 	add.w	r0, r5, #56	; 0x38
     ac0:	f404 74fe 	and.w	r4, r4, #508	; 0x1fc
     ac4:	4420      	add	r0, r4
     ac6:	f7ff fce3 	bl	490 <ld_dword>
     aca:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1183
			break;
     ace:	e7c0      	b.n	a52 <get_fat.isra.10+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1211
			val = 1;	/* Internal error */
     ad0:	2001      	movs	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1215
	return val;
     ad2:	e7be      	b.n	a52 <get_fat.isra.10+0x32>

00000ad4 <dir_sdi>:
dir_sdi():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1692
	if (ofs >= (DWORD)((FF_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR) || ofs % SZDIRE) {	/* Check range of offset and alignment */
     ad4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1687
{
     ad8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     ada:	4606      	mov	r6, r0
     adc:	460d      	mov	r5, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1692
	if (ofs >= (DWORD)((FF_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR) || ofs % SZDIRE) {	/* Check range of offset and alignment */
     ade:	d301      	bcc.n	ae4 <dir_sdi+0x10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1693
		return FR_INT_ERR;
     ae0:	2002      	movs	r0, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1722
}
     ae2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1692 (discriminator 1)
	if (ofs >= (DWORD)((FF_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR) || ofs % SZDIRE) {	/* Check range of offset and alignment */
     ae4:	06ca      	lsls	r2, r1, #27
     ae6:	d1fb      	bne.n	ae0 <dir_sdi+0xc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1696
	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
     ae8:	6882      	ldr	r2, [r0, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1689
	FATFS *fs = dp->obj.fs;
     aea:	6804      	ldr	r4, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1695
	dp->dptr = ofs;				/* Set current offset */
     aec:	6131      	str	r1, [r6, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1697
	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
     aee:	b9ca      	cbnz	r2, b24 <dir_sdi+0x50>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1697 (discriminator 1)
     af0:	7823      	ldrb	r3, [r4, #0]
     af2:	2b02      	cmp	r3, #2
     af4:	d901      	bls.n	afa <dir_sdi+0x26>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1698
		clst = fs->dirbase;
     af6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1702
	if (clst == 0) {	/* Static table (root-directory on the FAT volume) */
     af8:	b99b      	cbnz	r3, b22 <dir_sdi+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1703
		if (ofs / SZDIRE >= fs->n_rootdir) return FR_INT_ERR;	/* Is index out of range? */
     afa:	8923      	ldrh	r3, [r4, #8]
     afc:	ebb3 1f55 	cmp.w	r3, r5, lsr #5
     b00:	d9ee      	bls.n	ae0 <dir_sdi+0xc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1704
		dp->sect = fs->dirbase;
     b02:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
     b04:	61b3      	str	r3, [r6, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1717
	if (dp->sect == 0) return FR_INT_ERR;
     b06:	69b3      	ldr	r3, [r6, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1716
	dp->clust = clst;					/* Current cluster# */
     b08:	6172      	str	r2, [r6, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1717
	if (dp->sect == 0) return FR_INT_ERR;
     b0a:	2b00      	cmp	r3, #0
     b0c:	d0e8      	beq.n	ae0 <dir_sdi+0xc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1718
	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
     b0e:	eb03 2355 	add.w	r3, r3, r5, lsr #9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1719
	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
     b12:	3438      	adds	r4, #56	; 0x38
     b14:	f3c5 0508 	ubfx	r5, r5, #0, #9
     b18:	442c      	add	r4, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1718
	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
     b1a:	61b3      	str	r3, [r6, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1719
	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
     b1c:	61f4      	str	r4, [r6, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1721
	return FR_OK;
     b1e:	2000      	movs	r0, #0
     b20:	e7df      	b.n	ae2 <dir_sdi+0xe>
     b22:	461a      	mov	r2, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1707
		csz = (DWORD)fs->csize * SS(fs);	/* Bytes per cluster */
     b24:	8967      	ldrh	r7, [r4, #10]
     b26:	027f      	lsls	r7, r7, #9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1708
		while (ofs >= csz) {				/* Follow cluster chain */
     b28:	42bd      	cmp	r5, r7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1709
			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
     b2a:	4611      	mov	r1, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1708
		while (ofs >= csz) {				/* Follow cluster chain */
     b2c:	d204      	bcs.n	b38 <dir_sdi+0x64>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1714
		dp->sect = clst2sect(fs, clst);
     b2e:	4620      	mov	r0, r4
     b30:	f7ff fccc 	bl	4cc <clst2sect>
     b34:	61b0      	str	r0, [r6, #24]
     b36:	e7e6      	b.n	b06 <dir_sdi+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1709
			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
     b38:	6830      	ldr	r0, [r6, #0]
     b3a:	f7ff ff71 	bl	a20 <get_fat.isra.10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1710
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
     b3e:	1c43      	adds	r3, r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1709
			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
     b40:	4602      	mov	r2, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1710
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
     b42:	d006      	beq.n	b52 <dir_sdi+0x7e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1711
			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal error */
     b44:	2801      	cmp	r0, #1
     b46:	d9cb      	bls.n	ae0 <dir_sdi+0xc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1711 (discriminator 2)
     b48:	69e3      	ldr	r3, [r4, #28]
     b4a:	4283      	cmp	r3, r0
     b4c:	d9c8      	bls.n	ae0 <dir_sdi+0xc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1712
			ofs -= csz;
     b4e:	1bed      	subs	r5, r5, r7
     b50:	e7ea      	b.n	b28 <dir_sdi+0x54>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1710
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
     b52:	2001      	movs	r0, #1
     b54:	e7c5      	b.n	ae2 <dir_sdi+0xe>

00000b56 <create_chain>:
create_chain():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1515
{
     b56:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     b5a:	4680      	mov	r8, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1518
	FATFS *fs = obj->fs;
     b5c:	6805      	ldr	r5, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1521
	if (clst == 0) {	/* Create a new chain */
     b5e:	460f      	mov	r7, r1
     b60:	b949      	cbnz	r1, b76 <create_chain+0x20>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1522
		scl = fs->last_clst;				/* Suggested cluster to start to find */
     b62:	696e      	ldr	r6, [r5, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1523
		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
     b64:	b1c6      	cbz	r6, b98 <create_chain+0x42>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1523 (discriminator 2)
     b66:	69eb      	ldr	r3, [r5, #28]
     b68:	42b3      	cmp	r3, r6
     b6a:	bf98      	it	ls
     b6c:	2601      	movls	r6, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1532
	if (fs->free_clst == 0) return 0;		/* No free cluster */
     b6e:	69ab      	ldr	r3, [r5, #24]
     b70:	b9a3      	cbnz	r3, b9c <create_chain+0x46>
     b72:	2400      	movs	r4, #0
     b74:	e006      	b.n	b84 <create_chain+0x2e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1526
		cs = get_fat(obj, clst);			/* Check the cluster status */
     b76:	4628      	mov	r0, r5
     b78:	f7ff ff52 	bl	a20 <get_fat.isra.10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1527
		if (cs < 2) return 1;				/* Test for insanity */
     b7c:	2801      	cmp	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1526
		cs = get_fat(obj, clst);			/* Check the cluster status */
     b7e:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1527
		if (cs < 2) return 1;				/* Test for insanity */
     b80:	d803      	bhi.n	b8a <create_chain+0x34>
     b82:	2401      	movs	r4, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1602
}
     b84:	4620      	mov	r0, r4
     b86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1528
		if (cs == 0xFFFFFFFF) return cs;	/* Test for disk error */
     b8a:	1c42      	adds	r2, r0, #1
     b8c:	d051      	beq.n	c32 <create_chain+0xdc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1529
		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
     b8e:	69eb      	ldr	r3, [r5, #28]
     b90:	4283      	cmp	r3, r0
     b92:	d8f7      	bhi.n	b84 <create_chain+0x2e>
     b94:	463e      	mov	r6, r7
     b96:	e7ea      	b.n	b6e <create_chain+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1523
		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
     b98:	2601      	movs	r6, #1
     b9a:	e7e8      	b.n	b6e <create_chain+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1562
		if (scl == clst) {						/* Stretching an existing chain? */
     b9c:	42be      	cmp	r6, r7
     b9e:	d115      	bne.n	bcc <create_chain+0x76>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1564
			if (ncl >= fs->n_fatent) ncl = 2;
     ba0:	69eb      	ldr	r3, [r5, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1565
			cs = get_fat(obj, ncl);				/* Get next cluster status */
     ba2:	f8d8 0000 	ldr.w	r0, [r8]
     ba6:	1c74      	adds	r4, r6, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1564
			if (ncl >= fs->n_fatent) ncl = 2;
     ba8:	42a3      	cmp	r3, r4
     baa:	bf98      	it	ls
     bac:	2402      	movls	r4, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1565
			cs = get_fat(obj, ncl);				/* Get next cluster status */
     bae:	4621      	mov	r1, r4
     bb0:	f7ff ff36 	bl	a20 <get_fat.isra.10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1566
			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* Test for error */
     bb4:	2801      	cmp	r0, #1
     bb6:	d0e4      	beq.n	b82 <create_chain+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1566 (discriminator 2)
     bb8:	1c43      	adds	r3, r0, #1
     bba:	d03a      	beq.n	c32 <create_chain+0xdc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1567
			if (cs != 0) {						/* Not free? */
     bbc:	b1d8      	cbz	r0, bf6 <create_chain+0xa0>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1568
				cs = fs->last_clst;				/* Start at suggested cluster if it is valid */
     bbe:	696b      	ldr	r3, [r5, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1569
				if (cs >= 2 && cs < fs->n_fatent) scl = cs;
     bc0:	2b01      	cmp	r3, #1
     bc2:	d903      	bls.n	bcc <create_chain+0x76>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1569 (discriminator 1)
     bc4:	69ea      	ldr	r2, [r5, #28]
     bc6:	4293      	cmp	r3, r2
     bc8:	bf38      	it	cc
     bca:	461e      	movcc	r6, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1569
     bcc:	4634      	mov	r4, r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1577
				if (ncl >= fs->n_fatent) {		/* Check wrap-around */
     bce:	69eb      	ldr	r3, [r5, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1576
				ncl++;							/* Next cluster */
     bd0:	3401      	adds	r4, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1577
				if (ncl >= fs->n_fatent) {		/* Check wrap-around */
     bd2:	42a3      	cmp	r3, r4
     bd4:	d802      	bhi.n	bdc <create_chain+0x86>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1579
					if (ncl > scl) return 0;	/* No free cluster found? */
     bd6:	2e01      	cmp	r6, #1
     bd8:	d9cb      	bls.n	b72 <create_chain+0x1c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1578
					ncl = 2;
     bda:	2402      	movs	r4, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1581
				cs = get_fat(obj, ncl);			/* Get the cluster status */
     bdc:	4621      	mov	r1, r4
     bde:	f8d8 0000 	ldr.w	r0, [r8]
     be2:	f7ff ff1d 	bl	a20 <get_fat.isra.10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1582
				if (cs == 0) break;				/* Found a free cluster? */
     be6:	b140      	cbz	r0, bfa <create_chain+0xa4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1583
				if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* Test for error */
     be8:	2801      	cmp	r0, #1
     bea:	d0ca      	beq.n	b82 <create_chain+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1583 (discriminator 2)
     bec:	3001      	adds	r0, #1
     bee:	d020      	beq.n	c32 <create_chain+0xdc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1584
				if (ncl == scl) return 0;		/* No free cluster found? */
     bf0:	42b4      	cmp	r4, r6
     bf2:	d1ec      	bne.n	bce <create_chain+0x78>
     bf4:	e7bd      	b.n	b72 <create_chain+0x1c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1573
		if (ncl == 0) {	/* The new cluster cannot be contiguous and find another fragment */
     bf6:	2c00      	cmp	r4, #0
     bf8:	d0e8      	beq.n	bcc <create_chain+0x76>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1587
		res = put_fat(fs, ncl, 0xFFFFFFFF);		/* Mark the new cluster 'EOC' */
     bfa:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
     bfe:	4621      	mov	r1, r4
     c00:	4628      	mov	r0, r5
     c02:	f7ff fe91 	bl	928 <put_fat>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1588
		if (res == FR_OK && clst != 0) {
     c06:	b990      	cbnz	r0, c2e <create_chain+0xd8>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1588 (discriminator 1)
     c08:	b957      	cbnz	r7, c20 <create_chain+0xca>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1595
		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
     c0a:	e9d5 3206 	ldrd	r3, r2, [r5, #24]
     c0e:	3a02      	subs	r2, #2
     c10:	4293      	cmp	r3, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1594
		fs->last_clst = ncl;
     c12:	616c      	str	r4, [r5, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1595
		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
     c14:	d910      	bls.n	c38 <create_chain+0xe2>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1596
		fs->fsi_flag |= 1;
     c16:	792b      	ldrb	r3, [r5, #4]
     c18:	f043 0301 	orr.w	r3, r3, #1
     c1c:	712b      	strb	r3, [r5, #4]
     c1e:	e7b1      	b.n	b84 <create_chain+0x2e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1589
			res = put_fat(fs, clst, ncl);		/* Link it from the previous one if needed */
     c20:	4622      	mov	r2, r4
     c22:	4639      	mov	r1, r7
     c24:	4628      	mov	r0, r5
     c26:	f7ff fe7f 	bl	928 <put_fat>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1593
	if (res == FR_OK) {			/* Update FSINFO if function succeeded. */
     c2a:	2800      	cmp	r0, #0
     c2c:	d0ed      	beq.n	c0a <create_chain+0xb4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1598
		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;	/* Failed. Generate error status */
     c2e:	2801      	cmp	r0, #1
     c30:	d1a7      	bne.n	b82 <create_chain+0x2c>
     c32:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
     c36:	e7a5      	b.n	b84 <create_chain+0x2e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1595 (discriminator 1)
		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
     c38:	3b01      	subs	r3, #1
     c3a:	61ab      	str	r3, [r5, #24]
     c3c:	e7eb      	b.n	c16 <create_chain+0xc0>

00000c3e <remove_chain>:
remove_chain():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1421
{
     c3e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     c40:	460d      	mov	r5, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1432
	if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Check if in valid range */
     c42:	2d01      	cmp	r5, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1421
{
     c44:	4607      	mov	r7, r0
     c46:	4611      	mov	r1, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1424
	FATFS *fs = obj->fs;
     c48:	6804      	ldr	r4, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1432
	if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Check if in valid range */
     c4a:	d92b      	bls.n	ca4 <remove_chain+0x66>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1432 (discriminator 2)
     c4c:	69e3      	ldr	r3, [r4, #28]
     c4e:	42ab      	cmp	r3, r5
     c50:	d928      	bls.n	ca4 <remove_chain+0x66>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1435
	if (pclst != 0 && (!FF_FS_EXFAT || fs->fs_type != FS_EXFAT || obj->stat != 2)) {
     c52:	b12a      	cbz	r2, c60 <remove_chain+0x22>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1436
		res = put_fat(fs, pclst, 0xFFFFFFFF);
     c54:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
     c58:	4620      	mov	r0, r4
     c5a:	f7ff fe65 	bl	928 <put_fat>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1437
		if (res != FR_OK) return res;
     c5e:	b930      	cbnz	r0, c6e <remove_chain+0x30>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1442
		nxt = get_fat(obj, clst);			/* Get cluster status */
     c60:	4629      	mov	r1, r5
     c62:	6838      	ldr	r0, [r7, #0]
     c64:	f7ff fedc 	bl	a20 <get_fat.isra.10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1443
		if (nxt == 0) break;				/* Empty cluster? */
     c68:	4606      	mov	r6, r0
     c6a:	b908      	cbnz	r0, c70 <remove_chain+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1501
	return FR_OK;
     c6c:	2000      	movs	r0, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1502
}
     c6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1444
		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
     c70:	2801      	cmp	r0, #1
     c72:	d017      	beq.n	ca4 <remove_chain+0x66>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1445
		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
     c74:	1c43      	adds	r3, r0, #1
     c76:	d017      	beq.n	ca8 <remove_chain+0x6a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1447
			res = put_fat(fs, clst, 0);		/* Mark the cluster 'free' on the FAT */
     c78:	2200      	movs	r2, #0
     c7a:	4629      	mov	r1, r5
     c7c:	4620      	mov	r0, r4
     c7e:	f7ff fe53 	bl	928 <put_fat>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1448
			if (res != FR_OK) return res;
     c82:	2800      	cmp	r0, #0
     c84:	d1f3      	bne.n	c6e <remove_chain+0x30>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1450
		if (fs->free_clst < fs->n_fatent - 2) {	/* Update FSINFO */
     c86:	e9d4 3206 	ldrd	r3, r2, [r4, #24]
     c8a:	1e91      	subs	r1, r2, #2
     c8c:	428b      	cmp	r3, r1
     c8e:	d205      	bcs.n	c9c <remove_chain+0x5e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1451
			fs->free_clst++;
     c90:	3301      	adds	r3, #1
     c92:	61a3      	str	r3, [r4, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1452
			fs->fsi_flag |= 1;
     c94:	7923      	ldrb	r3, [r4, #4]
     c96:	f043 0301 	orr.w	r3, r3, #1
     c9a:	7123      	strb	r3, [r4, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1473
	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
     c9c:	42b2      	cmp	r2, r6
     c9e:	4635      	mov	r5, r6
     ca0:	d8de      	bhi.n	c60 <remove_chain+0x22>
     ca2:	e7e3      	b.n	c6c <remove_chain+0x2e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1432
	if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Check if in valid range */
     ca4:	2002      	movs	r0, #2
     ca6:	e7e2      	b.n	c6e <remove_chain+0x30>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1445
		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
     ca8:	2001      	movs	r0, #1
     caa:	e7e0      	b.n	c6e <remove_chain+0x30>

00000cac <unlock_fs>:
unlock_fs():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:920
	if (fs && res != FR_NOT_ENABLED && res != FR_INVALID_DRIVE && res != FR_TIMEOUT) {
     cac:	b140      	cbz	r0, cc0 <unlock_fs+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:920 (discriminator 2)
     cae:	f1a1 030b 	sub.w	r3, r1, #11
     cb2:	2b01      	cmp	r3, #1
     cb4:	d904      	bls.n	cc0 <unlock_fs+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:920
     cb6:	290f      	cmp	r1, #15
     cb8:	d002      	beq.n	cc0 <unlock_fs+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:921
		ff_rel_grant(fs->sobj);
     cba:	6900      	ldr	r0, [r0, #16]
     cbc:	f000 be9e 	b.w	19fc <ff_rel_grant>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:923
}
     cc0:	4770      	bx	lr

00000cc2 <validate>:
validate():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3457

static FRESULT validate (	/* Returns FR_OK or FR_INVALID_OBJECT */
	FFOBJID* obj,			/* Pointer to the FFOBJID, the 1st member in the FIL/DIR object, to check validity */
	FATFS** rfs				/* Pointer to pointer to the owner filesystem object to return */
)
{
     cc2:	b538      	push	{r3, r4, r5, lr}
     cc4:	460d      	mov	r5, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3461
	FRESULT res = FR_INVALID_OBJECT;


	if (obj && obj->fs && obj->fs->fs_type && obj->id == obj->fs->id) {	/* Test if the object is valid */
     cc6:	4604      	mov	r4, r0
     cc8:	b1f0      	cbz	r0, d08 <validate+0x46>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3461 (discriminator 1)
     cca:	6803      	ldr	r3, [r0, #0]
     ccc:	b1db      	cbz	r3, d06 <validate+0x44>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3461 (discriminator 2)
     cce:	781a      	ldrb	r2, [r3, #0]
     cd0:	b1b2      	cbz	r2, d00 <validate+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3461 (discriminator 3)
     cd2:	8881      	ldrh	r1, [r0, #4]
     cd4:	88da      	ldrh	r2, [r3, #6]
     cd6:	4291      	cmp	r1, r2
     cd8:	d112      	bne.n	d00 <validate+0x3e>
lock_fs():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:911
	return ff_req_grant(fs->sobj);
     cda:	6918      	ldr	r0, [r3, #16]
     cdc:	f000 fe85 	bl	19ea <ff_req_grant>
validate():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3463
#if FF_FS_REENTRANT
		if (lock_fs(obj->fs)) {	/* Obtain the filesystem object */
     ce0:	4603      	mov	r3, r0
     ce2:	b198      	cbz	r0, d0c <validate+0x4a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3464
			if (!(disk_status(obj->fs->pdrv) & STA_NOINIT)) { /* Test if the phsical drive is kept initialized */
     ce4:	6823      	ldr	r3, [r4, #0]
     ce6:	7858      	ldrb	r0, [r3, #1]
     ce8:	f000 ff16 	bl	1b18 <disk_status>
     cec:	f010 0001 	ands.w	r0, r0, #1
     cf0:	d102      	bne.n	cf8 <validate+0x36>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3478
		if (!(disk_status(obj->fs->pdrv) & STA_NOINIT)) { /* Test if the phsical drive is kept initialized */
			res = FR_OK;
		}
#endif
	}
	*rfs = (res == FR_OK) ? obj->fs : 0;	/* Corresponding filesystem object */
     cf2:	6824      	ldr	r4, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3478 (discriminator 4)
     cf4:	602c      	str	r4, [r5, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3480 (discriminator 4)
	return res;
}
     cf6:	bd38      	pop	{r3, r4, r5, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3467
				unlock_fs(obj->fs, FR_OK);
     cf8:	2100      	movs	r1, #0
     cfa:	6820      	ldr	r0, [r4, #0]
     cfc:	f7ff ffd6 	bl	cac <unlock_fs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3458
	FRESULT res = FR_INVALID_OBJECT;
     d00:	2009      	movs	r0, #9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3478
	*rfs = (res == FR_OK) ? obj->fs : 0;	/* Corresponding filesystem object */
     d02:	2400      	movs	r4, #0
     d04:	e7f6      	b.n	cf4 <validate+0x32>
     d06:	461c      	mov	r4, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3458
	FRESULT res = FR_INVALID_OBJECT;
     d08:	2009      	movs	r0, #9
     d0a:	e7f3      	b.n	cf4 <validate+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3470
			res = FR_TIMEOUT;
     d0c:	200f      	movs	r0, #15
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3478
	*rfs = (res == FR_OK) ? obj->fs : 0;	/* Corresponding filesystem object */
     d0e:	461c      	mov	r4, r3
     d10:	e7f0      	b.n	cf4 <validate+0x32>

00000d12 <dir_clear>:
dir_clear():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1648
{
     d12:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
sync_window():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1049
	if (fs->wflag) {	/* Is the disk access window dirty */
     d14:	78c3      	ldrb	r3, [r0, #3]
dir_clear():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1648
{
     d16:	4604      	mov	r4, r0
     d18:	460d      	mov	r5, r1
sync_window():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1049
	if (fs->wflag) {	/* Is the disk access window dirty */
     d1a:	b9c3      	cbnz	r3, d4e <dir_clear+0x3c>
dir_clear():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1655
	sect = clst2sect(fs, clst);		/* Top of the cluster */
     d1c:	4629      	mov	r1, r5
     d1e:	4620      	mov	r0, r4
     d20:	f7ff fbd4 	bl	4cc <clst2sect>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1657
	mem_set(fs->win, 0, sizeof fs->win);	/* Clear window buffer */
     d24:	f104 0638 	add.w	r6, r4, #56	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1655
	sect = clst2sect(fs, clst);		/* Top of the cluster */
     d28:	4607      	mov	r7, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1656
	fs->winsect = sect;				/* Set window to top of the cluster */
     d2a:	6360      	str	r0, [r4, #52]	; 0x34
mem_set():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:670
	BYTE *d = (BYTE*)dst;
     d2c:	f504 720e 	add.w	r2, r4, #568	; 0x238
     d30:	4633      	mov	r3, r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:673
		*d++ = (BYTE)val;
     d32:	2100      	movs	r1, #0
     d34:	f803 1b01 	strb.w	r1, [r3], #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:674
	} while (--cnt);
     d38:	4293      	cmp	r3, r2
     d3a:	d1fb      	bne.n	d34 <dir_clear+0x22>
dir_clear():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1670
		for (n = 0; n < fs->csize && disk_write(fs->pdrv, ibuf, sect + n, szb) == RES_OK; n += szb) ;	/* Fill the cluster with 0 */
     d3c:	2500      	movs	r5, #0
     d3e:	8963      	ldrh	r3, [r4, #10]
     d40:	429d      	cmp	r5, r3
     d42:	d30a      	bcc.n	d5a <dir_clear+0x48>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1672
	return (n == fs->csize) ? FR_OK : FR_DISK_ERR;
     d44:	8960      	ldrh	r0, [r4, #10]
     d46:	1b40      	subs	r0, r0, r5
     d48:	bf18      	it	ne
     d4a:	2001      	movne	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1673
}
     d4c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
sync_window():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1673
     d4e:	f7ff fc0f 	bl	570 <sync_window.part.6>
dir_clear():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1654
	if (sync_window(fs) != FR_OK) return FR_DISK_ERR;	/* Flush disk access window */
     d52:	2800      	cmp	r0, #0
     d54:	d0e2      	beq.n	d1c <dir_clear+0xa>
     d56:	2001      	movs	r0, #1
     d58:	e7f8      	b.n	d4c <dir_clear+0x3a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1670
		for (n = 0; n < fs->csize && disk_write(fs->pdrv, ibuf, sect + n, szb) == RES_OK; n += szb) ;	/* Fill the cluster with 0 */
     d5a:	2301      	movs	r3, #1
     d5c:	197a      	adds	r2, r7, r5
     d5e:	4631      	mov	r1, r6
     d60:	7860      	ldrb	r0, [r4, #1]
     d62:	f000 fef2 	bl	1b4a <disk_write>
     d66:	2800      	cmp	r0, #0
     d68:	d1ec      	bne.n	d44 <dir_clear+0x32>
     d6a:	3501      	adds	r5, #1
     d6c:	e7e7      	b.n	d3e <dir_clear+0x2c>

00000d6e <dir_next>:
dir_next():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1735
{
     d6e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1740
	ofs = dp->dptr + SZDIRE;	/* Next entry */
     d72:	6907      	ldr	r7, [r0, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1737
	FATFS *fs = dp->obj.fs;
     d74:	6805      	ldr	r5, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1740
	ofs = dp->dptr + SZDIRE;	/* Next entry */
     d76:	3720      	adds	r7, #32
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1741
	if (ofs >= (DWORD)((FF_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) dp->sect = 0;	/* Disable it if the offset reached the max value */
     d78:	f5b7 1f00 	cmp.w	r7, #2097152	; 0x200000
     d7c:	bf24      	itt	cs
     d7e:	2300      	movcs	r3, #0
     d80:	6183      	strcs	r3, [r0, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1742
	if (dp->sect == 0) return FR_NO_FILE;	/* Report EOT if it has been disabled */
     d82:	6983      	ldr	r3, [r0, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1735
{
     d84:	4604      	mov	r4, r0
     d86:	4689      	mov	r9, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1742
	if (dp->sect == 0) return FR_NO_FILE;	/* Report EOT if it has been disabled */
     d88:	b173      	cbz	r3, da8 <dir_next+0x3a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1744
	if (ofs % SS(fs) == 0) {	/* Sector changed? */
     d8a:	f3c7 0808 	ubfx	r8, r7, #0, #9
     d8e:	f1b8 0f00 	cmp.w	r8, #0
     d92:	d139      	bne.n	e08 <dir_next+0x9a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1747
		if (dp->clust == 0) {	/* Static table */
     d94:	6941      	ldr	r1, [r0, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1745
		dp->sect++;				/* Next sector */
     d96:	3301      	adds	r3, #1
     d98:	6183      	str	r3, [r0, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1747
		if (dp->clust == 0) {	/* Static table */
     d9a:	b939      	cbnz	r1, dac <dir_next+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1748
			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
     d9c:	892b      	ldrh	r3, [r5, #8]
     d9e:	ebb3 1f57 	cmp.w	r3, r7, lsr #5
     da2:	d831      	bhi.n	e08 <dir_next+0x9a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1749
				dp->sect = 0; return FR_NO_FILE;
     da4:	2300      	movs	r3, #0
     da6:	61a3      	str	r3, [r4, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1742
	if (dp->sect == 0) return FR_NO_FILE;	/* Report EOT if it has been disabled */
     da8:	2004      	movs	r0, #4
     daa:	e00b      	b.n	dc4 <dir_next+0x56>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1753
			if ((ofs / SS(fs) & (fs->csize - 1)) == 0) {	/* Cluster changed? */
     dac:	896b      	ldrh	r3, [r5, #10]
     dae:	3b01      	subs	r3, #1
     db0:	ea13 2357 	ands.w	r3, r3, r7, lsr #9
     db4:	d128      	bne.n	e08 <dir_next+0x9a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1754
				clst = get_fat(&dp->obj, dp->clust);		/* Get next cluster */
     db6:	4628      	mov	r0, r5
     db8:	f7ff fe32 	bl	a20 <get_fat.isra.10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1755
				if (clst <= 1) return FR_INT_ERR;			/* Internal error */
     dbc:	2801      	cmp	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1754
				clst = get_fat(&dp->obj, dp->clust);		/* Get next cluster */
     dbe:	4606      	mov	r6, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1755
				if (clst <= 1) return FR_INT_ERR;			/* Internal error */
     dc0:	d802      	bhi.n	dc8 <dir_next+0x5a>
     dc2:	2002      	movs	r0, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1782
}
     dc4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1756
				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
     dc8:	1c42      	adds	r2, r0, #1
     dca:	d101      	bne.n	dd0 <dir_next+0x62>
     dcc:	2001      	movs	r0, #1
     dce:	e7f9      	b.n	dc4 <dir_next+0x56>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1757
				if (clst >= fs->n_fatent) {					/* It reached end of dynamic table */
     dd0:	69eb      	ldr	r3, [r5, #28]
     dd2:	4283      	cmp	r3, r0
     dd4:	d812      	bhi.n	dfc <dir_next+0x8e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1759
					if (!stretch) {								/* If no stretch, report EOT */
     dd6:	f1b9 0f00 	cmp.w	r9, #0
     dda:	d0e3      	beq.n	da4 <dir_next+0x36>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1762
					clst = create_chain(&dp->obj, dp->clust);	/* Allocate a cluster */
     ddc:	6961      	ldr	r1, [r4, #20]
     dde:	4620      	mov	r0, r4
     de0:	f7ff feb9 	bl	b56 <create_chain>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1763
					if (clst == 0) return FR_DENIED;			/* No free cluster */
     de4:	4606      	mov	r6, r0
     de6:	b1a8      	cbz	r0, e14 <dir_next+0xa6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1764
					if (clst == 1) return FR_INT_ERR;			/* Internal error */
     de8:	2801      	cmp	r0, #1
     dea:	d0ea      	beq.n	dc2 <dir_next+0x54>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1765
					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
     dec:	1c43      	adds	r3, r0, #1
     dee:	d0ed      	beq.n	dcc <dir_next+0x5e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1766
					if (dir_clear(fs, clst) != FR_OK) return FR_DISK_ERR;	/* Clean up the stretched table */
     df0:	4601      	mov	r1, r0
     df2:	4628      	mov	r0, r5
     df4:	f7ff ff8d 	bl	d12 <dir_clear>
     df8:	2800      	cmp	r0, #0
     dfa:	d1e7      	bne.n	dcc <dir_next+0x5e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1773
				dp->clust = clst;		/* Initialize data for new cluster */
     dfc:	6166      	str	r6, [r4, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1774
				dp->sect = clst2sect(fs, clst);
     dfe:	4631      	mov	r1, r6
     e00:	4628      	mov	r0, r5
     e02:	f7ff fb63 	bl	4cc <clst2sect>
     e06:	61a0      	str	r0, [r4, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1779
	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
     e08:	3538      	adds	r5, #56	; 0x38
     e0a:	4445      	add	r5, r8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1778
	dp->dptr = ofs;						/* Current entry */
     e0c:	6127      	str	r7, [r4, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1779
	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
     e0e:	61e5      	str	r5, [r4, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1781
	return FR_OK;
     e10:	2000      	movs	r0, #0
     e12:	e7d7      	b.n	dc4 <dir_next+0x56>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1763
					if (clst == 0) return FR_DENIED;			/* No free cluster */
     e14:	2007      	movs	r0, #7
     e16:	e7d5      	b.n	dc4 <dir_next+0x56>

00000e18 <dir_find>:
dir_find():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2415
{
     e18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2423
	res = dir_sdi(dp, 0);			/* Rewind directory object */
     e1c:	2100      	movs	r1, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2415
{
     e1e:	b085      	sub	sp, #20
     e20:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2417
	FATFS *fs = dp->obj.fs;
     e22:	f8d0 8000 	ldr.w	r8, [r0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2423
	res = dir_sdi(dp, 0);			/* Rewind directory object */
     e26:	f7ff fe55 	bl	ad4 <dir_sdi>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2424
	if (res != FR_OK) return res;
     e2a:	4681      	mov	r9, r0
     e2c:	2800      	cmp	r0, #0
     e2e:	f040 808c 	bne.w	f4a <dir_find+0x132>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2447
	ord = sum = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
     e32:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
     e36:	f04f 0aff 	mov.w	sl, #255	; 0xff
     e3a:	62e3      	str	r3, [r4, #44]	; 0x2c
     e3c:	4657      	mov	r7, sl
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2457
			ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
     e3e:	9300      	str	r3, [sp, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2450
		res = move_window(fs, dp->sect);
     e40:	69a1      	ldr	r1, [r4, #24]
     e42:	4640      	mov	r0, r8
     e44:	f7ff fbb4 	bl	5b0 <move_window>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2451
		if (res != FR_OK) break;
     e48:	4681      	mov	r9, r0
     e4a:	2800      	cmp	r0, #0
     e4c:	d17d      	bne.n	f4a <dir_find+0x132>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2452
		c = dp->dir[DIR_Name];
     e4e:	69e5      	ldr	r5, [r4, #28]
     e50:	782e      	ldrb	r6, [r5, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2453
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
     e52:	2e00      	cmp	r6, #0
     e54:	d07d      	beq.n	f52 <dir_find+0x13a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2455
		dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;
     e56:	7aea      	ldrb	r2, [r5, #11]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2456
		if (c == DDEM || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
     e58:	2ee5      	cmp	r6, #229	; 0xe5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2455
		dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;
     e5a:	f002 033f 	and.w	r3, r2, #63	; 0x3f
     e5e:	71a3      	strb	r3, [r4, #6]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2456
		if (c == DDEM || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
     e60:	d003      	beq.n	e6a <dir_find+0x52>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2456 (discriminator 1)
     e62:	0710      	lsls	r0, r2, #28
     e64:	d504      	bpl.n	e70 <dir_find+0x58>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2456 (discriminator 2)
     e66:	2b0f      	cmp	r3, #15
     e68:	d004      	beq.n	e74 <dir_find+0x5c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2472
				ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
     e6a:	9b00      	ldr	r3, [sp, #0]
     e6c:	62e3      	str	r3, [r4, #44]	; 0x2c
     e6e:	e052      	b.n	f16 <dir_find+0xfe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2459
			if (a == AM_LFN) {			/* An LFN entry is found */
     e70:	2b0f      	cmp	r3, #15
     e72:	d157      	bne.n	f24 <dir_find+0x10c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2460
				if (!(dp->fn[NSFLAG] & NS_NOLFN)) {
     e74:	f894 302b 	ldrb.w	r3, [r4, #43]	; 0x2b
     e78:	0659      	lsls	r1, r3, #25
     e7a:	d442      	bmi.n	f02 <dir_find+0xea>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2461
					if (c & LLEF) {		/* Is it start of LFN sequence? */
     e7c:	0672      	lsls	r2, r6, #25
     e7e:	d548      	bpl.n	f12 <dir_find+0xfa>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2464
						dp->blk_ofs = dp->dptr;	/* Start offset of LFN */
     e80:	6923      	ldr	r3, [r4, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2462
						sum = dp->dir[LDIR_Chksum];
     e82:	f895 a00d 	ldrb.w	sl, [r5, #13]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2464
						dp->blk_ofs = dp->dptr;	/* Start offset of LFN */
     e86:	62e3      	str	r3, [r4, #44]	; 0x2c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2463
						c &= (BYTE)~LLEF; ord = c;	/* LFN start order */
     e88:	f006 06bf 	and.w	r6, r6, #191	; 0xbf
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2467 (discriminator 1)
					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0xFF;
     e8c:	7b6b      	ldrb	r3, [r5, #13]
     e8e:	4553      	cmp	r3, sl
     e90:	d141      	bne.n	f16 <dir_find+0xfe>
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585 (discriminator 3)
	rv = rv << 8 | ptr[0];
     e92:	7eea      	ldrb	r2, [r5, #27]
     e94:	7eab      	ldrb	r3, [r5, #26]
cmp_lfn():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1880 (discriminator 3)
	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO */
     e96:	ea53 2302 	orrs.w	r3, r3, r2, lsl #8
     e9a:	d13c      	bne.n	f16 <dir_find+0xfe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1882
	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
     e9c:	782f      	ldrb	r7, [r5, #0]
dir_find():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2467
					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0xFF;
     e9e:	f8d8 b00c 	ldr.w	fp, [r8, #12]
cmp_lfn():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1882
	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
     ea2:	f007 073f 	and.w	r7, r7, #63	; 0x3f
     ea6:	1e7b      	subs	r3, r7, #1
     ea8:	270d      	movs	r7, #13
     eaa:	435f      	muls	r7, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1884
	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
     eac:	4b2a      	ldr	r3, [pc, #168]	; (f58 <dir_find+0x140>)
     eae:	2101      	movs	r1, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1885
		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
     eb0:	f813 2b01 	ldrb.w	r2, [r3], #1
     eb4:	18a8      	adds	r0, r5, r2
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     eb6:	f815 9002 	ldrb.w	r9, [r5, r2]
     eba:	7840      	ldrb	r0, [r0, #1]
     ebc:	ea49 2900 	orr.w	r9, r9, r0, lsl #8
cmp_lfn():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1886
		if (wc != 0) {
     ec0:	b359      	cbz	r1, f1a <dir_find+0x102>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1887
			if (i >= FF_MAX_LFN || ff_wtoupper(uc) != ff_wtoupper(lfnbuf[i++])) {	/* Compare it */
     ec2:	2f7f      	cmp	r7, #127	; 0x7f
     ec4:	9303      	str	r3, [sp, #12]
     ec6:	d826      	bhi.n	f16 <dir_find+0xfe>
     ec8:	4648      	mov	r0, r9
     eca:	f000 fdd1 	bl	1a70 <ff_wtoupper>
     ece:	1c7a      	adds	r2, r7, #1
     ed0:	9002      	str	r0, [sp, #8]
     ed2:	f83b 0017 	ldrh.w	r0, [fp, r7, lsl #1]
     ed6:	9201      	str	r2, [sp, #4]
     ed8:	f000 fdca 	bl	1a70 <ff_wtoupper>
     edc:	9902      	ldr	r1, [sp, #8]
     ede:	4281      	cmp	r1, r0
     ee0:	d119      	bne.n	f16 <dir_find+0xfe>
     ee2:	9a01      	ldr	r2, [sp, #4]
     ee4:	9b03      	ldr	r3, [sp, #12]
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     ee6:	4649      	mov	r1, r9
cmp_lfn():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1887
			if (i >= FF_MAX_LFN || ff_wtoupper(uc) != ff_wtoupper(lfnbuf[i++])) {	/* Compare it */
     ee8:	4617      	mov	r7, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1884
	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
     eea:	4a1c      	ldr	r2, [pc, #112]	; (f5c <dir_find+0x144>)
     eec:	429a      	cmp	r2, r3
     eee:	d1df      	bne.n	eb0 <dir_find+0x98>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1896
	if ((dir[LDIR_Ord] & LLEF) && wc && lfnbuf[i]) return 0;	/* Last segment matched but different length */
     ef0:	782b      	ldrb	r3, [r5, #0]
     ef2:	065b      	lsls	r3, r3, #25
     ef4:	d503      	bpl.n	efe <dir_find+0xe6>
     ef6:	b111      	cbz	r1, efe <dir_find+0xe6>
     ef8:	f83b 3017 	ldrh.w	r3, [fp, r7, lsl #1]
     efc:	b95b      	cbnz	r3, f16 <dir_find+0xfe>
dir_find():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2467 (discriminator 5)
					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0xFF;
     efe:	3e01      	subs	r6, #1
     f00:	b2f7      	uxtb	r7, r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2479
		res = dir_next(dp, 0);	/* Next entry */
     f02:	2100      	movs	r1, #0
     f04:	4620      	mov	r0, r4
     f06:	f7ff ff32 	bl	d6e <dir_next>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2480
	} while (res == FR_OK);
     f0a:	4681      	mov	r9, r0
     f0c:	2800      	cmp	r0, #0
     f0e:	d097      	beq.n	e40 <dir_find+0x28>
     f10:	e01b      	b.n	f4a <dir_find+0x132>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2467
					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0xFF;
     f12:	42b7      	cmp	r7, r6
     f14:	d0ba      	beq.n	e8c <dir_find+0x74>
     f16:	27ff      	movs	r7, #255	; 0xff
     f18:	e7f3      	b.n	f02 <dir_find+0xea>
cmp_lfn():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1892
			if (uc != 0xFFFF) return 0;		/* Check filler */
     f1a:	f64f 72ff 	movw	r2, #65535	; 0xffff
     f1e:	4591      	cmp	r9, r2
     f20:	d0e3      	beq.n	eea <dir_find+0xd2>
     f22:	e7f8      	b.n	f16 <dir_find+0xfe>
dir_find():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2470
				if (ord == 0 && sum == sum_sfn(dp->dir)) break;	/* LFN matched? */
     f24:	b927      	cbnz	r7, f30 <dir_find+0x118>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2470 (discriminator 1)
     f26:	4628      	mov	r0, r5
     f28:	f7ff fadb 	bl	4e2 <sum_sfn>
     f2c:	4550      	cmp	r0, sl
     f2e:	d00c      	beq.n	f4a <dir_find+0x132>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2471
				if (!(dp->fn[NSFLAG] & NS_LOSS) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* SFN matched? */
     f30:	f894 902b 	ldrb.w	r9, [r4, #43]	; 0x2b
     f34:	f019 0901 	ands.w	r9, r9, #1
     f38:	d197      	bne.n	e6a <dir_find+0x52>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2471 (discriminator 1)
     f3a:	220b      	movs	r2, #11
     f3c:	f104 0120 	add.w	r1, r4, #32
     f40:	4628      	mov	r0, r5
     f42:	f7ff fab5 	bl	4b0 <mem_cmp>
     f46:	2800      	cmp	r0, #0
     f48:	d18f      	bne.n	e6a <dir_find+0x52>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2483
}
     f4a:	4648      	mov	r0, r9
     f4c:	b005      	add	sp, #20
     f4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2453
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
     f52:	f04f 0904 	mov.w	r9, #4
     f56:	e7f8      	b.n	f4a <dir_find+0x132>
     f58:	0000c640 	.word	0x0000c640
     f5c:	0000c64d 	.word	0x0000c64d

00000f60 <follow_path>:
follow_path():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3028
{
     f60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
     f64:	b085      	sub	sp, #20
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3031
	FATFS *fs = dp->obj.fs;
     f66:	6803      	ldr	r3, [r0, #0]
     f68:	9301      	str	r3, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3028
{
     f6a:	4606      	mov	r6, r0
     f6c:	468a      	mov	sl, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3040 (discriminator 1)
		while (*path == '/' || *path == '\\') path++;	/* Strip heading separator */
     f6e:	f811 3b01 	ldrb.w	r3, [r1], #1
     f72:	2b2f      	cmp	r3, #47	; 0x2f
     f74:	d0fa      	beq.n	f6c <follow_path+0xc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3040 (discriminator 3)
     f76:	2b5c      	cmp	r3, #92	; 0x5c
     f78:	d0f8      	beq.n	f6c <follow_path+0xc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3041
		dp->obj.sclust = 0;					/* Start from root directory */
     f7a:	2100      	movs	r1, #0
     f7c:	60b1      	str	r1, [r6, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3060
	if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
     f7e:	f89a 3000 	ldrb.w	r3, [sl]
     f82:	2b1f      	cmp	r3, #31
     f84:	f200 80cd 	bhi.w	1122 <follow_path+0x1c2>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3061
		dp->fn[NSFLAG] = NS_NONAME;
     f88:	2380      	movs	r3, #128	; 0x80
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3062
		res = dir_sdi(dp, 0);
     f8a:	4630      	mov	r0, r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3061
		dp->fn[NSFLAG] = NS_NONAME;
     f8c:	f886 302b 	strb.w	r3, [r6, #43]	; 0x2b
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3102
}
     f90:	b005      	add	sp, #20
     f92:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3062
		res = dir_sdi(dp, 0);
     f96:	f7ff bd9d 	b.w	ad4 <dir_sdi>
create_name():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2848
		if (wc < 0x80 && chk_chr("\"*:<>\?|\x7F", wc)) return FR_INVALID_NAME;	/* Reject illegal characters for LFN */
     f9a:	287f      	cmp	r0, #127	; 0x7f
     f9c:	d807      	bhi.n	fae <follow_path+0x4e>
     f9e:	4a92      	ldr	r2, [pc, #584]	; (11e8 <follow_path+0x288>)
chk_chr():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:695
	while (*str && *str != chr) str++;
     fa0:	f812 3b01 	ldrb.w	r3, [r2], #1
     fa4:	b11b      	cbz	r3, fae <follow_path+0x4e>
     fa6:	4298      	cmp	r0, r3
     fa8:	d1fa      	bne.n	fa0 <follow_path+0x40>
create_name():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2892
				cf |= NS_LOSS | NS_LFN;
     faa:	2006      	movs	r0, #6
     fac:	e04e      	b.n	104c <follow_path+0xec>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2849
		if (di >= FF_MAX_LFN) return FR_INVALID_NAME;	/* Reject too long name */
     fae:	2d80      	cmp	r5, #128	; 0x80
     fb0:	d0fb      	beq.n	faa <follow_path+0x4a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2850
		lfn[di++] = wc;					/* Store the Unicode character */
     fb2:	f82b 0015 	strh.w	r0, [fp, r5, lsl #1]
     fb6:	3501      	adds	r5, #1
     fb8:	e0b7      	b.n	112a <follow_path+0x1ca>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2868
		wc = lfn[di - 1];
     fba:	f833 2d02 	ldrh.w	r2, [r3, #-2]!
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2869
		if (wc != ' ' && wc != '.') break;
     fbe:	2a20      	cmp	r2, #32
     fc0:	d002      	beq.n	fc8 <follow_path+0x68>
     fc2:	2a2e      	cmp	r2, #46	; 0x2e
     fc4:	f040 80d4 	bne.w	1170 <follow_path+0x210>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2870
		di--;
     fc8:	3d01      	subs	r5, #1
     fca:	e0ce      	b.n	116a <follow_path+0x20a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2876
	for (si = 0; lfn[si] == ' '; si++) ;	/* Remove leading spaces */
     fcc:	4602      	mov	r2, r0
     fce:	e0d7      	b.n	1180 <follow_path+0x220>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2890
		if (i >= ni || si == di) {		/* End of field? */
     fd0:	45c8      	cmp	r8, r9
     fd2:	d205      	bcs.n	fe0 <follow_path+0x80>
     fd4:	42ab      	cmp	r3, r5
     fd6:	d149      	bne.n	106c <follow_path+0x10c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2891
			if (ni == 11) {				/* Name extension overflow? */
     fd8:	f1b9 0f0b 	cmp.w	r9, #11
     fdc:	d13e      	bne.n	105c <follow_path+0xfc>
     fde:	e002      	b.n	fe6 <follow_path+0x86>
     fe0:	f1b9 0f0b 	cmp.w	r9, #11
     fe4:	d135      	bne.n	1052 <follow_path+0xf2>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2892
				cf |= NS_LOSS | NS_LFN;
     fe6:	f044 0403 	orr.w	r4, r4, #3
     fea:	f04f 090b 	mov.w	r9, #11
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2939
	if (dp->fn[0] == DDEM) dp->fn[0] = RDDEM;	/* If the first character collides with DDEM, replace it with RDDEM */
     fee:	f896 3020 	ldrb.w	r3, [r6, #32]
     ff2:	2be5      	cmp	r3, #229	; 0xe5
     ff4:	bf04      	itt	eq
     ff6:	2305      	moveq	r3, #5
     ff8:	f886 3020 	strbeq.w	r3, [r6, #32]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2941
	if (ni == 8) b <<= 2;				/* Shift capital flags if no extension */
     ffc:	f1b9 0f08 	cmp.w	r9, #8
    1000:	bf04      	itt	eq
    1002:	00bf      	lsleq	r7, r7, #2
    1004:	b2ff      	uxtbeq	r7, r7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2942
	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03) cf |= NS_LFN;	/* LFN entry needs to be created if composite capitals */
    1006:	f007 030c 	and.w	r3, r7, #12
    100a:	2b0c      	cmp	r3, #12
    100c:	d003      	beq.n	1016 <follow_path+0xb6>
    100e:	f007 0303 	and.w	r3, r7, #3
    1012:	2b03      	cmp	r3, #3
    1014:	d101      	bne.n	101a <follow_path+0xba>
    1016:	f044 0402 	orr.w	r4, r4, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2943
	if (!(cf & NS_LFN)) {				/* When LFN is in 8.3 format without extended character, NT flags are created */
    101a:	07a5      	lsls	r5, r4, #30
    101c:	d407      	bmi.n	102e <follow_path+0xce>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2944
		if (b & 0x01) cf |= NS_EXT;		/* NT flag (Extension has small capital letters only) */
    101e:	07f8      	lsls	r0, r7, #31
    1020:	bf48      	it	mi
    1022:	f044 0410 	orrmi.w	r4, r4, #16
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2945
		if (b & 0x04) cf |= NS_BODY;	/* NT flag (Body has small capital letters only) */
    1026:	0779      	lsls	r1, r7, #29
    1028:	bf48      	it	mi
    102a:	f044 0408 	orrmi.w	r4, r4, #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2948
	dp->fn[NSFLAG] = cf;	/* SFN is created into dp->fn[] */
    102e:	f886 402b 	strb.w	r4, [r6, #43]	; 0x2b
follow_path():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3068
			res = dir_find(dp);				/* Find an object with the segment name */
    1032:	4630      	mov	r0, r6
    1034:	f7ff fef0 	bl	e18 <dir_find>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3069
			ns = dp->fn[NSFLAG];
    1038:	f896 302b 	ldrb.w	r3, [r6, #43]	; 0x2b
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3070
			if (res != FR_OK) {				/* Failed to find the object */
    103c:	2800      	cmp	r0, #0
    103e:	d05f      	beq.n	1100 <follow_path+0x1a0>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3071
				if (res == FR_NO_FILE) {	/* Object is not found */
    1040:	2804      	cmp	r0, #4
    1042:	d103      	bne.n	104c <follow_path+0xec>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3077
						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
    1044:	f013 0f04 	tst.w	r3, #4
    1048:	bf08      	it	eq
    104a:	2005      	moveq	r0, #5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3102
}
    104c:	b005      	add	sp, #20
    104e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
create_name():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2895
			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Name body overflow? */
    1052:	42ab      	cmp	r3, r5
    1054:	d002      	beq.n	105c <follow_path+0xfc>
    1056:	f044 0403 	orr.w	r4, r4, #3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2896
			if (si > di) break;						/* No name extension? */
    105a:	d8c8      	bhi.n	fee <follow_path+0x8e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2897
			si = di; i = 8; ni = 11; b <<= 2;		/* Enter name extension */
    105c:	00bf      	lsls	r7, r7, #2
    105e:	b2ff      	uxtb	r7, r7
    1060:	462b      	mov	r3, r5
    1062:	f04f 090b 	mov.w	r9, #11
    1066:	f04f 0808 	mov.w	r8, #8
    106a:	e0b9      	b.n	11e0 <follow_path+0x280>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2901
		if (wc >= 0x80) {	/* Is this a non-ASCII character? */
    106c:	287f      	cmp	r0, #127	; 0x7f
    106e:	d912      	bls.n	1096 <follow_path+0x136>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2902
			cf |= NS_LFN;	/* LFN entry needs to be created */
    1070:	f044 0202 	orr.w	r2, r4, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2911
			wc = ff_uni2oem(wc, CODEPAGE);			/* Unicode ==> ANSI/OEM code */
    1074:	f240 11b5 	movw	r1, #437	; 0x1b5
    1078:	9303      	str	r3, [sp, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2902
			cf |= NS_LFN;	/* LFN entry needs to be created */
    107a:	9202      	str	r2, [sp, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2911
			wc = ff_uni2oem(wc, CODEPAGE);			/* Unicode ==> ANSI/OEM code */
    107c:	f000 fcc4 	bl	1a08 <ff_uni2oem>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2912
			if (wc & 0x80) wc = ExCvt[wc & 0x7F];	/* Convert extended character to upper (SBCS) */
    1080:	f010 0f80 	tst.w	r0, #128	; 0x80
    1084:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    1088:	d00f      	beq.n	10aa <follow_path+0x14a>
    108a:	f000 007f 	and.w	r0, r0, #127	; 0x7f
    108e:	4957      	ldr	r1, [pc, #348]	; (11ec <follow_path+0x28c>)
    1090:	5c08      	ldrb	r0, [r1, r0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2925
			if (wc == 0 || chk_chr("+,;=[]", wc)) {	/* Replace illegal characters for SFN if needed */
    1092:	4614      	mov	r4, r2
    1094:	b128      	cbz	r0, 10a2 <follow_path+0x142>
chk_chr():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:695
	while (*str && *str != chr) str++;
    1096:	4956      	ldr	r1, [pc, #344]	; (11f0 <follow_path+0x290>)
    1098:	f811 2b01 	ldrb.w	r2, [r1], #1
    109c:	b1f2      	cbz	r2, 10dc <follow_path+0x17c>
    109e:	4282      	cmp	r2, r0
    10a0:	d1fa      	bne.n	1098 <follow_path+0x138>
create_name():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2926
				wc = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
    10a2:	f044 0403 	orr.w	r4, r4, #3
    10a6:	205f      	movs	r0, #95	; 0x5f
    10a8:	e011      	b.n	10ce <follow_path+0x16e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2918
		if (wc >= 0x100) {				/* Is this a DBC? */
    10aa:	28ff      	cmp	r0, #255	; 0xff
    10ac:	d9f1      	bls.n	1092 <follow_path+0x132>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2919
			if (i >= ni - 1) {			/* Field overflow? */
    10ae:	f109 31ff 	add.w	r1, r9, #4294967295	; 0xffffffff
    10b2:	4588      	cmp	r8, r1
    10b4:	d303      	bcc.n	10be <follow_path+0x15e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2920
				cf |= NS_LOSS | NS_LFN;
    10b6:	f044 0403 	orr.w	r4, r4, #3
    10ba:	46c8      	mov	r8, r9
    10bc:	e090      	b.n	11e0 <follow_path+0x280>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2923
			dp->fn[i++] = (BYTE)(wc >> 8);	/* Put 1st byte */
    10be:	eb06 0108 	add.w	r1, r6, r8
    10c2:	0a04      	lsrs	r4, r0, #8
    10c4:	f881 4020 	strb.w	r4, [r1, #32]
    10c8:	f108 0801 	add.w	r8, r8, #1
    10cc:	4614      	mov	r4, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2936
		dp->fn[i++] = (BYTE)wc;
    10ce:	eb06 0208 	add.w	r2, r6, r8
    10d2:	f108 0801 	add.w	r8, r8, #1
    10d6:	f882 0020 	strb.w	r0, [r2, #32]
    10da:	e081      	b.n	11e0 <follow_path+0x280>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2928
				if (IsUpper(wc)) {		/* ASCII upper case? */
    10dc:	f1a0 0241 	sub.w	r2, r0, #65	; 0x41
    10e0:	b292      	uxth	r2, r2
    10e2:	2a19      	cmp	r2, #25
    10e4:	d802      	bhi.n	10ec <follow_path+0x18c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2929
					b |= 2;
    10e6:	f047 0702 	orr.w	r7, r7, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2931
				if (IsLower(wc)) {		/* ASCII lower case? */
    10ea:	e7f0      	b.n	10ce <follow_path+0x16e>
    10ec:	f1a0 0261 	sub.w	r2, r0, #97	; 0x61
    10f0:	b292      	uxth	r2, r2
    10f2:	2a19      	cmp	r2, #25
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2932
					b |= 1; wc -= 0x20;
    10f4:	bf9e      	ittt	ls
    10f6:	3820      	subls	r0, #32
    10f8:	f047 0701 	orrls.w	r7, r7, #1
    10fc:	b280      	uxthls	r0, r0
    10fe:	e7e6      	b.n	10ce <follow_path+0x16e>
follow_path():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3082
			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
    1100:	075a      	lsls	r2, r3, #29
    1102:	d4a3      	bmi.n	104c <follow_path+0xec>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3084
			if (!(dp->obj.attr & AM_DIR)) {		/* It is not a sub-directory and cannot follow */
    1104:	79b3      	ldrb	r3, [r6, #6]
    1106:	06db      	lsls	r3, r3, #27
    1108:	d56c      	bpl.n	11e4 <follow_path+0x284>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3096
				dp->obj.sclust = ld_clust(fs, fs->win + dp->dptr % SS(fs));	/* Open next directory */
    110a:	9b01      	ldr	r3, [sp, #4]
    110c:	f103 0138 	add.w	r1, r3, #56	; 0x38
    1110:	6933      	ldr	r3, [r6, #16]
    1112:	f3c3 0308 	ubfx	r3, r3, #0, #9
    1116:	4419      	add	r1, r3
    1118:	9b01      	ldr	r3, [sp, #4]
    111a:	7818      	ldrb	r0, [r3, #0]
    111c:	f7ff fa0e 	bl	53c <ld_clust.isra.3>
    1120:	60b0      	str	r0, [r6, #8]
create_name():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2841
	p = *path; lfn = dp->obj.fs->lfnbuf; di = 0;
    1122:	6833      	ldr	r3, [r6, #0]
    1124:	f8d3 b00c 	ldr.w	fp, [r3, #12]
    1128:	2500      	movs	r5, #0
tchar2uni():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:799
	wc = (BYTE)*p++;			/* Get a byte */
    112a:	f81a 0b01 	ldrb.w	r0, [sl], #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:805
	if (wc != 0) {
    112e:	b168      	cbz	r0, 114c <follow_path+0x1ec>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:806
		wc = ff_oem2uni(wc, CODEPAGE);	/* ANSI/OEM ==> Unicode */
    1130:	f240 11b5 	movw	r1, #437	; 0x1b5
    1134:	f000 fc88 	bl	1a48 <ff_oem2uni>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:807
		if (wc == 0) return 0xFFFFFFFF;	/* Invalid code? */
    1138:	2800      	cmp	r0, #0
    113a:	f43f af36 	beq.w	faa <follow_path+0x4a>
create_name():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2847
		if (wc < ' ' || wc == '/' || wc == '\\') break;	/* Break if end of the path or a separator is found */
    113e:	281f      	cmp	r0, #31
    1140:	d904      	bls.n	114c <follow_path+0x1ec>
    1142:	282f      	cmp	r0, #47	; 0x2f
    1144:	d002      	beq.n	114c <follow_path+0x1ec>
    1146:	285c      	cmp	r0, #92	; 0x5c
    1148:	f47f af27 	bne.w	f9a <follow_path+0x3a>
    114c:	4652      	mov	r2, sl
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2852
	while (*p == '/' || *p == '\\') p++;	/* Skip duplicated separators if exist */
    114e:	7813      	ldrb	r3, [r2, #0]
    1150:	2b2f      	cmp	r3, #47	; 0x2f
    1152:	4692      	mov	sl, r2
    1154:	f102 0201 	add.w	r2, r2, #1
    1158:	d0f9      	beq.n	114e <follow_path+0x1ee>
    115a:	2b5c      	cmp	r3, #92	; 0x5c
    115c:	d0f7      	beq.n	114e <follow_path+0x1ee>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2854
	cf = (wc < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
    115e:	2820      	cmp	r0, #32
    1160:	bf34      	ite	cc
    1162:	2404      	movcc	r4, #4
    1164:	2400      	movcs	r4, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2867
	while (di) {						/* Snip off trailing spaces and dots if exist */
    1166:	eb0b 0345 	add.w	r3, fp, r5, lsl #1
    116a:	2d00      	cmp	r5, #0
    116c:	f47f af25 	bne.w	fba <follow_path+0x5a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2872
	lfn[di] = 0;							/* LFN is created into the working buffer */
    1170:	2200      	movs	r2, #0
    1172:	eb0b 0345 	add.w	r3, fp, r5, lsl #1
    1176:	f82b 2015 	strh.w	r2, [fp, r5, lsl #1]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2873
	if (di == 0) return FR_INVALID_NAME;	/* Reject null name */
    117a:	2d00      	cmp	r5, #0
    117c:	f43f af15 	beq.w	faa <follow_path+0x4a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2876
	for (si = 0; lfn[si] == ' '; si++) ;	/* Remove leading spaces */
    1180:	f83b 1012 	ldrh.w	r1, [fp, r2, lsl #1]
    1184:	2920      	cmp	r1, #32
    1186:	f102 0001 	add.w	r0, r2, #1
    118a:	f43f af1f 	beq.w	fcc <follow_path+0x6c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2877
	if (si > 0 || lfn[si] == '.') cf |= NS_LOSS | NS_LFN;	/* Is there any leading space or dot? */
    118e:	b90a      	cbnz	r2, 1194 <follow_path+0x234>
    1190:	292e      	cmp	r1, #46	; 0x2e
    1192:	d101      	bne.n	1198 <follow_path+0x238>
    1194:	f044 0403 	orr.w	r4, r4, #3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2878
	while (di > 0 && lfn[di - 1] != '.') di--;	/* Find last dot (di<=si: no extension) */
    1198:	f833 1d02 	ldrh.w	r1, [r3, #-2]!
    119c:	292e      	cmp	r1, #46	; 0x2e
    119e:	d001      	beq.n	11a4 <follow_path+0x244>
    11a0:	3d01      	subs	r5, #1
    11a2:	d1f9      	bne.n	1198 <follow_path+0x238>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2880
	mem_set(dp->fn, ' ', 11);
    11a4:	f106 0320 	add.w	r3, r6, #32
mem_set():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:670
	BYTE *d = (BYTE*)dst;
    11a8:	f106 012b 	add.w	r1, r6, #43	; 0x2b
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:673
		*d++ = (BYTE)val;
    11ac:	2020      	movs	r0, #32
    11ae:	f803 0b01 	strb.w	r0, [r3], #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:674
	} while (--cnt);
    11b2:	4299      	cmp	r1, r3
    11b4:	d1fb      	bne.n	11ae <follow_path+0x24e>
create_name():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2881
	i = b = 0; ni = 8;
    11b6:	f04f 0800 	mov.w	r8, #0
    11ba:	f04f 0908 	mov.w	r9, #8
    11be:	4647      	mov	r7, r8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2883
		wc = lfn[si++];					/* Get an LFN character */
    11c0:	f83b 0012 	ldrh.w	r0, [fp, r2, lsl #1]
    11c4:	1c53      	adds	r3, r2, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2884
		if (wc == 0) break;				/* Break on end of the LFN */
    11c6:	2800      	cmp	r0, #0
    11c8:	f43f af11 	beq.w	fee <follow_path+0x8e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2885
		if (wc == ' ' || (wc == '.' && si != di)) {	/* Remove embedded spaces and dots */
    11cc:	2820      	cmp	r0, #32
    11ce:	d005      	beq.n	11dc <follow_path+0x27c>
    11d0:	282e      	cmp	r0, #46	; 0x2e
    11d2:	f47f aefd 	bne.w	fd0 <follow_path+0x70>
    11d6:	42ab      	cmp	r3, r5
    11d8:	f43f aefe 	beq.w	fd8 <follow_path+0x78>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2886
			cf |= NS_LOSS | NS_LFN;
    11dc:	f044 0403 	orr.w	r4, r4, #3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2936
		dp->fn[i++] = (BYTE)wc;
    11e0:	461a      	mov	r2, r3
    11e2:	e7ed      	b.n	11c0 <follow_path+0x260>
follow_path():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3077
						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
    11e4:	2005      	movs	r0, #5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3101
	return res;
    11e6:	e731      	b.n	104c <follow_path+0xec>
    11e8:	0000c657 	.word	0x0000c657
    11ec:	0000c5c0 	.word	0x0000c5c0
    11f0:	0000c660 	.word	0x0000c660

000011f4 <sync_fs>:
sync_fs():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1098
{
    11f4:	b570      	push	{r4, r5, r6, lr}
sync_window():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1049
	if (fs->wflag) {	/* Is the disk access window dirty */
    11f6:	78c3      	ldrb	r3, [r0, #3]
sync_fs():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1098
{
    11f8:	4604      	mov	r4, r0
sync_window():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1049
	if (fs->wflag) {	/* Is the disk access window dirty */
    11fa:	2b00      	cmp	r3, #0
    11fc:	d145      	bne.n	128a <sync_fs+0x96>
sync_fs():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1104
		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {	/* FAT32: Update FSInfo sector if needed */
    11fe:	7823      	ldrb	r3, [r4, #0]
    1200:	2b03      	cmp	r3, #3
    1202:	d139      	bne.n	1278 <sync_fs+0x84>
    1204:	7923      	ldrb	r3, [r4, #4]
    1206:	2b01      	cmp	r3, #1
    1208:	d136      	bne.n	1278 <sync_fs+0x84>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1106
			mem_set(fs->win, 0, sizeof fs->win);
    120a:	f104 0638 	add.w	r6, r4, #56	; 0x38
mem_set():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:670
	BYTE *d = (BYTE*)dst;
    120e:	f504 720e 	add.w	r2, r4, #568	; 0x238
    1212:	4633      	mov	r3, r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:673
		*d++ = (BYTE)val;
    1214:	2500      	movs	r5, #0
    1216:	f803 5b01 	strb.w	r5, [r3], #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:674
	} while (--cnt);
    121a:	4293      	cmp	r3, r2
    121c:	d1fb      	bne.n	1216 <sync_fs+0x22>
st_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:620
	*ptr++ = (BYTE)val; val >>= 8;
    121e:	2355      	movs	r3, #85	; 0x55
    1220:	f884 3236 	strb.w	r3, [r4, #566]	; 0x236
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:621
	*ptr++ = (BYTE)val;
    1224:	23aa      	movs	r3, #170	; 0xaa
    1226:	f884 3237 	strb.w	r3, [r4, #567]	; 0x237
st_dword():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:626
	*ptr++ = (BYTE)val; val >>= 8;
    122a:	2352      	movs	r3, #82	; 0x52
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:629
	*ptr++ = (BYTE)val;
    122c:	2241      	movs	r2, #65	; 0x41
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:626
	*ptr++ = (BYTE)val; val >>= 8;
    122e:	2172      	movs	r1, #114	; 0x72
    1230:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:627
	*ptr++ = (BYTE)val; val >>= 8;
    1234:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:628
	*ptr++ = (BYTE)val; val >>= 8;
    1238:	2361      	movs	r3, #97	; 0x61
    123a:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:629
	*ptr++ = (BYTE)val;
    123e:	f884 203b 	strb.w	r2, [r4, #59]	; 0x3b
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:628
	*ptr++ = (BYTE)val; val >>= 8;
    1242:	f884 221e 	strb.w	r2, [r4, #542]	; 0x21e
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:629
	*ptr++ = (BYTE)val;
    1246:	f884 321f 	strb.w	r3, [r4, #543]	; 0x21f
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:626
	*ptr++ = (BYTE)val; val >>= 8;
    124a:	f884 121c 	strb.w	r1, [r4, #540]	; 0x21c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:627
	*ptr++ = (BYTE)val; val >>= 8;
    124e:	f884 121d 	strb.w	r1, [r4, #541]	; 0x21d
sync_fs():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1110
			st_dword(fs->win + FSI_Free_Count, fs->free_clst);
    1252:	f504 7008 	add.w	r0, r4, #544	; 0x220
    1256:	69a1      	ldr	r1, [r4, #24]
    1258:	f7ff f922 	bl	4a0 <st_dword>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1111
			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
    125c:	6961      	ldr	r1, [r4, #20]
    125e:	f504 7009 	add.w	r0, r4, #548	; 0x224
    1262:	f7ff f91d 	bl	4a0 <st_dword>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1113
			fs->winsect = fs->volbase + 1;
    1266:	6a62      	ldr	r2, [r4, #36]	; 0x24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1114
			disk_write(fs->pdrv, fs->win, fs->winsect, 1);
    1268:	7860      	ldrb	r0, [r4, #1]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1113
			fs->winsect = fs->volbase + 1;
    126a:	3201      	adds	r2, #1
    126c:	6362      	str	r2, [r4, #52]	; 0x34
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1114
			disk_write(fs->pdrv, fs->win, fs->winsect, 1);
    126e:	2301      	movs	r3, #1
    1270:	4631      	mov	r1, r6
    1272:	f000 fc6a 	bl	1b4a <disk_write>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1115
			fs->fsi_flag = 0;
    1276:	7125      	strb	r5, [r4, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1118
		if (disk_ioctl(fs->pdrv, CTRL_SYNC, 0) != RES_OK) res = FR_DISK_ERR;
    1278:	2200      	movs	r2, #0
    127a:	4611      	mov	r1, r2
    127c:	7860      	ldrb	r0, [r4, #1]
    127e:	f000 fc78 	bl	1b72 <disk_ioctl>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1102
	res = sync_window(fs);
    1282:	3000      	adds	r0, #0
    1284:	bf18      	it	ne
    1286:	2001      	movne	r0, #1
    1288:	e003      	b.n	1292 <sync_fs+0x9e>
sync_window():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1102
    128a:	f7ff f971 	bl	570 <sync_window.part.6>
sync_fs():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1103
	if (res == FR_OK) {
    128e:	2800      	cmp	r0, #0
    1290:	d0b5      	beq.n	11fe <sync_fs+0xa>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1122
}
    1292:	bd70      	pop	{r4, r5, r6, pc}

00001294 <dir_register>:
dir_register():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2496
{
    1294:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2504
	if (dp->fn[NSFLAG] & (NS_DOT | NS_NONAME)) return FR_INVALID_NAME;	/* Check name validity */
    1298:	f890 402b 	ldrb.w	r4, [r0, #43]	; 0x2b
    129c:	f014 04a0 	ands.w	r4, r4, #160	; 0xa0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2496
{
    12a0:	b089      	sub	sp, #36	; 0x24
    12a2:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2504
	if (dp->fn[NSFLAG] & (NS_DOT | NS_NONAME)) return FR_INVALID_NAME;	/* Check name validity */
    12a4:	f040 808f 	bne.w	13c6 <dir_register+0x132>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2498
	FATFS *fs = dp->obj.fs;
    12a8:	6806      	ldr	r6, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2505
	for (nlen = 0; fs->lfnbuf[nlen]; nlen++) ;	/* Get lfn length */
    12aa:	68f2      	ldr	r2, [r6, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2505 (discriminator 1)
    12ac:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
    12b0:	2b00      	cmp	r3, #0
    12b2:	d166      	bne.n	1382 <dir_register+0xee>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2539
	mem_cpy(sn, dp->fn, 12);
    12b4:	f105 0720 	add.w	r7, r5, #32
mem_cpy():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:659
	if (cnt != 0) {
    12b8:	220c      	movs	r2, #12
    12ba:	4639      	mov	r1, r7
    12bc:	a805      	add	r0, sp, #20
    12be:	f7ff f934 	bl	52a <mem_cpy.part.0>
dir_register():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2540
	if (sn[NSFLAG] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
    12c2:	f89d 301f 	ldrb.w	r3, [sp, #31]
    12c6:	07db      	lsls	r3, r3, #31
    12c8:	f140 8086 	bpl.w	13d8 <dir_register+0x144>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2541
		dp->fn[NSFLAG] = NS_NOLFN;		/* Find only SFN */
    12cc:	2340      	movs	r3, #64	; 0x40
gen_numname():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2004
				if (sr & 0x10000) sr ^= 0x11021;
    12ce:	f8df 8244 	ldr.w	r8, [pc, #580]	; 1514 <dir_register+0x280>
dir_register():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2541
		dp->fn[NSFLAG] = NS_NOLFN;		/* Find only SFN */
    12d2:	f885 302b 	strb.w	r3, [r5, #43]	; 0x2b
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2542
		for (n = 1; n < 100; n++) {
    12d6:	f04f 0a01 	mov.w	sl, #1
mem_cpy():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2543
			gen_numname(dp->fn, sn, fs->lfnbuf, n);	/* Generate a numbered name */
    12da:	220b      	movs	r2, #11
    12dc:	a905      	add	r1, sp, #20
    12de:	4638      	mov	r0, r7
dir_register():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2543
    12e0:	f8d6 900c 	ldr.w	r9, [r6, #12]
mem_cpy():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:659
	if (cnt != 0) {
    12e4:	f7ff f921 	bl	52a <mem_cpy.part.0>
gen_numname():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1997
	if (seq > 5) {	/* In case of many collisions, generate a hash number instead of sequential number */
    12e8:	f1ba 0f05 	cmp.w	sl, #5
    12ec:	d95a      	bls.n	13a4 <dir_register+0x110>
    12ee:	f1a9 0102 	sub.w	r1, r9, #2
    12f2:	4653      	mov	r3, sl
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1999
		while (*lfn) {	/* Create a CRC as hash value */
    12f4:	f831 2f02 	ldrh.w	r2, [r1, #2]!
    12f8:	2a00      	cmp	r2, #0
    12fa:	d144      	bne.n	1386 <dir_register+0xf2>
    12fc:	f10d 0013 	add.w	r0, sp, #19
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1997
	if (seq > 5) {	/* In case of many collisions, generate a hash number instead of sequential number */
    1300:	2207      	movs	r2, #7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2013
		c = (BYTE)((seq % 16) + '0');
    1302:	f003 0c0f 	and.w	ip, r3, #15
    1306:	f10c 0130 	add.w	r1, ip, #48	; 0x30
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2014
		if (c > '9') c += 7;
    130a:	2939      	cmp	r1, #57	; 0x39
    130c:	bf88      	it	hi
    130e:	f10c 0137 	addhi.w	r1, ip, #55	; 0x37
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2017
	} while (seq);
    1312:	2b0f      	cmp	r3, #15
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2015
		ns[i--] = c;
    1314:	f800 1901 	strb.w	r1, [r0], #-1
    1318:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2016
		seq /= 16;
    131c:	ea4f 1113 	mov.w	r1, r3, lsr #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2017
	} while (seq);
    1320:	d842      	bhi.n	13a8 <dir_register+0x114>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2018
	ns[i] = '~';
    1322:	ab08      	add	r3, sp, #32
    1324:	4413      	add	r3, r2
    1326:	217e      	movs	r1, #126	; 0x7e
    1328:	f803 1c14 	strb.w	r1, [r3, #-20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2021
	for (j = 0; j < i && dst[j] != ' '; j++) {
    132c:	f105 011f 	add.w	r1, r5, #31
    1330:	4608      	mov	r0, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2018
	ns[i] = '~';
    1332:	2300      	movs	r3, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2021
	for (j = 0; j < i && dst[j] != ' '; j++) {
    1334:	4293      	cmp	r3, r2
    1336:	d006      	beq.n	1346 <dir_register+0xb2>
    1338:	f810 cf01 	ldrb.w	ip, [r0, #1]!
    133c:	f1bc 0f20 	cmp.w	ip, #32
    1340:	f103 0e01 	add.w	lr, r3, #1
    1344:	d132      	bne.n	13ac <dir_register+0x118>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2028
		dst[j++] = (i < 8) ? ns[i++] : ' ';
    1346:	2a07      	cmp	r2, #7
    1348:	bf9c      	itt	ls
    134a:	a808      	addls	r0, sp, #32
    134c:	1880      	addls	r0, r0, r2
    134e:	f103 0301 	add.w	r3, r3, #1
    1352:	bf96      	itet	ls
    1354:	f810 0c14 	ldrbls.w	r0, [r0, #-20]
    1358:	2020      	movhi	r0, #32
    135a:	3201      	addls	r2, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2029
	} while (j < 8);
    135c:	2b07      	cmp	r3, #7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2028
		dst[j++] = (i < 8) ? ns[i++] : ' ';
    135e:	54c8      	strb	r0, [r1, r3]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2029
	} while (j < 8);
    1360:	d9f1      	bls.n	1346 <dir_register+0xb2>
dir_register():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2544
			res = dir_find(dp);				/* Check if the name collides with existing SFN */
    1362:	4628      	mov	r0, r5
    1364:	f7ff fd58 	bl	e18 <dir_find>
    1368:	4681      	mov	r9, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2545
			if (res != FR_OK) break;
    136a:	bb78      	cbnz	r0, 13cc <dir_register+0x138>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2542 (discriminator 2)
		for (n = 1; n < 100; n++) {
    136c:	f10a 0a01 	add.w	sl, sl, #1
    1370:	f1ba 0f64 	cmp.w	sl, #100	; 0x64
    1374:	d1b1      	bne.n	12da <dir_register+0x46>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2547
		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
    1376:	f04f 0907 	mov.w	r9, #7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2588
}
    137a:	4648      	mov	r0, r9
    137c:	b009      	add	sp, #36	; 0x24
    137e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2505 (discriminator 3)
	for (nlen = 0; fs->lfnbuf[nlen]; nlen++) ;	/* Get lfn length */
    1382:	3401      	adds	r4, #1
    1384:	e792      	b.n	12ac <dir_register+0x18>
gen_numname():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1999
		while (*lfn) {	/* Create a CRC as hash value */
    1386:	2010      	movs	r0, #16
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2002
				sr = (sr << 1) + (wc & 1);
    1388:	f002 0c01 	and.w	ip, r2, #1
    138c:	eb0c 0343 	add.w	r3, ip, r3, lsl #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2004
				if (sr & 0x10000) sr ^= 0x11021;
    1390:	f413 3f80 	tst.w	r3, #65536	; 0x10000
    1394:	bf18      	it	ne
    1396:	ea83 0308 	eorne.w	r3, r3, r8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2001
			for (i = 0; i < 16; i++) {
    139a:	3801      	subs	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2003
				wc >>= 1;
    139c:	ea4f 0252 	mov.w	r2, r2, lsr #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2001
			for (i = 0; i < 16; i++) {
    13a0:	d1f2      	bne.n	1388 <dir_register+0xf4>
    13a2:	e7a7      	b.n	12f4 <dir_register+0x60>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1997
	if (seq > 5) {	/* In case of many collisions, generate a hash number instead of sequential number */
    13a4:	4653      	mov	r3, sl
    13a6:	e7a9      	b.n	12fc <dir_register+0x68>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2016
		seq /= 16;
    13a8:	460b      	mov	r3, r1
    13aa:	e7aa      	b.n	1302 <dir_register+0x6e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2021
	for (j = 0; j < i && dst[j] != ' '; j++) {
    13ac:	4673      	mov	r3, lr
    13ae:	e7c1      	b.n	1334 <dir_register+0xa0>
dir_alloc():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1815
				n = 0;					/* Not a blank entry. Restart to search */
    13b0:	4680      	mov	r8, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1817
			res = dir_next(dp, 1);
    13b2:	2101      	movs	r1, #1
    13b4:	4628      	mov	r0, r5
    13b6:	f7ff fcda 	bl	d6e <dir_next>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1818
		} while (res == FR_OK);	/* Next entry with table stretch enabled */
    13ba:	4681      	mov	r9, r0
    13bc:	b310      	cbz	r0, 1404 <dir_register+0x170>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1821
	if (res == FR_NO_FILE) res = FR_DENIED;	/* No directory entry to allocate */
    13be:	f1b9 0f04 	cmp.w	r9, #4
    13c2:	d0d8      	beq.n	1376 <dir_register+0xe2>
    13c4:	e7d9      	b.n	137a <dir_register+0xe6>
dir_register():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2504
	if (dp->fn[NSFLAG] & (NS_DOT | NS_NONAME)) return FR_INVALID_NAME;	/* Check name validity */
    13c6:	f04f 0906 	mov.w	r9, #6
    13ca:	e7d6      	b.n	137a <dir_register+0xe6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2548
		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
    13cc:	2804      	cmp	r0, #4
    13ce:	d1d4      	bne.n	137a <dir_register+0xe6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2549
		dp->fn[NSFLAG] = sn[NSFLAG];
    13d0:	f89d 301f 	ldrb.w	r3, [sp, #31]
    13d4:	f885 302b 	strb.w	r3, [r5, #43]	; 0x2b
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2553
	nent = (sn[NSFLAG] & NS_LFN) ? (nlen + 12) / 13 + 1 : 1;	/* Number of entries to allocate */
    13d8:	f89d 301f 	ldrb.w	r3, [sp, #31]
dir_alloc():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1799
	FATFS *fs = dp->obj.fs;
    13dc:	f8d5 a000 	ldr.w	sl, [r5]
dir_register():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2553
	nent = (sn[NSFLAG] & NS_LFN) ? (nlen + 12) / 13 + 1 : 1;	/* Number of entries to allocate */
    13e0:	079b      	lsls	r3, r3, #30
    13e2:	bf48      	it	mi
    13e4:	340c      	addmi	r4, #12
dir_alloc():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1802
	res = dir_sdi(dp, 0);
    13e6:	f04f 0100 	mov.w	r1, #0
    13ea:	4628      	mov	r0, r5
dir_register():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2553
	nent = (sn[NSFLAG] & NS_LFN) ? (nlen + 12) / 13 + 1 : 1;	/* Number of entries to allocate */
    13ec:	bf49      	itett	mi
    13ee:	230d      	movmi	r3, #13
    13f0:	2401      	movpl	r4, #1
    13f2:	fbb4 f4f3 	udivmi	r4, r4, r3
    13f6:	3401      	addmi	r4, #1
dir_alloc():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1802
	res = dir_sdi(dp, 0);
    13f8:	f7ff fb6c 	bl	ad4 <dir_sdi>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1803
	if (res == FR_OK) {
    13fc:	4681      	mov	r9, r0
    13fe:	2800      	cmp	r0, #0
    1400:	d1dd      	bne.n	13be <dir_register+0x12a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1804
		n = 0;
    1402:	4680      	mov	r8, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1806
			res = move_window(fs, dp->sect);
    1404:	69a9      	ldr	r1, [r5, #24]
    1406:	4650      	mov	r0, sl
    1408:	f7ff f8d2 	bl	5b0 <move_window>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1807
			if (res != FR_OK) break;
    140c:	4681      	mov	r9, r0
    140e:	2800      	cmp	r0, #0
    1410:	d1d5      	bne.n	13be <dir_register+0x12a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1811
			if (dp->dir[DIR_Name] == DDEM || dp->dir[DIR_Name] == 0) {
    1412:	69eb      	ldr	r3, [r5, #28]
    1414:	781b      	ldrb	r3, [r3, #0]
    1416:	2be5      	cmp	r3, #229	; 0xe5
    1418:	d001      	beq.n	141e <dir_register+0x18a>
    141a:	2b00      	cmp	r3, #0
    141c:	d1c8      	bne.n	13b0 <dir_register+0x11c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1813
				if (++n == nent) break;	/* A block of contiguous free entries is found */
    141e:	f108 0801 	add.w	r8, r8, #1
    1422:	4544      	cmp	r4, r8
    1424:	d1c5      	bne.n	13b2 <dir_register+0x11e>
dir_register():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2555
	if (res == FR_OK && --nent) {	/* Set LFN entry if needed */
    1426:	3c01      	subs	r4, #1
    1428:	d055      	beq.n	14d6 <dir_register+0x242>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2556
		res = dir_sdi(dp, dp->dptr - nent * SZDIRE);
    142a:	6929      	ldr	r1, [r5, #16]
    142c:	4628      	mov	r0, r5
    142e:	eba1 1144 	sub.w	r1, r1, r4, lsl #5
    1432:	f7ff fb4f 	bl	ad4 <dir_sdi>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2557
		if (res == FR_OK) {
    1436:	4681      	mov	r9, r0
    1438:	2800      	cmp	r0, #0
    143a:	d19e      	bne.n	137a <dir_register+0xe6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2558
			sum = sum_sfn(dp->fn);	/* Checksum value of the SFN tied to the LFN */
    143c:	4638      	mov	r0, r7
    143e:	f7ff f850 	bl	4e2 <sum_sfn>
put_lfn():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1964
		if (wc != 0xFFFF) wc = lfn[i++];	/* Get an effective character */
    1442:	f64f 78ff 	movw	r8, #65535	; 0xffff
dir_register():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2558
			sum = sum_sfn(dp->fn);	/* Checksum value of the SFN tied to the LFN */
    1446:	9001      	str	r0, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2560
				res = move_window(fs, dp->sect);
    1448:	69a9      	ldr	r1, [r5, #24]
    144a:	4630      	mov	r0, r6
    144c:	f7ff f8b0 	bl	5b0 <move_window>
    1450:	4681      	mov	r9, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2561
				if (res != FR_OK) break;
    1452:	2800      	cmp	r0, #0
    1454:	d191      	bne.n	137a <dir_register+0xe6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2562
				put_lfn(fs->lfnbuf, dp->dir, (BYTE)nent, sum);
    1456:	69eb      	ldr	r3, [r5, #28]
put_lfn():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1956
	dir[LDIR_Chksum] = sum;			/* Set checksum */
    1458:	9a01      	ldr	r2, [sp, #4]
dir_register():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2562
				put_lfn(fs->lfnbuf, dp->dir, (BYTE)nent, sum);
    145a:	f8d6 e00c 	ldr.w	lr, [r6, #12]
put_lfn():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1956
	dir[LDIR_Chksum] = sum;			/* Set checksum */
    145e:	735a      	strb	r2, [r3, #13]
    1460:	b2e1      	uxtb	r1, r4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1957
	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
    1462:	f04f 020f 	mov.w	r2, #15
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1961
	i = (ord - 1) * 13;				/* Get offset in the LFN working buffer */
    1466:	f04f 0c0d 	mov.w	ip, #13
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1957
	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
    146a:	72da      	strb	r2, [r3, #11]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1958
	dir[LDIR_Type] = 0;
    146c:	f8df a0a8 	ldr.w	sl, [pc, #168]	; 1518 <dir_register+0x284>
    1470:	7318      	strb	r0, [r3, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1961
	i = (ord - 1) * 13;				/* Get offset in the LFN working buffer */
    1472:	1e4a      	subs	r2, r1, #1
    1474:	fb0c f202 	mul.w	r2, ip, r2
st_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:620
	*ptr++ = (BYTE)val; val >>= 8;
    1478:	7698      	strb	r0, [r3, #26]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:621
	*ptr++ = (BYTE)val;
    147a:	76d8      	strb	r0, [r3, #27]
put_lfn():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1962
	s = wc = 0;
    147c:	4684      	mov	ip, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1964
		if (wc != 0xFFFF) wc = lfn[i++];	/* Get an effective character */
    147e:	4540      	cmp	r0, r8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1965
		st_word(dir + LfnOfs[s], wc);		/* Put it */
    1480:	f81a 9b01 	ldrb.w	r9, [sl], #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1964
		if (wc != 0xFFFF) wc = lfn[i++];	/* Get an effective character */
    1484:	bf18      	it	ne
    1486:	f83e 0012 	ldrhne.w	r0, [lr, r2, lsl #1]
st_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:620
	*ptr++ = (BYTE)val; val >>= 8;
    148a:	f803 0009 	strb.w	r0, [r3, r9]
put_lfn():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1965
		st_word(dir + LfnOfs[s], wc);		/* Put it */
    148e:	eb03 0b09 	add.w	fp, r3, r9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1967
	} while (++s < 13);
    1492:	f10c 0c01 	add.w	ip, ip, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1964
		if (wc != 0xFFFF) wc = lfn[i++];	/* Get an effective character */
    1496:	bf18      	it	ne
    1498:	3201      	addne	r2, #1
st_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:620
	*ptr++ = (BYTE)val; val >>= 8;
    149a:	ea4f 2910 	mov.w	r9, r0, lsr #8
put_lfn():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1966
		if (wc == 0) wc = 0xFFFF;		/* Padding characters for left locations */
    149e:	2800      	cmp	r0, #0
    14a0:	bf08      	it	eq
    14a2:	4640      	moveq	r0, r8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1967
	} while (++s < 13);
    14a4:	f1bc 0f0d 	cmp.w	ip, #13
st_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:621
	*ptr++ = (BYTE)val;
    14a8:	f88b 9001 	strb.w	r9, [fp, #1]
put_lfn():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1967
	} while (++s < 13);
    14ac:	d1e7      	bne.n	147e <dir_register+0x1ea>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1968
	if (wc == 0xFFFF || !lfn[i]) ord |= LLEF;	/* Last LFN part is the start of LFN sequence */
    14ae:	4540      	cmp	r0, r8
    14b0:	d002      	beq.n	14b8 <dir_register+0x224>
    14b2:	f83e 2012 	ldrh.w	r2, [lr, r2, lsl #1]
    14b6:	b90a      	cbnz	r2, 14bc <dir_register+0x228>
    14b8:	f041 0140 	orr.w	r1, r1, #64	; 0x40
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1969
	dir[LDIR_Ord] = ord;			/* Set the LFN order */
    14bc:	7019      	strb	r1, [r3, #0]
dir_register():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2563
				fs->wflag = 1;
    14be:	2301      	movs	r3, #1
    14c0:	70f3      	strb	r3, [r6, #3]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2564
				res = dir_next(dp, 0);	/* Next entry */
    14c2:	2100      	movs	r1, #0
    14c4:	4628      	mov	r0, r5
    14c6:	f7ff fc52 	bl	d6e <dir_next>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2565
			} while (res == FR_OK && --nent);
    14ca:	4681      	mov	r9, r0
    14cc:	2800      	cmp	r0, #0
    14ce:	f47f af54 	bne.w	137a <dir_register+0xe6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2565 (discriminator 1)
    14d2:	3c01      	subs	r4, #1
    14d4:	d1b8      	bne.n	1448 <dir_register+0x1b4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2576
		res = move_window(fs, dp->sect);
    14d6:	69a9      	ldr	r1, [r5, #24]
    14d8:	4630      	mov	r0, r6
    14da:	f7ff f869 	bl	5b0 <move_window>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2577
		if (res == FR_OK) {
    14de:	4681      	mov	r9, r0
    14e0:	2800      	cmp	r0, #0
    14e2:	f47f af4a 	bne.w	137a <dir_register+0xe6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2578
			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
    14e6:	69eb      	ldr	r3, [r5, #28]
mem_set():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:673
		*d++ = (BYTE)val;
    14e8:	4601      	mov	r1, r0
    14ea:	f103 0220 	add.w	r2, r3, #32
    14ee:	f803 1b01 	strb.w	r1, [r3], #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:674
	} while (--cnt);
    14f2:	4293      	cmp	r3, r2
    14f4:	d1fb      	bne.n	14ee <dir_register+0x25a>
mem_cpy():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:659
	if (cnt != 0) {
    14f6:	220b      	movs	r2, #11
    14f8:	4639      	mov	r1, r7
    14fa:	69e8      	ldr	r0, [r5, #28]
    14fc:	f7ff f815 	bl	52a <mem_cpy.part.0>
dir_register():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2581
			dp->dir[DIR_NTres] = dp->fn[NSFLAG] & (NS_BODY | NS_EXT);	/* Put NT flag */
    1500:	f895 302b 	ldrb.w	r3, [r5, #43]	; 0x2b
    1504:	69ea      	ldr	r2, [r5, #28]
    1506:	f003 0318 	and.w	r3, r3, #24
    150a:	7313      	strb	r3, [r2, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2583
			fs->wflag = 1;
    150c:	2301      	movs	r3, #1
    150e:	70f3      	strb	r3, [r6, #3]
    1510:	e733      	b.n	137a <dir_register+0xe6>
    1512:	bf00      	nop
    1514:	00011021 	.word	0x00011021
    1518:	0000c640 	.word	0x0000c640

0000151c <f_mount>:
f_mount():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3502
FRESULT f_mount (
	FATFS* fs,			/* Pointer to the filesystem object (NULL:unmount)*/
	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
	BYTE opt			/* Mode option 0:Do not mount (delayed mount), 1:Mount immediately */
)
{
    151c:	b5f0      	push	{r4, r5, r6, r7, lr}
    151e:	b085      	sub	sp, #20
    1520:	e9cd 1000 	strd	r1, r0, [sp]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3510
	FRESULT res;
	const TCHAR *rp = path;


	/* Get logical drive number */
	vol = get_ldnumber(&rp);
    1524:	a803      	add	r0, sp, #12
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3502
{
    1526:	4614      	mov	r4, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3506
	const TCHAR *rp = path;
    1528:	9103      	str	r1, [sp, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3510
	vol = get_ldnumber(&rp);
    152a:	f7fe ffe9 	bl	500 <get_ldnumber>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3511
	if (vol < 0) return FR_INVALID_DRIVE;
    152e:	1e05      	subs	r5, r0, #0
    1530:	db28      	blt.n	1584 <f_mount+0x68>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3512
	cfs = FatFs[vol];					/* Pointer to fs object */
    1532:	4f15      	ldr	r7, [pc, #84]	; (1588 <f_mount+0x6c>)
    1534:	f857 6025 	ldr.w	r6, [r7, r5, lsl #2]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3514

	if (cfs) {
    1538:	b14e      	cbz	r6, 154e <f_mount+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3519
#if FF_FS_LOCK != 0
		clear_lock(cfs);
#endif
#if FF_FS_REENTRANT						/* Discard sync object of the current volume */
		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
    153a:	6930      	ldr	r0, [r6, #16]
    153c:	f000 fa50 	bl	19e0 <ff_del_syncobj>
    1540:	b918      	cbnz	r0, 154a <f_mount+0x2e>
    1542:	2402      	movs	r4, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3536 (discriminator 1)

	if (opt == 0) return FR_OK;			/* Do not mount now, it will be mounted later */

	res = find_volume(&path, &fs, 0);	/* Force mounted the volume */
	LEAVE_FF(fs, res);
}
    1544:	4620      	mov	r0, r4
    1546:	b005      	add	sp, #20
    1548:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3521
		cfs->fs_type = 0;				/* Clear old fs object */
    154a:	2300      	movs	r3, #0
    154c:	7033      	strb	r3, [r6, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3524
	if (fs) {
    154e:	9901      	ldr	r1, [sp, #4]
    1550:	b979      	cbnz	r1, 1572 <f_mount+0x56>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3530
	FatFs[vol] = fs;					/* Register new fs object */
    1552:	9b01      	ldr	r3, [sp, #4]
    1554:	f847 3025 	str.w	r3, [r7, r5, lsl #2]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3532
	if (opt == 0) return FR_OK;			/* Do not mount now, it will be mounted later */
    1558:	2c00      	cmp	r4, #0
    155a:	d0f3      	beq.n	1544 <f_mount+0x28>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3534
	res = find_volume(&path, &fs, 0);	/* Force mounted the volume */
    155c:	a901      	add	r1, sp, #4
    155e:	2200      	movs	r2, #0
    1560:	4668      	mov	r0, sp
    1562:	f7ff f881 	bl	668 <find_volume>
    1566:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3535
	LEAVE_FF(fs, res);
    1568:	4601      	mov	r1, r0
    156a:	9801      	ldr	r0, [sp, #4]
    156c:	f7ff fb9e 	bl	cac <unlock_fs>
    1570:	e7e8      	b.n	1544 <f_mount+0x28>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3525
		fs->fs_type = 0;				/* Clear new fs object */
    1572:	2300      	movs	r3, #0
    1574:	f801 3b10 	strb.w	r3, [r1], #16
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3527
		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
    1578:	b2e8      	uxtb	r0, r5
    157a:	f000 fa23 	bl	19c4 <ff_cre_syncobj>
    157e:	2800      	cmp	r0, #0
    1580:	d1e7      	bne.n	1552 <f_mount+0x36>
    1582:	e7de      	b.n	1542 <f_mount+0x26>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3511
	if (vol < 0) return FR_INVALID_DRIVE;
    1584:	240b      	movs	r4, #11
    1586:	e7dd      	b.n	1544 <f_mount+0x28>
    1588:	10000388 	.word	0x10000388

0000158c <f_open>:
f_open():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3550
FRESULT f_open (
	FIL* fp,			/* Pointer to the blank file object */
	const TCHAR* path,	/* Pointer to the file name */
	BYTE mode			/* Access mode and file open mode flags */
)
{
    158c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    1590:	b0d0      	sub	sp, #320	; 0x140
    1592:	4617      	mov	r7, r2
    1594:	9101      	str	r1, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3561
	FSIZE_t ofs;
#endif
	DEF_NAMBUF


	if (!fp) return FR_INVALID_OBJECT;
    1596:	4604      	mov	r4, r0
    1598:	2800      	cmp	r0, #0
    159a:	f000 80db 	beq.w	1754 <f_open+0x1c8>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3564

	/* Get logical drive number */
	mode &= FF_FS_READONLY ? FA_READ : FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_CREATE_NEW | FA_OPEN_ALWAYS | FA_OPEN_APPEND;
    159e:	f002 053f 	and.w	r5, r2, #63	; 0x3f
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3565
	res = find_volume(&path, &fs, mode);
    15a2:	462a      	mov	r2, r5
    15a4:	a902      	add	r1, sp, #8
    15a6:	a801      	add	r0, sp, #4
    15a8:	f7ff f85e 	bl	668 <find_volume>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3566
	if (res == FR_OK) {
    15ac:	4606      	mov	r6, r0
    15ae:	2800      	cmp	r0, #0
    15b0:	d14b      	bne.n	164a <f_open+0xbe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3567
		dj.obj.fs = fs;
    15b2:	9b02      	ldr	r3, [sp, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3569
		INIT_NAMBUF(fs);
		res = follow_path(&dj, path);	/* Follow the file path */
    15b4:	9901      	ldr	r1, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3567
		dj.obj.fs = fs;
    15b6:	9303      	str	r3, [sp, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3568
		INIT_NAMBUF(fs);
    15b8:	aa0f      	add	r2, sp, #60	; 0x3c
    15ba:	60da      	str	r2, [r3, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3569
		res = follow_path(&dj, path);	/* Follow the file path */
    15bc:	a803      	add	r0, sp, #12
    15be:	f7ff fccf 	bl	f60 <follow_path>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3571
#if !FF_FS_READONLY	/* Read/Write configuration */
		if (res == FR_OK) {
    15c2:	b920      	cbnz	r0, 15ce <f_open+0x42>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3572
			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
    15c4:	f99d 3037 	ldrsb.w	r3, [sp, #55]	; 0x37
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3573
				res = FR_INVALID_NAME;
    15c8:	2b00      	cmp	r3, #0
    15ca:	bfb8      	it	lt
    15cc:	2006      	movlt	r0, #6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3582
				res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);		/* Check if the file can be used */
			}
#endif
		}
		/* Create or Open a file */
		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
    15ce:	f017 0f1c 	tst.w	r7, #28
    15d2:	f000 809f 	beq.w	1714 <f_open+0x188>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3583
			if (res != FR_OK) {					/* No file, create new */
    15d6:	2800      	cmp	r0, #0
    15d8:	d042      	beq.n	1660 <f_open+0xd4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3584
				if (res == FR_NO_FILE) {		/* There is no file to open, create a new entry */
    15da:	2804      	cmp	r0, #4
    15dc:	d135      	bne.n	164a <f_open+0xbe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3588
#if FF_FS_LOCK != 0
					res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
#else
					res = dir_register(&dj);
    15de:	a803      	add	r0, sp, #12
    15e0:	f7ff fe58 	bl	1294 <dir_register>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3600
					res = FR_DENIED;
				} else {
					if (mode & FA_CREATE_NEW) res = FR_EXIST;	/* Cannot create as new file */
				}
			}
			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate the file if overwrite mode */
    15e4:	bb88      	cbnz	r0, 164a <f_open+0xbe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3591
				mode |= FA_CREATE_ALWAYS;		/* File is created */
    15e6:	f045 0508 	orr.w	r5, r5, #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3621
					}
				} else
#endif
				{
					/* Set directory entry initial state */
					cl = ld_clust(fs, dj.dir);			/* Get current cluster chain */
    15ea:	9b02      	ldr	r3, [sp, #8]
    15ec:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
    15f0:	7818      	ldrb	r0, [r3, #0]
    15f2:	4641      	mov	r1, r8
    15f4:	f7fe ffa2 	bl	53c <ld_clust.isra.3>
    15f8:	4607      	mov	r7, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3622
					st_dword(dj.dir + DIR_CrtTime, GET_FATTIME());	/* Set created time */
    15fa:	f000 facc 	bl	1b96 <get_fattime>
    15fe:	4601      	mov	r1, r0
    1600:	f108 000e 	add.w	r0, r8, #14
    1604:	f7fe ff4c 	bl	4a0 <st_dword>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3623
					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
    1608:	9b0a      	ldr	r3, [sp, #40]	; 0x28
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3624
					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
    160a:	9802      	ldr	r0, [sp, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3623
					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
    160c:	2220      	movs	r2, #32
    160e:	72da      	strb	r2, [r3, #11]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3624
					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
    1610:	990a      	ldr	r1, [sp, #40]	; 0x28
    1612:	2200      	movs	r2, #0
    1614:	f7fe ffa0 	bl	558 <st_clust.isra.4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3625
					st_dword(dj.dir + DIR_FileSize, 0);
    1618:	9b0a      	ldr	r3, [sp, #40]	; 0x28
st_dword():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:626
	*ptr++ = (BYTE)val; val >>= 8;
    161a:	2200      	movs	r2, #0
    161c:	771a      	strb	r2, [r3, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:627
	*ptr++ = (BYTE)val; val >>= 8;
    161e:	775a      	strb	r2, [r3, #29]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:628
	*ptr++ = (BYTE)val; val >>= 8;
    1620:	779a      	strb	r2, [r3, #30]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:629
	*ptr++ = (BYTE)val;
    1622:	77da      	strb	r2, [r3, #31]
f_open():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3626
					fs->wflag = 1;
    1624:	9b02      	ldr	r3, [sp, #8]
    1626:	2101      	movs	r1, #1
    1628:	70d9      	strb	r1, [r3, #3]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3627
					if (cl != 0) {						/* Remove the cluster chain if exist */
    162a:	b317      	cbz	r7, 1672 <f_open+0xe6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3629
						dw = fs->winsect;
						res = remove_chain(&dj.obj, cl, 0);
    162c:	4639      	mov	r1, r7
    162e:	a803      	add	r0, sp, #12
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3628
						dw = fs->winsect;
    1630:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3629
						res = remove_chain(&dj.obj, cl, 0);
    1634:	f7ff fb03 	bl	c3e <remove_chain>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3630
						if (res == FR_OK) {
    1638:	b938      	cbnz	r0, 164a <f_open+0xbe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3631
							res = move_window(fs, dw);
    163a:	4641      	mov	r1, r8
    163c:	9802      	ldr	r0, [sp, #8]
    163e:	f7fe ffb7 	bl	5b0 <move_window>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3632
							fs->last_clst = cl - 1;		/* Reuse the cluster hole */
    1642:	9b02      	ldr	r3, [sp, #8]
    1644:	3f01      	subs	r7, #1
    1646:	615f      	str	r7, [r3, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3649
						res = FR_DENIED;
					}
				}
			}
		}
		if (res == FR_OK) {
    1648:	b198      	cbz	r0, 1672 <f_open+0xe6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3723 (discriminator 1)
		}

		FREE_NAMBUF();
	}

	if (res != FR_OK) fp->obj.fs = 0;	/* Invalidate file object on error */
    164a:	2300      	movs	r3, #0
    164c:	6023      	str	r3, [r4, #0]
    164e:	4606      	mov	r6, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3725

	LEAVE_FF(fs, res);
    1650:	4631      	mov	r1, r6
    1652:	9802      	ldr	r0, [sp, #8]
    1654:	f7ff fb2a 	bl	cac <unlock_fs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3726 (discriminator 1)
}
    1658:	4630      	mov	r0, r6
    165a:	b050      	add	sp, #320	; 0x140
    165c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3594
				if (dj.obj.attr & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
    1660:	f89d 3012 	ldrb.w	r3, [sp, #18]
    1664:	f013 0f11 	tst.w	r3, #17
    1668:	d15e      	bne.n	1728 <f_open+0x19c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3597
					if (mode & FA_CREATE_NEW) res = FR_EXIST;	/* Cannot create as new file */
    166a:	0778      	lsls	r0, r7, #29
    166c:	d46c      	bmi.n	1748 <f_open+0x1bc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3600
			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate the file if overwrite mode */
    166e:	0739      	lsls	r1, r7, #28
    1670:	d4bb      	bmi.n	15ea <f_open+0x5e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3651
			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
    1672:	f8dd 8008 	ldr.w	r8, [sp, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3652
			fp->dir_ptr = dj.dir;
    1676:	9f0a      	ldr	r7, [sp, #40]	; 0x28
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3651
			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
    1678:	f8d8 3034 	ldr.w	r3, [r8, #52]	; 0x34
    167c:	6223      	str	r3, [r4, #32]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3652
			fp->dir_ptr = dj.dir;
    167e:	6267      	str	r7, [r4, #36]	; 0x24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3680
				fp->obj.sclust = ld_clust(fs, dj.dir);					/* Get object allocation info */
    1680:	f898 0000 	ldrb.w	r0, [r8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3650
			if (mode & FA_CREATE_ALWAYS) mode |= FA_MODIFIED;	/* Set file change flag if created or overwritten */
    1684:	0729      	lsls	r1, r5, #28
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3680
				fp->obj.sclust = ld_clust(fs, dj.dir);					/* Get object allocation info */
    1686:	4639      	mov	r1, r7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3650
			if (mode & FA_CREATE_ALWAYS) mode |= FA_MODIFIED;	/* Set file change flag if created or overwritten */
    1688:	bf48      	it	mi
    168a:	f045 0540 	orrmi.w	r5, r5, #64	; 0x40
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3680
				fp->obj.sclust = ld_clust(fs, dj.dir);					/* Get object allocation info */
    168e:	f7fe ff55 	bl	53c <ld_clust.isra.3>
    1692:	60a0      	str	r0, [r4, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3681
				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
    1694:	f107 001c 	add.w	r0, r7, #28
    1698:	f7fe fefa 	bl	490 <ld_dword>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3687
			fp->obj.id = fs->id;
    169c:	f8b8 3006 	ldrh.w	r3, [r8, #6]
    16a0:	80a3      	strh	r3, [r4, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3694
			mem_set(fp->buf, 0, sizeof fp->buf);	/* Clear sector buffer */
    16a2:	f104 0728 	add.w	r7, r4, #40	; 0x28
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3689
			fp->err = 0;			/* Clear error flag */
    16a6:	2300      	movs	r3, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3681
				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
    16a8:	60e0      	str	r0, [r4, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3686
			fp->obj.fs = fs;	 	/* Validate the file object */
    16aa:	f8c4 8000 	str.w	r8, [r4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3688
			fp->flag = mode;		/* Set file access mode */
    16ae:	7425      	strb	r5, [r4, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3689
			fp->err = 0;			/* Clear error flag */
    16b0:	7463      	strb	r3, [r4, #17]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3690
			fp->sect = 0;			/* Invalidate current data sector */
    16b2:	61e3      	str	r3, [r4, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3691
			fp->fptr = 0;			/* Set file pointer top of the file */
    16b4:	6163      	str	r3, [r4, #20]
mem_set():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:670
	BYTE *d = (BYTE*)dst;
    16b6:	f504 710a 	add.w	r1, r4, #552	; 0x228
    16ba:	463a      	mov	r2, r7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:673
		*d++ = (BYTE)val;
    16bc:	f802 3b01 	strb.w	r3, [r2], #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:674
	} while (--cnt);
    16c0:	4291      	cmp	r1, r2
    16c2:	d1fb      	bne.n	16bc <f_open+0x130>
f_open():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3696
			if ((mode & FA_SEEKEND) && fp->obj.objsize > 0) {	/* Seek to end of file if FA_OPEN_APPEND is specified */
    16c4:	06aa      	lsls	r2, r5, #26
    16c6:	d5c3      	bpl.n	1650 <f_open+0xc4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3696 (discriminator 1)
    16c8:	68e5      	ldr	r5, [r4, #12]
    16ca:	2d00      	cmp	r5, #0
    16cc:	d0c0      	beq.n	1650 <f_open+0xc4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3698
				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
    16ce:	f8b8 800a 	ldrh.w	r8, [r8, #10]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3699
				clst = fp->obj.sclust;				/* Follow the cluster chain */
    16d2:	68a1      	ldr	r1, [r4, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3697
				fp->fptr = fp->obj.objsize;			/* Offset to seek */
    16d4:	6165      	str	r5, [r4, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3698
				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
    16d6:	ea4f 2848 	mov.w	r8, r8, lsl #9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3700 (discriminator 3)
				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
    16da:	45a8      	cmp	r8, r5
    16dc:	d326      	bcc.n	172c <f_open+0x1a0>
    16de:	2000      	movs	r0, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3705
				fp->clust = clst;
    16e0:	61a1      	str	r1, [r4, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3706
				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
    16e2:	2800      	cmp	r0, #0
    16e4:	d1b1      	bne.n	164a <f_open+0xbe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3706 (discriminator 1)
    16e6:	f3c5 0308 	ubfx	r3, r5, #0, #9
    16ea:	2b00      	cmp	r3, #0
    16ec:	d0b0      	beq.n	1650 <f_open+0xc4>
    16ee:	f8dd 8008 	ldr.w	r8, [sp, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3707
					if ((sc = clst2sect(fs, clst)) == 0) {
    16f2:	4640      	mov	r0, r8
    16f4:	f7fe feea 	bl	4cc <clst2sect>
    16f8:	b350      	cbz	r0, 1750 <f_open+0x1c4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3710
						fp->sect = sc + (DWORD)(ofs / SS(fs));
    16fa:	eb00 2255 	add.w	r2, r0, r5, lsr #9
    16fe:	61e2      	str	r2, [r4, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3712
						if (disk_read(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) res = FR_DISK_ERR;
    1700:	2301      	movs	r3, #1
    1702:	4639      	mov	r1, r7
    1704:	f898 0001 	ldrb.w	r0, [r8, #1]
    1708:	f000 fa0b 	bl	1b22 <disk_read>
    170c:	2800      	cmp	r0, #0
    170e:	d09f      	beq.n	1650 <f_open+0xc4>
    1710:	2001      	movs	r0, #1
    1712:	e79a      	b.n	164a <f_open+0xbe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3639
			if (res == FR_OK) {					/* Is the object exsiting? */
    1714:	2800      	cmp	r0, #0
    1716:	d198      	bne.n	164a <f_open+0xbe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3640
				if (dj.obj.attr & AM_DIR) {		/* File open against a directory */
    1718:	f89d 3012 	ldrb.w	r3, [sp, #18]
    171c:	06da      	lsls	r2, r3, #27
    171e:	d415      	bmi.n	174c <f_open+0x1c0>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3643
					if ((mode & FA_WRITE) && (dj.obj.attr & AM_RDO)) { /* Write mode open against R/O file */
    1720:	07bf      	lsls	r7, r7, #30
    1722:	d5a6      	bpl.n	1672 <f_open+0xe6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3643 (discriminator 1)
    1724:	07d8      	lsls	r0, r3, #31
    1726:	d5a4      	bpl.n	1672 <f_open+0xe6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3595
					res = FR_DENIED;
    1728:	2007      	movs	r0, #7
    172a:	e78e      	b.n	164a <f_open+0xbe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3701
					clst = get_fat(&fp->obj, clst);
    172c:	6820      	ldr	r0, [r4, #0]
    172e:	f7ff f977 	bl	a20 <get_fat.isra.10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3702
					if (clst <= 1) res = FR_INT_ERR;
    1732:	2801      	cmp	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3701
					clst = get_fat(&fp->obj, clst);
    1734:	4601      	mov	r1, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3702
					if (clst <= 1) res = FR_INT_ERR;
    1736:	eba5 0508 	sub.w	r5, r5, r8
    173a:	d903      	bls.n	1744 <f_open+0x1b8>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3700
				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
    173c:	1c43      	adds	r3, r0, #1
    173e:	d1cc      	bne.n	16da <f_open+0x14e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3703
					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
    1740:	2001      	movs	r0, #1
    1742:	e7cd      	b.n	16e0 <f_open+0x154>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3702
					if (clst <= 1) res = FR_INT_ERR;
    1744:	2002      	movs	r0, #2
    1746:	e7cb      	b.n	16e0 <f_open+0x154>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3597
					if (mode & FA_CREATE_NEW) res = FR_EXIST;	/* Cannot create as new file */
    1748:	2008      	movs	r0, #8
    174a:	e77e      	b.n	164a <f_open+0xbe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3641
					res = FR_NO_FILE;
    174c:	2004      	movs	r0, #4
    174e:	e77c      	b.n	164a <f_open+0xbe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3708
						res = FR_INT_ERR;
    1750:	2002      	movs	r0, #2
    1752:	e77a      	b.n	164a <f_open+0xbe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3561
	if (!fp) return FR_INVALID_OBJECT;
    1754:	2609      	movs	r6, #9
    1756:	e77f      	b.n	1658 <f_open+0xcc>

00001758 <f_write>:
f_write():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3841
	FIL* fp,			/* Pointer to the file object */
	const void* buff,	/* Pointer to the data to be written */
	UINT btw,			/* Number of bytes to write */
	UINT* bw			/* Pointer to number of bytes written */
)
{
    1758:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    175c:	469b      	mov	fp, r3
    175e:	b085      	sub	sp, #20
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3849
	DWORD clst, sect;
	UINT wcnt, cc, csect;
	const BYTE *wbuff = (const BYTE*)buff;


	*bw = 0;	/* Clear write byte counter */
    1760:	2300      	movs	r3, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3841
{
    1762:	4689      	mov	r9, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3849
	*bw = 0;	/* Clear write byte counter */
    1764:	f8cb 3000 	str.w	r3, [fp]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3850
	res = validate(&fp->obj, &fs);			/* Check validity of the file object */
    1768:	a903      	add	r1, sp, #12
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3841
{
    176a:	4604      	mov	r4, r0
    176c:	4617      	mov	r7, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3850
	res = validate(&fp->obj, &fs);			/* Check validity of the file object */
    176e:	f7ff faa8 	bl	cc2 <validate>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3851
	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
    1772:	4605      	mov	r5, r0
    1774:	b908      	cbnz	r0, 177a <f_write+0x22>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3851 (discriminator 2)
    1776:	7c65      	ldrb	r5, [r4, #17]
    1778:	b10d      	cbz	r5, 177e <f_write+0x26>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3927
			}
#else
			if (fp->sect != sect && 		/* Fill sector cache with file data */
				fp->fptr < fp->obj.objsize &&
				disk_read(fs->pdrv, fp->buf, sect, 1) != RES_OK) {
					ABORT(fs, FR_DISK_ERR);
    177a:	4629      	mov	r1, r5
    177c:	e093      	b.n	18a6 <f_write+0x14e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3852 (discriminator 4)
	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
    177e:	7c23      	ldrb	r3, [r4, #16]
    1780:	079a      	lsls	r2, r3, #30
    1782:	d408      	bmi.n	1796 <f_write+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3852 (discriminator 1)
    1784:	2107      	movs	r1, #7
    1786:	9803      	ldr	r0, [sp, #12]
    1788:	f7ff fa90 	bl	cac <unlock_fs>
    178c:	2507      	movs	r5, #7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3947 (discriminator 1)
	}

	fp->flag |= FA_MODIFIED;				/* Set file change flag */

	LEAVE_FF(fs, FR_OK);
}
    178e:	4628      	mov	r0, r5
    1790:	b005      	add	sp, #20
    1792:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3855 (discriminator 2)
	if ((!FF_FS_EXFAT || fs->fs_type != FS_EXFAT) && (DWORD)(fp->fptr + btw) < (DWORD)fp->fptr) {
    1796:	6963      	ldr	r3, [r4, #20]
    1798:	42fb      	cmn	r3, r7
    179a:	d300      	bcc.n	179e <f_write+0x46>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3856
		btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
    179c:	43df      	mvns	r7, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3939
		mem_cpy(fp->buf + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
    179e:	f104 0328 	add.w	r3, r4, #40	; 0x28
    17a2:	9300      	str	r3, [sp, #0]
    17a4:	e063      	b.n	186e <f_write+0x116>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3876
						clst = create_chain(&fp->obj, fp->clust);	/* Follow or stretch cluster chain on the FAT */
    17a6:	69a1      	ldr	r1, [r4, #24]
    17a8:	e073      	b.n	1892 <f_write+0x13a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3880
				if (clst == 1) ABORT(fs, FR_INT_ERR);
    17aa:	2801      	cmp	r0, #1
    17ac:	d102      	bne.n	17b4 <f_write+0x5c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3880 (discriminator 1)
    17ae:	2502      	movs	r5, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3927
					ABORT(fs, FR_DISK_ERR);
    17b0:	7465      	strb	r5, [r4, #17]
    17b2:	e7e2      	b.n	177a <f_write+0x22>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3881 (discriminator 2)
				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
    17b4:	1c43      	adds	r3, r0, #1
    17b6:	d101      	bne.n	17bc <f_write+0x64>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3927
					ABORT(fs, FR_DISK_ERR);
    17b8:	2501      	movs	r5, #1
    17ba:	e7f9      	b.n	17b0 <f_write+0x58>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3883 (discriminator 2)
				if (fp->obj.sclust == 0) fp->obj.sclust = clst;	/* Set start cluster if the first write */
    17bc:	68a3      	ldr	r3, [r4, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3882 (discriminator 2)
				fp->clust = clst;			/* Update current cluster */
    17be:	61a0      	str	r0, [r4, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3883 (discriminator 2)
				if (fp->obj.sclust == 0) fp->obj.sclust = clst;	/* Set start cluster if the first write */
    17c0:	b903      	cbnz	r3, 17c4 <f_write+0x6c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3883 (discriminator 1)
    17c2:	60a0      	str	r0, [r4, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3888
			if (fp->flag & FA_DIRTY) {		/* Write-back sector cache */
    17c4:	f994 3010 	ldrsb.w	r3, [r4, #16]
    17c8:	2b00      	cmp	r3, #0
    17ca:	da0c      	bge.n	17e6 <f_write+0x8e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3889
				if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
    17cc:	9803      	ldr	r0, [sp, #12]
    17ce:	69e2      	ldr	r2, [r4, #28]
    17d0:	9900      	ldr	r1, [sp, #0]
    17d2:	7840      	ldrb	r0, [r0, #1]
    17d4:	2301      	movs	r3, #1
    17d6:	f000 f9b8 	bl	1b4a <disk_write>
    17da:	2800      	cmp	r0, #0
    17dc:	d1ec      	bne.n	17b8 <f_write+0x60>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3890 (discriminator 2)
				fp->flag &= (BYTE)~FA_DIRTY;
    17de:	7c23      	ldrb	r3, [r4, #16]
    17e0:	f003 037f 	and.w	r3, r3, #127	; 0x7f
    17e4:	7423      	strb	r3, [r4, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3893
			sect = clst2sect(fs, fp->clust);	/* Get current sector */
    17e6:	f8dd a00c 	ldr.w	sl, [sp, #12]
    17ea:	69a1      	ldr	r1, [r4, #24]
    17ec:	4650      	mov	r0, sl
    17ee:	f7fe fe6d 	bl	4cc <clst2sect>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3894
			if (sect == 0) ABORT(fs, FR_INT_ERR);
    17f2:	b920      	cbnz	r0, 17fe <f_write+0xa6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3894 (discriminator 1)
    17f4:	2502      	movs	r5, #2
    17f6:	7465      	strb	r5, [r4, #17]
    17f8:	4629      	mov	r1, r5
    17fa:	4650      	mov	r0, sl
    17fc:	e054      	b.n	18a8 <f_write+0x150>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3895 (discriminator 2)
			sect += csect;
    17fe:	9b01      	ldr	r3, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3897 (discriminator 2)
			if (cc > 0) {					/* Write maximum contiguous sectors directly */
    1800:	f5b7 7f00 	cmp.w	r7, #512	; 0x200
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3895 (discriminator 2)
			sect += csect;
    1804:	eb03 0800 	add.w	r8, r3, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3897 (discriminator 2)
			if (cc > 0) {					/* Write maximum contiguous sectors directly */
    1808:	d351      	bcc.n	18ae <f_write+0x156>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3898
				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
    180a:	9a01      	ldr	r2, [sp, #4]
    180c:	f8ba 300a 	ldrh.w	r3, [sl, #10]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3901
				if (disk_write(fs->pdrv, wbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
    1810:	f89a 0001 	ldrb.w	r0, [sl, #1]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3896
			cc = btw / SS(fs);				/* When remaining bytes >= sector size, */
    1814:	0a7e      	lsrs	r6, r7, #9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3898
				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
    1816:	4432      	add	r2, r6
    1818:	429a      	cmp	r2, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3899
					cc = fs->csize - csect;
    181a:	bf84      	itt	hi
    181c:	9a01      	ldrhi	r2, [sp, #4]
    181e:	1a9e      	subhi	r6, r3, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3901
				if (disk_write(fs->pdrv, wbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
    1820:	4633      	mov	r3, r6
    1822:	4642      	mov	r2, r8
    1824:	4649      	mov	r1, r9
    1826:	f000 f990 	bl	1b4a <disk_write>
    182a:	2800      	cmp	r0, #0
    182c:	d1c4      	bne.n	17b8 <f_write+0x60>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3909 (discriminator 2)
				if (fp->sect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write */
    182e:	69e1      	ldr	r1, [r4, #28]
    1830:	eba1 0108 	sub.w	r1, r1, r8
    1834:	42b1      	cmp	r1, r6
    1836:	d20a      	bcs.n	184e <f_write+0xf6>
mem_cpy():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:659
	if (cnt != 0) {
    1838:	f44f 7200 	mov.w	r2, #512	; 0x200
    183c:	eb09 2141 	add.w	r1, r9, r1, lsl #9
    1840:	9800      	ldr	r0, [sp, #0]
    1842:	f7fe fe72 	bl	52a <mem_cpy.part.0>
f_write():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3911
					fp->flag &= (BYTE)~FA_DIRTY;
    1846:	7c23      	ldrb	r3, [r4, #16]
    1848:	f003 037f 	and.w	r3, r3, #127	; 0x7f
    184c:	7423      	strb	r3, [r4, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3915
				wcnt = SS(fs) * cc;		/* Number of bytes transferred */
    184e:	0276      	lsls	r6, r6, #9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3860
		btw -= wcnt, *bw += wcnt, wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->obj.objsize) {
    1850:	f8db 3000 	ldr.w	r3, [fp]
    1854:	4433      	add	r3, r6
    1856:	f8cb 3000 	str.w	r3, [fp]
    185a:	6963      	ldr	r3, [r4, #20]
    185c:	1bbf      	subs	r7, r7, r6
    185e:	44b1      	add	r9, r6
    1860:	441e      	add	r6, r3
    1862:	68e3      	ldr	r3, [r4, #12]
    1864:	6166      	str	r6, [r4, #20]
    1866:	42b3      	cmp	r3, r6
    1868:	bf2c      	ite	cs
    186a:	60e3      	strcs	r3, [r4, #12]
    186c:	60e6      	strcc	r6, [r4, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3859
	for ( ;  btw;							/* Repeat until all data written */
    186e:	b1af      	cbz	r7, 189c <f_write+0x144>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3861
		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
    1870:	6963      	ldr	r3, [r4, #20]
    1872:	f3c3 0208 	ubfx	r2, r3, #0, #9
    1876:	bb6a      	cbnz	r2, 18d4 <f_write+0x17c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3862
			csect = (UINT)(fp->fptr / SS(fs)) & (fs->csize - 1);	/* Sector offset in the cluster */
    1878:	9a03      	ldr	r2, [sp, #12]
    187a:	8952      	ldrh	r2, [r2, #10]
    187c:	3a01      	subs	r2, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3863
			if (csect == 0) {				/* On the cluster boundary? */
    187e:	ea12 2253 	ands.w	r2, r2, r3, lsr #9
    1882:	9201      	str	r2, [sp, #4]
    1884:	d19e      	bne.n	17c4 <f_write+0x6c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3864
				if (fp->fptr == 0) {		/* On the top of the file? */
    1886:	2b00      	cmp	r3, #0
    1888:	d18d      	bne.n	17a6 <f_write+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3865
					clst = fp->obj.sclust;	/* Follow from the origin */
    188a:	68a0      	ldr	r0, [r4, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3866
					if (clst == 0) {		/* If no cluster is allocated, */
    188c:	2800      	cmp	r0, #0
    188e:	d18c      	bne.n	17aa <f_write+0x52>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3867
						clst = create_chain(&fp->obj, 0);	/* create a new cluster chain */
    1890:	4601      	mov	r1, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3876
						clst = create_chain(&fp->obj, fp->clust);	/* Follow or stretch cluster chain on the FAT */
    1892:	4620      	mov	r0, r4
    1894:	f7ff f95f 	bl	b56 <create_chain>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3879
				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
    1898:	2800      	cmp	r0, #0
    189a:	d186      	bne.n	17aa <f_write+0x52>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3944
	fp->flag |= FA_MODIFIED;				/* Set file change flag */
    189c:	7c23      	ldrb	r3, [r4, #16]
    189e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    18a2:	7423      	strb	r3, [r4, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3946
	LEAVE_FF(fs, FR_OK);
    18a4:	2100      	movs	r1, #0
    18a6:	9803      	ldr	r0, [sp, #12]
    18a8:	f7ff fa00 	bl	cac <unlock_fs>
    18ac:	e76f      	b.n	178e <f_write+0x36>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3924
			if (fp->sect != sect && 		/* Fill sector cache with file data */
    18ae:	69e3      	ldr	r3, [r4, #28]
    18b0:	4543      	cmp	r3, r8
    18b2:	d00d      	beq.n	18d0 <f_write+0x178>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3924 (discriminator 1)
    18b4:	68e2      	ldr	r2, [r4, #12]
    18b6:	6963      	ldr	r3, [r4, #20]
    18b8:	429a      	cmp	r2, r3
    18ba:	d909      	bls.n	18d0 <f_write+0x178>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3926
				disk_read(fs->pdrv, fp->buf, sect, 1) != RES_OK) {
    18bc:	2301      	movs	r3, #1
    18be:	4642      	mov	r2, r8
    18c0:	9900      	ldr	r1, [sp, #0]
    18c2:	f89a 0001 	ldrb.w	r0, [sl, #1]
    18c6:	f000 f92c 	bl	1b22 <disk_read>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3925
				fp->fptr < fp->obj.objsize &&
    18ca:	2800      	cmp	r0, #0
    18cc:	f47f af74 	bne.w	17b8 <f_write+0x60>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3930
			fp->sect = sect;
    18d0:	f8c4 801c 	str.w	r8, [r4, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3932
		wcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
    18d4:	6960      	ldr	r0, [r4, #20]
mem_cpy():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3932
    18d6:	9b00      	ldr	r3, [sp, #0]
f_write():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3932
    18d8:	f3c0 0008 	ubfx	r0, r0, #0, #9
    18dc:	f5c0 7600 	rsb	r6, r0, #512	; 0x200
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3933
		if (wcnt > btw) wcnt = btw;					/* Clip it by btw if needed */
    18e0:	42be      	cmp	r6, r7
    18e2:	bf28      	it	cs
    18e4:	463e      	movcs	r6, r7
mem_cpy():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:659
	if (cnt != 0) {
    18e6:	4418      	add	r0, r3
    18e8:	4632      	mov	r2, r6
    18ea:	4649      	mov	r1, r9
    18ec:	f7fe fe1d 	bl	52a <mem_cpy.part.0>
f_write():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3940
		fp->flag |= FA_DIRTY;
    18f0:	7c23      	ldrb	r3, [r4, #16]
    18f2:	f063 037f 	orn	r3, r3, #127	; 0x7f
    18f6:	7423      	strb	r3, [r4, #16]
    18f8:	e7aa      	b.n	1850 <f_write+0xf8>

000018fa <f_sync>:
f_sync():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3959
/*-----------------------------------------------------------------------*/

FRESULT f_sync (
	FIL* fp		/* Pointer to the file object */
)
{
    18fa:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3966
	FATFS *fs;
	DWORD tm;
	BYTE *dir;


	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
    18fc:	a901      	add	r1, sp, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3959
{
    18fe:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3966
	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
    1900:	f7ff f9df 	bl	cc2 <validate>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3967
	if (res == FR_OK) {
    1904:	4605      	mov	r5, r0
    1906:	2800      	cmp	r0, #0
    1908:	d143      	bne.n	1992 <f_sync+0x98>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3968
		if (fp->flag & FA_MODIFIED) {	/* Is there any change to the file? */
    190a:	7c23      	ldrb	r3, [r4, #16]
    190c:	f013 0540 	ands.w	r5, r3, #64	; 0x40
    1910:	d03f      	beq.n	1992 <f_sync+0x98>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3970
#if !FF_FS_TINY
			if (fp->flag & FA_DIRTY) {	/* Write-back cached data if needed */
    1912:	061b      	lsls	r3, r3, #24
    1914:	d514      	bpl.n	1940 <f_sync+0x46>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3971
				if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
    1916:	9801      	ldr	r0, [sp, #4]
    1918:	69e2      	ldr	r2, [r4, #28]
    191a:	7840      	ldrb	r0, [r0, #1]
    191c:	2301      	movs	r3, #1
    191e:	f104 0128 	add.w	r1, r4, #40	; 0x28
    1922:	f000 f912 	bl	1b4a <disk_write>
    1926:	b138      	cbz	r0, 1938 <f_sync+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3971 (discriminator 1)
    1928:	2101      	movs	r1, #1
    192a:	9801      	ldr	r0, [sp, #4]
    192c:	f7ff f9be 	bl	cac <unlock_fs>
    1930:	2501      	movs	r5, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4026 (discriminator 1)
			}
		}
	}

	LEAVE_FF(fs, res);
}
    1932:	4628      	mov	r0, r5
    1934:	b003      	add	sp, #12
    1936:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3972 (discriminator 2)
				fp->flag &= (BYTE)~FA_DIRTY;
    1938:	7c23      	ldrb	r3, [r4, #16]
    193a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
    193e:	7423      	strb	r3, [r4, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3976
			tm = GET_FATTIME();				/* Modified time */
    1940:	f000 f929 	bl	1b96 <get_fattime>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4009
				res = move_window(fs, fp->dir_sect);
    1944:	6a21      	ldr	r1, [r4, #32]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3976
			tm = GET_FATTIME();				/* Modified time */
    1946:	4607      	mov	r7, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4009
				res = move_window(fs, fp->dir_sect);
    1948:	9801      	ldr	r0, [sp, #4]
    194a:	f7fe fe31 	bl	5b0 <move_window>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4010
				if (res == FR_OK) {
    194e:	4605      	mov	r5, r0
    1950:	b9f8      	cbnz	r0, 1992 <f_sync+0x98>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4011
					dir = fp->dir_ptr;
    1952:	6a66      	ldr	r6, [r4, #36]	; 0x24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4012
					dir[DIR_Attr] |= AM_ARC;						/* Set archive attribute to indicate that the file has been changed */
    1954:	7af3      	ldrb	r3, [r6, #11]
    1956:	f043 0320 	orr.w	r3, r3, #32
    195a:	72f3      	strb	r3, [r6, #11]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4013
					st_clust(fp->obj.fs, dir, fp->obj.sclust);		/* Update file allocation information  */
    195c:	68a2      	ldr	r2, [r4, #8]
    195e:	6820      	ldr	r0, [r4, #0]
    1960:	4631      	mov	r1, r6
    1962:	f7fe fdf9 	bl	558 <st_clust.isra.4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4014
					st_dword(dir + DIR_FileSize, (DWORD)fp->obj.objsize);	/* Update file size */
    1966:	68e1      	ldr	r1, [r4, #12]
    1968:	f106 001c 	add.w	r0, r6, #28
    196c:	f7fe fd98 	bl	4a0 <st_dword>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4015
					st_dword(dir + DIR_ModTime, tm);				/* Update modified time */
    1970:	4639      	mov	r1, r7
    1972:	f106 0016 	add.w	r0, r6, #22
    1976:	f7fe fd93 	bl	4a0 <st_dword>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4017
					fs->wflag = 1;
    197a:	9801      	ldr	r0, [sp, #4]
st_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:620
	*ptr++ = (BYTE)val; val >>= 8;
    197c:	74b5      	strb	r5, [r6, #18]
f_sync():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4017
					fs->wflag = 1;
    197e:	2301      	movs	r3, #1
st_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:621
	*ptr++ = (BYTE)val;
    1980:	74f5      	strb	r5, [r6, #19]
f_sync():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4017
					fs->wflag = 1;
    1982:	70c3      	strb	r3, [r0, #3]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4018
					res = sync_fs(fs);					/* Restore it to the directory */
    1984:	f7ff fc36 	bl	11f4 <sync_fs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4019
					fp->flag &= (BYTE)~FA_MODIFIED;
    1988:	7c23      	ldrb	r3, [r4, #16]
    198a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4018
					res = sync_fs(fs);					/* Restore it to the directory */
    198e:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4019
					fp->flag &= (BYTE)~FA_MODIFIED;
    1990:	7423      	strb	r3, [r4, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4025
	LEAVE_FF(fs, res);
    1992:	4629      	mov	r1, r5
    1994:	9801      	ldr	r0, [sp, #4]
    1996:	f7ff f989 	bl	cac <unlock_fs>
    199a:	e7ca      	b.n	1932 <f_sync+0x38>

0000199c <f_close>:
f_close():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4040
/*-----------------------------------------------------------------------*/

FRESULT f_close (
	FIL* fp		/* Pointer to the file object to be closed */
)
{
    199c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    199e:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4045
	FRESULT res;
	FATFS *fs;

#if !FF_FS_READONLY
	res = f_sync(fp);					/* Flush cached data */
    19a0:	f7ff ffab 	bl	18fa <f_sync>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4046
	if (res == FR_OK)
    19a4:	4604      	mov	r4, r0
    19a6:	b950      	cbnz	r0, 19be <f_close+0x22>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4049
#endif
	{
		res = validate(&fp->obj, &fs);	/* Lock volume */
    19a8:	a901      	add	r1, sp, #4
    19aa:	4628      	mov	r0, r5
    19ac:	f7ff f989 	bl	cc2 <validate>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4050
		if (res == FR_OK) {
    19b0:	4604      	mov	r4, r0
    19b2:	b920      	cbnz	r0, 19be <f_close+0x22>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4055
#if FF_FS_LOCK != 0
			res = dec_lock(fp->obj.lockid);		/* Decrement file open counter */
			if (res == FR_OK) fp->obj.fs = 0;	/* Invalidate file object */
#else
			fp->obj.fs = 0;	/* Invalidate file object */
    19b4:	6028      	str	r0, [r5, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4058
#endif
#if FF_FS_REENTRANT
			unlock_fs(fs, FR_OK);		/* Unlock volume */
    19b6:	4601      	mov	r1, r0
    19b8:	9801      	ldr	r0, [sp, #4]
    19ba:	f7ff f977 	bl	cac <unlock_fs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4063
#endif
		}
	}
	return res;
}
    19be:	4620      	mov	r0, r4
    19c0:	b003      	add	sp, #12
    19c2:	bd30      	pop	{r4, r5, pc}

000019c4 <ff_cre_syncobj>:
ff_cre_syncobj():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:58

int ff_cre_syncobj (	/* 1:Function succeeded, 0:Could not create the sync object */
	BYTE vol,			/* Corresponding volume (logical drive number) */
	FF_SYNC_t* sobj		/* Pointer to return the created sync object */
)
{
    19c4:	b510      	push	{r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:75
//	*sobj = OSMutexCreate(0, &err);
//	return (int)(err == OS_NO_ERR);

	/* FreeRTOS */
	static StaticSemaphore_t mutex_struct;
	*sobj = xSemaphoreCreateMutexStatic(&mutex_struct);
    19c6:	2001      	movs	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:58
{
    19c8:	460c      	mov	r4, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:75
	*sobj = xSemaphoreCreateMutexStatic(&mutex_struct);
    19ca:	4904      	ldr	r1, [pc, #16]	; (19dc <ff_cre_syncobj+0x18>)
    19cc:	f002 f9da 	bl	3d84 <xQueueCreateMutexStatic>
    19d0:	6020      	str	r0, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:82
	return (int)(*sobj != NULL);

	/* CMSIS-RTOS */
//	*sobj = osMutexCreate(&Mutex[vol]);
//	return (int)(*sobj != NULL);
}
    19d2:	3000      	adds	r0, #0
    19d4:	bf18      	it	ne
    19d6:	2001      	movne	r0, #1
    19d8:	bd10      	pop	{r4, pc}
    19da:	bf00      	nop
    19dc:	10000390 	.word	0x10000390

000019e0 <ff_del_syncobj>:
ff_del_syncobj():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:96
*/

int ff_del_syncobj (	/* 1:Function succeeded, 0:Could not delete due to an error */
	FF_SYNC_t sobj		/* Sync object tied to the logical drive to be deleted */
)
{
    19e0:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:109
//	OS_ERR err;
//	OSMutexDel(sobj, OS_DEL_ALWAYS, &err);
//	return (int)(err == OS_NO_ERR);

	/* FreeRTOS */
    vSemaphoreDelete(sobj);
    19e2:	f002 fc41 	bl	4268 <vQueueDelete>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:114
	return 1;

	/* CMSIS-RTOS */
//	return (int)(osMutexDelete(sobj) == osOK);
}
    19e6:	2001      	movs	r0, #1
    19e8:	bd08      	pop	{r3, pc}

000019ea <ff_req_grant>:
ff_req_grant():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:127
*/

int ff_req_grant (	/* 1:Got a grant to access the volume, 0:Could not get a grant */
	FF_SYNC_t sobj	/* Sync object to wait */
)
{
    19ea:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:140
//	OS_ERR err;
//	OSMutexPend(sobj, FF_FS_TIMEOUT, &err));
//	return (int)(err == OS_NO_ERR);

	/* FreeRTOS */
	return (int)(xSemaphoreTake(sobj, FF_FS_TIMEOUT) == pdTRUE);
    19ec:	f640 31b8 	movw	r1, #3000	; 0xbb8
    19f0:	f002 fb2c 	bl	404c <xQueueSemaphoreTake>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:144

	/* CMSIS-RTOS */
//	return (int)(osMutexWait(sobj, FF_FS_TIMEOUT) == osOK);
}
    19f4:	1e43      	subs	r3, r0, #1
    19f6:	4258      	negs	r0, r3
    19f8:	4158      	adcs	r0, r3
    19fa:	bd08      	pop	{r3, pc}

000019fc <ff_rel_grant>:
ff_rel_grant():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:167

	/* uC/OS-II */
//	OSMutexPost(sobj);

	/* FreeRTOS */
	xSemaphoreGive(sobj);
    19fc:	2300      	movs	r3, #0
    19fe:	461a      	mov	r2, r3
    1a00:	4619      	mov	r1, r3
    1a02:	f002 b911 	b.w	3c28 <xQueueGenericSend>
    1a06:	Address 0x0000000000001a06 is out of bounds.


00001a08 <ff_uni2oem>:
ff_uni2oem():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15235
{
	WCHAR c = 0;
	const WCHAR *p = CVTBL(uc, FF_CODE_PAGE);


	if (uni < 0x80) {	/* ASCII? */
    1a08:	287f      	cmp	r0, #127	; 0x7f
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15230
{
    1a0a:	b510      	push	{r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15235
	if (uni < 0x80) {	/* ASCII? */
    1a0c:	d801      	bhi.n	1a12 <ff_uni2oem+0xa>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15236
		c = (WCHAR)uni;
    1a0e:	b280      	uxth	r0, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15246
			c = (c + 0x80) & 0xFF;
		}
	}

	return c;
}
    1a10:	bd10      	pop	{r4, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15239
		if (uni < 0x10000 && cp == FF_CODE_PAGE) {	/* Is it in BMP and valid code page? */
    1a12:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
    1a16:	d213      	bcs.n	1a40 <ff_uni2oem+0x38>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15239 (discriminator 1)
    1a18:	f240 13b5 	movw	r3, #437	; 0x1b5
    1a1c:	4299      	cmp	r1, r3
    1a1e:	d10f      	bne.n	1a40 <ff_uni2oem+0x38>
    1a20:	4908      	ldr	r1, [pc, #32]	; (1a44 <ff_uni2oem+0x3c>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15239
    1a22:	2200      	movs	r2, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15240 (discriminator 3)
			for (c = 0; c < 0x80 && uni != p[c]; c++) ;
    1a24:	f831 4b02 	ldrh.w	r4, [r1], #2
    1a28:	4284      	cmp	r4, r0
    1a2a:	b293      	uxth	r3, r2
    1a2c:	d103      	bne.n	1a36 <ff_uni2oem+0x2e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15241
			c = (c + 0x80) & 0xFF;
    1a2e:	f103 0080 	add.w	r0, r3, #128	; 0x80
    1a32:	b2c0      	uxtb	r0, r0
    1a34:	e7ec      	b.n	1a10 <ff_uni2oem+0x8>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15240 (discriminator 4)
			for (c = 0; c < 0x80 && uni != p[c]; c++) ;
    1a36:	3201      	adds	r2, #1
    1a38:	2a80      	cmp	r2, #128	; 0x80
    1a3a:	d1f3      	bne.n	1a24 <ff_uni2oem+0x1c>
    1a3c:	4613      	mov	r3, r2
    1a3e:	e7f6      	b.n	1a2e <ff_uni2oem+0x26>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15231
	WCHAR c = 0;
    1a40:	2000      	movs	r0, #0
    1a42:	e7e5      	b.n	1a10 <ff_uni2oem+0x8>
    1a44:	0000c916 	.word	0x0000c916

00001a48 <ff_oem2uni>:
ff_oem2uni():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15257
{
	WCHAR c = 0;
	const WCHAR *p = CVTBL(uc, FF_CODE_PAGE);


	if (oem < 0x80) {	/* ASCII? */
    1a48:	287f      	cmp	r0, #127	; 0x7f
    1a4a:	d90d      	bls.n	1a68 <ff_oem2uni+0x20>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15261
		c = oem;

	} else {			/* Extended char */
		if (cp == FF_CODE_PAGE) {	/* Is it a valid code page? */
    1a4c:	f240 13b5 	movw	r3, #437	; 0x1b5
    1a50:	4299      	cmp	r1, r3
    1a52:	d108      	bne.n	1a66 <ff_oem2uni+0x1e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15262
			if (oem < 0x100) c = p[oem - 0x80];
    1a54:	28ff      	cmp	r0, #255	; 0xff
    1a56:	d806      	bhi.n	1a66 <ff_oem2uni+0x1e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15262 (discriminator 1)
    1a58:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
    1a5c:	4b03      	ldr	r3, [pc, #12]	; (1a6c <ff_oem2uni+0x24>)
    1a5e:	3880      	subs	r0, #128	; 0x80
    1a60:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
    1a64:	4770      	bx	lr
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15253
	WCHAR c = 0;
    1a66:	2000      	movs	r0, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15267
		}
	}

	return c;
}
    1a68:	4770      	bx	lr
    1a6a:	bf00      	nop
    1a6c:	0000c916 	.word	0x0000c916

00001a70 <ff_wtoupper>:
ff_wtoupper():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15567

		0x0000	/* EOT */
	};


	if (uni < 0x10000) {	/* Is it in BMP? */
    1a70:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15471
{
    1a74:	b5f0      	push	{r4, r5, r6, r7, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15567
	if (uni < 0x10000) {	/* Is it in BMP? */
    1a76:	d221      	bcs.n	1abc <ff_wtoupper+0x4c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15569
		uc = (WORD)uni;
		p = uc < 0x1000 ? cvt1 : cvt2;
    1a78:	4a1e      	ldr	r2, [pc, #120]	; (1af4 <ff_wtoupper+0x84>)
    1a7a:	491f      	ldr	r1, [pc, #124]	; (1af8 <ff_wtoupper+0x88>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15568
		uc = (WORD)uni;
    1a7c:	b283      	uxth	r3, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15569
		p = uc < 0x1000 ? cvt1 : cvt2;
    1a7e:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
    1a82:	bf28      	it	cs
    1a84:	460a      	movcs	r2, r1
    1a86:	1d14      	adds	r4, r2, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15571
		for (;;) {
			bc = *p++;								/* Get the block base */
    1a88:	f834 2c04 	ldrh.w	r2, [r4, #-4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15572
			if (bc == 0 || uc < bc) break;			/* Not matched? */
    1a8c:	4621      	mov	r1, r4
    1a8e:	b1a2      	cbz	r2, 1aba <ff_wtoupper+0x4a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15572 (discriminator 1)
    1a90:	4293      	cmp	r3, r2
    1a92:	d312      	bcc.n	1aba <ff_wtoupper+0x4a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15573
			nc = *p++; cmd = nc >> 8; nc &= 0xFF;	/* Get processing command and block size */
    1a94:	f834 5c02 	ldrh.w	r5, [r4, #-2]
    1a98:	0a2e      	lsrs	r6, r5, #8
    1a9a:	b2ed      	uxtb	r5, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15574
			if (uc < bc + nc) {	/* In the block? */
    1a9c:	18af      	adds	r7, r5, r2
    1a9e:	42b8      	cmp	r0, r7
    1aa0:	da22      	bge.n	1ae8 <ff_wtoupper+0x78>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15575
				switch (cmd) {
    1aa2:	2e08      	cmp	r6, #8
    1aa4:	d809      	bhi.n	1aba <ff_wtoupper+0x4a>
    1aa6:	e8df f006 	tbb	[pc, r6]
    1aaa:	0a05      	.short	0x0a05
    1aac:	16141210 	.word	0x16141210
    1ab0:	1a18      	.short	0x1a18
    1ab2:	1c          	.byte	0x1c
    1ab3:	00          	.byte	0x00
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15576
				case 0:	uc = p[uc - bc]; break;		/* Table conversion */
    1ab4:	1a80      	subs	r0, r0, r2
    1ab6:	f834 3010 	ldrh.w	r3, [r4, r0, lsl #1]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15590
				}
				break;
			}
			if (cmd == 0) p += nc;	/* Skip table if needed */
		}
		uni = uc;
    1aba:	4618      	mov	r0, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15594
	}

	return uni;
}
    1abc:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15577
				case 1:	uc -= (uc - bc) & 1; break;	/* Case pairs */
    1abe:	1a98      	subs	r0, r3, r2
    1ac0:	f000 0001 	and.w	r0, r0, #1
    1ac4:	1a1b      	subs	r3, r3, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15584
				case 8:	uc -= 0x1C60; break;		/* Shift -0x1C60 */
    1ac6:	b29b      	uxth	r3, r3
    1ac8:	e7f7      	b.n	1aba <ff_wtoupper+0x4a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15578
				case 2: uc -= 16; break;			/* Shift -16 */
    1aca:	3b10      	subs	r3, #16
    1acc:	e7fb      	b.n	1ac6 <ff_wtoupper+0x56>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15579
				case 3:	uc -= 32; break;			/* Shift -32 */
    1ace:	3b20      	subs	r3, #32
    1ad0:	e7f9      	b.n	1ac6 <ff_wtoupper+0x56>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15580
				case 4:	uc -= 48; break;			/* Shift -48 */
    1ad2:	3b30      	subs	r3, #48	; 0x30
    1ad4:	e7f7      	b.n	1ac6 <ff_wtoupper+0x56>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15581
				case 5:	uc -= 26; break;			/* Shift -26 */
    1ad6:	3b1a      	subs	r3, #26
    1ad8:	e7f5      	b.n	1ac6 <ff_wtoupper+0x56>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15582
				case 6:	uc += 8; break;				/* Shift +8 */
    1ada:	3308      	adds	r3, #8
    1adc:	e7f3      	b.n	1ac6 <ff_wtoupper+0x56>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15583
				case 7: uc -= 80; break;			/* Shift -80 */
    1ade:	3b50      	subs	r3, #80	; 0x50
    1ae0:	e7f1      	b.n	1ac6 <ff_wtoupper+0x56>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15584
				case 8:	uc -= 0x1C60; break;		/* Shift -0x1C60 */
    1ae2:	f5a3 53e3 	sub.w	r3, r3, #7264	; 0x1c60
    1ae6:	e7ee      	b.n	1ac6 <ff_wtoupper+0x56>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15588
			if (cmd == 0) p += nc;	/* Skip table if needed */
    1ae8:	3404      	adds	r4, #4
    1aea:	2e00      	cmp	r6, #0
    1aec:	d1cc      	bne.n	1a88 <ff_wtoupper+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15588 (discriminator 1)
    1aee:	eb01 0245 	add.w	r2, r1, r5, lsl #1
    1af2:	e7c8      	b.n	1a86 <ff_wtoupper+0x16>
    1af4:	0000c668 	.word	0x0000c668
    1af8:	0000c85a 	.word	0x0000c85a

00001afc <disk_initialize>:
disk_initialize():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:19
 */
typedef enum {
  DRIVE__SD_CARD = 0,
} drive_e;

DSTATUS disk_initialize(BYTE drv) {
    1afc:	b510      	push	{r4, lr}
    1afe:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:22
  DSTATUS status = RES_PARERR;

  spi2_mutex__acquire();
    1b00:	f001 f898 	bl	2c34 <spi2_mutex__acquire>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:24
  {
    switch (drv) {
    1b04:	b934      	cbnz	r4, 1b14 <disk_initialize+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:26
    case DRIVE__SD_CARD:
      status = sd_card__initialize();
    1b06:	f000 f90f 	bl	1d28 <sd_card__initialize>
    1b0a:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:33
    default:
      status = RES_PARERR;
      break;
    }
  }
  spi2_mutex__release();
    1b0c:	f001 f8ac 	bl	2c68 <spi2_mutex__release>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:36

  return status;
}
    1b10:	4620      	mov	r0, r4
    1b12:	bd10      	pop	{r4, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:29
      status = RES_PARERR;
    1b14:	2404      	movs	r4, #4
    1b16:	e7f9      	b.n	1b0c <disk_initialize+0x10>

00001b18 <disk_status>:
disk_status():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:43
DSTATUS disk_status(BYTE drv) {
  DSTATUS status = RES_PARERR;

  // No mutex needed here
  {
    switch (drv) {
    1b18:	b908      	cbnz	r0, 1b1e <disk_status+0x6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:45
    case DRIVE__SD_CARD:
      status = sd_card__status();
    1b1a:	f000 b9a3 	b.w	1e64 <sd_card__status>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:54
      break;
    }
  }

  return status;
}
    1b1e:	2004      	movs	r0, #4
    1b20:	4770      	bx	lr

00001b22 <disk_read>:
disk_read():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:56

DRESULT disk_read(BYTE drv, BYTE *buff, DWORD sector, UINT count) {
    1b22:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1b24:	4607      	mov	r7, r0
    1b26:	460c      	mov	r4, r1
    1b28:	4615      	mov	r5, r2
    1b2a:	461e      	mov	r6, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:59
  DSTATUS status = RES_PARERR;

  spi2_mutex__acquire();
    1b2c:	f001 f882 	bl	2c34 <spi2_mutex__acquire>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:61
  {
    switch (drv) {
    1b30:	b94f      	cbnz	r7, 1b46 <disk_read+0x24>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:63
    case DRIVE__SD_CARD:
      status = sd_card__read(buff, sector, count);
    1b32:	4620      	mov	r0, r4
    1b34:	b2f2      	uxtb	r2, r6
    1b36:	4629      	mov	r1, r5
    1b38:	f000 f99c 	bl	1e74 <sd_card__read>
    1b3c:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:70
    default:
      status = RES_PARERR;
      break;
    }
  }
  spi2_mutex__release();
    1b3e:	f001 f893 	bl	2c68 <spi2_mutex__release>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:73

  return status;
}
    1b42:	4620      	mov	r0, r4
    1b44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:66
      status = RES_PARERR;
    1b46:	2404      	movs	r4, #4
    1b48:	e7f9      	b.n	1b3e <disk_read+0x1c>

00001b4a <disk_write>:
disk_write():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:75

DRESULT disk_write(BYTE drv, const BYTE *buff, DWORD sector, UINT count) {
    1b4a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1b4c:	4607      	mov	r7, r0
    1b4e:	460c      	mov	r4, r1
    1b50:	4615      	mov	r5, r2
    1b52:	461e      	mov	r6, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:78
  DSTATUS status = RES_PARERR;

  spi2_mutex__acquire();
    1b54:	f001 f86e 	bl	2c34 <spi2_mutex__acquire>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:80
  {
    switch (drv) {
    1b58:	b94f      	cbnz	r7, 1b6e <disk_write+0x24>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:82
    case DRIVE__SD_CARD:
      status = sd_card__write(buff, sector, count);
    1b5a:	4620      	mov	r0, r4
    1b5c:	b2f2      	uxtb	r2, r6
    1b5e:	4629      	mov	r1, r5
    1b60:	f000 f9ce 	bl	1f00 <sd_card__write>
    1b64:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:89
    default:
      status = RES_PARERR;
      break;
    }
  }
  spi2_mutex__release();
    1b66:	f001 f87f 	bl	2c68 <spi2_mutex__release>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:92

  return status;
}
    1b6a:	4620      	mov	r0, r4
    1b6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:85
      status = RES_PARERR;
    1b6e:	2404      	movs	r4, #4
    1b70:	e7f9      	b.n	1b66 <disk_write+0x1c>

00001b72 <disk_ioctl>:
disk_ioctl():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:94

DRESULT disk_ioctl(BYTE drv, BYTE ctrl, void *buff) {
    1b72:	b570      	push	{r4, r5, r6, lr}
    1b74:	4606      	mov	r6, r0
    1b76:	460c      	mov	r4, r1
    1b78:	4615      	mov	r5, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:97
  DSTATUS status = RES_PARERR;

  spi2_mutex__acquire();
    1b7a:	f001 f85b 	bl	2c34 <spi2_mutex__acquire>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:99
  {
    switch (drv) {
    1b7e:	b946      	cbnz	r6, 1b92 <disk_ioctl+0x20>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:101
    case DRIVE__SD_CARD:
      status = sd_card__ioctl(ctrl, buff);
    1b80:	4620      	mov	r0, r4
    1b82:	4629      	mov	r1, r5
    1b84:	f000 fa10 	bl	1fa8 <sd_card__ioctl>
    1b88:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:108
    default:
      status = RES_PARERR;
      break;
    }
  }
  spi2_mutex__release();
    1b8a:	f001 f86d 	bl	2c68 <spi2_mutex__release>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:111

  return status;
}
    1b8e:	4620      	mov	r0, r4
    1b90:	bd70      	pop	{r4, r5, r6, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:104
      status = RES_PARERR;
    1b92:	2404      	movs	r4, #4
    1b94:	e7f9      	b.n	1b8a <disk_ioctl+0x18>

00001b96 <get_fattime>:
get_fattime():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/fatfs_time.c:20
            | ((DWORD) sysTime.hour << 11)
            | ((DWORD) sysTime.min << 5)
            | ((DWORD) sysTime.sec >> 1);
            #endif
            return 0;
    1b96:	2000      	movs	r0, #0
    1b98:	4770      	bx	lr

00001b9a <sd_card__wait_for_ready>:
sd_card__wait_for_ready():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:56
#endif

static volatile DSTATUS g_disk_status = STA_NOINIT; ///< Disk status
static BYTE g_card_type;                            ///< Card type flags

static BYTE sd_card__wait_for_ready(void) {
    1b9a:	b538      	push	{r3, r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:60
  BYTE res;

  /* Wait for ready in timeout of 500ms */
  const uint32_t timeout = SD_CARD__PLATFORM_GET_MS() + 500;
    1b9c:	f001 f8b4 	bl	2d08 <sys_time__get_uptime_ms>
    1ba0:	f500 75fa 	add.w	r5, r0, #500	; 0x1f4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:61
  SD_CARD__RECEIVE_BYTE();
    1ba4:	20ff      	movs	r0, #255	; 0xff
    1ba6:	f003 ff8d 	bl	5ac4 <ssp2__exchange_byte>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:64 (discriminator 2)

  do {
    res = SD_CARD__RECEIVE_BYTE();
    1baa:	20ff      	movs	r0, #255	; 0xff
    1bac:	f003 ff8a 	bl	5ac4 <ssp2__exchange_byte>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:65 (discriminator 2)
  } while ((res != 0xFF) && SD_CARD__PLATFORM_GET_MS() < timeout);
    1bb0:	28ff      	cmp	r0, #255	; 0xff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:64 (discriminator 2)
    res = SD_CARD__RECEIVE_BYTE();
    1bb2:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:65 (discriminator 2)
  } while ((res != 0xFF) && SD_CARD__PLATFORM_GET_MS() < timeout);
    1bb4:	d003      	beq.n	1bbe <sd_card__wait_for_ready+0x24>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:65 (discriminator 1)
    1bb6:	f001 f8a7 	bl	2d08 <sys_time__get_uptime_ms>
    1bba:	4285      	cmp	r5, r0
    1bbc:	d8f5      	bhi.n	1baa <sd_card__wait_for_ready+0x10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:68

  return res;
}
    1bbe:	4620      	mov	r0, r4
    1bc0:	bd38      	pop	{r3, r4, r5, pc}
    1bc2:	Address 0x0000000000001bc2 is out of bounds.


00001bc4 <sd_card__power_off>:
sd_card__power_off():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:74

static void sd_card__power_on(void) {
  // Power on the SD-Card Socket if hardware allows
}

static void sd_card__power_off(void) {
    1bc4:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:75
  SD_CARD__SELECT();
    1bc6:	f003 fb9b 	bl	5300 <board_io__sd_card_cs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:76
  sd_card__wait_for_ready();
    1bca:	f7ff ffe6 	bl	1b9a <sd_card__wait_for_ready>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:77
  SD_CARD__DESELECT();
    1bce:	f003 fb9f 	bl	5310 <board_io__sd_card_ds>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:80

  // Power off the SD-Card Socket if hardware allows
  g_disk_status |= STA_NOINIT; // Set STA_NOINIT
    1bd2:	4a03      	ldr	r2, [pc, #12]	; (1be0 <sd_card__power_off+0x1c>)
    1bd4:	7813      	ldrb	r3, [r2, #0]
    1bd6:	f043 0301 	orr.w	r3, r3, #1
    1bda:	7013      	strb	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:81
}
    1bdc:	bd08      	pop	{r3, pc}
    1bde:	bf00      	nop
    1be0:	10000008 	.word	0x10000008

00001be4 <sd_card__transmit_datablock>:
sd_card__transmit_datablock():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:129
}

#if SD_CARD__READONLY == 0
static int sd_card__transmit_datablock(const BYTE *buff, /* 512 byte data block to be transmitted */
                                       BYTE token        /* Data/Stop token */
) {
    1be4:	b538      	push	{r3, r4, r5, lr}
    1be6:	4605      	mov	r5, r0
    1be8:	460c      	mov	r4, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:132
  BYTE resp;

  if (sd_card__wait_for_ready() != 0xFF) {
    1bea:	f7ff ffd6 	bl	1b9a <sd_card__wait_for_ready>
    1bee:	28ff      	cmp	r0, #255	; 0xff
    1bf0:	d121      	bne.n	1c36 <sd_card__transmit_datablock+0x52>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:136
    return 0;
  }

  SD_CARD__TRANSMIT_BYTE(token);
    1bf2:	4620      	mov	r0, r4
    1bf4:	f003 ff66 	bl	5ac4 <ssp2__exchange_byte>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:138
  /* Xmit data token */
  if (token != 0xFD) { /* Is data token */
    1bf8:	2cfd      	cmp	r4, #253	; 0xfd
    1bfa:	d01e      	beq.n	1c3a <sd_card__transmit_datablock+0x56>
    1bfc:	1cac      	adds	r4, r5, #2
    1bfe:	f205 2502 	addw	r5, r5, #514	; 0x202
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:144 (discriminator 1)
#if OPTIMIZE_SSP_SPI_WRITE
    SD_CARD__WRITE_BLOCK(buff, 512);
#else
    unsigned char wc = 0;
    do { /* Xmit the 512 byte data block to MMC */
      SD_CARD__TRANSMIT_BYTE(*buff++);
    1c02:	f814 0c02 	ldrb.w	r0, [r4, #-2]
    1c06:	f003 ff5d 	bl	5ac4 <ssp2__exchange_byte>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:145 (discriminator 1)
      SD_CARD__TRANSMIT_BYTE(*buff++);
    1c0a:	3402      	adds	r4, #2
    1c0c:	f814 0c03 	ldrb.w	r0, [r4, #-3]
    1c10:	f003 ff58 	bl	5ac4 <ssp2__exchange_byte>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:146 (discriminator 1)
    } while (--wc);
    1c14:	42ac      	cmp	r4, r5
    1c16:	d1f4      	bne.n	1c02 <sd_card__transmit_datablock+0x1e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:149
#endif

    SD_CARD__TRANSMIT_BYTE(0xFF);
    1c18:	20ff      	movs	r0, #255	; 0xff
    1c1a:	f003 ff53 	bl	5ac4 <ssp2__exchange_byte>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:151
    /* CRC (Dummy) */
    SD_CARD__TRANSMIT_BYTE(0xFF);
    1c1e:	20ff      	movs	r0, #255	; 0xff
    1c20:	f003 ff50 	bl	5ac4 <ssp2__exchange_byte>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:152
    resp = SD_CARD__RECEIVE_BYTE(); /* Reveive data response */
    1c24:	20ff      	movs	r0, #255	; 0xff
    1c26:	f003 ff4d 	bl	5ac4 <ssp2__exchange_byte>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:153
    if ((resp & 0x1F) != 0x05) {      /* If not accepted, return with error */
    1c2a:	f000 001f 	and.w	r0, r0, #31
    1c2e:	1f43      	subs	r3, r0, #5
    1c30:	4258      	negs	r0, r3
    1c32:	4158      	adcs	r0, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:159
      return 0;
    }
  }

  return 1;
}
    1c34:	bd38      	pop	{r3, r4, r5, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:133
    return 0;
    1c36:	2000      	movs	r0, #0
    1c38:	e7fc      	b.n	1c34 <sd_card__transmit_datablock+0x50>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:158
  return 1;
    1c3a:	2001      	movs	r0, #1
    1c3c:	e7fa      	b.n	1c34 <sd_card__transmit_datablock+0x50>

00001c3e <sd_card__send_command>:
sd_card__send_command():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:164
#endif /* SD_CARD__READONLY */

static BYTE sd_card__send_command(BYTE cmd, /* Command byte */
                                  DWORD arg /* Argument */
) {
    1c3e:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:167
  BYTE n, res;

  if (cmd & 0x80) { /* ACMD<n> is the command sequense of CMD55-CMD<n> */
    1c40:	0602      	lsls	r2, r0, #24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:164
) {
    1c42:	4604      	mov	r4, r0
    1c44:	460d      	mov	r5, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:167
  if (cmd & 0x80) { /* ACMD<n> is the command sequense of CMD55-CMD<n> */
    1c46:	d507      	bpl.n	1c58 <sd_card__send_command+0x1a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:169
    cmd &= 0x7F;
    res = sd_card__send_command(CMD55, 0);
    1c48:	2100      	movs	r1, #0
    1c4a:	2077      	movs	r0, #119	; 0x77
    1c4c:	f7ff fff7 	bl	1c3e <sd_card__send_command>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:170
    if (res > 1) {
    1c50:	2801      	cmp	r0, #1
    1c52:	d831      	bhi.n	1cb8 <sd_card__send_command+0x7a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:168
    cmd &= 0x7F;
    1c54:	f004 047f 	and.w	r4, r4, #127	; 0x7f
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:177
      return res;
    }
  }

  /* Select the card and wait for ready */
  SD_CARD__DESELECT();
    1c58:	f003 fb5a 	bl	5310 <board_io__sd_card_ds>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:178
  SD_CARD__SELECT(); // Wait for card ready
    1c5c:	f003 fb50 	bl	5300 <board_io__sd_card_cs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:180

  if (sd_card__wait_for_ready() != 0xFF) {
    1c60:	f7ff ff9b 	bl	1b9a <sd_card__wait_for_ready>
    1c64:	28ff      	cmp	r0, #255	; 0xff
    1c66:	d12b      	bne.n	1cc0 <sd_card__send_command+0x82>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:185
    SD_CARD__DEBUG_PRINTF("ERROR: sd_card__wait_for_ready() did not return 0xFF\n");
    return 0xFF;
  }

  if (cmd == CMD0) {
    1c68:	2c40      	cmp	r4, #64	; 0x40
    1c6a:	d027      	beq.n	1cbc <sd_card__send_command+0x7e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:191
    n = 0x95; /* Valid CRC for CMD0(0) */
  }
  else if (cmd == CMD8) {
    n = 0x87; /* Valid CRC for CMD8(0x1AA) */
  } else {
    n = 0x01; /* Dummy CRC + Stop */
    1c6c:	2c48      	cmp	r4, #72	; 0x48
    1c6e:	bf0c      	ite	eq
    1c70:	2387      	moveq	r3, #135	; 0x87
    1c72:	2301      	movne	r3, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:195
  }

  /* Start + Command index + 32-bit arguments */
  const uint8_t bytes_to_transmit[] = {cmd, (BYTE)(arg >> 24), (BYTE)(arg >> 16), (BYTE)(arg >> 8), (BYTE)(arg >> 0), n};
    1c74:	0e2a      	lsrs	r2, r5, #24
    1c76:	f88d 2001 	strb.w	r2, [sp, #1]
    1c7a:	0c2a      	lsrs	r2, r5, #16
    1c7c:	f88d 2002 	strb.w	r2, [sp, #2]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:196
  ssp2__dma_write_block(bytes_to_transmit, sizeof(bytes_to_transmit));
    1c80:	2106      	movs	r1, #6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:195
  const uint8_t bytes_to_transmit[] = {cmd, (BYTE)(arg >> 24), (BYTE)(arg >> 16), (BYTE)(arg >> 8), (BYTE)(arg >> 0), n};
    1c82:	0a2a      	lsrs	r2, r5, #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:196
  ssp2__dma_write_block(bytes_to_transmit, sizeof(bytes_to_transmit));
    1c84:	4668      	mov	r0, sp
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:195
  const uint8_t bytes_to_transmit[] = {cmd, (BYTE)(arg >> 24), (BYTE)(arg >> 16), (BYTE)(arg >> 8), (BYTE)(arg >> 0), n};
    1c86:	f88d 4000 	strb.w	r4, [sp]
    1c8a:	f88d 2003 	strb.w	r2, [sp, #3]
    1c8e:	f88d 5004 	strb.w	r5, [sp, #4]
    1c92:	f88d 3005 	strb.w	r3, [sp, #5]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:196
  ssp2__dma_write_block(bytes_to_transmit, sizeof(bytes_to_transmit));
    1c96:	f003 ff1f 	bl	5ad8 <ssp2__dma_write_block>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:199

  /* Receive command response */
  if (cmd == CMD12) {
    1c9a:	2c4c      	cmp	r4, #76	; 0x4c
    1c9c:	d102      	bne.n	1ca4 <sd_card__send_command+0x66>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:200
    SD_CARD__RECEIVE_BYTE(); /* Skip a stuff byte when stop reading */
    1c9e:	20ff      	movs	r0, #255	; 0xff
    1ca0:	f003 ff10 	bl	5ac4 <ssp2__exchange_byte>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:191
    n = 0x01; /* Dummy CRC + Stop */
    1ca4:	240a      	movs	r4, #10
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:205
  }
  
  n = 10; /* Wait for a valid response in timeout of 10 attempts */
  do {
    res = SD_CARD__RECEIVE_BYTE();
    1ca6:	20ff      	movs	r0, #255	; 0xff
    1ca8:	f003 ff0c 	bl	5ac4 <ssp2__exchange_byte>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:206
  } while ((res & 0x80) && --n);
    1cac:	0603      	lsls	r3, r0, #24
    1cae:	d503      	bpl.n	1cb8 <sd_card__send_command+0x7a>
    1cb0:	3c01      	subs	r4, #1
    1cb2:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
    1cb6:	d1f6      	bne.n	1ca6 <sd_card__send_command+0x68>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:213
  if (n == 0) {
    SD_CARD__DEBUG_PRINTF("Timeout during card read\n");
  }

  return res; /* Return with the response value */
}
    1cb8:	b003      	add	sp, #12
    1cba:	bd30      	pop	{r4, r5, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:186
    n = 0x95; /* Valid CRC for CMD0(0) */
    1cbc:	2395      	movs	r3, #149	; 0x95
    1cbe:	e7d9      	b.n	1c74 <sd_card__send_command+0x36>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:182
    return 0xFF;
    1cc0:	20ff      	movs	r0, #255	; 0xff
    1cc2:	e7f9      	b.n	1cb8 <sd_card__send_command+0x7a>

00001cc4 <sd_card__read_datablock>:
sd_card__read_datablock():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:85
) {
    1cc4:	b570      	push	{r4, r5, r6, lr}
    1cc6:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:87
  const uint32_t time_now = SD_CARD__PLATFORM_GET_MS();
    1cc8:	f001 f81e 	bl	2d08 <sys_time__get_uptime_ms>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:88
  const uint32_t timeout = time_now + 100;
    1ccc:	f100 0664 	add.w	r6, r0, #100	; 0x64
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:92
    token = SD_CARD__RECEIVE_BYTE();
    1cd0:	20ff      	movs	r0, #255	; 0xff
    1cd2:	f003 fef7 	bl	5ac4 <ssp2__exchange_byte>
    1cd6:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:95
    if (SD_CARD__PLATFORM_GET_MS() > timeout) {
    1cd8:	f001 f816 	bl	2d08 <sys_time__get_uptime_ms>
    1cdc:	4286      	cmp	r6, r0
    1cde:	d301      	bcc.n	1ce4 <sd_card__read_datablock+0x20>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:98
  } while (token == 0xFF);
    1ce0:	2cff      	cmp	r4, #255	; 0xff
    1ce2:	d0f5      	beq.n	1cd0 <sd_card__read_datablock+0xc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:100
  if (token != 0xFE) {
    1ce4:	2cfe      	cmp	r4, #254	; 0xfe
    1ce6:	d10c      	bne.n	1d02 <sd_card__read_datablock+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:109
    SD_CARD__READ_BLOCK(buff, 512);
    1ce8:	f44f 7100 	mov.w	r1, #512	; 0x200
    1cec:	4628      	mov	r0, r5
    1cee:	f003 fef6 	bl	5ade <ssp2__dma_read_block>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:120
  SD_CARD__RECEIVE_BYTE(); /* Discard CRC */
    1cf2:	20ff      	movs	r0, #255	; 0xff
    1cf4:	f003 fee6 	bl	5ac4 <ssp2__exchange_byte>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:121
  SD_CARD__RECEIVE_BYTE();
    1cf8:	20ff      	movs	r0, #255	; 0xff
    1cfa:	f003 fee3 	bl	5ac4 <ssp2__exchange_byte>
    1cfe:	2001      	movs	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:124
}
    1d00:	bd70      	pop	{r4, r5, r6, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:102
    return 0; /* If not valid data token, return with error */
    1d02:	2000      	movs	r0, #0
    1d04:	e7fc      	b.n	1d00 <sd_card__read_datablock+0x3c>
    1d06:	Address 0x0000000000001d06 is out of bounds.


00001d08 <sd_card__update_status>:
sd_card__update_status():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:527

  return res;
}
#endif /* SD_CARD__USE_IOCTL != 0 */

void sd_card__update_status(void) {
    1d08:	b538      	push	{r3, r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:528
  BYTE s = g_disk_status;
    1d0a:	4d06      	ldr	r5, [pc, #24]	; (1d24 <sd_card__update_status+0x1c>)
    1d0c:	782c      	ldrb	r4, [r5, #0]
    1d0e:	b2e4      	uxtb	r4, r4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:530

  if (SD_CARD__IS_PRESENT()) {
    1d10:	f003 fb06 	bl	5320 <board_io__sd_card_is_present>
    1d14:	b118      	cbz	r0, 1d1e <sd_card__update_status+0x16>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:531
    s &= ~STA_NODISK;
    1d16:	f004 04fd 	and.w	r4, r4, #253	; 0xfd
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:536
  } else {
    s |= (STA_NODISK | STA_NOINIT);
  }

  g_disk_status = s;
    1d1a:	702c      	strb	r4, [r5, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:537
}
    1d1c:	bd38      	pop	{r3, r4, r5, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:533
    s |= (STA_NODISK | STA_NOINIT);
    1d1e:	f044 0403 	orr.w	r4, r4, #3
    1d22:	e7fa      	b.n	1d1a <sd_card__update_status+0x12>
    1d24:	10000008 	.word	0x10000008

00001d28 <sd_card__initialize>:
sd_card__initialize():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:215
DSTATUS sd_card__initialize() {
    1d28:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:218
  sd_card__update_status();
    1d2c:	f7ff ffec 	bl	1d08 <sd_card__update_status>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:220
  if (g_disk_status & STA_NODISK) {
    1d30:	4b4a      	ldr	r3, [pc, #296]	; (1e5c <sd_card__initialize+0x134>)
    1d32:	781a      	ldrb	r2, [r3, #0]
    1d34:	f012 0f02 	tst.w	r2, #2
    1d38:	461e      	mov	r6, r3
    1d3a:	d004      	beq.n	1d46 <sd_card__initialize+0x1e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:221
    return g_disk_status; /* No card in the socket */
    1d3c:	7818      	ldrb	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:292
  return g_disk_status;
    1d3e:	b2c0      	uxtb	r0, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:293
}
    1d40:	b002      	add	sp, #8
    1d42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:225
  SD_CARD__SET_SLOW_SPEED();
    1d46:	20c8      	movs	r0, #200	; 0xc8
    1d48:	f003 fe84 	bl	5a54 <ssp2__set_max_clock>
    1d4c:	250a      	movs	r5, #10
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:227 (discriminator 3)
    SD_CARD__RECEIVE_BYTE(); /* 80 dummy clocks */
    1d4e:	20ff      	movs	r0, #255	; 0xff
    1d50:	3d01      	subs	r5, #1
    1d52:	f003 feb7 	bl	5ac4 <ssp2__exchange_byte>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:226 (discriminator 3)
  for (n = 10; n; n--) {
    1d56:	f015 05ff 	ands.w	r5, r5, #255	; 0xff
    1d5a:	d1f8      	bne.n	1d4e <sd_card__initialize+0x26>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:230
  SD_CARD__SELECT();
    1d5c:	f003 fad0 	bl	5300 <board_io__sd_card_cs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:233
  if (sd_card__send_command(CMD0, 0) == 1) { /* Enter Idle state */
    1d60:	4629      	mov	r1, r5
    1d62:	2040      	movs	r0, #64	; 0x40
    1d64:	f7ff ff6b 	bl	1c3e <sd_card__send_command>
    1d68:	2801      	cmp	r0, #1
    1d6a:	4604      	mov	r4, r0
    1d6c:	d171      	bne.n	1e52 <sd_card__initialize+0x12a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:234
    const uint32_t timeout = SD_CARD__PLATFORM_GET_MS() + 1000;
    1d6e:	f000 ffcb 	bl	2d08 <sys_time__get_uptime_ms>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:235
    if (sd_card__send_command(CMD8, 0x1AA) == 1) { /* SDHC */\
    1d72:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:234
    const uint32_t timeout = SD_CARD__PLATFORM_GET_MS() + 1000;
    1d76:	f500 777a 	add.w	r7, r0, #1000	; 0x3e8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:235
    if (sd_card__send_command(CMD8, 0x1AA) == 1) { /* SDHC */\
    1d7a:	2048      	movs	r0, #72	; 0x48
    1d7c:	f7ff ff5f 	bl	1c3e <sd_card__send_command>
    1d80:	2801      	cmp	r0, #1
    1d82:	d148      	bne.n	1e16 <sd_card__initialize+0xee>
    1d84:	ad01      	add	r5, sp, #4
    1d86:	46a8      	mov	r8, r5
    1d88:	2404      	movs	r4, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:239 (discriminator 3)
        ocr[n] = SD_CARD__RECEIVE_BYTE();     /* Get trailing return value of R7 resp */
    1d8a:	20ff      	movs	r0, #255	; 0xff
    1d8c:	f003 fe9a 	bl	5ac4 <ssp2__exchange_byte>
    1d90:	3c01      	subs	r4, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:238 (discriminator 3)
      for (n = 0; n < 4; n++)
    1d92:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:239 (discriminator 3)
        ocr[n] = SD_CARD__RECEIVE_BYTE();     /* Get trailing return value of R7 resp */
    1d96:	f808 0b01 	strb.w	r0, [r8], #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:238 (discriminator 3)
      for (n = 0; n < 4; n++)
    1d9a:	d1f6      	bne.n	1d8a <sd_card__initialize+0x62>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:240
      if (ocr[2] == 0x01 && ocr[3] == 0xAA) { /* The card can work at vdd range of 2.7-3.6V */
    1d9c:	f89d 3006 	ldrb.w	r3, [sp, #6]
    1da0:	2b01      	cmp	r3, #1
    1da2:	d156      	bne.n	1e52 <sd_card__initialize+0x12a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:240 (discriminator 1)
    1da4:	f89d 3007 	ldrb.w	r3, [sp, #7]
    1da8:	2baa      	cmp	r3, #170	; 0xaa
    1daa:	d152      	bne.n	1e52 <sd_card__initialize+0x12a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:243 (discriminator 2)
        while (SD_CARD__PLATFORM_GET_MS() < timeout && sd_card__send_command(ACMD41, 1UL << 30)) {
    1dac:	f000 ffac 	bl	2d08 <sys_time__get_uptime_ms>
    1db0:	4287      	cmp	r7, r0
    1db2:	d906      	bls.n	1dc2 <sd_card__initialize+0x9a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:243 (discriminator 1)
    1db4:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    1db8:	20e9      	movs	r0, #233	; 0xe9
    1dba:	f7ff ff40 	bl	1c3e <sd_card__send_command>
    1dbe:	2800      	cmp	r0, #0
    1dc0:	d1f4      	bne.n	1dac <sd_card__initialize+0x84>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:247
        if (SD_CARD__PLATFORM_GET_MS() < timeout &&
    1dc2:	f000 ffa1 	bl	2d08 <sys_time__get_uptime_ms>
    1dc6:	4287      	cmp	r7, r0
    1dc8:	d943      	bls.n	1e52 <sd_card__initialize+0x12a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:248 (discriminator 1)
            sd_card__send_command(CMD58, 0) == 0) { /* Check CCS bit in the OCR */
    1dca:	2100      	movs	r1, #0
    1dcc:	207a      	movs	r0, #122	; 0x7a
    1dce:	f7ff ff36 	bl	1c3e <sd_card__send_command>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:247 (discriminator 1)
        if (SD_CARD__PLATFORM_GET_MS() < timeout &&
    1dd2:	2800      	cmp	r0, #0
    1dd4:	d13d      	bne.n	1e52 <sd_card__initialize+0x12a>
    1dd6:	2404      	movs	r4, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:250 (discriminator 3)
            ocr[n] = SD_CARD__RECEIVE_BYTE();
    1dd8:	20ff      	movs	r0, #255	; 0xff
    1dda:	f003 fe73 	bl	5ac4 <ssp2__exchange_byte>
    1dde:	3c01      	subs	r4, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:249 (discriminator 3)
          for (n = 0; n < 4; n++) {
    1de0:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:250 (discriminator 3)
            ocr[n] = SD_CARD__RECEIVE_BYTE();
    1de4:	f805 0b01 	strb.w	r0, [r5], #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:249 (discriminator 3)
          for (n = 0; n < 4; n++) {
    1de8:	d1f6      	bne.n	1dd8 <sd_card__initialize+0xb0>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:252
          ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;
    1dea:	f89d 3004 	ldrb.w	r3, [sp, #4]
    1dee:	f013 0f40 	tst.w	r3, #64	; 0x40
    1df2:	bf14      	ite	ne
    1df4:	240c      	movne	r4, #12
    1df6:	2404      	moveq	r4, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:282
  g_card_type = ty;
    1df8:	4b19      	ldr	r3, [pc, #100]	; (1e60 <sd_card__initialize+0x138>)
    1dfa:	701c      	strb	r4, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:283
  SD_CARD__DESELECT();
    1dfc:	f003 fa88 	bl	5310 <board_io__sd_card_ds>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:285
  if (ty) {                       /* Initialization succeded */
    1e00:	b34c      	cbz	r4, 1e56 <sd_card__initialize+0x12e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:286
    g_disk_status &= ~STA_NOINIT; /* Clear STA_NOINIT */
    1e02:	7833      	ldrb	r3, [r6, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:287
    SD_CARD__SET_FAST_SPEED();
    1e04:	f645 50c0 	movw	r0, #24000	; 0x5dc0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:286
    g_disk_status &= ~STA_NOINIT; /* Clear STA_NOINIT */
    1e08:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
    1e0c:	7033      	strb	r3, [r6, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:287
    SD_CARD__SET_FAST_SPEED();
    1e0e:	f003 fe21 	bl	5a54 <ssp2__set_max_clock>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:292
  return g_disk_status;
    1e12:	7830      	ldrb	r0, [r6, #0]
    1e14:	e793      	b.n	1d3e <sd_card__initialize+0x16>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:260
      if (sd_card__send_command(ACMD41, 0) <= 1) {
    1e16:	4629      	mov	r1, r5
    1e18:	20e9      	movs	r0, #233	; 0xe9
    1e1a:	f7ff ff10 	bl	1c3e <sd_card__send_command>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:265
        cmd = CMD1; /* MMC */
    1e1e:	2802      	cmp	r0, #2
    1e20:	bf36      	itet	cc
    1e22:	25e9      	movcc	r5, #233	; 0xe9
    1e24:	2541      	movcs	r5, #65	; 0x41
    1e26:	2402      	movcc	r4, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:267 (discriminator 2)
      while (SD_CARD__PLATFORM_GET_MS() < timeout && sd_card__send_command(cmd, 0)) {
    1e28:	f000 ff6e 	bl	2d08 <sys_time__get_uptime_ms>
    1e2c:	4287      	cmp	r7, r0
    1e2e:	d905      	bls.n	1e3c <sd_card__initialize+0x114>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:267 (discriminator 1)
    1e30:	2100      	movs	r1, #0
    1e32:	4628      	mov	r0, r5
    1e34:	f7ff ff03 	bl	1c3e <sd_card__send_command>
    1e38:	2800      	cmp	r0, #0
    1e3a:	d1f5      	bne.n	1e28 <sd_card__initialize+0x100>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:271
      if ((SD_CARD__PLATFORM_GET_MS() < timeout) ||
    1e3c:	f000 ff64 	bl	2d08 <sys_time__get_uptime_ms>
    1e40:	4287      	cmp	r7, r0
    1e42:	d806      	bhi.n	1e52 <sd_card__initialize+0x12a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:272 (discriminator 1)
          sd_card__send_command(CMD16, 512) != 0) /* Set R/W block length to 512 */
    1e44:	f44f 7100 	mov.w	r1, #512	; 0x200
    1e48:	2050      	movs	r0, #80	; 0x50
    1e4a:	f7ff fef8 	bl	1c3e <sd_card__send_command>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:271 (discriminator 1)
      if ((SD_CARD__PLATFORM_GET_MS() < timeout) ||
    1e4e:	2800      	cmp	r0, #0
    1e50:	d0d2      	beq.n	1df8 <sd_card__initialize+0xd0>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:275
        ty = 0;
    1e52:	2400      	movs	r4, #0
    1e54:	e7d0      	b.n	1df8 <sd_card__initialize+0xd0>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:289
    sd_card__power_off();
    1e56:	f7ff feb5 	bl	1bc4 <sd_card__power_off>
    1e5a:	e7da      	b.n	1e12 <sd_card__initialize+0xea>
    1e5c:	10000008 	.word	0x10000008
    1e60:	100003e0 	.word	0x100003e0

00001e64 <sd_card__status>:
sd_card__status():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:295
DSTATUS sd_card__status() {
    1e64:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:296
  sd_card__update_status();
    1e66:	f7ff ff4f 	bl	1d08 <sd_card__update_status>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:297
  return g_disk_status;
    1e6a:	4b01      	ldr	r3, [pc, #4]	; (1e70 <sd_card__status+0xc>)
    1e6c:	7818      	ldrb	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:298
}
    1e6e:	bd08      	pop	{r3, pc}
    1e70:	10000008 	.word	0x10000008

00001e74 <sd_card__read>:
sd_card__read():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:303
) {
    1e74:	b570      	push	{r4, r5, r6, lr}
    1e76:	4614      	mov	r4, r2
    1e78:	4605      	mov	r5, r0
    1e7a:	460e      	mov	r6, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:304
  sd_card__update_status();
    1e7c:	f7ff ff44 	bl	1d08 <sd_card__update_status>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:306
  if (!count) {
    1e80:	2c00      	cmp	r4, #0
    1e82:	d035      	beq.n	1ef0 <sd_card__read+0x7c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:310
  if (g_disk_status & STA_NOINIT) {
    1e84:	4b1c      	ldr	r3, [pc, #112]	; (1ef8 <sd_card__read+0x84>)
    1e86:	781b      	ldrb	r3, [r3, #0]
    1e88:	07da      	lsls	r2, r3, #31
    1e8a:	d433      	bmi.n	1ef4 <sd_card__read+0x80>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:315
  SD_CARD__SELECT();
    1e8c:	f003 fa38 	bl	5300 <board_io__sd_card_cs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:316
  if (!(g_card_type & CT_BLOCK)) {
    1e90:	4b1a      	ldr	r3, [pc, #104]	; (1efc <sd_card__read+0x88>)
    1e92:	781b      	ldrb	r3, [r3, #0]
    1e94:	071b      	lsls	r3, r3, #28
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:317
    sector *= 512; /* Convert to byte address if needed */
    1e96:	bf58      	it	pl
    1e98:	0276      	lslpl	r6, r6, #9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:320
  if (count == 1) {                                 /* Single block read */
    1e9a:	2c01      	cmp	r4, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:321
    if ((sd_card__send_command(CMD17, sector) == 0)) {
    1e9c:	4631      	mov	r1, r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:320
  if (count == 1) {                                 /* Single block read */
    1e9e:	d111      	bne.n	1ec4 <sd_card__read+0x50>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:321
    if ((sd_card__send_command(CMD17, sector) == 0)) {
    1ea0:	2051      	movs	r0, #81	; 0x51
    1ea2:	f7ff fecc 	bl	1c3e <sd_card__send_command>
    1ea6:	b938      	cbnz	r0, 1eb8 <sd_card__read+0x44>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:322
      if (sd_card__read_datablock(buff, 512)) {
    1ea8:	f44f 7100 	mov.w	r1, #512	; 0x200
    1eac:	4628      	mov	r0, r5
    1eae:	f7ff ff09 	bl	1cc4 <sd_card__read_datablock>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:323
        count = 0;
    1eb2:	fab0 f480 	clz	r4, r0
    1eb6:	0964      	lsrs	r4, r4, #5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:340
  SD_CARD__DESELECT();
    1eb8:	f003 fa2a 	bl	5310 <board_io__sd_card_ds>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:342
  return count ? RES_ERROR : RES_OK;
    1ebc:	1c20      	adds	r0, r4, #0
    1ebe:	bf18      	it	ne
    1ec0:	2001      	movne	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:343
}
    1ec2:	bd70      	pop	{r4, r5, r6, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:331
    if (sd_card__send_command(CMD18, sector) == 0) { /* READ_MULTIPLE_BLOCK */
    1ec4:	2052      	movs	r0, #82	; 0x52
    1ec6:	f7ff feba 	bl	1c3e <sd_card__send_command>
    1eca:	2800      	cmp	r0, #0
    1ecc:	d1f4      	bne.n	1eb8 <sd_card__read+0x44>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:333
        if (!sd_card__read_datablock(buff, 512))
    1ece:	f44f 7100 	mov.w	r1, #512	; 0x200
    1ed2:	4628      	mov	r0, r5
    1ed4:	f7ff fef6 	bl	1cc4 <sd_card__read_datablock>
    1ed8:	b128      	cbz	r0, 1ee6 <sd_card__read+0x72>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:336
      } while (--count);
    1eda:	3c01      	subs	r4, #1
    1edc:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:335
        buff += 512;
    1ee0:	f505 7500 	add.w	r5, r5, #512	; 0x200
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:336
      } while (--count);
    1ee4:	d1f3      	bne.n	1ece <sd_card__read+0x5a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:337
      sd_card__send_command(CMD12, 0); /* STOP_TRANSMISSION */
    1ee6:	2100      	movs	r1, #0
    1ee8:	204c      	movs	r0, #76	; 0x4c
    1eea:	f7ff fea8 	bl	1c3e <sd_card__send_command>
    1eee:	e7e3      	b.n	1eb8 <sd_card__read+0x44>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:308
    return RES_PARERR;
    1ef0:	2004      	movs	r0, #4
    1ef2:	e7e6      	b.n	1ec2 <sd_card__read+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:312
    return RES_NOTRDY;
    1ef4:	2003      	movs	r0, #3
    1ef6:	e7e4      	b.n	1ec2 <sd_card__read+0x4e>
    1ef8:	10000008 	.word	0x10000008
    1efc:	100003e0 	.word	0x100003e0

00001f00 <sd_card__write>:
sd_card__write():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:349
) {
    1f00:	b570      	push	{r4, r5, r6, lr}
    1f02:	4614      	mov	r4, r2
    1f04:	4605      	mov	r5, r0
    1f06:	460e      	mov	r6, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:350
  sd_card__update_status();
    1f08:	f7ff fefe 	bl	1d08 <sd_card__update_status>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:352
  if (!count) {
    1f0c:	2c00      	cmp	r4, #0
    1f0e:	d041      	beq.n	1f94 <sd_card__write+0x94>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:355
  if (g_disk_status & STA_NOINIT) {
    1f10:	4b23      	ldr	r3, [pc, #140]	; (1fa0 <sd_card__write+0xa0>)
    1f12:	781a      	ldrb	r2, [r3, #0]
    1f14:	07d0      	lsls	r0, r2, #31
    1f16:	d43f      	bmi.n	1f98 <sd_card__write+0x98>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:358
  if (g_disk_status & STA_PROTECT) {
    1f18:	781b      	ldrb	r3, [r3, #0]
    1f1a:	0759      	lsls	r1, r3, #29
    1f1c:	d43e      	bmi.n	1f9c <sd_card__write+0x9c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:362
  SD_CARD__SELECT();
    1f1e:	f003 f9ef 	bl	5300 <board_io__sd_card_cs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:363
  if (!(g_card_type & CT_BLOCK)) {
    1f22:	4b20      	ldr	r3, [pc, #128]	; (1fa4 <sd_card__write+0xa4>)
    1f24:	781b      	ldrb	r3, [r3, #0]
    1f26:	071a      	lsls	r2, r3, #28
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:364
    sector *= 512; /* Convert to byte address if needed */
    1f28:	bf58      	it	pl
    1f2a:	0276      	lslpl	r6, r6, #9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:367
  if (count == 1) { /* Single block write */
    1f2c:	2c01      	cmp	r4, #1
    1f2e:	d111      	bne.n	1f54 <sd_card__write+0x54>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:368
    if ((sd_card__send_command(CMD24, sector) == 0) && sd_card__transmit_datablock(buff, 0xFE)) {
    1f30:	4631      	mov	r1, r6
    1f32:	2058      	movs	r0, #88	; 0x58
    1f34:	f7ff fe83 	bl	1c3e <sd_card__send_command>
    1f38:	bb50      	cbnz	r0, 1f90 <sd_card__write+0x90>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:368 (discriminator 1)
    1f3a:	21fe      	movs	r1, #254	; 0xfe
    1f3c:	4628      	mov	r0, r5
    1f3e:	f7ff fe51 	bl	1be4 <sd_card__transmit_datablock>
    1f42:	fab0 f480 	clz	r4, r0
    1f46:	0964      	lsrs	r4, r4, #5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:388
  SD_CARD__DESELECT();
    1f48:	f003 f9e2 	bl	5310 <board_io__sd_card_ds>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:390
  return count ? RES_ERROR : RES_OK;
    1f4c:	1c20      	adds	r0, r4, #0
    1f4e:	bf18      	it	ne
    1f50:	2001      	movne	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:391
}
    1f52:	bd70      	pop	{r4, r5, r6, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:372
    if (g_card_type & CT_SDC) {
    1f54:	f013 0f06 	tst.w	r3, #6
    1f58:	d003      	beq.n	1f62 <sd_card__write+0x62>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:373
      sd_card__send_command(ACMD23, count);
    1f5a:	4621      	mov	r1, r4
    1f5c:	20d7      	movs	r0, #215	; 0xd7
    1f5e:	f7ff fe6e 	bl	1c3e <sd_card__send_command>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:376
    if (sd_card__send_command(CMD25, sector) == 0) { /* WRITE_MULTIPLE_BLOCK */
    1f62:	4631      	mov	r1, r6
    1f64:	2059      	movs	r0, #89	; 0x59
    1f66:	f7ff fe6a 	bl	1c3e <sd_card__send_command>
    1f6a:	2800      	cmp	r0, #0
    1f6c:	d1ec      	bne.n	1f48 <sd_card__write+0x48>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:378
        if (!sd_card__transmit_datablock(buff, 0xFC)) {
    1f6e:	21fc      	movs	r1, #252	; 0xfc
    1f70:	4628      	mov	r0, r5
    1f72:	f7ff fe37 	bl	1be4 <sd_card__transmit_datablock>
    1f76:	b128      	cbz	r0, 1f84 <sd_card__write+0x84>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:382
      } while (--count);
    1f78:	3c01      	subs	r4, #1
    1f7a:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:381
        buff += 512;
    1f7e:	f505 7500 	add.w	r5, r5, #512	; 0x200
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:382
      } while (--count);
    1f82:	d1f4      	bne.n	1f6e <sd_card__write+0x6e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:383
      if (!sd_card__transmit_datablock(0, 0xFD)) {/* STOP_TRAN token */
    1f84:	21fd      	movs	r1, #253	; 0xfd
    1f86:	2000      	movs	r0, #0
    1f88:	f7ff fe2c 	bl	1be4 <sd_card__transmit_datablock>
    1f8c:	2800      	cmp	r0, #0
    1f8e:	d1db      	bne.n	1f48 <sd_card__write+0x48>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:384
        count = 1;
    1f90:	2401      	movs	r4, #1
    1f92:	e7d9      	b.n	1f48 <sd_card__write+0x48>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:353
    return RES_PARERR;
    1f94:	2004      	movs	r0, #4
    1f96:	e7dc      	b.n	1f52 <sd_card__write+0x52>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:356
    return RES_NOTRDY;
    1f98:	2003      	movs	r0, #3
    1f9a:	e7da      	b.n	1f52 <sd_card__write+0x52>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:359
    return RES_WRPRT;
    1f9c:	2002      	movs	r0, #2
    1f9e:	e7d8      	b.n	1f52 <sd_card__write+0x52>
    1fa0:	10000008 	.word	0x10000008
    1fa4:	100003e0 	.word	0x100003e0

00001fa8 <sd_card__ioctl>:
sd_card__ioctl():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:397
) {
    1fa8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    1faa:	4606      	mov	r6, r0
    1fac:	460d      	mov	r5, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:401
  sd_card__update_status();
    1fae:	f7ff feab 	bl	1d08 <sd_card__update_status>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:404
  if (ctrl == CTRL_POWER) {
    1fb2:	2e05      	cmp	r6, #5
    1fb4:	d115      	bne.n	1fe2 <sd_card__ioctl+0x3a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:405
    switch (*ptr) {
    1fb6:	782c      	ldrb	r4, [r5, #0]
    1fb8:	2c01      	cmp	r4, #1
    1fba:	d010      	beq.n	1fde <sd_card__ioctl+0x36>
    1fbc:	b12c      	cbz	r4, 1fca <sd_card__ioctl+0x22>
    1fbe:	2c02      	cmp	r4, #2
    1fc0:	d00a      	beq.n	1fd8 <sd_card__ioctl+0x30>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:424
      res = RES_PARERR;
    1fc2:	2404      	movs	r4, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:524
}
    1fc4:	4620      	mov	r0, r4
    1fc6:	b004      	add	sp, #16
    1fc8:	bd70      	pop	{r4, r5, r6, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:407
      if (SD_CARD__IS_PRESENT()) {
    1fca:	f003 f9a9 	bl	5320 <board_io__sd_card_is_present>
    1fce:	2800      	cmp	r0, #0
    1fd0:	d0f8      	beq.n	1fc4 <sd_card__ioctl+0x1c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:408
        sd_card__power_off();
    1fd2:	f7ff fdf7 	bl	1bc4 <sd_card__power_off>
    1fd6:	e7f5      	b.n	1fc4 <sd_card__ioctl+0x1c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:419
      *(ptr + 1) = (BYTE)SD_CARD__IS_PRESENT();
    1fd8:	f003 f9a2 	bl	5320 <board_io__sd_card_is_present>
    1fdc:	7068      	strb	r0, [r5, #1]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:415
      res = RES_OK;
    1fde:	2400      	movs	r4, #0
    1fe0:	e7f0      	b.n	1fc4 <sd_card__ioctl+0x1c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:428
    if (g_disk_status & STA_NOINIT) {
    1fe2:	4b6f      	ldr	r3, [pc, #444]	; (21a0 <sd_card__ioctl+0x1f8>)
    1fe4:	781c      	ldrb	r4, [r3, #0]
    1fe6:	f014 0401 	ands.w	r4, r4, #1
    1fea:	f040 80d7 	bne.w	219c <sd_card__ioctl+0x1f4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:432
    switch (ctrl) {
    1fee:	2e0e      	cmp	r6, #14
    1ff0:	f200 80d2 	bhi.w	2198 <sd_card__ioctl+0x1f0>
    1ff4:	e8df f006 	tbb	[pc, r6]
    1ff8:	524e1308 	.word	0x524e1308
    1ffc:	d0d0d0d0 	.word	0xd0d0d0d0
    2000:	a19dd0d0 	.word	0xa19dd0d0
    2004:	b3b0      	.short	0xb3b0
    2006:	c4          	.byte	0xc4
    2007:	00          	.byte	0x00
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:434
      SD_CARD__SELECT();
    2008:	f003 f97a 	bl	5300 <board_io__sd_card_cs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:435
      if (sd_card__wait_for_ready() == 0xFF) {
    200c:	f7ff fdc5 	bl	1b9a <sd_card__wait_for_ready>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:436
        res = RES_OK;
    2010:	f1b0 04ff 	subs.w	r4, r0, #255	; 0xff
    2014:	bf18      	it	ne
    2016:	2401      	movne	r4, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:520
    SD_CARD__DESELECT();
    2018:	f003 f97a 	bl	5310 <board_io__sd_card_ds>
    201c:	e7d2      	b.n	1fc4 <sd_card__ioctl+0x1c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:441
      if ((sd_card__send_command(CMD9, 0) == 0) && sd_card__read_datablock(csd, 16)) {
    201e:	2100      	movs	r1, #0
    2020:	2049      	movs	r0, #73	; 0x49
    2022:	f7ff fe0c 	bl	1c3e <sd_card__send_command>
    2026:	4604      	mov	r4, r0
    2028:	b108      	cbz	r0, 202e <sd_card__ioctl+0x86>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:402
  DRESULT res = RES_ERROR;
    202a:	2401      	movs	r4, #1
    202c:	e7f4      	b.n	2018 <sd_card__ioctl+0x70>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:441 (discriminator 1)
      if ((sd_card__send_command(CMD9, 0) == 0) && sd_card__read_datablock(csd, 16)) {
    202e:	2110      	movs	r1, #16
    2030:	4668      	mov	r0, sp
    2032:	f7ff fe47 	bl	1cc4 <sd_card__read_datablock>
    2036:	2800      	cmp	r0, #0
    2038:	d0f7      	beq.n	202a <sd_card__ioctl+0x82>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:442
        if ((csd[0] >> 6) == 1) { /* SDC ver 2.00 */
    203a:	f89d 3000 	ldrb.w	r3, [sp]
    203e:	f89d 1008 	ldrb.w	r1, [sp, #8]
    2042:	099b      	lsrs	r3, r3, #6
    2044:	2b01      	cmp	r3, #1
    2046:	f89d 3009 	ldrb.w	r3, [sp, #9]
    204a:	d106      	bne.n	205a <sd_card__ioctl+0xb2>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:443
          csize = csd[9] + ((WORD)csd[8] << 8) + 1;
    204c:	1c5a      	adds	r2, r3, #1
    204e:	eb02 2201 	add.w	r2, r2, r1, lsl #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:444
          *(DWORD *)buff = (DWORD)csize << 10;
    2052:	b292      	uxth	r2, r2
    2054:	0292      	lsls	r2, r2, #10
    2056:	602a      	str	r2, [r5, #0]
    2058:	e7de      	b.n	2018 <sd_card__ioctl+0x70>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:447
          csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
    205a:	f89d 2007 	ldrb.w	r2, [sp, #7]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:446
          n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
    205e:	f89d 000a 	ldrb.w	r0, [sp, #10]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:447
          csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
    2062:	0092      	lsls	r2, r2, #2
    2064:	eb02 1291 	add.w	r2, r2, r1, lsr #6
    2068:	f89d 1006 	ldrb.w	r1, [sp, #6]
    206c:	0289      	lsls	r1, r1, #10
    206e:	f401 6140 	and.w	r1, r1, #3072	; 0xc00
    2072:	3201      	adds	r2, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:448
          *(DWORD *)buff = (DWORD)csize << (n - 9);
    2074:	440a      	add	r2, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:446
          n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
    2076:	f89d 1005 	ldrb.w	r1, [sp, #5]
    207a:	005b      	lsls	r3, r3, #1
    207c:	f001 010f 	and.w	r1, r1, #15
    2080:	eb01 11d0 	add.w	r1, r1, r0, lsr #7
    2084:	f003 0306 	and.w	r3, r3, #6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:448
          *(DWORD *)buff = (DWORD)csize << (n - 9);
    2088:	440b      	add	r3, r1
    208a:	3b07      	subs	r3, #7
    208c:	fa02 f303 	lsl.w	r3, r2, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:466
            *(DWORD *)buff = 16UL << (csd[10] >> 4);
    2090:	602b      	str	r3, [r5, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:467
            res = RES_OK;
    2092:	e7c1      	b.n	2018 <sd_card__ioctl+0x70>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:455
      *(WORD *)buff = 512;
    2094:	f44f 7300 	mov.w	r3, #512	; 0x200
    2098:	802b      	strh	r3, [r5, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:457
      break;
    209a:	e7bd      	b.n	2018 <sd_card__ioctl+0x70>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:460
      if (g_card_type & CT_SD2) {                    /* SDC ver 2.00 */
    209c:	4e41      	ldr	r6, [pc, #260]	; (21a4 <sd_card__ioctl+0x1fc>)
    209e:	7831      	ldrb	r1, [r6, #0]
    20a0:	f011 0104 	ands.w	r1, r1, #4
    20a4:	d01c      	beq.n	20e0 <sd_card__ioctl+0x138>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:461
        if (sd_card__send_command(ACMD13, 0) == 0) { /* Read SD status */
    20a6:	2100      	movs	r1, #0
    20a8:	20cd      	movs	r0, #205	; 0xcd
    20aa:	f7ff fdc8 	bl	1c3e <sd_card__send_command>
    20ae:	2800      	cmp	r0, #0
    20b0:	d1bb      	bne.n	202a <sd_card__ioctl+0x82>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:462
          SD_CARD__RECEIVE_BYTE();
    20b2:	20ff      	movs	r0, #255	; 0xff
    20b4:	f003 fd06 	bl	5ac4 <ssp2__exchange_byte>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:463
          if (sd_card__read_datablock(csd, 16)) { /* Read partial block */
    20b8:	2110      	movs	r1, #16
    20ba:	4668      	mov	r0, sp
    20bc:	f7ff fe02 	bl	1cc4 <sd_card__read_datablock>
    20c0:	2800      	cmp	r0, #0
    20c2:	d0b2      	beq.n	202a <sd_card__ioctl+0x82>
    20c4:	2430      	movs	r4, #48	; 0x30
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:465 (discriminator 3)
              SD_CARD__RECEIVE_BYTE(); /* Purge trailing data */
    20c6:	20ff      	movs	r0, #255	; 0xff
    20c8:	3c01      	subs	r4, #1
    20ca:	f003 fcfb 	bl	5ac4 <ssp2__exchange_byte>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:464 (discriminator 3)
            for (n = 64 - 16; n; n--)
    20ce:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
    20d2:	d1f8      	bne.n	20c6 <sd_card__ioctl+0x11e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:466
            *(DWORD *)buff = 16UL << (csd[10] >> 4);
    20d4:	f89d 300a 	ldrb.w	r3, [sp, #10]
    20d8:	091a      	lsrs	r2, r3, #4
    20da:	2310      	movs	r3, #16
    20dc:	4093      	lsls	r3, r2
    20de:	e7d7      	b.n	2090 <sd_card__ioctl+0xe8>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:471
        if ((sd_card__send_command(CMD9, 0) == 0) && sd_card__read_datablock(csd, 16)) { /* Read CSD */
    20e0:	2049      	movs	r0, #73	; 0x49
    20e2:	f7ff fdac 	bl	1c3e <sd_card__send_command>
    20e6:	4604      	mov	r4, r0
    20e8:	2800      	cmp	r0, #0
    20ea:	d19e      	bne.n	202a <sd_card__ioctl+0x82>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:471 (discriminator 1)
    20ec:	2110      	movs	r1, #16
    20ee:	4668      	mov	r0, sp
    20f0:	f7ff fde8 	bl	1cc4 <sd_card__read_datablock>
    20f4:	2800      	cmp	r0, #0
    20f6:	d098      	beq.n	202a <sd_card__ioctl+0x82>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:472
          if (g_card_type & CT_SD1) {                                                    /* SDC ver 1.XX */
    20f8:	7832      	ldrb	r2, [r6, #0]
    20fa:	f89d 300a 	ldrb.w	r3, [sp, #10]
    20fe:	f89d 100b 	ldrb.w	r1, [sp, #11]
    2102:	0792      	lsls	r2, r2, #30
    2104:	d50a      	bpl.n	211c <sd_card__ioctl+0x174>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:473
            *(DWORD *)buff = (((csd[10] & 63) << 1) + ((WORD)(csd[11] & 128) >> 7) + 1) << ((csd[13] >> 6) - 1);
    2106:	005b      	lsls	r3, r3, #1
    2108:	f89d 200d 	ldrb.w	r2, [sp, #13]
    210c:	f003 037e 	and.w	r3, r3, #126	; 0x7e
    2110:	eb03 13d1 	add.w	r3, r3, r1, lsr #7
    2114:	0992      	lsrs	r2, r2, #6
    2116:	3301      	adds	r3, #1
    2118:	3a01      	subs	r2, #1
    211a:	e7df      	b.n	20dc <sd_card__ioctl+0x134>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:475
            *(DWORD *)buff = ((WORD)((csd[10] & 124) >> 2) + 1) * (((csd[11] & 3) << 3) + ((csd[11] & 224) >> 5) + 1);
    211c:	00ca      	lsls	r2, r1, #3
    211e:	f002 0218 	and.w	r2, r2, #24
    2122:	f3c3 0384 	ubfx	r3, r3, #2, #5
    2126:	eb02 1251 	add.w	r2, r2, r1, lsr #5
    212a:	3301      	adds	r3, #1
    212c:	fb02 3303 	mla	r3, r2, r3, r3
    2130:	e7ae      	b.n	2090 <sd_card__ioctl+0xe8>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:483
      *ptr = g_card_type;
    2132:	4b1c      	ldr	r3, [pc, #112]	; (21a4 <sd_card__ioctl+0x1fc>)
    2134:	781b      	ldrb	r3, [r3, #0]
    2136:	702b      	strb	r3, [r5, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:485
      break;
    2138:	e76e      	b.n	2018 <sd_card__ioctl+0x70>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:488
      if (sd_card__send_command(CMD9, 0) == 0 /* READ_CSD */
    213a:	2100      	movs	r1, #0
    213c:	2049      	movs	r0, #73	; 0x49
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:494
      if (sd_card__send_command(CMD10, 0) == 0 /* READ_CID */
    213e:	f7ff fd7e 	bl	1c3e <sd_card__send_command>
    2142:	2800      	cmp	r0, #0
    2144:	f47f af71 	bne.w	202a <sd_card__ioctl+0x82>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:495
          && sd_card__read_datablock(ptr, 16))
    2148:	2110      	movs	r1, #16
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:510
        if (sd_card__read_datablock(ptr, 64))
    214a:	4628      	mov	r0, r5
    214c:	f7ff fdba 	bl	1cc4 <sd_card__read_datablock>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:436
        res = RES_OK;
    2150:	fab0 f480 	clz	r4, r0
    2154:	0964      	lsrs	r4, r4, #5
    2156:	e75f      	b.n	2018 <sd_card__ioctl+0x70>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:494
      if (sd_card__send_command(CMD10, 0) == 0 /* READ_CID */
    2158:	2100      	movs	r1, #0
    215a:	204a      	movs	r0, #74	; 0x4a
    215c:	e7ef      	b.n	213e <sd_card__ioctl+0x196>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:500
      if (sd_card__send_command(CMD58, 0) == 0) { /* READ_OCR */
    215e:	2100      	movs	r1, #0
    2160:	207a      	movs	r0, #122	; 0x7a
    2162:	f7ff fd6c 	bl	1c3e <sd_card__send_command>
    2166:	4604      	mov	r4, r0
    2168:	2800      	cmp	r0, #0
    216a:	f47f af5e 	bne.w	202a <sd_card__ioctl+0x82>
    216e:	1d2e      	adds	r6, r5, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:502 (discriminator 3)
          *ptr++ = SD_CARD__RECEIVE_BYTE();
    2170:	20ff      	movs	r0, #255	; 0xff
    2172:	f003 fca7 	bl	5ac4 <ssp2__exchange_byte>
    2176:	f805 0b01 	strb.w	r0, [r5], #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:501 (discriminator 3)
        for (n = 4; n; n--)
    217a:	42ae      	cmp	r6, r5
    217c:	d1f8      	bne.n	2170 <sd_card__ioctl+0x1c8>
    217e:	e74b      	b.n	2018 <sd_card__ioctl+0x70>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:508
      if (sd_card__send_command(ACMD13, 0) == 0) { /* SD_STATUS */
    2180:	2100      	movs	r1, #0
    2182:	20cd      	movs	r0, #205	; 0xcd
    2184:	f7ff fd5b 	bl	1c3e <sd_card__send_command>
    2188:	2800      	cmp	r0, #0
    218a:	f47f af4e 	bne.w	202a <sd_card__ioctl+0x82>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:509
        SD_CARD__RECEIVE_BYTE();
    218e:	20ff      	movs	r0, #255	; 0xff
    2190:	f003 fc98 	bl	5ac4 <ssp2__exchange_byte>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:510
        if (sd_card__read_datablock(ptr, 64))
    2194:	2140      	movs	r1, #64	; 0x40
    2196:	e7d8      	b.n	214a <sd_card__ioctl+0x1a2>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:516
      res = RES_PARERR;
    2198:	2404      	movs	r4, #4
    219a:	e73d      	b.n	2018 <sd_card__ioctl+0x70>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:429
      return RES_NOTRDY;
    219c:	2403      	movs	r4, #3
    219e:	e711      	b.n	1fc4 <sd_card__ioctl+0x1c>
    21a0:	10000008 	.word	0x10000008
    21a4:	100003e0 	.word	0x100003e0

000021a8 <system_calls__print_and_halt>:
system_calls__print_and_halt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:46
  for (int i = 0; i < len; i++) {
    uart__polled_put(system_calls__uart_type, ptr[i]);
  }
}

static void system_calls__print_and_halt(const char *string) {
    21a8:	b508      	push	{r3, lr}
    21aa:	4606      	mov	r6, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:47
  system_calls__polled_put(string, strlen(string));
    21ac:	f005 fd3f 	bl	7c2e <strlen>
system_calls__polled_put():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:41
  for (int i = 0; i < len; i++) {
    21b0:	2400      	movs	r4, #0
system_calls__print_and_halt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:47
  system_calls__polled_put(string, strlen(string));
    21b2:	4605      	mov	r5, r0
system_calls__polled_put():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:41
  for (int i = 0; i < len; i++) {
    21b4:	42a5      	cmp	r5, r4
    21b6:	dc00      	bgt.n	21ba <system_calls__print_and_halt+0x12>
system_calls__print_and_halt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:49 (discriminator 1)
  while (1) {
  }
    21b8:	e7fe      	b.n	21b8 <system_calls__print_and_halt+0x10>
system_calls__polled_put():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:42
    uart__polled_put(system_calls__uart_type, ptr[i]);
    21ba:	5d31      	ldrb	r1, [r6, r4]
    21bc:	2000      	movs	r0, #0
    21be:	f003 fd83 	bl	5cc8 <uart__polled_put>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:41
  for (int i = 0; i < len; i++) {
    21c2:	3401      	adds	r4, #1
    21c4:	e7f6      	b.n	21b4 <system_calls__print_and_halt+0xc>
system_calls__print_and_halt():
    21c6:	Address 0x00000000000021c6 is out of bounds.


000021c8 <_isatty>:
_isatty():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:87
 * libc.pdf: 'Query whether output stream is a terminal'
 */
int _isatty(int file_descriptor) {
  int is_atty = 0;

  switch (file_descriptor) {
    21c8:	2802      	cmp	r0, #2
    21ca:	d90c      	bls.n	21e6 <_isatty+0x1e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:97
    is_atty = 1;
    break;

  // Pointer based values defined by <stdio.h>
  default:
    if ((int)stdin == file_descriptor || (int)stdout == file_descriptor ||
    21cc:	4b07      	ldr	r3, [pc, #28]	; (21ec <_isatty+0x24>)
    21ce:	681b      	ldr	r3, [r3, #0]
    21d0:	685a      	ldr	r2, [r3, #4]
    21d2:	4282      	cmp	r2, r0
    21d4:	d007      	beq.n	21e6 <_isatty+0x1e>
    21d6:	689a      	ldr	r2, [r3, #8]
    21d8:	4282      	cmp	r2, r0
    21da:	d004      	beq.n	21e6 <_isatty+0x1e>
    21dc:	68db      	ldr	r3, [r3, #12]
    21de:	1a1b      	subs	r3, r3, r0
    21e0:	4258      	negs	r0, r3
    21e2:	4158      	adcs	r0, r3
    21e4:	4770      	bx	lr
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:99
        (int)stderr == file_descriptor) {
      is_atty = 1;
    21e6:	2001      	movs	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:104
    }
  }

  return is_atty;
}
    21e8:	4770      	bx	lr
    21ea:	bf00      	nop
    21ec:	100001b0 	.word	0x100001b0

000021f0 <_close>:
_close():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:117
}

/**
 * Low level function used by fclose()
 */
int _close(int file_descriptor) {
    21f0:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:118
  system_calls__print_and_halt("ERROR: Call to _close() not expected\n");
    21f2:	4801      	ldr	r0, [pc, #4]	; (21f8 <_close+0x8>)
    21f4:	f7ff ffd8 	bl	21a8 <system_calls__print_and_halt>
    21f8:	0000ca16 	.word	0x0000ca16

000021fc <_fstat>:
_fstat():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:122
  return 0;
}

int _fstat() { return 0; }
    21fc:	2000      	movs	r0, #0
    21fe:	4770      	bx	lr

00002200 <_lseek>:
_lseek():
    2200:	2000      	movs	r0, #0
    2202:	4770      	bx	lr

00002204 <_write>:
_write():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:129

/**
 * Low level write routine used by standard output (printf) and also file writes
 * after fopen() has been called
 */
int _write(int file_descriptor, const char *ptr, int bytes_to_write) {
    2204:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2206:	4604      	mov	r4, r0
    2208:	460e      	mov	r6, r1
    220a:	4615      	mov	r5, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:130
  if (_isatty(file_descriptor)) {
    220c:	f7ff ffdc 	bl	21c8 <_isatty>
    2210:	b348      	cbz	r0, 2266 <_write+0x62>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:132
    const bool is_standard_error =
        ((int)stderr == file_descriptor || file_id__stderr == file_descriptor);
    2212:	4b16      	ldr	r3, [pc, #88]	; (226c <_write+0x68>)
    2214:	681b      	ldr	r3, [r3, #0]
    2216:	68db      	ldr	r3, [r3, #12]
    2218:	42a3      	cmp	r3, r4
    221a:	d010      	beq.n	223e <_write+0x3a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:132 (discriminator 2)
    221c:	1ea3      	subs	r3, r4, #2
    221e:	425c      	negs	r4, r3
    2220:	415c      	adcs	r4, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:134
    const bool rtos_is_running =
        taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    2222:	f002 fe79 	bl	4f18 <xTaskGetSchedulerState>
    2226:	4607      	mov	r7, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:136
    const bool transmit_queue_enabled =
        uart__is_transmit_queue_initialized(system_calls__uart_type);
    2228:	2000      	movs	r0, #0
    222a:	f003 fd01 	bl	5c30 <uart__is_transmit_queue_initialized>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:142

    /* If the RTOS is running with the UART queue enabled, AND it is not an
     * error printf, then queue the output and return quickly, otherwise there
     * is no choice but to use system_calls__polled_put()
     */
    if (rtos_is_running && transmit_queue_enabled && !is_standard_error) {
    222e:	2f02      	cmp	r7, #2
    2230:	d117      	bne.n	2262 <_write+0x5e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:142 (discriminator 1)
    2232:	b1b0      	cbz	r0, 2262 <_write+0x5e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:142 (discriminator 2)
    2234:	b9ac      	cbnz	r4, 2262 <_write+0x5e>
system_calls__queued_put():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:33
  for (int i = 0; i < len; i++) {
    2236:	42a5      	cmp	r5, r4
    2238:	dc03      	bgt.n	2242 <_write+0x3e>
_write():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:153
    system_calls__print_and_halt(
        "ERROR: Call to _write() with an unsupported handle");
  }

  return bytes_to_write;
}
    223a:	4628      	mov	r0, r5
    223c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:132
        ((int)stderr == file_descriptor || file_id__stderr == file_descriptor);
    223e:	2401      	movs	r4, #1
    2240:	e7ef      	b.n	2222 <_write+0x1e>
system_calls__queued_put():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:34
    uart__put(system_calls__uart_type, ptr[i], forever_timeout);
    2242:	5d31      	ldrb	r1, [r6, r4]
    2244:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    2248:	2000      	movs	r0, #0
    224a:	f003 fd9f 	bl	5d8c <uart__put>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:33
  for (int i = 0; i < len; i++) {
    224e:	3401      	adds	r4, #1
    2250:	e7f1      	b.n	2236 <_write+0x32>
system_calls__polled_put():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:42
    uart__polled_put(system_calls__uart_type, ptr[i]);
    2252:	5d31      	ldrb	r1, [r6, r4]
    2254:	2000      	movs	r0, #0
    2256:	f003 fd37 	bl	5cc8 <uart__polled_put>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:41
  for (int i = 0; i < len; i++) {
    225a:	3401      	adds	r4, #1
    225c:	42a5      	cmp	r5, r4
    225e:	dcf8      	bgt.n	2252 <_write+0x4e>
    2260:	e7eb      	b.n	223a <_write+0x36>
_write():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:41
    2262:	2400      	movs	r4, #0
    2264:	e7fa      	b.n	225c <_write+0x58>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:148
    system_calls__print_and_halt(
    2266:	4802      	ldr	r0, [pc, #8]	; (2270 <_write+0x6c>)
    2268:	f7ff ff9e 	bl	21a8 <system_calls__print_and_halt>
    226c:	100001b0 	.word	0x100001b0
    2270:	0000ca6e 	.word	0x0000ca6e

00002274 <_read>:
_read():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:159

/**
 * Low level read routine used by standard input (scanf) and also file reads
 * after fopen() has been called
 */
int _read(int file_descriptor, char *ptr, int len) {
    2274:	b538      	push	{r3, r4, r5, lr}
    2276:	460c      	mov	r4, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:162
  int bytes_read = 0;

  if (_isatty(file_descriptor)) {
    2278:	f7ff ffa6 	bl	21c8 <_isatty>
    227c:	b1a8      	cbz	r0, 22aa <_read+0x36>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:164
    const bool rtos_is_running =
        taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    227e:	f002 fe4b 	bl	4f18 <xTaskGetSchedulerState>
    2282:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:166
    const bool receive_queue_enabled =
        uart__is_receive_queue_initialized(system_calls__uart_type);
    2284:	2000      	movs	r0, #0
    2286:	f003 fcdd 	bl	5c44 <uart__is_receive_queue_initialized>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:167
    if (rtos_is_running && receive_queue_enabled) {
    228a:	2d02      	cmp	r5, #2
    228c:	d108      	bne.n	22a0 <_read+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:167 (discriminator 1)
    228e:	b138      	cbz	r0, 22a0 <_read+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:168
      uart__get(system_calls__uart_type, &ptr[0], portMAX_DELAY);
    2290:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    2294:	4621      	mov	r1, r4
    2296:	2000      	movs	r0, #0
    2298:	f003 fd28 	bl	5cec <uart__get>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:182
    system_calls__print_and_halt(
        "ERROR: Call to _read() with an unsupported handle");
  }

  return bytes_read;
}
    229c:	2001      	movs	r0, #1
    229e:	bd38      	pop	{r3, r4, r5, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:170
      uart__polled_get(system_calls__uart_type, &ptr[0]);
    22a0:	4621      	mov	r1, r4
    22a2:	2000      	movs	r0, #0
    22a4:	f003 fd48 	bl	5d38 <uart__polled_get>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:181
  return bytes_read;
    22a8:	e7f8      	b.n	229c <_read+0x28>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:177
    system_calls__print_and_halt(
    22aa:	4801      	ldr	r0, [pc, #4]	; (22b0 <_read+0x3c>)
    22ac:	f7ff ff7c 	bl	21a8 <system_calls__print_and_halt>
    22b0:	0000ca3c 	.word	0x0000ca3c

000022b4 <app_cli__private_print_list_of_all_commands>:
app_cli__private_print_list_of_all_commands():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:93
}

static void
app_cli__private_print_list_of_all_commands(const app_cli_s *cli,
                                            app_cli__argument_t cli_argument,
                                            sl_string_s output) {
    22b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    22b8:	b085      	sub	sp, #20
    22ba:	ac02      	add	r4, sp, #8
    22bc:	e884 000c 	stmia.w	r4, {r2, r3}
    22c0:	4606      	mov	r6, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:94
  (void)sl_string__printf(output, "\r\nList of commands (use help <name> to "
    22c2:	4a24      	ldr	r2, [pc, #144]	; (2354 <app_cli__private_print_list_of_all_commands+0xa0>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:107
    if (strlen(iterator->help_message_for_command) > max_help_chars_to_print) {
      (void)sl_string__printf(output, "  %16s : %.50s ...",
                              iterator->command_name,
                              iterator->help_message_for_command);
    } else {
      (void)sl_string__printf(output, "  %16s : %s", iterator->command_name,
    22c4:	f8df 909c 	ldr.w	r9, [pc, #156]	; 2364 <app_cli__private_print_list_of_all_commands+0xb0>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:103
      (void)sl_string__printf(output, "  %16s : %.50s ...",
    22c8:	f8df a09c 	ldr.w	sl, [pc, #156]	; 2368 <app_cli__private_print_list_of_all_commands+0xb4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:114
    }

    // If a command's help is multi-line, truncate it at that position and add
    // "...." to indicate 'see more help'
    const bool ends_with_carriage_return =
        sl_string__erase_at_substring(output, "\r");
    22cc:	f8df b09c 	ldr.w	fp, [pc, #156]	; 236c <app_cli__private_print_list_of_all_commands+0xb8>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:93
                                            sl_string_s output) {
    22d0:	4688      	mov	r8, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:94
  (void)sl_string__printf(output, "\r\nList of commands (use help <name> to "
    22d2:	e894 0003 	ldmia.w	r4, {r0, r1}
    22d6:	f000 fe23 	bl	2f20 <sl_string__printf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:96
  cli->output_function(cli_argument, sl_string__c_str(output));
    22da:	e894 0003 	ldmia.w	r4, {r0, r1}
    22de:	68b5      	ldr	r5, [r6, #8]
    22e0:	f000 fdf6 	bl	2ed0 <sl_string__c_str>
    22e4:	4601      	mov	r1, r0
    22e6:	4640      	mov	r0, r8
    22e8:	47a8      	blx	r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:99
  app_cli__command_s *iterator = cli->commands_head_pointer;
    22ea:	6835      	ldr	r5, [r6, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:101
  while (NULL != iterator) {
    22ec:	b915      	cbnz	r5, 22f4 <app_cli__private_print_list_of_all_commands+0x40>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:125
    (void)sl_string__append(output, "\r\n");
    cli->output_function(cli_argument, sl_string__c_str(output));

    iterator = iterator->pointer_of_next_command;
  }
}
    22ee:	b005      	add	sp, #20
    22f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:102
    if (strlen(iterator->help_message_for_command) > max_help_chars_to_print) {
    22f4:	686f      	ldr	r7, [r5, #4]
    22f6:	4638      	mov	r0, r7
    22f8:	f005 fc99 	bl	7c2e <strlen>
    22fc:	682b      	ldr	r3, [r5, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:103
      (void)sl_string__printf(output, "  %16s : %.50s ...",
    22fe:	9700      	str	r7, [sp, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:102
    if (strlen(iterator->help_message_for_command) > max_help_chars_to_print) {
    2300:	2832      	cmp	r0, #50	; 0x32
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:103
      (void)sl_string__printf(output, "  %16s : %.50s ...",
    2302:	bf8c      	ite	hi
    2304:	4652      	movhi	r2, sl
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:107
      (void)sl_string__printf(output, "  %16s : %s", iterator->command_name,
    2306:	464a      	movls	r2, r9
    2308:	e894 0003 	ldmia.w	r4, {r0, r1}
    230c:	f000 fe08 	bl	2f20 <sl_string__printf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:114
        sl_string__erase_at_substring(output, "\r");
    2310:	465a      	mov	r2, fp
    2312:	e894 0003 	ldmia.w	r4, {r0, r1}
    2316:	f000 ffd7 	bl	32c8 <sl_string__erase_at_substring>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:115
    const bool ends_with_newline = sl_string__erase_at_substring(output, "\n");
    231a:	4a0f      	ldr	r2, [pc, #60]	; (2358 <app_cli__private_print_list_of_all_commands+0xa4>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:114
        sl_string__erase_at_substring(output, "\r");
    231c:	4607      	mov	r7, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:115
    const bool ends_with_newline = sl_string__erase_at_substring(output, "\n");
    231e:	e894 0003 	ldmia.w	r4, {r0, r1}
    2322:	f000 ffd1 	bl	32c8 <sl_string__erase_at_substring>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:116
    if (ends_with_carriage_return || ends_with_newline) {
    2326:	b907      	cbnz	r7, 232a <app_cli__private_print_list_of_all_commands+0x76>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:116 (discriminator 1)
    2328:	b120      	cbz	r0, 2334 <app_cli__private_print_list_of_all_commands+0x80>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:117
      (void)sl_string__append(output, "...");
    232a:	4a0c      	ldr	r2, [pc, #48]	; (235c <app_cli__private_print_list_of_all_commands+0xa8>)
    232c:	e894 0003 	ldmia.w	r4, {r0, r1}
    2330:	f000 fe99 	bl	3066 <sl_string__append>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:120
    (void)sl_string__append(output, "\r\n");
    2334:	4a0a      	ldr	r2, [pc, #40]	; (2360 <app_cli__private_print_list_of_all_commands+0xac>)
    2336:	e894 0003 	ldmia.w	r4, {r0, r1}
    233a:	f000 fe94 	bl	3066 <sl_string__append>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:121
    cli->output_function(cli_argument, sl_string__c_str(output));
    233e:	e894 0003 	ldmia.w	r4, {r0, r1}
    2342:	68b7      	ldr	r7, [r6, #8]
    2344:	f000 fdc4 	bl	2ed0 <sl_string__c_str>
    2348:	4601      	mov	r1, r0
    234a:	4640      	mov	r0, r8
    234c:	47b8      	blx	r7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:123
    iterator = iterator->pointer_of_next_command;
    234e:	68ed      	ldr	r5, [r5, #12]
    2350:	e7cc      	b.n	22ec <app_cli__private_print_list_of_all_commands+0x38>
    2352:	bf00      	nop
    2354:	0000caa1 	.word	0x0000caa1
    2358:	0000cae8 	.word	0x0000cae8
    235c:	0000cc9e 	.word	0x0000cc9e
    2360:	0000cae7 	.word	0x0000cae7
    2364:	0000cafd 	.word	0x0000cafd
    2368:	0000caea 	.word	0x0000caea
    236c:	0000cb09 	.word	0x0000cb09

00002370 <app_cli__initialize>:
app_cli__initialize():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:195
 *
 ******************************************************************************/

app_cli_s app_cli__initialize(size_t minimum_command_chars_to_match,
                              app_cli__print_string_function output_function,
                              const char *terminal_string) {
    2370:	b530      	push	{r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:200
  static const size_t minimum_number_of_chars_to_match = 4;

  app_cli_s cli = {
      .commands_head_pointer = NULL,
      .minimum_command_chars_to_match = MAX_OF(minimum_number_of_chars_to_match,
    2372:	2904      	cmp	r1, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:206
                                               minimum_command_chars_to_match),
      .output_function = output_function,
      .terminal_string = terminal_string,
  };

  return cli;
    2374:	f04f 0500 	mov.w	r5, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:200
      .minimum_command_chars_to_match = MAX_OF(minimum_number_of_chars_to_match,
    2378:	bf38      	it	cc
    237a:	2104      	movcc	r1, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:206
  return cli;
    237c:	6005      	str	r5, [r0, #0]
    237e:	e9c0 1201 	strd	r1, r2, [r0, #4]
    2382:	60c3      	str	r3, [r0, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:207
}
    2384:	bd30      	pop	{r4, r5, pc}

00002386 <app_cli__add_command_handler>:
app_cli__add_command_handler():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:211

void app_cli__add_command_handler(
    app_cli_s *cli, app_cli__command_s *app_cli_command_static_memory) {
  if (NULL != app_cli_command_static_memory) {
    2386:	b111      	cbz	r1, 238e <app_cli__add_command_handler+0x8>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:212
    app_cli_command_static_memory->pointer_of_next_command =
    2388:	6803      	ldr	r3, [r0, #0]
    238a:	60cb      	str	r3, [r1, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:214
        cli->commands_head_pointer;
    cli->commands_head_pointer = app_cli_command_static_memory;
    238c:	6001      	str	r1, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:216
  }
}
    238e:	4770      	bx	lr

00002390 <app_cli__process_input>:
app_cli__process_input():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:219

void app_cli__process_input(app_cli_s *cli, app_cli__argument_t cli_argument,
                            sl_string_s input_string) {
    2390:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2394:	b087      	sub	sp, #28
    2396:	466e      	mov	r6, sp
    2398:	e886 000c 	stmia.w	r6, {r2, r3}
    239c:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:220
  (void)sl_string__trim_end(input_string, "\r\n");
    239e:	4a63      	ldr	r2, [pc, #396]	; (252c <app_cli__process_input+0x19c>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:219
                            sl_string_s input_string) {
    23a0:	4688      	mov	r8, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:220
  (void)sl_string__trim_end(input_string, "\r\n");
    23a2:	e896 0003 	ldmia.w	r6, {r0, r1}
    23a6:	f000 fffb 	bl	33a0 <sl_string__trim_end>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:222

  if (sl_string__begins_with_ignore_case(input_string, "help")) {
    23aa:	4a61      	ldr	r2, [pc, #388]	; (2530 <app_cli__process_input+0x1a0>)
    23ac:	e896 0003 	ldmia.w	r6, {r0, r1}
    23b0:	f000 fec1 	bl	3136 <sl_string__begins_with_ignore_case>
    23b4:	2800      	cmp	r0, #0
    23b6:	d056      	beq.n	2466 <app_cli__process_input+0xd6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:223
    app_cli__private_handle_help(cli, cli_argument, input_string);
    23b8:	e896 0003 	ldmia.w	r6, {r0, r1}
    23bc:	ac02      	add	r4, sp, #8
app_cli__private_handle_help():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:131
  if (sl_string__equals_to_ignore_case(command_string, "help")) {
    23be:	4a5c      	ldr	r2, [pc, #368]	; (2530 <app_cli__process_input+0x1a0>)
    23c0:	e884 0003 	stmia.w	r4, {r0, r1}
    23c4:	f000 fe8a 	bl	30dc <sl_string__equals_to_ignore_case>
    23c8:	b130      	cbz	r0, 23d8 <app_cli__process_input+0x48>
app_cli__private_handle_unmatched_command():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:166
  app_cli__private_print_list_of_all_commands(cli, cli_argument, output_string);
    23ca:	e894 000c 	ldmia.w	r4, {r2, r3}
    23ce:	4641      	mov	r1, r8
    23d0:	4628      	mov	r0, r5
    23d2:	f7ff ff6f 	bl	22b4 <app_cli__private_print_list_of_all_commands>
    23d6:	e03d      	b.n	2454 <app_cli__process_input+0xc4>
app_cli__private_handle_help():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:138
    (void)sl_string__erase_first_word(command_string, ' ');
    23d8:	e894 0003 	ldmia.w	r4, {r0, r1}
    23dc:	2220      	movs	r2, #32
    23de:	f000 ff8d 	bl	32fc <sl_string__erase_first_word>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:139
    const app_cli__command_s *cli_command =
    23e2:	e894 0003 	ldmia.w	r4, {r0, r1}
    23e6:	af04      	add	r7, sp, #16
    23e8:	e887 0003 	stmia.w	r7, {r0, r1}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:140
        app_cli__private_find_command(cli, command_string);
    23ec:	682e      	ldr	r6, [r5, #0]
app_cli__private_find_command():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:36
    if (sl_string__begins_with_whole_word(input_string, iterator->command_name,
    23ee:	f8df 9148 	ldr.w	r9, [pc, #328]	; 2538 <app_cli__process_input+0x1a8>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:35
  while (NULL != iterator) {
    23f2:	b92e      	cbnz	r6, 2400 <app_cli__process_input+0x70>
app_cli__private_handle_help():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:142
      cli_command = app_cli__private_find_short_command(cli, command_string);
    23f4:	e894 0003 	ldmia.w	r4, {r0, r1}
app_cli__private_find_short_command():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:50
  app_cli__command_s *iterator = cli->commands_head_pointer;
    23f8:	682e      	ldr	r6, [r5, #0]
    23fa:	e887 0003 	stmia.w	r7, {r0, r1}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:52
  while (NULL != iterator) {
    23fe:	e010      	b.n	2422 <app_cli__process_input+0x92>
app_cli__private_find_command():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:36
    if (sl_string__begins_with_whole_word(input_string, iterator->command_name,
    2400:	464b      	mov	r3, r9
    2402:	6832      	ldr	r2, [r6, #0]
    2404:	e897 0003 	ldmia.w	r7, {r0, r1}
    2408:	f000 fece 	bl	31a8 <sl_string__begins_with_whole_word>
    240c:	b9d0      	cbnz	r0, 2444 <app_cli__process_input+0xb4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:41
    iterator = iterator->pointer_of_next_command;
    240e:	68f6      	ldr	r6, [r6, #12]
    2410:	e7ef      	b.n	23f2 <app_cli__process_input+0x62>
app_cli__private_find_short_command():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:58
    if (sl_string__begins_with_limited_chars(
    2412:	686b      	ldr	r3, [r5, #4]
    2414:	6832      	ldr	r2, [r6, #0]
    2416:	e897 0003 	ldmia.w	r7, {r0, r1}
    241a:	f000 fe71 	bl	3100 <sl_string__begins_with_limited_chars>
    241e:	b988      	cbnz	r0, 2444 <app_cli__process_input+0xb4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:64
    iterator = iterator->pointer_of_next_command;
    2420:	68f6      	ldr	r6, [r6, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:52
  while (NULL != iterator) {
    2422:	2e00      	cmp	r6, #0
    2424:	d1f5      	bne.n	2412 <app_cli__process_input+0x82>
app_cli__private_handle_help():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:146
      (void)sl_string__insert_at(command_string, 0,
    2426:	4632      	mov	r2, r6
    2428:	4b42      	ldr	r3, [pc, #264]	; (2534 <app_cli__process_input+0x1a4>)
    242a:	e894 0003 	ldmia.w	r4, {r0, r1}
    242e:	f000 fdd3 	bl	2fd8 <sl_string__insert_at>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:148
      cli->output_function(cli_argument, sl_string__c_str(command_string));
    2432:	e894 0003 	ldmia.w	r4, {r0, r1}
    2436:	68ae      	ldr	r6, [r5, #8]
    2438:	f000 fd4a 	bl	2ed0 <sl_string__c_str>
    243c:	4601      	mov	r1, r0
    243e:	4640      	mov	r0, r8
    2440:	47b0      	blx	r6
    2442:	e003      	b.n	244c <app_cli__process_input+0xbc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:150
      cli->output_function(cli_argument, cli_command->help_message_for_command);
    2444:	68ab      	ldr	r3, [r5, #8]
    2446:	6871      	ldr	r1, [r6, #4]
    2448:	4640      	mov	r0, r8
    244a:	4798      	blx	r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:152
    cli->output_function(cli_argument, "\r\n");
    244c:	68ab      	ldr	r3, [r5, #8]
    244e:	4937      	ldr	r1, [pc, #220]	; (252c <app_cli__process_input+0x19c>)
    2450:	4640      	mov	r0, r8
    2452:	4798      	blx	r3
app_cli__process_input():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:230
    app_cli__private_process_input(cli, cli_argument, input_string);
  }

  // Send a terminator to signal to any receiver that we are done outputting all
  // output from our handlers
  if (NULL != cli->terminal_string) {
    2454:	68e9      	ldr	r1, [r5, #12]
    2456:	2900      	cmp	r1, #0
    2458:	d065      	beq.n	2526 <app_cli__process_input+0x196>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:231
    cli->output_function(cli_argument, cli->terminal_string);
    245a:	68ab      	ldr	r3, [r5, #8]
    245c:	4640      	mov	r0, r8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:233
  }
}
    245e:	b007      	add	sp, #28
    2460:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:231
    cli->output_function(cli_argument, cli->terminal_string);
    2464:	4718      	bx	r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:225
    app_cli__private_process_input(cli, cli_argument, input_string);
    2466:	e9dd a900 	ldrd	sl, r9, [sp]
app_cli__private_process_input():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:172
  const app_cli__command_s *command =
    246a:	e9cd a904 	strd	sl, r9, [sp, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:173
      app_cli__private_find_command(cli, input_string);
    246e:	682e      	ldr	r6, [r5, #0]
app_cli__private_find_command():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:36
    if (sl_string__begins_with_whole_word(input_string, iterator->command_name,
    2470:	4f31      	ldr	r7, [pc, #196]	; (2538 <app_cli__process_input+0x1a8>)
    2472:	ac04      	add	r4, sp, #16
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:35
  while (NULL != iterator) {
    2474:	b91e      	cbnz	r6, 247e <app_cli__process_input+0xee>
app_cli__private_process_input():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:177
    command = app_cli__private_find_short_command(cli, input_string);
    2476:	e9cd a904 	strd	sl, r9, [sp, #16]
app_cli__private_find_short_command():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:50
  app_cli__command_s *iterator = cli->commands_head_pointer;
    247a:	682e      	ldr	r6, [r5, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:52
  while (NULL != iterator) {
    247c:	e010      	b.n	24a0 <app_cli__process_input+0x110>
app_cli__private_find_command():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:36
    if (sl_string__begins_with_whole_word(input_string, iterator->command_name,
    247e:	463b      	mov	r3, r7
    2480:	6832      	ldr	r2, [r6, #0]
    2482:	e894 0003 	ldmia.w	r4, {r0, r1}
    2486:	f000 fe8f 	bl	31a8 <sl_string__begins_with_whole_word>
    248a:	b9e0      	cbnz	r0, 24c6 <app_cli__process_input+0x136>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:41
    iterator = iterator->pointer_of_next_command;
    248c:	68f6      	ldr	r6, [r6, #12]
    248e:	e7f1      	b.n	2474 <app_cli__process_input+0xe4>
app_cli__private_find_short_command():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:58
    if (sl_string__begins_with_limited_chars(
    2490:	686b      	ldr	r3, [r5, #4]
    2492:	6832      	ldr	r2, [r6, #0]
    2494:	e894 0003 	ldmia.w	r4, {r0, r1}
    2498:	f000 fe32 	bl	3100 <sl_string__begins_with_limited_chars>
    249c:	b998      	cbnz	r0, 24c6 <app_cli__process_input+0x136>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:64
    iterator = iterator->pointer_of_next_command;
    249e:	68f6      	ldr	r6, [r6, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:52
  while (NULL != iterator) {
    24a0:	2e00      	cmp	r6, #0
    24a2:	d1f5      	bne.n	2490 <app_cli__process_input+0x100>
app_cli__private_handle_unmatched_command():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:160
  sl_string_s output_string = input_string; // re-use
    24a4:	e9cd a904 	strd	sl, r9, [sp, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:162
  (void)sl_string__insert_at(
    24a8:	4632      	mov	r2, r6
    24aa:	4b24      	ldr	r3, [pc, #144]	; (253c <app_cli__process_input+0x1ac>)
    24ac:	e894 0003 	ldmia.w	r4, {r0, r1}
    24b0:	f000 fd92 	bl	2fd8 <sl_string__insert_at>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:164
  cli->output_function(cli_argument, sl_string__c_str(output_string));
    24b4:	e894 0003 	ldmia.w	r4, {r0, r1}
    24b8:	68ae      	ldr	r6, [r5, #8]
    24ba:	f000 fd09 	bl	2ed0 <sl_string__c_str>
    24be:	4601      	mov	r1, r0
    24c0:	4640      	mov	r0, r8
    24c2:	47b0      	blx	r6
    24c4:	e781      	b.n	23ca <app_cli__process_input+0x3a>
app_cli__private_handle_command():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:74
  (void)sl_string__erase_first_word(input_string, ' ');
    24c6:	e9cd a902 	strd	sl, r9, [sp, #8]
    24ca:	f10d 0b08 	add.w	fp, sp, #8
    24ce:	2220      	movs	r2, #32
    24d0:	e89b 0003 	ldmia.w	fp, {r0, r1}
    24d4:	f000 ff12 	bl	32fc <sl_string__erase_first_word>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:75
  const app_cli_status_e command_status = command->app_cli_handler(
    24d8:	68b7      	ldr	r7, [r6, #8]
    24da:	68ab      	ldr	r3, [r5, #8]
    24dc:	e89b 0006 	ldmia.w	fp, {r1, r2}
    24e0:	4640      	mov	r0, r8
    24e2:	47b8      	blx	r7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:78
  if (APP_CLI_STATUS__SUCCESS != command_status) {
    24e4:	2800      	cmp	r0, #0
    24e6:	d0b5      	beq.n	2454 <app_cli__process_input+0xc4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:79
    sl_string_s output_string = input_string; // re-use
    24e8:	e9cd a904 	strd	sl, r9, [sp, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:81
    (void)sl_string__insert_at(output_string, 0, "Command failed: ");
    24ec:	4b14      	ldr	r3, [pc, #80]	; (2540 <app_cli__process_input+0x1b0>)
    24ee:	2200      	movs	r2, #0
    24f0:	e894 0003 	ldmia.w	r4, {r0, r1}
    24f4:	f000 fd70 	bl	2fd8 <sl_string__insert_at>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:82
    cli->output_function(cli_argument, sl_string__c_str(output_string));
    24f8:	e894 0003 	ldmia.w	r4, {r0, r1}
    24fc:	68af      	ldr	r7, [r5, #8]
    24fe:	f000 fce7 	bl	2ed0 <sl_string__c_str>
    2502:	4601      	mov	r1, r0
    2504:	4640      	mov	r0, r8
    2506:	47b8      	blx	r7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:84
    (void)sl_string__printf(output_string, "\r\nCommand help message: %s\r\n",
    2508:	6873      	ldr	r3, [r6, #4]
    250a:	4a0e      	ldr	r2, [pc, #56]	; (2544 <app_cli__process_input+0x1b4>)
    250c:	e894 0003 	ldmia.w	r4, {r0, r1}
    2510:	f000 fd06 	bl	2f20 <sl_string__printf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:86
    cli->output_function(cli_argument, sl_string__c_str(output_string));
    2514:	e894 0003 	ldmia.w	r4, {r0, r1}
    2518:	68ae      	ldr	r6, [r5, #8]
    251a:	f000 fcd9 	bl	2ed0 <sl_string__c_str>
    251e:	4601      	mov	r1, r0
    2520:	4640      	mov	r0, r8
    2522:	47b0      	blx	r6
    2524:	e796      	b.n	2454 <app_cli__process_input+0xc4>
app_cli__process_input():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:233
}
    2526:	b007      	add	sp, #28
    2528:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    252c:	0000cae7 	.word	0x0000cae7
    2530:	0000cb0b 	.word	0x0000cb0b
    2534:	0000cb3e 	.word	0x0000cb3e
    2538:	0000dbbc 	.word	0x0000dbbc
    253c:	0000cb67 	.word	0x0000cb67
    2540:	0000cb10 	.word	0x0000cb10
    2544:	0000cb21 	.word	0x0000cb21

00002548 <sj2_cli__output_function>:
sj2_cli__output_function():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:74
  xTaskCreateStatic(sj2_cli__task, "cli", ARRAY_SIZE(task_stack),
                    &sj2_cli_struct, PRIORITY_HIGH, task_stack, &task_struct);
}

static void sj2_cli__output_function(app_cli__argument_t argument,
                                     const char *string) {
    2548:	b510      	push	{r4, lr}
    254a:	1e4c      	subs	r4, r1, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:75
  while (*string != '\0') {
    254c:	f814 0f01 	ldrb.w	r0, [r4, #1]!
    2550:	b900      	cbnz	r0, 2554 <sj2_cli__output_function+0xc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:79
    putchar(*string);
    ++string;
  }
}
    2552:	bd10      	pop	{r4, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:76
    putchar(*string);
    2554:	f005 f9c0 	bl	78d8 <putchar>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:77
    ++string;
    2558:	e7f8      	b.n	254c <sj2_cli__output_function+0x4>
    255a:	Address 0x000000000000255a is out of bounds.


0000255c <sj2_cli__task>:
sj2_cli__task():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:81

static void sj2_cli__task(void *task_parameter) {
    255c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    2560:	b0a6      	sub	sp, #152	; 0x98
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:88
  void *unused_cli_param = NULL;
  char string_memory[128];

  // Start by greeting the use with the 'help' command
  sl_string_s user_input =
      sl_string__initialize_from(string_memory, sizeof(string_memory), "help");
    2562:	466e      	mov	r6, sp
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:81
static void sj2_cli__task(void *task_parameter) {
    2564:	4680      	mov	r8, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:88
      sl_string__initialize_from(string_memory, sizeof(string_memory), "help");
    2566:	4b22      	ldr	r3, [pc, #136]	; (25f0 <sj2_cli__task+0x94>)
    2568:	2280      	movs	r2, #128	; 0x80
    256a:	a906      	add	r1, sp, #24
    256c:	4630      	mov	r0, r6
    256e:	f000 fd20 	bl	2fb2 <sl_string__initialize_from>
    2572:	ac02      	add	r4, sp, #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:91 (discriminator 1)

  while (true) {
    app_cli__process_input(sj2_cli_struct, unused_cli_param, user_input);
    2574:	e896 000c 	ldmia.w	r6, {r2, r3}
    2578:	2100      	movs	r1, #0
    257a:	4640      	mov	r0, r8
    257c:	f7ff ff08 	bl	2390 <app_cli__process_input>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:92 (discriminator 1)
    sj2_cli__get_line(user_input);
    2580:	e896 0003 	ldmia.w	r6, {r0, r1}
    2584:	e884 0003 	stmia.w	r4, {r0, r1}
sj2_cli__get_line():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:97 (discriminator 1)
  }
}

static void sj2_cli__get_line(sl_string_s input_line) {
  sl_string__clear(input_line);
    2588:	f000 fca9 	bl	2ede <sl_string__clear>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:100 (discriminator 1)

  // As long as user does not enter a full line, continue to get input
  while (!sl_string__ends_with_newline(input_line)) {
    258c:	ad04      	add	r5, sp, #16
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:100
    258e:	e894 0003 	ldmia.w	r4, {r0, r1}
    2592:	f000 fe32 	bl	31fa <sl_string__ends_with_newline>
    2596:	2800      	cmp	r0, #0
    2598:	d1ec      	bne.n	2574 <sj2_cli__task+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:101
    const char input_byte = getchar();
    259a:	f004 f911 	bl	67c0 <getchar>
    259e:	b2c7      	uxtb	r7, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:102
    sj2_cli__handle_backspace_logic(input_line, input_byte);
    25a0:	e894 0003 	ldmia.w	r4, {r0, r1}
sj2_cli__handle_backspace_logic():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:114

static void sj2_cli__handle_backspace_logic(sl_string_s input_line,
                                            char input_byte) {
  const char backspace = '\b';

  if (backspace == input_byte) {
    25a4:	2f08      	cmp	r7, #8
    25a6:	e885 0003 	stmia.w	r5, {r0, r1}
    25aa:	d117      	bne.n	25dc <sj2_cli__task+0x80>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:115
    if (sl_string__get_length(input_line) > 0) {
    25ac:	f000 fc6c 	bl	2e88 <sl_string__get_length>
    25b0:	b168      	cbz	r0, 25ce <sj2_cli__task+0x72>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:116
      sl_string__erase_last(input_line, 1);
    25b2:	2201      	movs	r2, #1
    25b4:	e895 0003 	ldmia.w	r5, {r0, r1}
    25b8:	f000 fe6b 	bl	3292 <sl_string__erase_last>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:117
      putchar(backspace);
    25bc:	4638      	mov	r0, r7
    25be:	f005 f98b 	bl	78d8 <putchar>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:118
      putchar(' ');
    25c2:	2020      	movs	r0, #32
    25c4:	f005 f988 	bl	78d8 <putchar>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:119
      putchar(backspace);
    25c8:	4638      	mov	r0, r7
    25ca:	f005 f985 	bl	78d8 <putchar>
sj2_cli__get_line():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:104
    if (sl_string__is_full(input_line)) {
    25ce:	e894 0003 	ldmia.w	r4, {r0, r1}
    25d2:	f000 fc64 	bl	2e9e <sl_string__is_full>
    25d6:	2800      	cmp	r0, #0
    25d8:	d0d9      	beq.n	258e <sj2_cli__task+0x32>
    25da:	e7cb      	b.n	2574 <sj2_cli__task+0x18>
sj2_cli__handle_backspace_logic():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:122
    }
  } else {
    putchar(input_byte);
    25dc:	4638      	mov	r0, r7
    25de:	f005 f97b 	bl	78d8 <putchar>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:123
    sl_string__append_char(input_line, input_byte);
    25e2:	463a      	mov	r2, r7
    25e4:	e895 0003 	ldmia.w	r5, {r0, r1}
    25e8:	f000 fd64 	bl	30b4 <sl_string__append_char>
    25ec:	e7ef      	b.n	25ce <sj2_cli__task+0x72>
    25ee:	bf00      	nop
    25f0:	0000cb0b 	.word	0x0000cb0b

000025f4 <sj2_cli__init>:
sj2_cli__init():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:18
void sj2_cli__init(void) {
    25f4:	b530      	push	{r4, r5, lr}
    25f6:	b089      	sub	sp, #36	; 0x24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:23
  sj2_cli_struct = app_cli__initialize(4, sj2_cli__output_function, separator);
    25f8:	ad04      	add	r5, sp, #16
    25fa:	4628      	mov	r0, r5
    25fc:	4b18      	ldr	r3, [pc, #96]	; (2660 <sj2_cli__init+0x6c>)
    25fe:	4a19      	ldr	r2, [pc, #100]	; (2664 <sj2_cli__init+0x70>)
    2600:	4c19      	ldr	r4, [pc, #100]	; (2668 <sj2_cli__init+0x74>)
    2602:	2104      	movs	r1, #4
    2604:	f7ff feb4 	bl	2370 <app_cli__initialize>
    2608:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
    260c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:59
  app_cli__add_command_handler(&sj2_cli_struct, &uart3_transmit);
    2610:	4620      	mov	r0, r4
    2612:	4916      	ldr	r1, [pc, #88]	; (266c <sj2_cli__init+0x78>)
    2614:	f7ff feb7 	bl	2386 <app_cli__add_command_handler>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:60
  app_cli__add_command_handler(&sj2_cli_struct, &task_list);
    2618:	4620      	mov	r0, r4
    261a:	4915      	ldr	r1, [pc, #84]	; (2670 <sj2_cli__init+0x7c>)
    261c:	f7ff feb3 	bl	2386 <app_cli__add_command_handler>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:61
  app_cli__add_command_handler(&sj2_cli_struct, &i2c);
    2620:	4620      	mov	r0, r4
    2622:	4914      	ldr	r1, [pc, #80]	; (2674 <sj2_cli__init+0x80>)
    2624:	f7ff feaf 	bl	2386 <app_cli__add_command_handler>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:62
  app_cli__add_command_handler(&sj2_cli_struct, &crash);
    2628:	4620      	mov	r0, r4
    262a:	4913      	ldr	r1, [pc, #76]	; (2678 <sj2_cli__init+0x84>)
    262c:	f7ff feab 	bl	2386 <app_cli__add_command_handler>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:63
  app_cli__add_command_handler(&sj2_cli_struct, &suspend);
    2630:	4620      	mov	r0, r4
    2632:	4912      	ldr	r1, [pc, #72]	; (267c <sj2_cli__init+0x88>)
    2634:	f7ff fea7 	bl	2386 <app_cli__add_command_handler>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:64
  app_cli__add_command_handler(&sj2_cli_struct, &resume);
    2638:	4620      	mov	r0, r4
    263a:	4911      	ldr	r1, [pc, #68]	; (2680 <sj2_cli__init+0x8c>)
    263c:	f7ff fea3 	bl	2386 <app_cli__add_command_handler>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:69
  xTaskCreateStatic(sj2_cli__task, "cli", ARRAY_SIZE(task_stack),
    2640:	4b10      	ldr	r3, [pc, #64]	; (2684 <sj2_cli__init+0x90>)
    2642:	9302      	str	r3, [sp, #8]
    2644:	4b10      	ldr	r3, [pc, #64]	; (2688 <sj2_cli__init+0x94>)
    2646:	9301      	str	r3, [sp, #4]
    2648:	2303      	movs	r3, #3
    264a:	9300      	str	r3, [sp, #0]
    264c:	f44f 7200 	mov.w	r2, #512	; 0x200
    2650:	4623      	mov	r3, r4
    2652:	490e      	ldr	r1, [pc, #56]	; (268c <sj2_cli__init+0x98>)
    2654:	480e      	ldr	r0, [pc, #56]	; (2690 <sj2_cli__init+0x9c>)
    2656:	f001 ff7f 	bl	4558 <xTaskCreateStatic>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:71
}
    265a:	b009      	add	sp, #36	; 0x24
    265c:	bd30      	pop	{r4, r5, pc}
    265e:	bf00      	nop
    2660:	0000cb98 	.word	0x0000cb98
    2664:	00002549 	.word	0x00002549
    2668:	100003e4 	.word	0x100003e4
    266c:	1000005c 	.word	0x1000005c
    2670:	1000004c 	.word	0x1000004c
    2674:	1000001c 	.word	0x1000001c
    2678:	1000000c 	.word	0x1000000c
    267c:	1000003c 	.word	0x1000003c
    2680:	1000002c 	.word	0x1000002c
    2684:	10000bf4 	.word	0x10000bf4
    2688:	100003f4 	.word	0x100003f4
    268c:	0000cbeb 	.word	0x0000cbeb
    2690:	0000255d 	.word	0x0000255d

00002694 <cli__i2c_read>:
cli__i2c_read():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:42

  return command_status;
}

static void cli__i2c_read(const sl_string_s command_params,
                          app_cli__print_string_function cli_output) {
    2694:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    2698:	b0ea      	sub	sp, #424	; 0x1a8
    269a:	f10d 0908 	add.w	r9, sp, #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:43
  uint8_t buffer[256] = {0};
    269e:	f10d 0aa8 	add.w	sl, sp, #168	; 0xa8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:42
                          app_cli__print_string_function cli_output) {
    26a2:	e889 0003 	stmia.w	r9, {r0, r1}
    26a6:	4616      	mov	r6, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:43
  uint8_t buffer[256] = {0};
    26a8:	2100      	movs	r1, #0
    26aa:	f44f 7280 	mov.w	r2, #256	; 0x100
    26ae:	4650      	mov	r0, sl
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:48
  void *unused_cli_argument = NULL;

  char string_memory[128];
  sl_string_s output =
      sl_string__initialize(string_memory, sizeof(string_memory));
    26b0:	ac08      	add	r4, sp, #32
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:43
  uint8_t buffer[256] = {0};
    26b2:	f004 f8d3 	bl	685c <memset>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:50

  unsigned slave_address = 0, slave_register = 0, count = 1;
    26b6:	f10d 0818 	add.w	r8, sp, #24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:48
      sl_string__initialize(string_memory, sizeof(string_memory));
    26ba:	2280      	movs	r2, #128	; 0x80
    26bc:	a90a      	add	r1, sp, #40	; 0x28
    26be:	4620      	mov	r0, r4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:50
  unsigned slave_address = 0, slave_register = 0, count = 1;
    26c0:	af07      	add	r7, sp, #28
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:48
      sl_string__initialize(string_memory, sizeof(string_memory));
    26c2:	f000 fbc1 	bl	2e48 <sl_string__initialize>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:50
  unsigned slave_address = 0, slave_register = 0, count = 1;
    26c6:	2500      	movs	r5, #0
    26c8:	2301      	movs	r3, #1
    26ca:	603b      	str	r3, [r7, #0]
    26cc:	f8c8 5000 	str.w	r5, [r8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:52

  if (sl_string__scanf(command_params, "0x%x 0x%x %u", &slave_address,
    26d0:	e9cd 8700 	strd	r8, r7, [sp]
    26d4:	ab05      	add	r3, sp, #20
    26d6:	4a2b      	ldr	r2, [pc, #172]	; (2784 <cli__i2c_read+0xf0>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:50
  unsigned slave_address = 0, slave_register = 0, count = 1;
    26d8:	9505      	str	r5, [sp, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:52
  if (sl_string__scanf(command_params, "0x%x 0x%x %u", &slave_address,
    26da:	e899 0003 	ldmia.w	r9, {r0, r1}
    26de:	f000 fc36 	bl	2f4e <sl_string__scanf>
    26e2:	2801      	cmp	r0, #1
    26e4:	d942      	bls.n	276c <cli__i2c_read+0xd8>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:54
                       &slave_register, &count) >= 2) {
    if (i2c__read_slave_data(i2c_bus, slave_address, slave_register, &buffer[0],
    26e6:	683b      	ldr	r3, [r7, #0]
    26e8:	9300      	str	r3, [sp, #0]
    26ea:	f898 2000 	ldrb.w	r2, [r8]
    26ee:	f89d 1014 	ldrb.w	r1, [sp, #20]
    26f2:	4653      	mov	r3, sl
    26f4:	2002      	movs	r0, #2
    26f6:	f003 f88f 	bl	5818 <i2c__read_slave_data>
    26fa:	4681      	mov	r9, r0
    26fc:	b348      	cbz	r0, 2752 <cli__i2c_read+0xbe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:56
                             count)) {
      sl_string__printf(output, "I2C Read of Slave 0x%02X\n", slave_address);
    26fe:	9b05      	ldr	r3, [sp, #20]
    2700:	4a21      	ldr	r2, [pc, #132]	; (2788 <cli__i2c_read+0xf4>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:60
      cli_output(unused_cli_argument, sl_string__c_str(output));

      for (size_t index = 0; index < count; index++) {
        sl_string__printf(output, "  0x%02X: 0x%02X (%d)\n",
    2702:	f8df 9090 	ldr.w	r9, [pc, #144]	; 2794 <cli__i2c_read+0x100>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:56
      sl_string__printf(output, "I2C Read of Slave 0x%02X\n", slave_address);
    2706:	e894 0003 	ldmia.w	r4, {r0, r1}
    270a:	f000 fc09 	bl	2f20 <sl_string__printf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:57
      cli_output(unused_cli_argument, sl_string__c_str(output));
    270e:	e894 0003 	ldmia.w	r4, {r0, r1}
    2712:	f000 fbdd 	bl	2ed0 <sl_string__c_str>
    2716:	4601      	mov	r1, r0
    2718:	4628      	mov	r0, r5
    271a:	47b0      	blx	r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:59 (discriminator 1)
      for (size_t index = 0; index < count; index++) {
    271c:	683b      	ldr	r3, [r7, #0]
    271e:	42ab      	cmp	r3, r5
    2720:	d802      	bhi.n	2728 <cli__i2c_read+0x94>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:75
    sl_string__set(
        output,
        "Command error: Read command should be 'i2c read 0xDD 0xRR <n>'\n");
    cli_output(unused_cli_argument, sl_string__c_str(output));
  }
}
    2722:	b06a      	add	sp, #424	; 0x1a8
    2724:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:60 (discriminator 3)
        sl_string__printf(output, "  0x%02X: 0x%02X (%d)\n",
    2728:	f81a 2005 	ldrb.w	r2, [sl, r5]
    272c:	f8d8 3000 	ldr.w	r3, [r8]
    2730:	e9cd 2200 	strd	r2, r2, [sp]
    2734:	442b      	add	r3, r5
    2736:	464a      	mov	r2, r9
    2738:	e894 0003 	ldmia.w	r4, {r0, r1}
    273c:	f000 fbf0 	bl	2f20 <sl_string__printf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:63 (discriminator 3)
        cli_output(unused_cli_argument, sl_string__c_str(output));
    2740:	e894 0003 	ldmia.w	r4, {r0, r1}
    2744:	f000 fbc4 	bl	2ed0 <sl_string__c_str>
    2748:	4601      	mov	r1, r0
    274a:	2000      	movs	r0, #0
    274c:	47b0      	blx	r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:59 (discriminator 3)
      for (size_t index = 0; index < count; index++) {
    274e:	3501      	adds	r5, #1
    2750:	e7e4      	b.n	271c <cli__i2c_read+0x88>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:66
      sl_string__set(output, "I2C bus error during i2c__read_slave_data()\n");
    2752:	4a0e      	ldr	r2, [pc, #56]	; (278c <cli__i2c_read+0xf8>)
    2754:	e894 0003 	ldmia.w	r4, {r0, r1}
    2758:	f000 fc0d 	bl	2f76 <sl_string__set>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:67
      cli_output(unused_cli_argument, sl_string__c_str(output));
    275c:	e894 0003 	ldmia.w	r4, {r0, r1}
    2760:	f000 fbb6 	bl	2ed0 <sl_string__c_str>
    2764:	4601      	mov	r1, r0
    2766:	4648      	mov	r0, r9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:73
    cli_output(unused_cli_argument, sl_string__c_str(output));
    2768:	47b0      	blx	r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:75
}
    276a:	e7da      	b.n	2722 <cli__i2c_read+0x8e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:70
    sl_string__set(
    276c:	4a08      	ldr	r2, [pc, #32]	; (2790 <cli__i2c_read+0xfc>)
    276e:	e894 0003 	ldmia.w	r4, {r0, r1}
    2772:	f000 fc00 	bl	2f76 <sl_string__set>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:73
    cli_output(unused_cli_argument, sl_string__c_str(output));
    2776:	e894 0003 	ldmia.w	r4, {r0, r1}
    277a:	f000 fba9 	bl	2ed0 <sl_string__c_str>
    277e:	4601      	mov	r1, r0
    2780:	4628      	mov	r0, r5
    2782:	e7f1      	b.n	2768 <cli__i2c_read+0xd4>
    2784:	0000cd4b 	.word	0x0000cd4b
    2788:	0000cd58 	.word	0x0000cd58
    278c:	0000cd89 	.word	0x0000cd89
    2790:	0000cdb6 	.word	0x0000cdb6
    2794:	0000cd72 	.word	0x0000cd72

00002798 <cli__i2c_write>:
cli__i2c_write():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:78

static void cli__i2c_write(sl_string_s command_params,
                           app_cli__print_string_function cli_output) {
    2798:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    279c:	b0ea      	sub	sp, #424	; 0x1a8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:79
  unsigned slave_address = 0, slave_register = 0;
    279e:	2500      	movs	r5, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:78
                           app_cli__print_string_function cli_output) {
    27a0:	ae02      	add	r6, sp, #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:79
  unsigned slave_address = 0, slave_register = 0;
    27a2:	f10d 0818 	add.w	r8, sp, #24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:81
  void *unused_cli_argument = NULL;
  uint8_t buffer[256] = {0};
    27a6:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:78
                           app_cli__print_string_function cli_output) {
    27aa:	e886 0003 	stmia.w	r6, {r0, r1}
    27ae:	4617      	mov	r7, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:81
  uint8_t buffer[256] = {0};
    27b0:	4629      	mov	r1, r5
    27b2:	f44f 7280 	mov.w	r2, #256	; 0x100
    27b6:	4648      	mov	r0, r9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:85

  char string_memory[128];
  sl_string_s output =
      sl_string__initialize(string_memory, sizeof(string_memory));
    27b8:	ac08      	add	r4, sp, #32
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:79
  unsigned slave_address = 0, slave_register = 0;
    27ba:	9505      	str	r5, [sp, #20]
    27bc:	f8c8 5000 	str.w	r5, [r8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:81
  uint8_t buffer[256] = {0};
    27c0:	f004 f84c 	bl	685c <memset>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:85
      sl_string__initialize(string_memory, sizeof(string_memory));
    27c4:	2280      	movs	r2, #128	; 0x80
    27c6:	a90a      	add	r1, sp, #40	; 0x28
    27c8:	4620      	mov	r0, r4
    27ca:	f000 fb3d 	bl	2e48 <sl_string__initialize>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:88

  // i2c write 0xDD 0xRR <value> <value> ...
  if (2 == sl_string__scanf(command_params, "0x%x 0x%x", &slave_address,
    27ce:	f8cd 8000 	str.w	r8, [sp]
    27d2:	ab05      	add	r3, sp, #20
    27d4:	4a36      	ldr	r2, [pc, #216]	; (28b0 <cli__i2c_write+0x118>)
    27d6:	e896 0003 	ldmia.w	r6, {r0, r1}
    27da:	f000 fbb8 	bl	2f4e <sl_string__scanf>
    27de:	2802      	cmp	r0, #2
    27e0:	d15a      	bne.n	2898 <cli__i2c_write+0x100>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:90
                            &slave_register)) {
    sl_string__erase_first_word(command_params, ' ');
    27e2:	2220      	movs	r2, #32
    27e4:	e896 0003 	ldmia.w	r6, {r0, r1}
    27e8:	f000 fd88 	bl	32fc <sl_string__erase_first_word>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:91
    sl_string__erase_first_word(command_params, ' ');
    27ec:	2220      	movs	r2, #32
    27ee:	e896 0003 	ldmia.w	r6, {r0, r1}
    27f2:	f000 fd83 	bl	32fc <sl_string__erase_first_word>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:95

    // Store one or more write <value> parameters to buffer as specified by the
    // user
    long value_to_write = 0;
    27f6:	9507      	str	r5, [sp, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:97
    size_t count = 0;
    while (sl_string__erase_int(command_params, &value_to_write)) {
    27f8:	aa07      	add	r2, sp, #28
    27fa:	e896 0003 	ldmia.w	r6, {r0, r1}
    27fe:	f000 fd97 	bl	3330 <sl_string__erase_int>
    2802:	4682      	mov	sl, r0
    2804:	bb08      	cbnz	r0, 284a <cli__i2c_write+0xb2>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:102
      buffer[count] = (uint8_t)value_to_write;
      ++count;
    }

    if (i2c__write_slave_data(i2c_bus, slave_address, slave_register,
    2806:	9500      	str	r5, [sp, #0]
    2808:	464b      	mov	r3, r9
    280a:	f898 2000 	ldrb.w	r2, [r8]
    280e:	f89d 1014 	ldrb.w	r1, [sp, #20]
    2812:	2002      	movs	r0, #2
    2814:	f003 f83a 	bl	588c <i2c__write_slave_data>
    2818:	4606      	mov	r6, r0
    281a:	b380      	cbz	r0, 287e <cli__i2c_write+0xe6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:104
                              &buffer[0], count)) {
      sl_string__printf(output, "Wrote %u bytes to slave 0x%02X\n", count,
    281c:	9b05      	ldr	r3, [sp, #20]
    281e:	9300      	str	r3, [sp, #0]
    2820:	4a24      	ldr	r2, [pc, #144]	; (28b4 <cli__i2c_write+0x11c>)
    2822:	462b      	mov	r3, r5
    2824:	e894 0003 	ldmia.w	r4, {r0, r1}
    2828:	f000 fb7a 	bl	2f20 <sl_string__printf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:106
                        slave_address);
      cli_output(unused_cli_argument, sl_string__c_str(output));
    282c:	e894 0003 	ldmia.w	r4, {r0, r1}
    2830:	f000 fb4e 	bl	2ed0 <sl_string__c_str>
    2834:	4601      	mov	r1, r0
    2836:	4650      	mov	r0, sl
    2838:	47b8      	blx	r7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:108

      for (size_t index = 0; index < count; index++) {
    283a:	4656      	mov	r6, sl
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:109
        sl_string__printf(output, "  [%3d] = 0x%02X (%d)\n",
    283c:	f8df a080 	ldr.w	sl, [pc, #128]	; 28c0 <cli__i2c_write+0x128>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:108 (discriminator 1)
      for (size_t index = 0; index < count; index++) {
    2840:	42b5      	cmp	r5, r6
    2842:	d107      	bne.n	2854 <cli__i2c_write+0xbc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:123
  } else {
    sl_string__set(output, "Command error: Write command should be 'i2c write "
                           "0xDD 0xRR <value> <value> ...'\n");
    cli_output(unused_cli_argument, sl_string__c_str(output));
  }
    2844:	b06a      	add	sp, #424	; 0x1a8
    2846:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:98
      buffer[count] = (uint8_t)value_to_write;
    284a:	9b07      	ldr	r3, [sp, #28]
    284c:	f809 3005 	strb.w	r3, [r9, r5]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:99
      ++count;
    2850:	3501      	adds	r5, #1
    2852:	e7d1      	b.n	27f8 <cli__i2c_write+0x60>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:109 (discriminator 3)
        sl_string__printf(output, "  [%3d] = 0x%02X (%d)\n",
    2854:	f819 2006 	ldrb.w	r2, [r9, r6]
    2858:	f8d8 3000 	ldr.w	r3, [r8]
    285c:	e9cd 2200 	strd	r2, r2, [sp]
    2860:	4433      	add	r3, r6
    2862:	4652      	mov	r2, sl
    2864:	e894 0003 	ldmia.w	r4, {r0, r1}
    2868:	f000 fb5a 	bl	2f20 <sl_string__printf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:112 (discriminator 3)
        cli_output(unused_cli_argument, sl_string__c_str(output));
    286c:	e894 0003 	ldmia.w	r4, {r0, r1}
    2870:	f000 fb2e 	bl	2ed0 <sl_string__c_str>
    2874:	4601      	mov	r1, r0
    2876:	2000      	movs	r0, #0
    2878:	47b8      	blx	r7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:108 (discriminator 3)
      for (size_t index = 0; index < count; index++) {
    287a:	3601      	adds	r6, #1
    287c:	e7e0      	b.n	2840 <cli__i2c_write+0xa8>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:115
      sl_string__set(output, "I2C bus error during i2c__write_slave_data()\n");
    287e:	4a0e      	ldr	r2, [pc, #56]	; (28b8 <cli__i2c_write+0x120>)
    2880:	e894 0003 	ldmia.w	r4, {r0, r1}
    2884:	f000 fb77 	bl	2f76 <sl_string__set>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:116
      cli_output(unused_cli_argument, sl_string__c_str(output));
    2888:	e894 0003 	ldmia.w	r4, {r0, r1}
    288c:	f000 fb20 	bl	2ed0 <sl_string__c_str>
    2890:	4601      	mov	r1, r0
    2892:	4630      	mov	r0, r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:121
    cli_output(unused_cli_argument, sl_string__c_str(output));
    2894:	47b8      	blx	r7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:123
    2896:	e7d5      	b.n	2844 <cli__i2c_write+0xac>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:119
    sl_string__set(output, "Command error: Write command should be 'i2c write "
    2898:	4a08      	ldr	r2, [pc, #32]	; (28bc <cli__i2c_write+0x124>)
    289a:	e894 0003 	ldmia.w	r4, {r0, r1}
    289e:	f000 fb6a 	bl	2f76 <sl_string__set>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:121
    cli_output(unused_cli_argument, sl_string__c_str(output));
    28a2:	e894 0003 	ldmia.w	r4, {r0, r1}
    28a6:	f000 fb13 	bl	2ed0 <sl_string__c_str>
    28aa:	4601      	mov	r1, r0
    28ac:	4628      	mov	r0, r5
    28ae:	e7f1      	b.n	2894 <cli__i2c_write+0xfc>
    28b0:	0000cdf6 	.word	0x0000cdf6
    28b4:	0000ce00 	.word	0x0000ce00
    28b8:	0000ce37 	.word	0x0000ce37
    28bc:	0000ce65 	.word	0x0000ce65
    28c0:	0000ce20 	.word	0x0000ce20

000028c4 <cli__i2c>:
cli__i2c():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:15
                          app_cli__print_string_function cli_output) {
    28c4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
    28c8:	466c      	mov	r4, sp
    28ca:	e884 0006 	stmia.w	r4, {r1, r2}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:19
      sl_string__begins_with_ignore_case(user_input_minus_command_name, "read");
    28ce:	4a15      	ldr	r2, [pc, #84]	; (2924 <cli__i2c+0x60>)
    28d0:	e894 0003 	ldmia.w	r4, {r0, r1}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:15
                          app_cli__print_string_function cli_output) {
    28d4:	461f      	mov	r7, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:19
      sl_string__begins_with_ignore_case(user_input_minus_command_name, "read");
    28d6:	f000 fc2e 	bl	3136 <sl_string__begins_with_ignore_case>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:20
  const bool write = sl_string__begins_with_ignore_case(
    28da:	4a13      	ldr	r2, [pc, #76]	; (2928 <cli__i2c+0x64>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:19
      sl_string__begins_with_ignore_case(user_input_minus_command_name, "read");
    28dc:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:20
  const bool write = sl_string__begins_with_ignore_case(
    28de:	e894 0003 	ldmia.w	r4, {r0, r1}
    28e2:	f000 fc28 	bl	3136 <sl_string__begins_with_ignore_case>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:22
  sl_string__erase_first_word(user_input_minus_command_name, ' ');
    28e6:	2220      	movs	r2, #32
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:20
  const bool write = sl_string__begins_with_ignore_case(
    28e8:	4680      	mov	r8, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:22
  sl_string__erase_first_word(user_input_minus_command_name, ' ');
    28ea:	e894 0003 	ldmia.w	r4, {r0, r1}
    28ee:	f000 fd05 	bl	32fc <sl_string__erase_first_word>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:23
  sl_string_s command_params = user_input_minus_command_name;
    28f2:	e894 0003 	ldmia.w	r4, {r0, r1}
    28f6:	ae02      	add	r6, sp, #8
    28f8:	e886 0003 	stmia.w	r6, {r0, r1}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:26
  if (read) {
    28fc:	b135      	cbz	r5, 290c <cli__i2c+0x48>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:27
    cli__i2c_read(command_params, cli_output);
    28fe:	463a      	mov	r2, r7
    2900:	f7ff fec8 	bl	2694 <cli__i2c_read>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:28
    command_status = APP_CLI_STATUS__SUCCESS;
    2904:	2000      	movs	r0, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:39
}
    2906:	b004      	add	sp, #16
    2908:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:31
  else if (write) {
    290c:	f1b8 0f00 	cmp.w	r8, #0
    2910:	d005      	beq.n	291e <cli__i2c+0x5a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:32
    cli__i2c_write(command_params, cli_output);
    2912:	463a      	mov	r2, r7
    2914:	e896 0003 	ldmia.w	r6, {r0, r1}
    2918:	f7ff ff3e 	bl	2798 <cli__i2c_write>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:33
    command_status = APP_CLI_STATUS__SUCCESS;
    291c:	e7f2      	b.n	2904 <cli__i2c+0x40>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:35
    command_status = APP_CLI_STATUS__HANDLER_FAILURE;
    291e:	2001      	movs	r0, #1
    2920:	e7f1      	b.n	2906 <cli__i2c+0x42>
    2922:	bf00      	nop
    2924:	0000cd40 	.word	0x0000cd40
    2928:	0000cd45 	.word	0x0000cd45

0000292c <cli__uart3_transmit>:
cli__uart3_transmit():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:14
                                 app_cli__print_string_function cli_output);

app_cli_status_e
cli__uart3_transmit(app_cli__argument_t argument,
                    sl_string_s user_input_minus_command_name,
                    app_cli__print_string_function cli_output) {
    292c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    292e:	466c      	mov	r4, sp
    2930:	e884 0006 	stmia.w	r4, {r1, r2}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:15
  uart_puts(UART__3, sl_string__c_str(user_input_minus_command_name));
    2934:	e894 0003 	ldmia.w	r4, {r0, r1}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:14
                    app_cli__print_string_function cli_output) {
    2938:	461d      	mov	r5, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:15
  uart_puts(UART__3, sl_string__c_str(user_input_minus_command_name));
    293a:	f000 fac9 	bl	2ed0 <sl_string__c_str>
    293e:	4601      	mov	r1, r0
    2940:	2003      	movs	r0, #3
    2942:	f000 f9ea 	bl	2d1a <uart_puts>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:17

  cli_output(NULL, "Output to UART3: ");
    2946:	4908      	ldr	r1, [pc, #32]	; (2968 <cli__uart3_transmit+0x3c>)
    2948:	2000      	movs	r0, #0
    294a:	47a8      	blx	r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:18
  cli_output(NULL, sl_string__c_str(user_input_minus_command_name));
    294c:	e894 0003 	ldmia.w	r4, {r0, r1}
    2950:	f000 fabe 	bl	2ed0 <sl_string__c_str>
    2954:	4601      	mov	r1, r0
    2956:	2000      	movs	r0, #0
    2958:	47a8      	blx	r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:19
  cli_output(NULL, "\r\n");
    295a:	4904      	ldr	r1, [pc, #16]	; (296c <cli__uart3_transmit+0x40>)
    295c:	2000      	movs	r0, #0
    295e:	47a8      	blx	r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:22

  return APP_CLI_STATUS__SUCCESS;
}
    2960:	2000      	movs	r0, #0
    2962:	b003      	add	sp, #12
    2964:	bd30      	pop	{r4, r5, pc}
    2966:	bf00      	nop
    2968:	0000cf15 	.word	0x0000cf15
    296c:	0000cae7 	.word	0x0000cae7

00002970 <cli__crash_me>:
cli__crash_me():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:26

app_cli_status_e cli__crash_me(app_cli__argument_t argument,
                               sl_string_s user_input_minus_command_name,
                               app_cli__print_string_function cli_output) {
    2970:	b082      	sub	sp, #8
    2972:	ab02      	add	r3, sp, #8
    2974:	e903 0006 	stmdb	r3, {r1, r2}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:28
  uint32_t *bad_pointer = (uint32_t *)0x00000001;
  *bad_pointer = 0xDEADBEEF;
    2978:	2301      	movs	r3, #1
    297a:	4a02      	ldr	r2, [pc, #8]	; (2984 <cli__crash_me+0x14>)
    297c:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:30
  return APP_CLI_STATUS__SUCCESS;
}
    297e:	2000      	movs	r0, #0
    2980:	b002      	add	sp, #8
    2982:	4770      	bx	lr
    2984:	deadbeef 	.word	0xdeadbeef

00002988 <cli__task_list>:
cli__task_list():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:34

app_cli_status_e cli__task_list(app_cli__argument_t argument,
                                sl_string_s user_input_minus_command_name,
                                app_cli__print_string_function cli_output) {
    2988:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    298c:	b08f      	sub	sp, #60	; 0x3c
    298e:	af06      	add	r7, sp, #24
    2990:	f107 0008 	add.w	r0, r7, #8
    2994:	e880 0006 	stmia.w	r0, {r1, r2}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:35
  const int sleep_time = sl_string__to_int(user_input_minus_command_name);
    2998:	c803      	ldmia	r0, {r0, r1}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:34
                                app_cli__print_string_function cli_output) {
    299a:	4699      	mov	r9, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:35
  const int sleep_time = sl_string__to_int(user_input_minus_command_name);
    299c:	f000 fbea 	bl	3174 <sl_string__to_int>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:36
  if (sleep_time > 0) {
    29a0:	1e04      	subs	r4, r0, #0
    29a2:	dd04      	ble.n	29ae <cli__task_list+0x26>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:37
    vTaskResetRunTimeStats();
    29a4:	f002 fbd8 	bl	5158 <vTaskResetRunTimeStats>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:38
    vTaskDelay(sleep_time);
    29a8:	4620      	mov	r0, r4
    29aa:	f002 f801 	bl	49b0 <vTaskDelay>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:43
  }

  // re-use user_input_minus_command_name as 'output_string' to save memory:
  sl_string_s output_string = user_input_minus_command_name;
  cli__task_list_print(output_string, cli_output);
    29ae:	68bb      	ldr	r3, [r7, #8]
    29b0:	61bb      	str	r3, [r7, #24]
cli__task_list_print():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:91
  static const char *const task_status_table[] = {
      "running", " ready ", "blocked", "suspend", "deleted"};

  // Limit the tasks to avoid heap allocation.
  const unsigned portBASE_TYPE max_tasks = 10;
  TaskStatus_t status[max_tasks];
    29b2:	b0da      	sub	sp, #360	; 0x168
    29b4:	68fb      	ldr	r3, [r7, #12]
    29b6:	61fb      	str	r3, [r7, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:92
  uint32_t total_cpu_runtime = 0;
    29b8:	2500      	movs	r5, #0
    29ba:	617d      	str	r5, [r7, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:95
  uint32_t total_tasks_runtime = 0;

  const uint32_t total_run_time = portGET_RUN_TIME_COUNTER_VALUE();
    29bc:	f000 fa2a 	bl	2e14 <freertos_hooks__get_run_time_counter_value>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:91
  TaskStatus_t status[max_tasks];
    29c0:	f10d 0b18 	add.w	fp, sp, #24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:95
  const uint32_t total_run_time = portGET_RUN_TIME_COUNTER_VALUE();
    29c4:	6078      	str	r0, [r7, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:97
  const unsigned portBASE_TYPE task_count =
      uxTaskGetSystemState(&status[0], max_tasks, &total_cpu_runtime);
    29c6:	f107 0214 	add.w	r2, r7, #20
    29ca:	210a      	movs	r1, #10
    29cc:	4658      	mov	r0, fp
    29ce:	f002 fa57 	bl	4e80 <uxTaskGetSystemState>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:99

  sl_string__printf(output_string,
    29d2:	f107 0418 	add.w	r4, r7, #24
    29d6:	4b2a      	ldr	r3, [pc, #168]	; (2a80 <cli__task_list+0xf8>)
    29d8:	4a2a      	ldr	r2, [pc, #168]	; (2a84 <cli__task_list+0xfc>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:97
      uxTaskGetSystemState(&status[0], max_tasks, &total_cpu_runtime);
    29da:	6038      	str	r0, [r7, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:99
  sl_string__printf(output_string,
    29dc:	e894 0003 	ldmia.w	r4, {r0, r1}
    29e0:	f000 fa9e 	bl	2f20 <sl_string__printf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:101
                    "%10s  Status Pr Stack CPU%%          Time\n", "Name");
  cli_output(unused_cli_param, sl_string__c_str(output_string));
    29e4:	e894 0003 	ldmia.w	r4, {r0, r1}
    29e8:	f000 fa72 	bl	2ed0 <sl_string__c_str>
    29ec:	4601      	mov	r1, r0
    29ee:	4628      	mov	r0, r5
    29f0:	47c8      	blx	r9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:103

  for (unsigned priority_number = 0; priority_number < configMAX_PRIORITIES;
    29f2:	46a8      	mov	r8, r5
    29f4:	465e      	mov	r6, fp
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:106
       priority_number++) {
    /* Print in sorted priority order */
    for (unsigned i = 0; i < task_count; i++) {
    29f6:	f04f 0a00 	mov.w	sl, #0
    29fa:	e026      	b.n	2a4a <cli__task_list+0xc2>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:108
      const TaskStatus_t *task = &status[i];
      if (task->uxBasePriority == priority_number) {
    29fc:	6973      	ldr	r3, [r6, #20]
    29fe:	4543      	cmp	r3, r8
    2a00:	d120      	bne.n	2a44 <cli__task_list+0xbc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:109
        total_tasks_runtime += task->ulRunTimeCounter;
    2a02:	69b2      	ldr	r2, [r6, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:112

        const unsigned cpu_percent =
            (0 == total_cpu_runtime)
    2a04:	697b      	ldr	r3, [r7, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:109
        total_tasks_runtime += task->ulRunTimeCounter;
    2a06:	4415      	add	r5, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:114
                ? 0
                : task->ulRunTimeCounter / (total_cpu_runtime / 100);
    2a08:	b123      	cbz	r3, 2a14 <cli__task_list+0x8c>
    2a0a:	2164      	movs	r1, #100	; 0x64
    2a0c:	fbb3 f3f1 	udiv	r3, r3, r1
    2a10:	fbb2 f3f3 	udiv	r3, r2, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:119
        const unsigned time_us = task->ulRunTimeCounter;
        const unsigned stack_in_bytes =
            (sizeof(void *) * task->usStackHighWaterMark);

        sl_string__printf(output_string, "%10s %s %2u %5u %4u %10u us\n",
    2a14:	e9cd 3203 	strd	r3, r2, [sp, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:117
            (sizeof(void *) * task->usStackHighWaterMark);
    2a18:	8c33      	ldrh	r3, [r6, #32]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:119
        sl_string__printf(output_string, "%10s %s %2u %5u %4u %10u us\n",
    2a1a:	4a1b      	ldr	r2, [pc, #108]	; (2a88 <cli__task_list+0x100>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:116
        const unsigned stack_in_bytes =
    2a1c:	009b      	lsls	r3, r3, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:119
        sl_string__printf(output_string, "%10s %s %2u %5u %4u %10u us\n",
    2a1e:	e9cd 8301 	strd	r8, r3, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:121
                          task->pcTaskName,
                          task_status_table[task->eCurrentState],
    2a22:	7b33      	ldrb	r3, [r6, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:119
        sl_string__printf(output_string, "%10s %s %2u %5u %4u %10u us\n",
    2a24:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
    2a28:	9300      	str	r3, [sp, #0]
    2a2a:	6873      	ldr	r3, [r6, #4]
    2a2c:	4a17      	ldr	r2, [pc, #92]	; (2a8c <cli__task_list+0x104>)
    2a2e:	e894 0003 	ldmia.w	r4, {r0, r1}
    2a32:	f000 fa75 	bl	2f20 <sl_string__printf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:124
                          (unsigned)task->uxBasePriority, stack_in_bytes,
                          cpu_percent, time_us);
        cli_output(unused_cli_param, sl_string__c_str(output_string));
    2a36:	e894 0003 	ldmia.w	r4, {r0, r1}
    2a3a:	f000 fa49 	bl	2ed0 <sl_string__c_str>
    2a3e:	4601      	mov	r1, r0
    2a40:	2000      	movs	r0, #0
    2a42:	47c8      	blx	r9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:106
    for (unsigned i = 0; i < task_count; i++) {
    2a44:	f10a 0a01 	add.w	sl, sl, #1
    2a48:	3624      	adds	r6, #36	; 0x24
    2a4a:	683b      	ldr	r3, [r7, #0]
    2a4c:	4553      	cmp	r3, sl
    2a4e:	d1d5      	bne.n	29fc <cli__task_list+0x74>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:104
       priority_number++) {
    2a50:	f108 0801 	add.w	r8, r8, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:103
  for (unsigned priority_number = 0; priority_number < configMAX_PRIORITIES;
    2a54:	f1b8 0f0a 	cmp.w	r8, #10
    2a58:	d1cc      	bne.n	29f4 <cli__task_list+0x6c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:129
      }
    }
  }

  sl_string__printf(output_string, "Overhead: %u uS\n",
    2a5a:	687b      	ldr	r3, [r7, #4]
    2a5c:	4a0c      	ldr	r2, [pc, #48]	; (2a90 <cli__task_list+0x108>)
    2a5e:	1b5b      	subs	r3, r3, r5
    2a60:	e894 0003 	ldmia.w	r4, {r0, r1}
    2a64:	f000 fa5c 	bl	2f20 <sl_string__printf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:131
                    (unsigned)(total_run_time - total_tasks_runtime));
  cli_output(unused_cli_param, sl_string__c_str(output_string));
    2a68:	e894 0003 	ldmia.w	r4, {r0, r1}
    2a6c:	f000 fa30 	bl	2ed0 <sl_string__c_str>
    2a70:	4601      	mov	r1, r0
    2a72:	2000      	movs	r0, #0
    2a74:	47c8      	blx	r9
cli__task_list():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:46
}
    2a76:	2000      	movs	r0, #0
    2a78:	3724      	adds	r7, #36	; 0x24
    2a7a:	46bd      	mov	sp, r7
    2a7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2a80:	0000ceb7 	.word	0x0000ceb7
    2a84:	0000cebc 	.word	0x0000cebc
    2a88:	0000cf48 	.word	0x0000cf48
    2a8c:	0000cee7 	.word	0x0000cee7
    2a90:	0000cf04 	.word	0x0000cf04

00002a94 <cli__suspend_task>:
cli__suspend_task():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:50
                                   app_cli__print_string_function cli_output) {
    2a94:	b507      	push	{r0, r1, r2, lr}
    2a96:	ab02      	add	r3, sp, #8
    2a98:	e903 0006 	stmdb	r3, {r1, r2}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:54
  vTaskSuspend(argument);
    2a9c:	f002 f80a 	bl	4ab4 <vTaskSuspend>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:62
}
    2aa0:	2000      	movs	r0, #0
    2aa2:	b003      	add	sp, #12
    2aa4:	f85d fb04 	ldr.w	pc, [sp], #4

00002aa8 <cli__resume_task>:
cli__resume_task():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:66
                                  app_cli__print_string_function cli_output) {
    2aa8:	b507      	push	{r0, r1, r2, lr}
    2aaa:	ab02      	add	r3, sp, #8
    2aac:	e903 0006 	stmdb	r3, {r1, r2}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:70
  vTaskResume(argument);
    2ab0:	f001 fdec 	bl	468c <vTaskResume>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:78
}
    2ab4:	2000      	movs	r0, #0
    2ab6:	b003      	add	sp, #12
    2ab8:	f85d fb04 	ldr.w	pc, [sp], #4

00002abc <delay__us>:
delay__us():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/delay.c:15
void delay__ms(uint32_t ms) {
  const uint64_t us = UINT64_C(1000) * ms;
  delay__us(us);
}

void delay__us(uint64_t us) {
    2abc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2abe:	4604      	mov	r4, r0
    2ac0:	460d      	mov	r5, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/delay.c:16
  const uint64_t time_now_us = sys_time__get_uptime_us();
    2ac2:	f000 f90b 	bl	2cdc <sys_time__get_uptime_us>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/delay.c:17
  const uint64_t time_to_wait_us = time_now_us + us;
    2ac6:	1906      	adds	r6, r0, r4
    2ac8:	eb41 0705 	adc.w	r7, r1, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/delay.c:22

  // Use the RTOS for the larger delay period in milliseconds since this will
  // sleep the CPU
  const bool rtos_is_running =
      (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
    2acc:	f002 fa24 	bl	4f18 <xTaskGetSchedulerState>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/delay.c:25

  // TODO: This assumes 1Khz OS tick rate
  if (rtos_is_running && us > 1000) {
    2ad0:	2802      	cmp	r0, #2
    2ad2:	d10c      	bne.n	2aee <delay__us+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/delay.c:25 (discriminator 1)
    2ad4:	2300      	movs	r3, #0
    2ad6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    2ada:	42ab      	cmp	r3, r5
    2adc:	bf08      	it	eq
    2ade:	42a2      	cmpeq	r2, r4
    2ae0:	d205      	bcs.n	2aee <delay__us+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/delay.c:26
    const uint32_t ms = us / 1000;
    2ae2:	4620      	mov	r0, r4
    2ae4:	4629      	mov	r1, r5
    2ae6:	f003 fc69 	bl	63bc <__aeabi_uldivmod>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/delay.c:27
    vTaskDelay(ms);
    2aea:	f001 ff61 	bl	49b0 <vTaskDelay>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/delay.c:31 (discriminator 1)
  }

  // Eat the CPU for the remaining microseconds
  while (sys_time__get_uptime_us() < time_to_wait_us) {
    2aee:	f000 f8f5 	bl	2cdc <sys_time__get_uptime_us>
    2af2:	42b9      	cmp	r1, r7
    2af4:	bf08      	it	eq
    2af6:	42b0      	cmpeq	r0, r6
    2af8:	d3f9      	bcc.n	2aee <delay__us+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/delay.c:33
  }
}
    2afa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00002afc <delay__ms>:
delay__ms():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/delay.c:12
  delay__us(us);
    2afc:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    2b00:	fba0 0103 	umull	r0, r1, r0, r3
    2b04:	f7ff bfda 	b.w	2abc <delay__us>

00002b08 <peripherals_init>:
peripherals_init():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:17
static void peripherals_init__startup_sequence(void);
static const char *peripherals_init__mount_sd_card(void);
static void peripherals_init__uart0_init(void);
static void peripherals_init__i2c_init(void);

void peripherals_init(void) {
    2b08:	b530      	push	{r4, r5, lr}
    2b0a:	b085      	sub	sp, #20
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:18
  board_io__initialize();
    2b0c:	f002 fb76 	bl	51fc <board_io__initialize>
peripherals_init__startup_sequence():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:38

  peripherals_init__i2c_init();
}

static void peripherals_init__startup_sequence(void) {
  const gpio_s leds[] = {board_io__get_led0(), board_io__get_led1(),
    2b10:	f002 fc10 	bl	5334 <board_io__get_led0>
    2b14:	f88d 000c 	strb.w	r0, [sp, #12]
    2b18:	f002 fc12 	bl	5340 <board_io__get_led1>
    2b1c:	f88d 000d 	strb.w	r0, [sp, #13]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:39
                         board_io__get_led2(), board_io__get_led3()};
    2b20:	f002 fc14 	bl	534c <board_io__get_led2>
    2b24:	f88d 000e 	strb.w	r0, [sp, #14]
    2b28:	f002 fc16 	bl	5358 <board_io__get_led3>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:40
  for (size_t number = 0; number < 32; number++) {
    2b2c:	2400      	movs	r4, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:39
                         board_io__get_led2(), board_io__get_led3()};
    2b2e:	f88d 000f 	strb.w	r0, [sp, #15]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:41
    gpio__toggle(leds[number % ARRAY_SIZE(leds)]);
    2b32:	aa04      	add	r2, sp, #16
    2b34:	f004 0303 	and.w	r3, r4, #3
    2b38:	4413      	add	r3, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:40
  for (size_t number = 0; number < 32; number++) {
    2b3a:	3401      	adds	r4, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:41
    gpio__toggle(leds[number % ARRAY_SIZE(leds)]);
    2b3c:	f813 0c04 	ldrb.w	r0, [r3, #-4]
    2b40:	f002 fcd6 	bl	54f0 <gpio__toggle>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:42
    delay__ms(50);
    2b44:	2032      	movs	r0, #50	; 0x32
    2b46:	f7ff ffd9 	bl	2afc <delay__ms>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:40
  for (size_t number = 0; number < 32; number++) {
    2b4a:	2c20      	cmp	r4, #32
    2b4c:	d1f1      	bne.n	2b32 <peripherals_init+0x2a>
peripherals_init__uart0_init():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:66
}

static void peripherals_init__uart0_init(void) {
  // Do not do any bufferring for standard input otherwise getchar(), scanf()
  // may not work
  setvbuf(stdin, 0, _IONBF, 0);
    2b4e:	4b29      	ldr	r3, [pc, #164]	; (2bf4 <peripherals_init+0xec>)
    2b50:	6818      	ldr	r0, [r3, #0]
    2b52:	2300      	movs	r3, #0
    2b54:	4619      	mov	r1, r3
    2b56:	2202      	movs	r2, #2
    2b58:	6840      	ldr	r0, [r0, #4]
    2b5a:	f004 ff57 	bl	7a0c <setvbuf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:70

  // Note: PIN functions are initialized by board_io__initialize() for P0.2(Tx)
  // and P0.3(Rx)
  uart__init(UART__0, clock__get_peripheral_clock_hz(), 115200);
    2b5e:	f7fd fb61 	bl	224 <clock__get_peripheral_clock_hz>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:86
  static uint8_t rxq_storage[32];
  static uint8_t txq_storage[128];

  // Make UART more efficient by backing it with RTOS queues (optional but
  // highly recommended with RTOS)
  QueueHandle_t rxq_handle = xQueueCreateStatic(
    2b62:	2500      	movs	r5, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:70
  uart__init(UART__0, clock__get_peripheral_clock_hz(), 115200);
    2b64:	4601      	mov	r1, r0
    2b66:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
    2b6a:	2000      	movs	r0, #0
    2b6c:	f003 f81c 	bl	5ba8 <uart__init>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:86
  QueueHandle_t rxq_handle = xQueueCreateStatic(
    2b70:	9500      	str	r5, [sp, #0]
    2b72:	4b21      	ldr	r3, [pc, #132]	; (2bf8 <peripherals_init+0xf0>)
    2b74:	4a21      	ldr	r2, [pc, #132]	; (2bfc <peripherals_init+0xf4>)
    2b76:	2101      	movs	r1, #1
    2b78:	4620      	mov	r0, r4
    2b7a:	f000 ffe5 	bl	3b48 <xQueueGenericCreateStatic>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:88
      sizeof(rxq_storage), sizeof(char), rxq_storage, &rxq_struct);
  QueueHandle_t txq_handle = xQueueCreateStatic(
    2b7e:	4b20      	ldr	r3, [pc, #128]	; (2c00 <peripherals_init+0xf8>)
    2b80:	9500      	str	r5, [sp, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:86
  QueueHandle_t rxq_handle = xQueueCreateStatic(
    2b82:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:88
  QueueHandle_t txq_handle = xQueueCreateStatic(
    2b84:	4a1f      	ldr	r2, [pc, #124]	; (2c04 <peripherals_init+0xfc>)
    2b86:	2101      	movs	r1, #1
    2b88:	2080      	movs	r0, #128	; 0x80
    2b8a:	f000 ffdd 	bl	3b48 <xQueueGenericCreateStatic>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:91
      sizeof(txq_storage), sizeof(char), txq_storage, &txq_struct);

  uart__enable_queues(UART__0, txq_handle, rxq_handle);
    2b8e:	4622      	mov	r2, r4
    2b90:	4601      	mov	r1, r0
    2b92:	4628      	mov	r0, r5
    2b94:	f003 f860 	bl	5c58 <uart__enable_queues>
peripherals_init():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:26
  ssp2__initialize(spi_sd_max_speed_khz);
    2b98:	f645 50c0 	movw	r0, #24000	; 0x5dc0
    2b9c:	f002 ff70 	bl	5a80 <ssp2__initialize>
peripherals_init__mount_sd_card():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:54
  if (FR_OK == f_mount(&sd_card_drive, default_drive, option_mount_now)) {
    2ba0:	2201      	movs	r2, #1
    2ba2:	4919      	ldr	r1, [pc, #100]	; (2c08 <peripherals_init+0x100>)
    2ba4:	4819      	ldr	r0, [pc, #100]	; (2c0c <peripherals_init+0x104>)
    2ba6:	f7fe fcb9 	bl	151c <f_mount>
peripherals_init():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:32
  printf("\n%s\n%s(): Low level startup\n%s\n", line, __FUNCTION__, mount_info);
    2baa:	4a19      	ldr	r2, [pc, #100]	; (2c10 <peripherals_init+0x108>)
    2bac:	4b19      	ldr	r3, [pc, #100]	; (2c14 <peripherals_init+0x10c>)
    2bae:	491a      	ldr	r1, [pc, #104]	; (2c18 <peripherals_init+0x110>)
    2bb0:	42a8      	cmp	r0, r5
    2bb2:	bf08      	it	eq
    2bb4:	4613      	moveq	r3, r2
    2bb6:	4a19      	ldr	r2, [pc, #100]	; (2c1c <peripherals_init+0x114>)
    2bb8:	4819      	ldr	r0, [pc, #100]	; (2c20 <peripherals_init+0x118>)
peripherals_init__i2c_init():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:107
  i2c__initialize(I2C__2, i2c_speed_hz, clock__get_peripheral_clock_hz(),
                  &binary_semaphore_struct, &mutex_struct);

  for (unsigned slave_address = 2; slave_address <= 254; slave_address += 2) {
    if (i2c__detect(I2C__2, slave_address)) {
      printf("I2C slave detected at address: 0x%02X\n", slave_address);
    2bba:	4d1a      	ldr	r5, [pc, #104]	; (2c24 <peripherals_init+0x11c>)
peripherals_init():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:32
  printf("\n%s\n%s(): Low level startup\n%s\n", line, __FUNCTION__, mount_info);
    2bbc:	f004 fe74 	bl	78a8 <iprintf>
peripherals_init__i2c_init():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:102
  i2c__initialize(I2C__2, i2c_speed_hz, clock__get_peripheral_clock_hz(),
    2bc0:	f7fd fb30 	bl	224 <clock__get_peripheral_clock_hz>
    2bc4:	4b18      	ldr	r3, [pc, #96]	; (2c28 <peripherals_init+0x120>)
    2bc6:	9300      	str	r3, [sp, #0]
    2bc8:	4602      	mov	r2, r0
    2bca:	4b18      	ldr	r3, [pc, #96]	; (2c2c <peripherals_init+0x124>)
    2bcc:	4918      	ldr	r1, [pc, #96]	; (2c30 <peripherals_init+0x128>)
    2bce:	2002      	movs	r0, #2
    2bd0:	f002 fdc6 	bl	5760 <i2c__initialize>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:105
  for (unsigned slave_address = 2; slave_address <= 254; slave_address += 2) {
    2bd4:	2402      	movs	r4, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:106
    if (i2c__detect(I2C__2, slave_address)) {
    2bd6:	b2e1      	uxtb	r1, r4
    2bd8:	2002      	movs	r0, #2
    2bda:	f002 fe7f 	bl	58dc <i2c__detect>
    2bde:	b118      	cbz	r0, 2be8 <peripherals_init+0xe0>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:107
      printf("I2C slave detected at address: 0x%02X\n", slave_address);
    2be0:	4621      	mov	r1, r4
    2be2:	4628      	mov	r0, r5
    2be4:	f004 fe60 	bl	78a8 <iprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:105
  for (unsigned slave_address = 2; slave_address <= 254; slave_address += 2) {
    2be8:	3402      	adds	r4, #2
    2bea:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
    2bee:	d1f2      	bne.n	2bd6 <peripherals_init+0xce>
peripherals_init():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:35
}
    2bf0:	b005      	add	sp, #20
    2bf2:	bd30      	pop	{r4, r5, pc}
    2bf4:	100001b0 	.word	0x100001b0
    2bf8:	10000d10 	.word	0x10000d10
    2bfc:	10000cf0 	.word	0x10000cf0
    2c00:	10001018 	.word	0x10001018
    2c04:	10000f98 	.word	0x10000f98
    2c08:	0000cae9 	.word	0x0000cae9
    2c0c:	10000d60 	.word	0x10000d60
    2c10:	0000cf6d 	.word	0x0000cf6d
    2c14:	0000cf8b 	.word	0x0000cf8b
    2c18:	0000cfb2 	.word	0x0000cfb2
    2c1c:	0000cf5c 	.word	0x0000cf5c
    2c20:	0000d003 	.word	0x0000d003
    2c24:	0000d023 	.word	0x0000d023
    2c28:	10000ca0 	.word	0x10000ca0
    2c2c:	10000c50 	.word	0x10000c50
    2c30:	00061a80 	.word	0x00061a80

00002c34 <spi2_mutex__acquire>:
spi2_mutex__acquire():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:10
#include "task.h"

static StaticSemaphore_t spi2_mutex_memory;
static SemaphoreHandle_t spi2_mutex_handle;

void spi2_mutex__acquire(void) {
    2c34:	b510      	push	{r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:11
  if (!spi2_mutex_handle) {
    2c36:	4c0a      	ldr	r4, [pc, #40]	; (2c60 <spi2_mutex__acquire+0x2c>)
    2c38:	6823      	ldr	r3, [r4, #0]
    2c3a:	b923      	cbnz	r3, 2c46 <spi2_mutex__acquire+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:12
    spi2_mutex_handle = xSemaphoreCreateMutexStatic(&spi2_mutex_memory);
    2c3c:	4909      	ldr	r1, [pc, #36]	; (2c64 <spi2_mutex__acquire+0x30>)
    2c3e:	2001      	movs	r0, #1
    2c40:	f001 f8a0 	bl	3d84 <xQueueCreateMutexStatic>
    2c44:	6020      	str	r0, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:17
    vTraceSetMutexName(spi2_mutex_handle, "spi2_mutex");
  }

  // Only acquire the mutex if the FreeRTOS is running
  if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
    2c46:	f002 f967 	bl	4f18 <xTaskGetSchedulerState>
    2c4a:	2802      	cmp	r0, #2
    2c4c:	d106      	bne.n	2c5c <spi2_mutex__acquire+0x28>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:18
    xSemaphoreTake(spi2_mutex_handle, portMAX_DELAY);
    2c4e:	6820      	ldr	r0, [r4, #0]
    2c50:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:20
  }
}
    2c54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:18
    xSemaphoreTake(spi2_mutex_handle, portMAX_DELAY);
    2c58:	f001 b9f8 	b.w	404c <xQueueSemaphoreTake>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:20
}
    2c5c:	bd10      	pop	{r4, pc}
    2c5e:	bf00      	nop
    2c60:	10001068 	.word	0x10001068
    2c64:	1000106c 	.word	0x1000106c

00002c68 <spi2_mutex__release>:
spi2_mutex__release():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:22

void spi2_mutex__release(void) {
    2c68:	b510      	push	{r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:23
  if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
    2c6a:	f002 f955 	bl	4f18 <xTaskGetSchedulerState>
    2c6e:	2802      	cmp	r0, #2
    2c70:	d108      	bne.n	2c84 <spi2_mutex__release+0x1c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:24
    xSemaphoreGive(spi2_mutex_handle);
    2c72:	4805      	ldr	r0, [pc, #20]	; (2c88 <spi2_mutex__release+0x20>)
    2c74:	2300      	movs	r3, #0
    2c76:	461a      	mov	r2, r3
    2c78:	4619      	mov	r1, r3
    2c7a:	6800      	ldr	r0, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:26
  }
}
    2c7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:24
    xSemaphoreGive(spi2_mutex_handle);
    2c80:	f000 bfd2 	b.w	3c28 <xQueueGenericSend>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:26
}
    2c84:	bd10      	pop	{r4, pc}
    2c86:	bf00      	nop
    2c88:	10001068 	.word	0x10001068

00002c8c <sys_time__one_minute_isr>:
sys_time__one_minute_isr():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:13

static const uint32_t sys_time__us_per_sec = UINT32_C(1) * 1000 * 1000;
static volatile uint32_t sys_time__one_minute_counter = 0;

static void sys_time__one_minute_isr(void) {
  ++sys_time__one_minute_counter;
    2c8c:	4a07      	ldr	r2, [pc, #28]	; (2cac <sys_time__one_minute_isr+0x20>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:12
static void sys_time__one_minute_isr(void) {
    2c8e:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:13
  ++sys_time__one_minute_counter;
    2c90:	6813      	ldr	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:16

  // Reset the HW timer manually and then clear the interrupt
  hw_timer__set_value(sys_time__hw_timer, 0);
    2c92:	2100      	movs	r1, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:13
  ++sys_time__one_minute_counter;
    2c94:	3301      	adds	r3, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:16
  hw_timer__set_value(sys_time__hw_timer, 0);
    2c96:	4608      	mov	r0, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:13
  ++sys_time__one_minute_counter;
    2c98:	6013      	str	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:16
  hw_timer__set_value(sys_time__hw_timer, 0);
    2c9a:	f002 fc83 	bl	55a4 <hw_timer__set_value>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:17
  hw_timer__acknowledge_interrupt(sys_time__hw_timer, sys_time__hw_timer_mr);
    2c9e:	2100      	movs	r1, #0
    2ca0:	4608      	mov	r0, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:18
}
    2ca2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:17
  hw_timer__acknowledge_interrupt(sys_time__hw_timer, sys_time__hw_timer_mr);
    2ca6:	f002 bc69 	b.w	557c <hw_timer__acknowledge_interrupt>
    2caa:	bf00      	nop
    2cac:	100010bc 	.word	0x100010bc

00002cb0 <sys_time__init>:
sys_time__init():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:26
 *
 *                      P U B L I C    F U N C T I O N S
 *
 ******************************************************************************/

void sys_time__init(uint32_t peripheral_clock_hz) {
    2cb0:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:32
  const uint32_t prescalar_for_1us =
      (peripheral_clock_hz / sys_time__us_per_sec) - 1;
  const uint32_t one_minute_in_us = UINT32_C(60) * 1000 * 1000;

  // Enable the timer with 1uS resolution with an interrupt
  hw_timer__enable(sys_time__hw_timer, prescalar_for_1us,
    2cb2:	4a07      	ldr	r2, [pc, #28]	; (2cd0 <sys_time__init+0x20>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:28
      (peripheral_clock_hz / sys_time__us_per_sec) - 1;
    2cb4:	4907      	ldr	r1, [pc, #28]	; (2cd4 <sys_time__init+0x24>)
    2cb6:	fbb0 f1f1 	udiv	r1, r0, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:32
  hw_timer__enable(sys_time__hw_timer, prescalar_for_1us,
    2cba:	2000      	movs	r0, #0
    2cbc:	3901      	subs	r1, #1
    2cbe:	f002 fc27 	bl	5510 <hw_timer__enable>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:34
                   sys_time__one_minute_isr);
  hw_timer__enable_match_isr(sys_time__hw_timer, sys_time__hw_timer_mr,
    2cc2:	2100      	movs	r1, #0
    2cc4:	4a04      	ldr	r2, [pc, #16]	; (2cd8 <sys_time__init+0x28>)
    2cc6:	4608      	mov	r0, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:36
                             one_minute_in_us);
}
    2cc8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:34
  hw_timer__enable_match_isr(sys_time__hw_timer, sys_time__hw_timer_mr,
    2ccc:	f002 bc44 	b.w	5558 <hw_timer__enable_match_isr>
    2cd0:	00002c8d 	.word	0x00002c8d
    2cd4:	000f4240 	.word	0x000f4240
    2cd8:	03938700 	.word	0x03938700

00002cdc <sys_time__get_uptime_us>:
sys_time__get_uptime_us():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:38

uint64_t sys_time__get_uptime_us(void) {
    2cdc:	b570      	push	{r4, r5, r6, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:53
   * and simplifies the logic of reading sys_time__sec_counter and the 32-bit HW
   * timer value.
   */
  do {
    before_us = hw_timer__get_value(sys_time__hw_timer);
    minutes = sys_time__one_minute_counter;
    2cde:	4e08      	ldr	r6, [pc, #32]	; (2d00 <sys_time__get_uptime_us+0x24>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:52 (discriminator 1)
    before_us = hw_timer__get_value(sys_time__hw_timer);
    2ce0:	2000      	movs	r0, #0
    2ce2:	f002 fc57 	bl	5594 <hw_timer__get_value>
    2ce6:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:54 (discriminator 1)
    after_us = hw_timer__get_value(sys_time__hw_timer);
    2ce8:	2000      	movs	r0, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:53 (discriminator 1)
    minutes = sys_time__one_minute_counter;
    2cea:	6834      	ldr	r4, [r6, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:54 (discriminator 1)
    after_us = hw_timer__get_value(sys_time__hw_timer);
    2cec:	f002 fc52 	bl	5594 <hw_timer__get_value>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:55 (discriminator 1)
  } while (after_us < before_us);
    2cf0:	4285      	cmp	r5, r0
    2cf2:	d8f5      	bhi.n	2ce0 <sys_time__get_uptime_us+0x4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:61

  uint64_t uptime_us = after_us;
  uptime_us += ((uint64_t)minutes * 60 * sys_time__us_per_sec);

  return uptime_us;
}
    2cf4:	4b03      	ldr	r3, [pc, #12]	; (2d04 <sys_time__get_uptime_us+0x28>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:58
  uptime_us += ((uint64_t)minutes * 60 * sys_time__us_per_sec);
    2cf6:	2100      	movs	r1, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:61
}
    2cf8:	fbe3 0104 	umlal	r0, r1, r3, r4
    2cfc:	bd70      	pop	{r4, r5, r6, pc}
    2cfe:	bf00      	nop
    2d00:	100010bc 	.word	0x100010bc
    2d04:	03938700 	.word	0x03938700

00002d08 <sys_time__get_uptime_ms>:
sys_time__get_uptime_ms():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:63

uint64_t sys_time__get_uptime_ms(void) {
    2d08:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:64
  const uint64_t us = sys_time__get_uptime_us();
    2d0a:	f7ff ffe7 	bl	2cdc <sys_time__get_uptime_us>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:65
  return (us / 1000);
    2d0e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    2d12:	2300      	movs	r3, #0
    2d14:	f003 fb52 	bl	63bc <__aeabi_uldivmod>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:66
}
    2d18:	bd08      	pop	{r3, pc}

00002d1a <uart_puts>:
uart_puts():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:29
  }

  return would_print;
}

void uart_puts(uart_e uart, const char *message) {
    2d1a:	b570      	push	{r4, r5, r6, lr}
    2d1c:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:30
  const size_t message_length = strlen(message);
    2d1e:	4608      	mov	r0, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:29
void uart_puts(uart_e uart, const char *message) {
    2d20:	460c      	mov	r4, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:30
  const size_t message_length = strlen(message);
    2d22:	f004 ff84 	bl	7c2e <strlen>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:31
  for (size_t byte = 0; byte < message_length; byte++) {
    2d26:	1826      	adds	r6, r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:31 (discriminator 1)
    2d28:	42b4      	cmp	r4, r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:32 (discriminator 1)
    uart__put(uart, message[byte], UINT32_MAX);
    2d2a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:31 (discriminator 1)
  for (size_t byte = 0; byte < message_length; byte++) {
    2d2e:	d10b      	bne.n	2d48 <uart_puts+0x2e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:34
  }
  uart__put(uart, '\r', UINT32_MAX);
    2d30:	210d      	movs	r1, #13
    2d32:	4628      	mov	r0, r5
    2d34:	f003 f82a 	bl	5d8c <uart__put>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:35
  uart__put(uart, '\n', UINT32_MAX);
    2d38:	4628      	mov	r0, r5
    2d3a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    2d3e:	210a      	movs	r1, #10
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:36
}
    2d40:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:35
  uart__put(uart, '\n', UINT32_MAX);
    2d44:	f003 b822 	b.w	5d8c <uart__put>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:32 (discriminator 3)
    uart__put(uart, message[byte], UINT32_MAX);
    2d48:	f814 1b01 	ldrb.w	r1, [r4], #1
    2d4c:	4628      	mov	r0, r5
    2d4e:	f003 f81d 	bl	5d8c <uart__put>
    2d52:	e7e9      	b.n	2d28 <uart_puts+0xe>

00002d54 <uart_puts__polled>:
uart_puts__polled():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:55
  }

  return would_print;
}

void uart_puts__polled(uart_e uart, const char *message) {
    2d54:	b570      	push	{r4, r5, r6, lr}
    2d56:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:56
  const size_t message_length = strlen(message);
    2d58:	4608      	mov	r0, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:55
void uart_puts__polled(uart_e uart, const char *message) {
    2d5a:	460c      	mov	r4, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:56
  const size_t message_length = strlen(message);
    2d5c:	f004 ff67 	bl	7c2e <strlen>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:57
  for (size_t byte = 0; byte < message_length; byte++) {
    2d60:	1826      	adds	r6, r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:57 (discriminator 1)
    2d62:	42b4      	cmp	r4, r6
    2d64:	d105      	bne.n	2d72 <uart_puts__polled+0x1e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:60
    uart__polled_put(uart, message[byte]);
  }
  uart__polled_put(uart, '\n');
    2d66:	4628      	mov	r0, r5
    2d68:	210a      	movs	r1, #10
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:61
    2d6a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:60
  uart__polled_put(uart, '\n');
    2d6e:	f002 bfab 	b.w	5cc8 <uart__polled_put>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:58 (discriminator 3)
    uart__polled_put(uart, message[byte]);
    2d72:	f814 1b01 	ldrb.w	r1, [r4], #1
    2d76:	4628      	mov	r0, r5
    2d78:	f002 ffa6 	bl	5cc8 <uart__polled_put>
    2d7c:	e7f1      	b.n	2d62 <uart_puts__polled+0xe>
    2d7e:	Address 0x0000000000002d7e is out of bounds.


00002d80 <vApplicationStackOverflowHook>:
vApplicationStackOverflowHook():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:27
}

/// Invoked by FreeRTOS when it detects stack overflow: #if (0 !=
/// configCHECK_FOR_STACK_OVERFLOW)
void vApplicationStackOverflowHook(TaskHandle_t task_handle,
                                   signed char *task_name) {
    2d80:	460c      	mov	r4, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:28
  uart_puts__polled(UART__0, "stack overflow by this task:");
    2d82:	2000      	movs	r0, #0
    2d84:	4904      	ldr	r1, [pc, #16]	; (2d98 <vApplicationStackOverflowHook+0x18>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:27
                                   signed char *task_name) {
    2d86:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:28
  uart_puts__polled(UART__0, "stack overflow by this task:");
    2d88:	f7ff ffe4 	bl	2d54 <uart_puts__polled>
halt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:19
  uart_puts__polled(UART__0, message);
    2d8c:	4621      	mov	r1, r4
    2d8e:	2000      	movs	r0, #0
    2d90:	f7ff ffe0 	bl	2d54 <uart_puts__polled>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:21
  }
    2d94:	e7fe      	b.n	2d94 <vApplicationStackOverflowHook+0x14>
    2d96:	bf00      	nop
    2d98:	0000d17c 	.word	0x0000d17c

00002d9c <vApplicationMallocFailedHook>:
vApplicationMallocFailedHook():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:34
  halt((const char *)task_name);
}

// Invoked by FreeRTOS when there pvPortMalloc() function has encountered NULL
// pointer to memory request #if (0 != configUSE_MALLOC_FAILED_HOOK)
void vApplicationMallocFailedHook(void) {
    2d9c:	b508      	push	{r3, lr}
halt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:19
  uart_puts__polled(UART__0, message);
    2d9e:	4902      	ldr	r1, [pc, #8]	; (2da8 <vApplicationMallocFailedHook+0xc>)
    2da0:	2000      	movs	r0, #0
    2da2:	f7ff ffd7 	bl	2d54 <uart_puts__polled>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:21
  }
    2da6:	e7fe      	b.n	2da6 <vApplicationMallocFailedHook+0xa>
    2da8:	0000d142 	.word	0x0000d142

00002dac <vApplicationIdleHook>:
vApplicationIdleHook():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:44
 * FreeRTOS note:
 * vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES, CALL A FUNCTION
 * THAT MIGHT BLOCK #if (0 != configUSE_IDLE_HOOK)
 */
void vApplicationIdleHook(void) {
  LPC_SC->PCON = 0; // Enter sleep mode
    2dac:	4b02      	ldr	r3, [pc, #8]	; (2db8 <vApplicationIdleHook+0xc>)
    2dae:	2200      	movs	r2, #0
    2db0:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:45
  __asm__("WFI");   // Wait for interrupt
    2db4:	bf30      	wfi
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:46
}
    2db6:	4770      	bx	lr
    2db8:	400fc000 	.word	0x400fc000

00002dbc <configASSERT_callback>:
configASSERT_callback():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:55
void vApplicationTickHook(void) {
  ; // This code is invoked during each RTOS tick interrupt
}

// This is needed when we use '#ifdef configASSERT'
void configASSERT_callback(unsigned line, const char *message) {
    2dbc:	b508      	push	{r3, lr}
    2dbe:	460c      	mov	r4, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:56
  uart_puts__polled(UART__0, "FreeRTOS ASSERT() occurred indicating an error "
    2dc0:	2000      	movs	r0, #0
    2dc2:	490a      	ldr	r1, [pc, #40]	; (2dec <configASSERT_callback+0x30>)
    2dc4:	f7ff ffc6 	bl	2d54 <uart_puts__polled>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:58
                             "condition that should NEVER happen");
  uart_puts__polled(
    2dc8:	4909      	ldr	r1, [pc, #36]	; (2df0 <configASSERT_callback+0x34>)
    2dca:	2000      	movs	r0, #0
    2dcc:	f7ff ffc2 	bl	2d54 <uart_puts__polled>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:61
      UART__0,
      " - Did you call a blocking API or non FromISR() API inside an ISR?");
  uart_puts__polled(UART__0,
    2dd0:	4908      	ldr	r1, [pc, #32]	; (2df4 <configASSERT_callback+0x38>)
    2dd2:	2000      	movs	r0, #0
    2dd4:	f7ff ffbe 	bl	2d54 <uart_puts__polled>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:63
                    " - Did you forget to use fprintf(stderr) in an ISR?");
  uart_puts__polled(UART__0, "Here is the line of code that halted the CPU: ");
    2dd8:	4907      	ldr	r1, [pc, #28]	; (2df8 <configASSERT_callback+0x3c>)
    2dda:	2000      	movs	r0, #0
    2ddc:	f7ff ffba 	bl	2d54 <uart_puts__polled>
halt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:19
  uart_puts__polled(UART__0, message);
    2de0:	4621      	mov	r1, r4
    2de2:	2000      	movs	r0, #0
    2de4:	f7ff ffb6 	bl	2d54 <uart_puts__polled>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:21
  }
    2de8:	e7fe      	b.n	2de8 <configASSERT_callback+0x2c>
    2dea:	bf00      	nop
    2dec:	0000d04a 	.word	0x0000d04a
    2df0:	0000d09c 	.word	0x0000d09c
    2df4:	0000d0df 	.word	0x0000d0df
    2df8:	0000d113 	.word	0x0000d113

00002dfc <vApplicationGetIdleTaskMemory>:
vApplicationGetIdleTaskMemory():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:75
                                   StackType_t **ppxIdleTaskStackBuffer,
                                   uint32_t *pulIdleTaskStackSize) {
  static StaticTask_t xIdleTaskTCB;
  static StackType_t uxIdleTaskStack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer = &xIdleTaskTCB;     // memory for the idle task
    2dfc:	4b03      	ldr	r3, [pc, #12]	; (2e0c <vApplicationGetIdleTaskMemory+0x10>)
    2dfe:	6003      	str	r3, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:76
  *ppxIdleTaskStackBuffer = uxIdleTaskStack; // stack memory for the idle task
    2e00:	4b03      	ldr	r3, [pc, #12]	; (2e10 <vApplicationGetIdleTaskMemory+0x14>)
    2e02:	600b      	str	r3, [r1, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:77
  *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE; // stack memory size
    2e04:	2364      	movs	r3, #100	; 0x64
    2e06:	6013      	str	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:78
}
    2e08:	4770      	bx	lr
    2e0a:	bf00      	nop
    2e0c:	10001258 	.word	0x10001258
    2e10:	100010c8 	.word	0x100010c8

00002e14 <freertos_hooks__get_run_time_counter_value>:
freertos_hooks__get_run_time_counter_value():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:81

// #if (0 != configGENERATE_RUN_TIME_STATS)
uint32_t freertos_hooks__get_run_time_counter_value(void) {
    2e14:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:82
  return (uint32_t)(sys_time__get_uptime_us() -
    2e16:	f7ff ff61 	bl	2cdc <sys_time__get_uptime_us>
    2e1a:	4b02      	ldr	r3, [pc, #8]	; (2e24 <freertos_hooks__get_run_time_counter_value+0x10>)
    2e1c:	681b      	ldr	r3, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:84
                    freertos_run_time_counter_offset);
}
    2e1e:	1ac0      	subs	r0, r0, r3
    2e20:	bd08      	pop	{r3, pc}
    2e22:	bf00      	nop
    2e24:	100010c0 	.word	0x100010c0

00002e28 <freertos_hooks__reset_run_time_stats>:
freertos_hooks__reset_run_time_stats():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:86

void freertos_hooks__reset_run_time_stats(void) {
    2e28:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:88
  // We save the offset that acts like a way to reset the uint64_t counters
  freertos_run_time_counter_offset = sys_time__get_uptime_us();
    2e2a:	f7ff ff57 	bl	2cdc <sys_time__get_uptime_us>
    2e2e:	4b02      	ldr	r3, [pc, #8]	; (2e38 <freertos_hooks__reset_run_time_stats+0x10>)
    2e30:	e9c3 0100 	strd	r0, r1, [r3]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:89
    2e34:	bd08      	pop	{r3, pc}
    2e36:	bf00      	nop
    2e38:	100010c0 	.word	0x100010c0

00002e3c <sl_utils__pointer_distance>:
sl_utils__pointer_distance():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:71
 *
 **********************************************************************************************************************/

ptrdiff_t sl_utils__pointer_distance(const void *first, const void *second) {
  ptrdiff_t distance = 0;
  if ((NULL != first) && (NULL != second)) {
    2e3c:	b118      	cbz	r0, 2e46 <sl_utils__pointer_distance+0xa>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:71 (discriminator 1)
    2e3e:	b109      	cbz	r1, 2e44 <sl_utils__pointer_distance+0x8>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:72
    distance = (intptr_t)first - (intptr_t)second;
    2e40:	1a40      	subs	r0, r0, r1
    2e42:	4770      	bx	lr
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:70
  ptrdiff_t distance = 0;
    2e44:	4608      	mov	r0, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:75
  }
  return distance;
}
    2e46:	4770      	bx	lr

00002e48 <sl_string__initialize>:
sl_string__initialize():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:142
 *                                          P U B L I C   F U N C T I O N S
 *
 **********************************************************************************************************************/

sl_string_s sl_string__initialize(void *static_memory,
                                  size_t static_memory_size_max) {
    2e48:	b538      	push	{r3, r4, r5, lr}
    2e4a:	4605      	mov	r5, r0
    2e4c:	4614      	mov	r4, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:145
  sl_string_s output_string = {NULL};

  if ((NULL != static_memory) && (static_memory_size_max > 0U)) {
    2e4e:	460b      	mov	r3, r1
    2e50:	b149      	cbz	r1, 2e66 <sl_string__initialize+0x1e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:145 (discriminator 1)
    2e52:	b152      	cbz	r2, 2e6a <sl_string__initialize+0x22>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:146
    memset(static_memory, 0, static_memory_size_max);
    2e54:	4618      	mov	r0, r3
    2e56:	2100      	movs	r1, #0
    2e58:	f003 fd00 	bl	685c <memset>
    2e5c:	4603      	mov	r3, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:151
    output_string.cstring = static_memory;
    output_string.max_size = static_memory_size_max;
  }

  return output_string;
    2e5e:	e9c5 3400 	strd	r3, r4, [r5]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:152
}
    2e62:	4628      	mov	r0, r5
    2e64:	bd38      	pop	{r3, r4, r5, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:143
  sl_string_s output_string = {NULL};
    2e66:	460c      	mov	r4, r1
    2e68:	e7f9      	b.n	2e5e <sl_string__initialize+0x16>
    2e6a:	4613      	mov	r3, r2
    2e6c:	e7f7      	b.n	2e5e <sl_string__initialize+0x16>

00002e6e <sl_string__get_capacity>:
sl_string__get_capacity():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:199
  }

  return capacity;
}

size_t sl_string__get_capacity(const sl_string_s input_string) {
    2e6e:	b082      	sub	sp, #8
    2e70:	ab02      	add	r3, sp, #8
    2e72:	e903 0003 	stmdb	r3, {r0, r1}
sl_string__get_capacity_including_null_char():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:192
  if (sl_string__is_valid(input_string)) {
    2e76:	e9dd 3000 	ldrd	r3, r0, [sp]
    2e7a:	b11b      	cbz	r3, 2e84 <sl_string__get_capacity+0x16>
sl_string__get_capacity():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:202
  size_t capacity = sl_string__get_capacity_including_null_char(input_string);

  if (capacity > 0U) {
    2e7c:	b100      	cbz	r0, 2e80 <sl_string__get_capacity+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:203
    --capacity;
    2e7e:	3801      	subs	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:207
  }

  return capacity;
}
    2e80:	b002      	add	sp, #8
    2e82:	4770      	bx	lr
sl_string__get_capacity_including_null_char():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:190
  size_t capacity = 0;
    2e84:	4618      	mov	r0, r3
sl_string__get_capacity():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:206
  return capacity;
    2e86:	e7fb      	b.n	2e80 <sl_string__get_capacity+0x12>

00002e88 <sl_string__get_length>:
sl_string__get_length():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:209

size_t sl_string__get_length(const sl_string_s input_string) {
    2e88:	b082      	sub	sp, #8
    2e8a:	ab02      	add	r3, sp, #8
    2e8c:	e903 0003 	stmdb	r3, {r0, r1}
    2e90:	9800      	ldr	r0, [sp, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:210
  return sl_string__is_valid(input_string) ? strlen(input_string.cstring) : 0U;
    2e92:	b110      	cbz	r0, 2e9a <sl_string__get_length+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:211 (discriminator 1)
}
    2e94:	b002      	add	sp, #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:210 (discriminator 1)
  return sl_string__is_valid(input_string) ? strlen(input_string.cstring) : 0U;
    2e96:	f004 beca 	b.w	7c2e <strlen>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:211 (discriminator 4)
}
    2e9a:	b002      	add	sp, #8
    2e9c:	4770      	bx	lr

00002e9e <sl_string__is_full>:
sl_string__is_full():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:213

bool sl_string__is_full(const sl_string_s input_string) {
    2e9e:	b513      	push	{r0, r1, r4, lr}
    2ea0:	466c      	mov	r4, sp
    2ea2:	e884 0003 	stmia.w	r4, {r0, r1}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:218
  // Note: For non-modifiable string constructed from
  // sl_string__initialize_non_modifiable(), this should return true
  bool is_full = (false == sl_string__private_can_be_modified(input_string));

  if (sl_string__is_valid(input_string)) {
    2ea6:	9b00      	ldr	r3, [sp, #0]
    2ea8:	b923      	cbnz	r3, 2eb4 <sl_string__is_full+0x16>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:216
  bool is_full = (false == sl_string__private_can_be_modified(input_string));
    2eaa:	fab1 f081 	clz	r0, r1
    2eae:	0940      	lsrs	r0, r0, #5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:224
    const size_t length = sl_string__get_length(input_string);
    const size_t capacity = sl_string__get_capacity(input_string);
    is_full = (length >= capacity);
  }
  return is_full;
}
    2eb0:	b002      	add	sp, #8
    2eb2:	bd10      	pop	{r4, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:219
    const size_t length = sl_string__get_length(input_string);
    2eb4:	e894 0003 	ldmia.w	r4, {r0, r1}
    2eb8:	f7ff ffe6 	bl	2e88 <sl_string__get_length>
    2ebc:	4602      	mov	r2, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:220
    const size_t capacity = sl_string__get_capacity(input_string);
    2ebe:	e894 0003 	ldmia.w	r4, {r0, r1}
    2ec2:	f7ff ffd4 	bl	2e6e <sl_string__get_capacity>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:221
    is_full = (length >= capacity);
    2ec6:	4282      	cmp	r2, r0
    2ec8:	bf34      	ite	cc
    2eca:	2000      	movcc	r0, #0
    2ecc:	2001      	movcs	r0, #1
    2ece:	e7ef      	b.n	2eb0 <sl_string__is_full+0x12>

00002ed0 <sl_string__c_str>:
sl_string__c_str():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:226

const char *sl_string__c_str(const sl_string_s input_string) {
    2ed0:	b082      	sub	sp, #8
    2ed2:	ab02      	add	r3, sp, #8
    2ed4:	e903 0003 	stmdb	r3, {r0, r1}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:228
  return input_string.cstring;
}
    2ed8:	9800      	ldr	r0, [sp, #0]
    2eda:	b002      	add	sp, #8
    2edc:	4770      	bx	lr

00002ede <sl_string__clear>:
sl_string__clear():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:289
    }
  }
  return is_alpha_num;
}

bool sl_string__clear(sl_string_s input_string) {
    2ede:	b082      	sub	sp, #8
    2ee0:	ab02      	add	r3, sp, #8
    2ee2:	e903 0003 	stmdb	r3, {r0, r1}
    2ee6:	9b00      	ldr	r3, [sp, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:291
  bool clear_success = false;
  if (sl_string__is_valid(input_string) &&
    2ee8:	b133      	cbz	r3, 2ef8 <sl_string__clear+0x1a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:291 (discriminator 1)
    2eea:	9801      	ldr	r0, [sp, #4]
    2eec:	b110      	cbz	r0, 2ef4 <sl_string__clear+0x16>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:293
      sl_string__private_can_be_modified(input_string)) {
    *input_string.cstring = '\0';
    2eee:	2200      	movs	r2, #0
    2ef0:	701a      	strb	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:294
    clear_success = true;
    2ef2:	2001      	movs	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:297
  }
  return clear_success;
}
    2ef4:	b002      	add	sp, #8
    2ef6:	4770      	bx	lr
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:290
  bool clear_success = false;
    2ef8:	4618      	mov	r0, r3
    2efa:	e7fb      	b.n	2ef4 <sl_string__clear+0x16>

00002efc <sl_string__vprintf>:
sl_string__vprintf():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:351
  }
  return chars_printed;
}

size_t sl_string__vprintf(sl_string_s input_string, const char *format,
                          va_list args) {
    2efc:	b507      	push	{r0, r1, r2, lr}
    2efe:	f10d 0c08 	add.w	ip, sp, #8
    2f02:	e90c 0003 	stmdb	ip, {r0, r1}
    2f06:	9800      	ldr	r0, [sp, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:353
  size_t chars_printed_val = 0;
  if (sl_string__is_valid(input_string) && (NULL != format) &&
    2f08:	b130      	cbz	r0, 2f18 <sl_string__vprintf+0x1c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:353 (discriminator 1)
    2f0a:	b12a      	cbz	r2, 2f18 <sl_string__vprintf+0x1c>
    2f0c:	9901      	ldr	r1, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:353 (discriminator 2)
    2f0e:	b119      	cbz	r1, 2f18 <sl_string__vprintf+0x1c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:358
      sl_string__private_can_be_modified(input_string)) {
    const size_t capacity =
        sl_string__get_capacity_including_null_char(input_string);
    const int chars_printed =
        vsnprintf(input_string.cstring, capacity, format, args);
    2f10:	f005 fd94 	bl	8a3c <vsniprintf>
sl_string__private_return_positive_or_zero():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:83
  return (value > 0) ? value_size : 0U;
    2f14:	2800      	cmp	r0, #0
    2f16:	dc00      	bgt.n	2f1a <sl_string__vprintf+0x1e>
    2f18:	2000      	movs	r0, #0
sl_string__vprintf():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:364

    chars_printed_val =
        sl_string__private_return_positive_or_zero(chars_printed);
  }
  return chars_printed_val;
}
    2f1a:	b003      	add	sp, #12
    2f1c:	f85d fb04 	ldr.w	pc, [sp], #4

00002f20 <sl_string__printf>:
sl_string__printf():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:338
size_t sl_string__printf(sl_string_s input_string, const char *format, ...) {
    2f20:	b40c      	push	{r2, r3}
    2f22:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    2f24:	466c      	mov	r4, sp
    2f26:	e884 0003 	stmia.w	r4, {r0, r1}
    2f2a:	9a06      	ldr	r2, [sp, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:340
  if (sl_string__is_valid(input_string) && (NULL != format) &&
    2f2c:	b140      	cbz	r0, 2f40 <sl_string__printf+0x20>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:340 (discriminator 1)
    2f2e:	b162      	cbz	r2, 2f4a <sl_string__printf+0x2a>
    2f30:	4608      	mov	r0, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:340 (discriminator 2)
    2f32:	b129      	cbz	r1, 2f40 <sl_string__printf+0x20>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:343
    va_start(args, format);
    2f34:	ab07      	add	r3, sp, #28
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:344
    chars_printed = sl_string__vprintf(input_string, format, args);
    2f36:	e894 0003 	ldmia.w	r4, {r0, r1}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:343
    va_start(args, format);
    2f3a:	9303      	str	r3, [sp, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:344
    chars_printed = sl_string__vprintf(input_string, format, args);
    2f3c:	f7ff ffde 	bl	2efc <sl_string__vprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:348
}
    2f40:	b004      	add	sp, #16
    2f42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    2f46:	b002      	add	sp, #8
    2f48:	4770      	bx	lr
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:339
  size_t chars_printed = 0;
    2f4a:	4610      	mov	r0, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:347
  return chars_printed;
    2f4c:	e7f8      	b.n	2f40 <sl_string__printf+0x20>

00002f4e <sl_string__scanf>:
sl_string__scanf():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:418

  return chars_printed_val;
}

size_t sl_string__scanf(const sl_string_s input_string, const char *format,
                        ...) {
    2f4e:	b40c      	push	{r2, r3}
    2f50:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    2f52:	466b      	mov	r3, sp
    2f54:	e883 0003 	stmia.w	r3, {r0, r1}
    2f58:	9906      	ldr	r1, [sp, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:421
  int number_of_parsed_params = 0;

  if (sl_string__is_valid(input_string) && (NULL != format)) {
    2f5a:	b130      	cbz	r0, 2f6a <sl_string__scanf+0x1c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:421 (discriminator 1)
    2f5c:	b129      	cbz	r1, 2f6a <sl_string__scanf+0x1c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:423
    va_list args;
    va_start(args, format);
    2f5e:	aa07      	add	r2, sp, #28
    2f60:	9203      	str	r2, [sp, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:425
    // lint -esym(586, vsscanf) vsscanf is deprecated
    number_of_parsed_params = vsscanf(input_string.cstring, format, args);
    2f62:	f005 fd9d 	bl	8aa0 <vsiscanf>
sl_string__private_return_positive_or_zero():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:83
  return (value > 0) ? value_size : 0U;
    2f66:	2800      	cmp	r0, #0
    2f68:	dc00      	bgt.n	2f6c <sl_string__scanf+0x1e>
    2f6a:	2000      	movs	r0, #0
sl_string__scanf():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:430
    va_end(args);
  }

  return sl_string__private_return_positive_or_zero(number_of_parsed_params);
}
    2f6c:	b005      	add	sp, #20
    2f6e:	f85d eb04 	ldr.w	lr, [sp], #4
    2f72:	b002      	add	sp, #8
    2f74:	4770      	bx	lr

00002f76 <sl_string__set>:
sl_string__set():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:466
  }

  return count_of_token;
}

bool sl_string__set(sl_string_s input_string, const char *source) {
    2f76:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    2f78:	466d      	mov	r5, sp
    2f7a:	e885 0003 	stmia.w	r5, {r0, r1}
    2f7e:	4614      	mov	r4, r2
    2f80:	4606      	mov	r6, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:469
  bool result = false;

  if ((NULL != input_string.cstring) && (NULL != source) &&
    2f82:	b1a0      	cbz	r0, 2fae <sl_string__set+0x38>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:469 (discriminator 1)
    2f84:	b19a      	cbz	r2, 2fae <sl_string__set+0x38>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:469 (discriminator 2)
    2f86:	4608      	mov	r0, r1
    2f88:	b179      	cbz	r1, 2faa <sl_string__set+0x34>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:471
      sl_string__private_can_be_modified(input_string)) {
    const size_t source_length = strlen(source);
    2f8a:	4610      	mov	r0, r2
    2f8c:	f004 fe4f 	bl	7c2e <strlen>
    2f90:	4607      	mov	r7, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:472
    const size_t destination_length = sl_string__get_capacity(input_string);
    2f92:	e895 0003 	ldmia.w	r5, {r0, r1}
    2f96:	f7ff ff6a 	bl	2e6e <sl_string__get_capacity>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:473
    if (destination_length >= source_length) {
    2f9a:	4287      	cmp	r7, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:472
    const size_t destination_length = sl_string__get_capacity(input_string);
    2f9c:	4602      	mov	r2, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:473
    if (destination_length >= source_length) {
    2f9e:	d806      	bhi.n	2fae <sl_string__set+0x38>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:474
      strncpy(input_string.cstring, source, destination_length);
    2fa0:	4621      	mov	r1, r4
    2fa2:	4630      	mov	r0, r6
    2fa4:	f004 fe80 	bl	7ca8 <strncpy>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:475
      result = true;
    2fa8:	2001      	movs	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:480
    }
  }

  return result;
}
    2faa:	b003      	add	sp, #12
    2fac:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:467
  bool result = false;
    2fae:	2000      	movs	r0, #0
    2fb0:	e7fb      	b.n	2faa <sl_string__set+0x34>

00002fb2 <sl_string__initialize_from>:
sl_string__initialize_from():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:156
                                       const char *copy_from) {
    2fb2:	b538      	push	{r3, r4, r5, lr}
    2fb4:	4604      	mov	r4, r0
    2fb6:	461d      	mov	r5, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:159
  if ((NULL != static_memory) && (NULL != copy_from)) {
    2fb8:	b921      	cbnz	r1, 2fc4 <sl_string__initialize_from+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:157
  sl_string_s output_string = {NULL};
    2fba:	2300      	movs	r3, #0
    2fbc:	e9c4 3300 	strd	r3, r3, [r4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:170
}
    2fc0:	4620      	mov	r0, r4
    2fc2:	bd38      	pop	{r3, r4, r5, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:159 (discriminator 1)
  if ((NULL != static_memory) && (NULL != copy_from)) {
    2fc4:	2b00      	cmp	r3, #0
    2fc6:	d0f8      	beq.n	2fba <sl_string__initialize_from+0x8>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:161
        sl_string__initialize(static_memory, static_memory_size_max);
    2fc8:	f7ff ff3e 	bl	2e48 <sl_string__initialize>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:166
    (void)sl_string__set(output_string, copy_from);
    2fcc:	462a      	mov	r2, r5
    2fce:	e894 0003 	ldmia.w	r4, {r0, r1}
    2fd2:	f7ff ffd0 	bl	2f76 <sl_string__set>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:169
  return output_string;
    2fd6:	e7f3      	b.n	2fc0 <sl_string__initialize_from+0xe>

00002fd8 <sl_string__insert_at>:
sl_string__insert_at():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:483

bool sl_string__insert_at(sl_string_s input_string, size_t index_position,
                          const char *insert) {
    2fd8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    2fdc:	b085      	sub	sp, #20
    2fde:	466d      	mov	r5, sp
    2fe0:	e885 0003 	stmia.w	r5, {r0, r1}
    2fe4:	4616      	mov	r6, r2
    2fe6:	461f      	mov	r7, r3
    2fe8:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:486
  bool result = false;

  if (sl_string__is_valid(input_string) && (NULL != insert) &&
    2fea:	b918      	cbnz	r0, 2ff4 <sl_string__insert_at+0x1c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:484
  bool result = false;
    2fec:	2000      	movs	r0, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:510
        result = true;
      }
    }
  }
  return result;
}
    2fee:	b005      	add	sp, #20
    2ff0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:486 (discriminator 1)
  if (sl_string__is_valid(input_string) && (NULL != insert) &&
    2ff4:	2b00      	cmp	r3, #0
    2ff6:	d0f9      	beq.n	2fec <sl_string__insert_at+0x14>
    2ff8:	f8dd 8004 	ldr.w	r8, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:486 (discriminator 2)
    2ffc:	f1b8 0f00 	cmp.w	r8, #0
    3000:	d0f4      	beq.n	2fec <sl_string__insert_at+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:488
    if (index_position <= sl_string__get_length(input_string)) {
    3002:	e895 0003 	ldmia.w	r5, {r0, r1}
    3006:	f7ff ff3f 	bl	2e88 <sl_string__get_length>
    300a:	42b0      	cmp	r0, r6
    300c:	d3ee      	bcc.n	2fec <sl_string__insert_at+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:489
      if (sl_string__private_ensure_enough_memory_for_insertion(input_string,
    300e:	e9cd 4802 	strd	r4, r8, [sp, #8]
sl_string__private_ensure_enough_memory_for_insertion():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:88
  const size_t length_of_original_string = sl_string__get_length(input_string);
    3012:	f10d 0808 	add.w	r8, sp, #8
    3016:	e898 0003 	ldmia.w	r8, {r0, r1}
    301a:	f7ff ff35 	bl	2e88 <sl_string__get_length>
    301e:	4681      	mov	r9, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:90
  const size_t length_of_insertion_string = strlen(insertion_string);
    3020:	4638      	mov	r0, r7
    3022:	f004 fe04 	bl	7c2e <strlen>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:91
  const size_t insertion_memory_required =
    3026:	4481      	add	r9, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:94
      (insertion_memory_required <= sl_string__get_capacity(input_string));
    3028:	e898 0003 	ldmia.w	r8, {r0, r1}
    302c:	f7ff ff1f 	bl	2e6e <sl_string__get_capacity>
sl_string__insert_at():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:489
      if (sl_string__private_ensure_enough_memory_for_insertion(input_string,
    3030:	4581      	cmp	r9, r0
    3032:	d8db      	bhi.n	2fec <sl_string__insert_at+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:491
        const size_t length_of_insertion_string = strlen(insert);
    3034:	4638      	mov	r0, r7
    3036:	f004 fdfa 	bl	7c2e <strlen>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:493
        char *const position_of_insertion =
    303a:	4434      	add	r4, r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:491
        const size_t length_of_insertion_string = strlen(insert);
    303c:	4680      	mov	r8, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:495
        char *const destination_of_substring =
    303e:	eb04 0900 	add.w	r9, r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:500
            (sl_string__get_length(input_string) - index_position) + 1U;
    3042:	e895 0003 	ldmia.w	r5, {r0, r1}
    3046:	f7ff ff1f 	bl	2e88 <sl_string__get_length>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:499
        const size_t length_to_be_moved =
    304a:	f1c6 0201 	rsb	r2, r6, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:501
        (void)memmove(destination_of_substring, position_of_insertion,
    304e:	4402      	add	r2, r0
    3050:	4621      	mov	r1, r4
    3052:	4648      	mov	r0, r9
    3054:	f003 fbe8 	bl	6828 <memmove>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:503
        strncpy(position_of_insertion, insert, length_of_insertion_string);
    3058:	4642      	mov	r2, r8
    305a:	4639      	mov	r1, r7
    305c:	4620      	mov	r0, r4
    305e:	f004 fe23 	bl	7ca8 <strncpy>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:505
        result = true;
    3062:	2001      	movs	r0, #1
    3064:	e7c3      	b.n	2fee <sl_string__insert_at+0x16>

00003066 <sl_string__append>:
sl_string__append():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:512

bool sl_string__append(sl_string_s input_string, const char *append) {
    3066:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    306a:	466c      	mov	r4, sp
    306c:	e884 0003 	stmia.w	r4, {r0, r1}
    3070:	4615      	mov	r5, r2
    3072:	4606      	mov	r6, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:515
  bool result = false;

  if (sl_string__is_valid(input_string) && (NULL != append) &&
    3074:	b1e0      	cbz	r0, 30b0 <sl_string__append+0x4a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:515 (discriminator 1)
    3076:	b1da      	cbz	r2, 30b0 <sl_string__append+0x4a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:515 (discriminator 2)
    3078:	4608      	mov	r0, r1
    307a:	b1b1      	cbz	r1, 30aa <sl_string__append+0x44>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:518
      sl_string__private_can_be_modified(input_string)) {
    const size_t length_of_original_string =
        sl_string__get_length(input_string);
    307c:	e894 0003 	ldmia.w	r4, {r0, r1}
    3080:	f7ff ff02 	bl	2e88 <sl_string__get_length>
    3084:	4607      	mov	r7, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:519
    const size_t length_of_insertion_string = strlen(append);
    3086:	4628      	mov	r0, r5
    3088:	f004 fdd1 	bl	7c2e <strlen>
    308c:	4602      	mov	r2, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:521

    if ((length_of_original_string + length_of_insertion_string) <=
    308e:	eb07 0800 	add.w	r8, r7, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:522
        sl_string__get_capacity(input_string)) {
    3092:	e894 0003 	ldmia.w	r4, {r0, r1}
    3096:	f7ff feea 	bl	2e6e <sl_string__get_capacity>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:521
    if ((length_of_original_string + length_of_insertion_string) <=
    309a:	4580      	cmp	r8, r0
    309c:	d808      	bhi.n	30b0 <sl_string__append+0x4a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:525
      const size_t length_to_copy_including_null =
          (1U + length_of_insertion_string);
      (void)memcpy((input_string.cstring + length_of_original_string), append,
    309e:	3201      	adds	r2, #1
    30a0:	4629      	mov	r1, r5
    30a2:	19f0      	adds	r0, r6, r7
    30a4:	f003 fbb2 	bl	680c <memcpy>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:527
                   length_to_copy_including_null);
      result = true;
    30a8:	2001      	movs	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:531
    }
  }
  return result;
}
    30aa:	b002      	add	sp, #8
    30ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:513
  bool result = false;
    30b0:	2000      	movs	r0, #0
    30b2:	e7fa      	b.n	30aa <sl_string__append+0x44>

000030b4 <sl_string__append_char>:
sl_string__append_char():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:533

bool sl_string__append_char(sl_string_s input_string, char append) {
    30b4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    30b6:	466b      	mov	r3, sp
    30b8:	e883 0003 	stmia.w	r3, {r0, r1}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:535
  bool result = false;
  if (sl_string__is_valid(input_string) &&
    30bc:	b158      	cbz	r0, 30d6 <sl_string__append_char+0x22>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:535 (discriminator 1)
    30be:	4608      	mov	r0, r1
    30c0:	b149      	cbz	r1, 30d6 <sl_string__append_char+0x22>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:537
      sl_string__private_can_be_modified(input_string)) {
    const char append_string[] = {append, '\0'};
    30c2:	f88d 200c 	strb.w	r2, [sp, #12]
    30c6:	2200      	movs	r2, #0
    30c8:	f88d 200d 	strb.w	r2, [sp, #13]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:538
    result = sl_string__append(input_string, append_string);
    30cc:	e893 0003 	ldmia.w	r3, {r0, r1}
    30d0:	aa03      	add	r2, sp, #12
    30d2:	f7ff ffc8 	bl	3066 <sl_string__append>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:541
  }
  return result;
}
    30d6:	b005      	add	sp, #20
    30d8:	f85d fb04 	ldr.w	pc, [sp], #4

000030dc <sl_string__equals_to_ignore_case>:
sl_string__equals_to_ignore_case():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:576
  }
  return equal;
}

bool sl_string__equals_to_ignore_case(const sl_string_s input_string,
                                      const char *compare_with_case_ignored) {
    30dc:	b507      	push	{r0, r1, r2, lr}
    30de:	ab02      	add	r3, sp, #8
    30e0:	e903 0003 	stmdb	r3, {r0, r1}
    30e4:	9800      	ldr	r0, [sp, #0]
    30e6:	4611      	mov	r1, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:579
  bool equal = false;

  if (sl_string__is_valid(input_string) &&
    30e8:	b128      	cbz	r0, 30f6 <sl_string__equals_to_ignore_case+0x1a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:579 (discriminator 1)
    30ea:	b13a      	cbz	r2, 30fc <sl_string__equals_to_ignore_case+0x20>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:581
      (NULL != compare_with_case_ignored)) {
    equal = (0 == strcasecmp(input_string.cstring, compare_with_case_ignored));
    30ec:	f004 fd76 	bl	7bdc <strcasecmp>
    30f0:	fab0 f080 	clz	r0, r0
    30f4:	0940      	lsrs	r0, r0, #5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:584
  }
  return equal;
}
    30f6:	b003      	add	sp, #12
    30f8:	f85d fb04 	ldr.w	pc, [sp], #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:577
  bool equal = false;
    30fc:	4610      	mov	r0, r2
    30fe:	e7fa      	b.n	30f6 <sl_string__equals_to_ignore_case+0x1a>

00003100 <sl_string__begins_with_limited_chars>:
sl_string__begins_with_limited_chars():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:754
  return begins_with;
}

bool sl_string__begins_with_limited_chars(
    const sl_string_s input_string, const char *begin_with,
    size_t max_chars_of_begin_with_to_compare) {
    3100:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    3102:	466d      	mov	r5, sp
    3104:	e885 0003 	stmia.w	r5, {r0, r1}
    3108:	4614      	mov	r4, r2
    310a:	461f      	mov	r7, r3
    310c:	4606      	mov	r6, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:757
  bool result = false;

  if (sl_string__is_valid(input_string) && (NULL != begin_with)) {
    310e:	b180      	cbz	r0, 3132 <sl_string__begins_with_limited_chars+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:757 (discriminator 1)
    3110:	b17a      	cbz	r2, 3132 <sl_string__begins_with_limited_chars+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:758
    const size_t input_string_length = sl_string__get_length(input_string);
    3112:	e895 0003 	ldmia.w	r5, {r0, r1}
    3116:	f7ff feb7 	bl	2e88 <sl_string__get_length>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:762

    // strncmp/strncasecmp are used here instead of strstr as it
    // allows to check only the beginning of the string
    if (input_string_length >= max_chars_of_begin_with_to_compare) {
    311a:	42b8      	cmp	r0, r7
    311c:	d309      	bcc.n	3132 <sl_string__begins_with_limited_chars+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:763
      if (0 == strncmp(input_string.cstring, begin_with,
    311e:	463a      	mov	r2, r7
    3120:	4621      	mov	r1, r4
    3122:	4630      	mov	r0, r6
    3124:	f004 fdae 	bl	7c84 <strncmp>
    3128:	fab0 f080 	clz	r0, r0
    312c:	0940      	lsrs	r0, r0, #5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:770
        result = true;
      }
    }
  }
  return result;
}
    312e:	b003      	add	sp, #12
    3130:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:755
  bool result = false;
    3132:	2000      	movs	r0, #0
    3134:	e7fb      	b.n	312e <sl_string__begins_with_limited_chars+0x2e>

00003136 <sl_string__begins_with_ignore_case>:
sl_string__begins_with_ignore_case():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:773

bool sl_string__begins_with_ignore_case(const sl_string_s input_string,
                                        const char *begin_with_case_ignored) {
    3136:	b573      	push	{r0, r1, r4, r5, r6, lr}
    3138:	466b      	mov	r3, sp
    313a:	e883 0003 	stmia.w	r3, {r0, r1}
    313e:	4614      	mov	r4, r2
    3140:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:776
  bool result = false;

  if (sl_string__is_valid(input_string) && (NULL != begin_with_case_ignored)) {
    3142:	b1a0      	cbz	r0, 316e <sl_string__begins_with_ignore_case+0x38>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:776 (discriminator 1)
    3144:	b19a      	cbz	r2, 316e <sl_string__begins_with_ignore_case+0x38>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:777
    const size_t input_string_length = sl_string__get_length(input_string);
    3146:	e893 0003 	ldmia.w	r3, {r0, r1}
    314a:	f7ff fe9d 	bl	2e88 <sl_string__get_length>
    314e:	4606      	mov	r6, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:778
    const size_t substring_length = strlen(begin_with_case_ignored);
    3150:	4620      	mov	r0, r4
    3152:	f004 fd6c 	bl	7c2e <strlen>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:782

    // strncmp/strncasecmp are used here instead of strstr as it
    // allows to check only the beginning of the string
    if (input_string_length >= substring_length) {
    3156:	4286      	cmp	r6, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:778
    const size_t substring_length = strlen(begin_with_case_ignored);
    3158:	4602      	mov	r2, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:782
    if (input_string_length >= substring_length) {
    315a:	d308      	bcc.n	316e <sl_string__begins_with_ignore_case+0x38>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:783
      if (0 == strncasecmp(input_string.cstring, begin_with_case_ignored,
    315c:	4621      	mov	r1, r4
    315e:	4628      	mov	r0, r5
    3160:	f004 fd6e 	bl	7c40 <strncasecmp>
    3164:	fab0 f080 	clz	r0, r0
    3168:	0940      	lsrs	r0, r0, #5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:790
        result = true;
      }
    }
  }
  return result;
}
    316a:	b002      	add	sp, #8
    316c:	bd70      	pop	{r4, r5, r6, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:774
  bool result = false;
    316e:	2000      	movs	r0, #0
    3170:	e7fb      	b.n	316a <sl_string__begins_with_ignore_case+0x34>
    3172:	Address 0x0000000000003172 is out of bounds.


00003174 <sl_string__to_int>:
sl_string__to_int():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:240
long int sl_string__to_int(const sl_string_s input_string) {
    3174:	b513      	push	{r0, r1, r4, lr}
    3176:	466b      	mov	r3, sp
    3178:	e883 0003 	stmia.w	r3, {r0, r1}
    317c:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:242
  if (sl_string__is_valid(input_string)) {
    317e:	b178      	cbz	r0, 31a0 <sl_string__to_int+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:244
    if (sl_string__begins_with_ignore_case(input_string, "0x")) {
    3180:	4a08      	ldr	r2, [pc, #32]	; (31a4 <sl_string__to_int+0x30>)
    3182:	e893 0003 	ldmia.w	r3, {r0, r1}
    3186:	f7ff ffd6 	bl	3136 <sl_string__begins_with_ignore_case>
    318a:	2800      	cmp	r0, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:249
    value_of_string = strtol(input_string.cstring, NULL, base);
    318c:	bf14      	ite	ne
    318e:	2210      	movne	r2, #16
    3190:	220a      	moveq	r2, #10
    3192:	2100      	movs	r1, #0
    3194:	4620      	mov	r0, r4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:252
}
    3196:	b002      	add	sp, #8
    3198:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:249
    value_of_string = strtol(input_string.cstring, NULL, base);
    319c:	f005 bc18 	b.w	89d0 <strtol>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:252
}
    31a0:	b002      	add	sp, #8
    31a2:	bd10      	pop	{r4, pc}
    31a4:	0000d199 	.word	0x0000d199

000031a8 <sl_string__begins_with_whole_word>:
sl_string__begins_with_whole_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:794

bool sl_string__begins_with_whole_word(const sl_string_s input_string,
                                       const char *begin_with,
                                       const char *delimiter_string) {
    31a8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    31ac:	466f      	mov	r7, sp
    31ae:	e887 0003 	stmia.w	r7, {r0, r1}
    31b2:	4615      	mov	r5, r2
    31b4:	461c      	mov	r4, r3
    31b6:	4606      	mov	r6, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:797
  bool result = false;

  if (sl_string__is_valid(input_string) && (NULL != begin_with) &&
    31b8:	b1e8      	cbz	r0, 31f6 <sl_string__begins_with_whole_word+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:797 (discriminator 1)
    31ba:	b1e2      	cbz	r2, 31f6 <sl_string__begins_with_whole_word+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:797 (discriminator 2)
    31bc:	b1db      	cbz	r3, 31f6 <sl_string__begins_with_whole_word+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:799
      (NULL != delimiter_string)) {
    const size_t input_string_length = sl_string__get_length(input_string);
    31be:	e897 0003 	ldmia.w	r7, {r0, r1}
    31c2:	f7ff fe61 	bl	2e88 <sl_string__get_length>
    31c6:	4680      	mov	r8, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:800
    const size_t substring_length = strlen(begin_with);
    31c8:	4628      	mov	r0, r5
    31ca:	f004 fd30 	bl	7c2e <strlen>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:804

    // strncmp/strncasecmp are used here instead of strstr as it
    // allows to check only the beginning of the string
    if (input_string_length >= substring_length) {
    31ce:	4580      	cmp	r8, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:800
    const size_t substring_length = strlen(begin_with);
    31d0:	4607      	mov	r7, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:804
    if (input_string_length >= substring_length) {
    31d2:	d310      	bcc.n	31f6 <sl_string__begins_with_whole_word+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:805
      if (0 == strncmp(input_string.cstring, begin_with, substring_length)) {
    31d4:	4602      	mov	r2, r0
    31d6:	4629      	mov	r1, r5
    31d8:	4630      	mov	r0, r6
    31da:	f004 fd53 	bl	7c84 <strncmp>
    31de:	b950      	cbnz	r0, 31f6 <sl_string__begins_with_whole_word+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:807
        result =
            ((*delimiter_string == input_string.cstring[substring_length]) ||
    31e0:	5df0      	ldrb	r0, [r6, r7]
    31e2:	7823      	ldrb	r3, [r4, #0]
    31e4:	4283      	cmp	r3, r0
    31e6:	bf1a      	itte	ne
    31e8:	fab0 f080 	clzne	r0, r0
    31ec:	0940      	lsrne	r0, r0, #5
    31ee:	2001      	moveq	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:813
             ('\0' == input_string.cstring[substring_length]));
      }
    }
  }
  return result;
}
    31f0:	b002      	add	sp, #8
    31f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:795
  bool result = false;
    31f6:	2000      	movs	r0, #0
    31f8:	e7fa      	b.n	31f0 <sl_string__begins_with_whole_word+0x48>

000031fa <sl_string__ends_with_newline>:
sl_string__ends_with_newline():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:875
    }
  }
  return result;
}

bool sl_string__ends_with_newline(const sl_string_s input_string) {
    31fa:	b513      	push	{r0, r1, r4, lr}
    31fc:	466b      	mov	r3, sp
    31fe:	e883 0003 	stmia.w	r3, {r0, r1}
    3202:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:877
  bool status = false;
  if (sl_string__is_valid(input_string)) {
    3204:	b168      	cbz	r0, 3222 <sl_string__ends_with_newline+0x28>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:878
    const size_t length = sl_string__get_length(input_string);
    3206:	e893 0003 	ldmia.w	r3, {r0, r1}
    320a:	f7ff fe3d 	bl	2e88 <sl_string__get_length>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:880

    if (length > 0U) {
    320e:	b140      	cbz	r0, 3222 <sl_string__ends_with_newline+0x28>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:882
      const size_t last_index = length - 1U;
      const char last_char = input_string.cstring[last_index];
    3210:	4420      	add	r0, r4
    3212:	f810 0c01 	ldrb.w	r0, [r0, #-1]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:883
      status = ('\r' == last_char) || ('\n' == last_char);
    3216:	280d      	cmp	r0, #13
    3218:	d005      	beq.n	3226 <sl_string__ends_with_newline+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:883 (discriminator 2)
    321a:	f1a0 030a 	sub.w	r3, r0, #10
    321e:	4258      	negs	r0, r3
    3220:	4158      	adcs	r0, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:887
    }
  }
  return status;
}
    3222:	b002      	add	sp, #8
    3224:	bd10      	pop	{r4, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:883
      status = ('\r' == last_char) || ('\n' == last_char);
    3226:	2001      	movs	r0, #1
    3228:	e7fb      	b.n	3222 <sl_string__ends_with_newline+0x28>

0000322a <sl_string__erase_after>:
sl_string__erase_after():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:935
  }
  return result;
}

bool sl_string__erase_after(sl_string_s input_string,
                            size_t erase_index_position, size_t n_chars) {
    322a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    322c:	466f      	mov	r7, sp
    322e:	e887 0003 	stmia.w	r7, {r0, r1}
    3232:	4615      	mov	r5, r2
    3234:	461e      	mov	r6, r3
    3236:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:937
  bool result = false;
  if (sl_string__is_valid(input_string) &&
    3238:	b1a8      	cbz	r0, 3266 <sl_string__erase_after+0x3c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:937 (discriminator 1)
    323a:	4608      	mov	r0, r1
    323c:	b189      	cbz	r1, 3262 <sl_string__erase_after+0x38>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:939
      sl_string__private_can_be_modified(input_string)) {
    const size_t input_string_length = sl_string__get_length(input_string);
    323e:	e897 0003 	ldmia.w	r7, {r0, r1}
    3242:	f7ff fe21 	bl	2e88 <sl_string__get_length>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:942
    size_t n_chars_remaining = n_chars;

    if (erase_index_position < input_string_length) {
    3246:	42a8      	cmp	r0, r5
    3248:	d90d      	bls.n	3266 <sl_string__erase_after+0x3c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:943
      if (n_chars_remaining > (input_string_length - erase_index_position)) {
    324a:	1b40      	subs	r0, r0, r5
    324c:	4286      	cmp	r6, r0
    324e:	bf28      	it	cs
    3250:	4606      	movcs	r6, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:951
      const size_t num_chars_to_move =
          (size_t)((input_string_length - erase_index_position) -
                   n_chars_remaining) +
          1U;
      (void)memmove(input_string.cstring + erase_index_position,
                    input_string.cstring + erase_index_position +
    3252:	19a9      	adds	r1, r5, r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:946
      const size_t num_chars_to_move =
    3254:	3001      	adds	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:950
      (void)memmove(input_string.cstring + erase_index_position,
    3256:	1b82      	subs	r2, r0, r6
    3258:	4421      	add	r1, r4
    325a:	1960      	adds	r0, r4, r5
    325c:	f003 fae4 	bl	6828 <memmove>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:954
                        n_chars_remaining,
                    num_chars_to_move);
      result = true;
    3260:	2001      	movs	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:958
    }
  }
  return result;
}
    3262:	b003      	add	sp, #12
    3264:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:936
  bool result = false;
    3266:	2000      	movs	r0, #0
    3268:	e7fb      	b.n	3262 <sl_string__erase_after+0x38>

0000326a <sl_string__erase_first>:
sl_string__erase_first():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:903
bool sl_string__erase_first(sl_string_s input_string, size_t n_chars) {
    326a:	b417      	push	{r0, r1, r2, r4}
    326c:	466c      	mov	r4, sp
    326e:	e884 0003 	stmia.w	r4, {r0, r1}
    3272:	4613      	mov	r3, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:905
  if (sl_string__is_valid(input_string) &&
    3274:	b140      	cbz	r0, 3288 <sl_string__erase_first+0x1e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:905 (discriminator 1)
    3276:	b139      	cbz	r1, 3288 <sl_string__erase_first+0x1e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:907
    result = sl_string__erase_after(input_string, (size_t)0U, n_chars);
    3278:	e894 0003 	ldmia.w	r4, {r0, r1}
    327c:	2200      	movs	r2, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:910
}
    327e:	b003      	add	sp, #12
    3280:	f85d 4b04 	ldr.w	r4, [sp], #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:907
    result = sl_string__erase_after(input_string, (size_t)0U, n_chars);
    3284:	f7ff bfd1 	b.w	322a <sl_string__erase_after>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:910
}
    3288:	2000      	movs	r0, #0
    328a:	b003      	add	sp, #12
    328c:	f85d 4b04 	ldr.w	r4, [sp], #4
    3290:	4770      	bx	lr

00003292 <sl_string__erase_last>:
sl_string__erase_last():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:912
bool sl_string__erase_last(sl_string_s input_string, size_t n_chars) {
    3292:	b537      	push	{r0, r1, r2, r4, r5, lr}
    3294:	466c      	mov	r4, sp
    3296:	e884 0003 	stmia.w	r4, {r0, r1}
    329a:	4615      	mov	r5, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:914
  if (sl_string__is_valid(input_string) &&
    329c:	b188      	cbz	r0, 32c2 <sl_string__erase_last+0x30>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:914 (discriminator 1)
    329e:	b181      	cbz	r1, 32c2 <sl_string__erase_last+0x30>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:916
    const size_t input_string_length = sl_string__get_length(input_string);
    32a0:	e894 0003 	ldmia.w	r4, {r0, r1}
    32a4:	f7ff fdf0 	bl	2e88 <sl_string__get_length>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:918
        (n_chars > input_string_length) ? 0U : (input_string_length - n_chars);
    32a8:	42a8      	cmp	r0, r5
    32aa:	bf28      	it	cs
    32ac:	1b42      	subcs	r2, r0, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:920
        sl_string__erase_after(input_string, start_of_erase_index, n_chars);
    32ae:	e894 0003 	ldmia.w	r4, {r0, r1}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:918
        (n_chars > input_string_length) ? 0U : (input_string_length - n_chars);
    32b2:	bf38      	it	cc
    32b4:	2200      	movcc	r2, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:920
        sl_string__erase_after(input_string, start_of_erase_index, n_chars);
    32b6:	462b      	mov	r3, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:923
}
    32b8:	b003      	add	sp, #12
    32ba:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:920
        sl_string__erase_after(input_string, start_of_erase_index, n_chars);
    32be:	f7ff bfb4 	b.w	322a <sl_string__erase_after>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:923
}
    32c2:	2000      	movs	r0, #0
    32c4:	b003      	add	sp, #12
    32c6:	bd30      	pop	{r4, r5, pc}

000032c8 <sl_string__erase_at_substring>:
sl_string__erase_at_substring():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:961

bool sl_string__erase_at_substring(sl_string_s input_string,
                                   const char *erase_at_substring) {
    32c8:	b513      	push	{r0, r1, r4, lr}
    32ca:	ab02      	add	r3, sp, #8
    32cc:	e903 0003 	stmdb	r3, {r0, r1}
    32d0:	9c00      	ldr	r4, [sp, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:964
  bool found_something_to_erase = false;

  if (sl_string__is_valid(input_string) && (NULL != erase_at_substring) &&
    32d2:	b17c      	cbz	r4, 32f4 <sl_string__erase_at_substring+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:964 (discriminator 1)
    32d4:	b182      	cbz	r2, 32f8 <sl_string__erase_at_substring+0x30>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:964 (discriminator 2)
    32d6:	9801      	ldr	r0, [sp, #4]
    32d8:	b150      	cbz	r0, 32f0 <sl_string__erase_at_substring+0x28>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:966
      sl_string__private_can_be_modified(input_string)) {
    const char *const found = strstr(input_string.cstring, erase_at_substring);
    32da:	4611      	mov	r1, r2
    32dc:	4620      	mov	r0, r4
    32de:	f004 fcf6 	bl	7cce <strstr>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:969
    found_something_to_erase = (NULL != found);

    if (found_something_to_erase) {
    32e2:	b128      	cbz	r0, 32f0 <sl_string__erase_at_substring+0x28>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:971
      const size_t position =
          (size_t)sl_utils__pointer_distance(found, input_string.cstring);
    32e4:	4621      	mov	r1, r4
    32e6:	f7ff fda9 	bl	2e3c <sl_utils__pointer_distance>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:972
      input_string.cstring[position] = '\0';
    32ea:	2300      	movs	r3, #0
    32ec:	5423      	strb	r3, [r4, r0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:967
    found_something_to_erase = (NULL != found);
    32ee:	2001      	movs	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:976
    }
  }
  return found_something_to_erase;
}
    32f0:	b002      	add	sp, #8
    32f2:	bd10      	pop	{r4, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:962
  bool found_something_to_erase = false;
    32f4:	4620      	mov	r0, r4
    32f6:	e7fb      	b.n	32f0 <sl_string__erase_at_substring+0x28>
    32f8:	4610      	mov	r0, r2
    32fa:	e7f9      	b.n	32f0 <sl_string__erase_at_substring+0x28>

000032fc <sl_string__erase_first_word>:
sl_string__erase_first_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:979

bool sl_string__erase_first_word(sl_string_s input_string,
                                 char word_separater) {
    32fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
    32fe:	466c      	mov	r4, sp
    3300:	e884 0003 	stmia.w	r4, {r0, r1}
    3304:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:981
  bool result = false;
  if (sl_string__is_valid(input_string) &&
    3306:	b178      	cbz	r0, 3328 <sl_string__erase_first_word+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:981 (discriminator 1)
    3308:	b171      	cbz	r1, 3328 <sl_string__erase_first_word+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:984
      sl_string__private_can_be_modified(input_string)) {
    const char *const word_ptr =
        strchr(input_string.cstring, (int)word_separater);
    330a:	4611      	mov	r1, r2
    330c:	f004 fc82 	bl	7c14 <strchr>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:986

    if (NULL != word_ptr) {
    3310:	b150      	cbz	r0, 3328 <sl_string__erase_first_word+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:988
      const size_t n_chars =
          (size_t)sl_utils__pointer_distance(word_ptr, input_string.cstring) +
    3312:	4629      	mov	r1, r5
    3314:	f7ff fd92 	bl	2e3c <sl_utils__pointer_distance>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:990
          1U;
      result = sl_string__erase_first(
    3318:	1c42      	adds	r2, r0, #1
    331a:	e894 0003 	ldmia.w	r4, {r0, r1}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:995
          input_string, n_chars); // Plus 1 to also erase the word_seperator
    }
  }
  return result;
}
    331e:	b003      	add	sp, #12
    3320:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:990
      result = sl_string__erase_first(
    3324:	f7ff bfa1 	b.w	326a <sl_string__erase_first>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:995
}
    3328:	2000      	movs	r0, #0
    332a:	b003      	add	sp, #12
    332c:	bd30      	pop	{r4, r5, pc}
    332e:	Address 0x000000000000332e is out of bounds.


00003330 <sl_string__erase_int>:
sl_string__erase_int():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1018
    }
  }
  return chars_removed;
}

bool sl_string__erase_int(sl_string_s input_string, long int *erased_int) {
    3330:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    3332:	466f      	mov	r7, sp
    3334:	e887 0003 	stmia.w	r7, {r0, r1}
    3338:	4614      	mov	r4, r2
    333a:	4606      	mov	r6, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1020
  bool parsed = false;
  if (sl_string__is_valid(input_string) &&
    333c:	b348      	cbz	r0, 3392 <sl_string__erase_int+0x62>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1020 (discriminator 1)
    333e:	b351      	cbz	r1, 3396 <sl_string__erase_int+0x66>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1023
      sl_string__private_can_be_modified(input_string)) {
    const char *c = input_string.cstring;
    while (('\0' != *c) && (0U == isdigit((int)*c))) {
    3340:	4916      	ldr	r1, [pc, #88]	; (339c <sl_string__erase_int+0x6c>)
    3342:	4605      	mov	r5, r0
    3344:	462a      	mov	r2, r5
    3346:	f812 3b01 	ldrb.w	r3, [r2], #1
    334a:	b1e3      	cbz	r3, 3386 <sl_string__erase_int+0x56>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1023 (discriminator 1)
    334c:	5c5b      	ldrb	r3, [r3, r1]
    334e:	0758      	lsls	r0, r3, #29
    3350:	d517      	bpl.n	3382 <sl_string__erase_int+0x52>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1027
      ++c; // Skip chars until a digit
    }

    if (('\0' != *c) && (NULL != erased_int)) {
    3352:	b134      	cbz	r4, 3362 <sl_string__erase_int+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1028
      *erased_int = strtol(c, NULL, 10);
    3354:	220a      	movs	r2, #10
    3356:	2100      	movs	r1, #0
    3358:	4628      	mov	r0, r5
    335a:	f005 fb39 	bl	89d0 <strtol>
    335e:	6020      	str	r0, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1029
      parsed = true;
    3360:	2401      	movs	r4, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1032
    }

    while (('\0' != *c) && (0U != isdigit((int)*c))) {
    3362:	4a0e      	ldr	r2, [pc, #56]	; (339c <sl_string__erase_int+0x6c>)
    3364:	4628      	mov	r0, r5
    3366:	f815 3b01 	ldrb.w	r3, [r5], #1
    336a:	b973      	cbnz	r3, 338a <sl_string__erase_int+0x5a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1038
      ++c; // Skip the digits we processed in strtol() above
    }

    // Erase the integer we processed above
    const size_t chars_to_erase =
        (size_t)sl_utils__pointer_distance(c, input_string.cstring);
    336c:	4631      	mov	r1, r6
    336e:	f7ff fd65 	bl	2e3c <sl_utils__pointer_distance>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1039
    (void)sl_string__erase_first(input_string, chars_to_erase);
    3372:	4602      	mov	r2, r0
    3374:	e897 0003 	ldmia.w	r7, {r0, r1}
    3378:	f7ff ff77 	bl	326a <sl_string__erase_first>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1042
  }
  return parsed;
}
    337c:	4620      	mov	r0, r4
    337e:	b003      	add	sp, #12
    3380:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3382:	4615      	mov	r5, r2
    3384:	e7de      	b.n	3344 <sl_string__erase_int+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1019
  bool parsed = false;
    3386:	461c      	mov	r4, r3
    3388:	e7eb      	b.n	3362 <sl_string__erase_int+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1032 (discriminator 1)
    while (('\0' != *c) && (0U != isdigit((int)*c))) {
    338a:	5c9b      	ldrb	r3, [r3, r2]
    338c:	075b      	lsls	r3, r3, #29
    338e:	d4e9      	bmi.n	3364 <sl_string__erase_int+0x34>
    3390:	e7ec      	b.n	336c <sl_string__erase_int+0x3c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1019
  bool parsed = false;
    3392:	4604      	mov	r4, r0
    3394:	e7f2      	b.n	337c <sl_string__erase_int+0x4c>
    3396:	460c      	mov	r4, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1041
  return parsed;
    3398:	e7f0      	b.n	337c <sl_string__erase_int+0x4c>
    339a:	bf00      	nop
    339c:	0000dab4 	.word	0x0000dab4

000033a0 <sl_string__trim_end>:
sl_string__trim_end():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1044

bool sl_string__trim_end(sl_string_s input_string, const char *chars_to_trim) {
    33a0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    33a2:	466b      	mov	r3, sp
    33a4:	e883 0003 	stmia.w	r3, {r0, r1}
    33a8:	4615      	mov	r5, r2
    33aa:	4606      	mov	r6, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1047
  bool result = false;

  if (sl_string__is_valid(input_string) && (NULL != chars_to_trim) &&
    33ac:	b1f8      	cbz	r0, 33ee <sl_string__trim_end+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1047 (discriminator 1)
    33ae:	b1ea      	cbz	r2, 33ec <sl_string__trim_end+0x4c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1047 (discriminator 2)
    33b0:	4608      	mov	r0, r1
    33b2:	b1e1      	cbz	r1, 33ee <sl_string__trim_end+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1049
      sl_string__private_can_be_modified(input_string)) {
    const size_t input_string_length = sl_string__get_length(input_string);
    33b4:	e893 0003 	ldmia.w	r3, {r0, r1}
    33b8:	f7ff fd66 	bl	2e88 <sl_string__get_length>
    33bc:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1050
    const size_t trim_char_length = strlen(chars_to_trim);
    33be:	4628      	mov	r0, r5
    33c0:	f004 fc35 	bl	7c2e <strlen>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1052

    for (int character = ((int)input_string_length - 1); character >= 0;
    33c4:	1e63      	subs	r3, r4, #1
    33c6:	4433      	add	r3, r6
    33c8:	4428      	add	r0, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1058
         --character) {
      bool trim_done = false;

      for (size_t trim_char = 0; trim_char < trim_char_length; ++trim_char) {
        if (chars_to_trim[trim_char] == input_string.cstring[character]) {
          input_string.cstring[character] = '\0';
    33ca:	2100      	movs	r1, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1052 (discriminator 1)
    for (int character = ((int)input_string_length - 1); character >= 0;
    33cc:	1b9a      	subs	r2, r3, r6
    33ce:	2a00      	cmp	r2, #0
    33d0:	db02      	blt.n	33d8 <sl_string__trim_end+0x38>
    33d2:	462a      	mov	r2, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1056 (discriminator 1)
      for (size_t trim_char = 0; trim_char < trim_char_length; ++trim_char) {
    33d4:	4282      	cmp	r2, r0
    33d6:	d101      	bne.n	33dc <sl_string__trim_end+0x3c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1068

      if (!trim_done) {
        break;
      }
    }
    result = true;
    33d8:	2001      	movs	r0, #1
    33da:	e008      	b.n	33ee <sl_string__trim_end+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1057
        if (chars_to_trim[trim_char] == input_string.cstring[character]) {
    33dc:	f812 4b01 	ldrb.w	r4, [r2], #1
    33e0:	781f      	ldrb	r7, [r3, #0]
    33e2:	42a7      	cmp	r7, r4
    33e4:	d1f6      	bne.n	33d4 <sl_string__trim_end+0x34>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1058
          input_string.cstring[character] = '\0';
    33e6:	f803 1901 	strb.w	r1, [r3], #-1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1064
      if (!trim_done) {
    33ea:	e7ef      	b.n	33cc <sl_string__trim_end+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1045
  bool result = false;
    33ec:	4610      	mov	r0, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:1071
  }
  return result;
}
    33ee:	b003      	add	sp, #12
    33f0:	bdf0      	pop	{r4, r5, r6, r7, pc}

000033f2 <vPortSVCHandler_wrapper>:
invoke_function_in_wrapper():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/freertos_interrupt_handlers.c:25
 * Calling ISR in a wrapper causes RTOS crash when a task is using floating-point operations
 * We need to fully investigate it before re-enabling vRunTimeStatIsrEntry() and vRunTimeStatIsrExit()
 */
static void invoke_function_in_wrapper(function__void_f function) {
  // vRunTimeStatIsrEntry();
  function();
    33f2:	f000 b875 	b.w	34e0 <vPortSVCHandler>

000033f6 <xPortPendSVHandler_wrapper>:
    33f6:	f000 b8bb 	b.w	3570 <xPortPendSVHandler>

000033fa <xPortSysTickHandler_wrapper>:
    33fa:	f000 b8eb 	b.w	35d4 <xPortSysTickHandler>

000033fe <pvPortMalloc>:
pvPortMalloc():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/mem_mang/heap_3.c.inc:59
#endif

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
    33fe:	b510      	push	{r4, lr}
    3400:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/mem_mang/heap_3.c.inc:62
void *pvReturn;

	vTaskSuspendAll();
    3402:	f001 f9bf 	bl	4784 <vTaskSuspendAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/mem_mang/heap_3.c.inc:64
	{
		pvReturn = malloc( xWantedSize );
    3406:	4620      	mov	r0, r4
    3408:	f003 f9f0 	bl	67ec <malloc>
    340c:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/mem_mang/heap_3.c.inc:67
		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
    340e:	f001 fa59 	bl	48c4 <xTaskResumeAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/mem_mang/heap_3.c.inc:71

	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
	{
		if( pvReturn == NULL )
    3412:	b90c      	cbnz	r4, 3418 <pvPortMalloc+0x1a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/mem_mang/heap_3.c.inc:74
		{
			extern void vApplicationMallocFailedHook( void );
			vApplicationMallocFailedHook();
    3414:	f7ff fcc2 	bl	2d9c <vApplicationMallocFailedHook>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/mem_mang/heap_3.c.inc:80
		}
	}
	#endif

	return pvReturn;
}
    3418:	4620      	mov	r0, r4
    341a:	bd10      	pop	{r4, pc}

0000341c <vPortFree>:
vPortFree():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/mem_mang/heap_3.c.inc:84
/*-----------------------------------------------------------*/

void vPortFree( void *pv )
{
    341c:	b510      	push	{r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/mem_mang/heap_3.c.inc:85
	if( pv )
    341e:	4604      	mov	r4, r0
    3420:	b140      	cbz	r0, 3434 <vPortFree+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/mem_mang/heap_3.c.inc:87
	{
		vTaskSuspendAll();
    3422:	f001 f9af 	bl	4784 <vTaskSuspendAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/mem_mang/heap_3.c.inc:89
		{
			free( pv );
    3426:	4620      	mov	r0, r4
    3428:	f003 f9e8 	bl	67fc <free>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/mem_mang/heap_3.c.inc:94
			traceFREE( pv, 0 );
		}
		( void ) xTaskResumeAll();
	}
}
    342c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/mem_mang/heap_3.c.inc:92
		( void ) xTaskResumeAll();
    3430:	f001 ba48 	b.w	48c4 <xTaskResumeAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/mem_mang/heap_3.c.inc:94
}
    3434:	bd10      	pop	{r4, pc}
    3436:	Address 0x0000000000003436 is out of bounds.


00003438 <prvPortStartFirstTask>:
prvPortStartFirstTask():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:279
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
    3438:	4808      	ldr	r0, [pc, #32]	; (345c <prvPortStartFirstTask+0x24>)
    343a:	6800      	ldr	r0, [r0, #0]
    343c:	6800      	ldr	r0, [r0, #0]
    343e:	f380 8808 	msr	MSP, r0
    3442:	f04f 0000 	mov.w	r0, #0
    3446:	f380 8814 	msr	CONTROL, r0
    344a:	b662      	cpsie	i
    344c:	b661      	cpsie	f
    344e:	f3bf 8f4f 	dsb	sy
    3452:	f3bf 8f6f 	isb	sy
    3456:	df00      	svc	0
    3458:	bf00      	nop
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:293
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
    345a:	0000      	.short	0x0000
    345c:	e000ed08 	.word	0xe000ed08

00003460 <vPortEnableVFP>:
vPortEnableVFP():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:715
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
    3460:	f8df 000c 	ldr.w	r0, [pc, #12]	; 3470 <vPortEnableVFP+0x10>
    3464:	6801      	ldr	r1, [r0, #0]
    3466:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
    346a:	6001      	str	r1, [r0, #0]
    346c:	4770      	bx	lr
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:724
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
    346e:	0000      	.short	0x0000
    3470:	e000ed88 	.word	0xe000ed88

00003474 <prvTaskExitError>:
prvTaskExitError():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:230
{
    3474:	b507      	push	{r0, r1, r2, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:231
volatile uint32_t ulDummy = 0;
    3476:	2300      	movs	r3, #0
    3478:	9301      	str	r3, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:239
	configASSERT( uxCriticalNesting == ~0UL );
    347a:	4b0b      	ldr	r3, [pc, #44]	; (34a8 <prvTaskExitError+0x34>)
    347c:	681b      	ldr	r3, [r3, #0]
    347e:	3301      	adds	r3, #1
    3480:	d004      	beq.n	348c <prvTaskExitError+0x18>
    3482:	490a      	ldr	r1, [pc, #40]	; (34ac <prvTaskExitError+0x38>)
    3484:	20ef      	movs	r0, #239	; 0xef
    3486:	f7ff fc99 	bl	2dbc <configASSERT_callback>
    348a:	e7fe      	b.n	348a <prvTaskExitError+0x16>
vPortRaiseBASEPRI():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:195

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
    348c:	f04f 0318 	mov.w	r3, #24
    3490:	f383 8811 	msr	BASEPRI, r3
    3494:	f3bf 8f6f 	isb	sy
    3498:	f3bf 8f4f 	dsb	sy
prvTaskExitError():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:241 (discriminator 1)
	while( ulDummy == 0 )
    349c:	9b01      	ldr	r3, [sp, #4]
    349e:	2b00      	cmp	r3, #0
    34a0:	d0fc      	beq.n	349c <prvTaskExitError+0x28>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:251
}
    34a2:	b003      	add	sp, #12
    34a4:	f85d fb04 	ldr.w	pc, [sp], #4
    34a8:	100012bc 	.word	0x100012bc
    34ac:	0000d19c 	.word	0x0000d19c

000034b0 <pxPortInitialiseStack>:
pxPortInitialiseStack():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:208
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
    34b0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
    34b4:	f840 3c04 	str.w	r3, [r0, #-4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:212
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
    34b8:	4b07      	ldr	r3, [pc, #28]	; (34d8 <pxPortInitialiseStack+0x28>)
    34ba:	f840 3c0c 	str.w	r3, [r0, #-12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:210
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
    34be:	f021 0101 	bic.w	r1, r1, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:221
	*pxTopOfStack = portINITIAL_EXC_RETURN;
    34c2:	f06f 0302 	mvn.w	r3, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:210
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
    34c6:	f840 1c08 	str.w	r1, [r0, #-8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:216
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
    34ca:	f840 2c20 	str.w	r2, [r0, #-32]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:221
	*pxTopOfStack = portINITIAL_EXC_RETURN;
    34ce:	f840 3c24 	str.w	r3, [r0, #-36]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:226
}
    34d2:	3844      	subs	r0, #68	; 0x44
    34d4:	4770      	bx	lr
    34d6:	bf00      	nop
    34d8:	00003475 	.word	0x00003475
    34dc:	ffffffff 	.word	0xffffffff

000034e0 <vPortSVCHandler>:
vPortSVCHandler():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:256
	__asm volatile (
    34e0:	4b07      	ldr	r3, [pc, #28]	; (3500 <pxCurrentTCBConst2>)
    34e2:	6819      	ldr	r1, [r3, #0]
    34e4:	6808      	ldr	r0, [r1, #0]
    34e6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    34ea:	f380 8809 	msr	PSP, r0
    34ee:	f3bf 8f6f 	isb	sy
    34f2:	f04f 0000 	mov.w	r0, #0
    34f6:	f380 8811 	msr	BASEPRI, r0
    34fa:	4770      	bx	lr
    34fc:	f3af 8000 	nop.w

00003500 <pxCurrentTCBConst2>:
    3500:	100012c0 	.word	0x100012c0

00003504 <vPortEnterCritical>:
vPortEnterCritical():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:416
{
    3504:	b508      	push	{r3, lr}
vPortRaiseBASEPRI():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:195
    3506:	f04f 0318 	mov.w	r3, #24
    350a:	f383 8811 	msr	BASEPRI, r3
    350e:	f3bf 8f6f 	isb	sy
    3512:	f3bf 8f4f 	dsb	sy
vPortEnterCritical():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:418
	uxCriticalNesting++;
    3516:	4a09      	ldr	r2, [pc, #36]	; (353c <vPortEnterCritical+0x38>)
    3518:	6813      	ldr	r3, [r2, #0]
    351a:	3301      	adds	r3, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:425
	if( uxCriticalNesting == 1 )
    351c:	2b01      	cmp	r3, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:418
	uxCriticalNesting++;
    351e:	6013      	str	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:425
	if( uxCriticalNesting == 1 )
    3520:	d10a      	bne.n	3538 <vPortEnterCritical+0x34>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:427
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
    3522:	4b07      	ldr	r3, [pc, #28]	; (3540 <vPortEnterCritical+0x3c>)
    3524:	681b      	ldr	r3, [r3, #0]
    3526:	f013 0fff 	tst.w	r3, #255	; 0xff
    352a:	d005      	beq.n	3538 <vPortEnterCritical+0x34>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:427 (discriminator 1)
    352c:	4905      	ldr	r1, [pc, #20]	; (3544 <vPortEnterCritical+0x40>)
    352e:	f240 10ab 	movw	r0, #427	; 0x1ab
    3532:	f7ff fc43 	bl	2dbc <configASSERT_callback>
    3536:	e7fe      	b.n	3536 <vPortEnterCritical+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:429
}
    3538:	bd08      	pop	{r3, pc}
    353a:	bf00      	nop
    353c:	100012bc 	.word	0x100012bc
    3540:	e000ed04 	.word	0xe000ed04
    3544:	0000d1b6 	.word	0x0000d1b6

00003548 <vPortExitCritical>:
vPortExitCritical():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:434
	configASSERT( uxCriticalNesting );
    3548:	4a07      	ldr	r2, [pc, #28]	; (3568 <vPortExitCritical+0x20>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:433
{
    354a:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:434
	configASSERT( uxCriticalNesting );
    354c:	6813      	ldr	r3, [r2, #0]
    354e:	b92b      	cbnz	r3, 355c <vPortExitCritical+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:434 (discriminator 1)
    3550:	4906      	ldr	r1, [pc, #24]	; (356c <vPortExitCritical+0x24>)
    3552:	f44f 70d9 	mov.w	r0, #434	; 0x1b2
    3556:	f7ff fc31 	bl	2dbc <configASSERT_callback>
    355a:	e7fe      	b.n	355a <vPortExitCritical+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:435
	uxCriticalNesting--;
    355c:	3b01      	subs	r3, #1
    355e:	6013      	str	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:436
	if( uxCriticalNesting == 0 )
    3560:	b90b      	cbnz	r3, 3566 <vPortExitCritical+0x1e>
vPortSetBASEPRI():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
    3562:	f383 8811 	msr	BASEPRI, r3
vPortExitCritical():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:440
}
    3566:	bd08      	pop	{r3, pc}
    3568:	100012bc 	.word	0x100012bc
    356c:	0000d1eb 	.word	0x0000d1eb

00003570 <xPortPendSVHandler>:
xPortPendSVHandler():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:447
	__asm volatile
    3570:	f3ef 8009 	mrs	r0, PSP
    3574:	f3bf 8f6f 	isb	sy
    3578:	4b15      	ldr	r3, [pc, #84]	; (35d0 <pxCurrentTCBConst>)
    357a:	681a      	ldr	r2, [r3, #0]
    357c:	f01e 0f10 	tst.w	lr, #16
    3580:	bf08      	it	eq
    3582:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
    3586:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    358a:	6010      	str	r0, [r2, #0]
    358c:	e92d 0009 	stmdb	sp!, {r0, r3}
    3590:	f04f 0018 	mov.w	r0, #24
    3594:	f380 8811 	msr	BASEPRI, r0
    3598:	f3bf 8f4f 	dsb	sy
    359c:	f3bf 8f6f 	isb	sy
    35a0:	f001 fa2a 	bl	49f8 <vTaskSwitchContext>
    35a4:	f04f 0000 	mov.w	r0, #0
    35a8:	f380 8811 	msr	BASEPRI, r0
    35ac:	bc09      	pop	{r0, r3}
    35ae:	6819      	ldr	r1, [r3, #0]
    35b0:	6808      	ldr	r0, [r1, #0]
    35b2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    35b6:	f01e 0f10 	tst.w	lr, #16
    35ba:	bf08      	it	eq
    35bc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
    35c0:	f380 8809 	msr	PSP, r0
    35c4:	f3bf 8f6f 	isb	sy
    35c8:	4770      	bx	lr
    35ca:	bf00      	nop
    35cc:	f3af 8000 	nop.w

000035d0 <pxCurrentTCBConst>:
    35d0:	100012c0 	.word	0x100012c0

000035d4 <xPortSysTickHandler>:
xPortSysTickHandler():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:501
{
    35d4:	b508      	push	{r3, lr}
vPortRaiseBASEPRI():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:195
	__asm volatile
    35d6:	f04f 0318 	mov.w	r3, #24
    35da:	f383 8811 	msr	BASEPRI, r3
    35de:	f3bf 8f6f 	isb	sy
    35e2:	f3bf 8f4f 	dsb	sy
xPortSysTickHandler():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:509
		if( xTaskIncrementTick() != pdFALSE )
    35e6:	f001 f8db 	bl	47a0 <xTaskIncrementTick>
    35ea:	b118      	cbz	r0, 35f4 <xPortSysTickHandler+0x20>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:513
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
    35ec:	4b03      	ldr	r3, [pc, #12]	; (35fc <xPortSysTickHandler+0x28>)
    35ee:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    35f2:	601a      	str	r2, [r3, #0]
vPortSetBASEPRI():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
	__asm volatile
    35f4:	2300      	movs	r3, #0
    35f6:	f383 8811 	msr	BASEPRI, r3
xPortSysTickHandler():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:517
}
    35fa:	bd08      	pop	{r3, pc}
    35fc:	e000ed04 	.word	0xe000ed04

00003600 <vPortSetupTimerInterrupt>:
vPortSetupTimerInterrupt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:692
{
    3600:	b510      	push	{r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:704
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
    3602:	4a08      	ldr	r2, [pc, #32]	; (3624 <vPortSetupTimerInterrupt+0x24>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:703
	portNVIC_SYSTICK_CTRL_REG = 0UL;
    3604:	4c08      	ldr	r4, [pc, #32]	; (3628 <vPortSetupTimerInterrupt+0x28>)
    3606:	2300      	movs	r3, #0
    3608:	6023      	str	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:704
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
    360a:	6013      	str	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:707
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
    360c:	f7fc fe06 	bl	21c <clock__get_core_clock_hz>
    3610:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    3614:	fbb0 f0f3 	udiv	r0, r0, r3
    3618:	4b04      	ldr	r3, [pc, #16]	; (362c <vPortSetupTimerInterrupt+0x2c>)
    361a:	3801      	subs	r0, #1
    361c:	6018      	str	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:708
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
    361e:	2307      	movs	r3, #7
    3620:	6023      	str	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:709
}
    3622:	bd10      	pop	{r4, pc}
    3624:	e000e018 	.word	0xe000e018
    3628:	e000e010 	.word	0xe000e010
    362c:	e000e014 	.word	0xe000e014

00003630 <xPortStartScheduler>:
xPortStartScheduler():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:308
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
    3630:	4b33      	ldr	r3, [pc, #204]	; (3700 <xPortStartScheduler+0xd0>)
    3632:	4a34      	ldr	r2, [pc, #208]	; (3704 <xPortStartScheduler+0xd4>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:300
{
    3634:	b513      	push	{r0, r1, r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:308
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
    3636:	6819      	ldr	r1, [r3, #0]
    3638:	4291      	cmp	r1, r2
    363a:	d105      	bne.n	3648 <xPortStartScheduler+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:308 (discriminator 1)
    363c:	4932      	ldr	r1, [pc, #200]	; (3708 <xPortStartScheduler+0xd8>)
    363e:	f44f 709a 	mov.w	r0, #308	; 0x134
    3642:	f7ff fbbb 	bl	2dbc <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:308 (discriminator 2)
    3646:	e7fe      	b.n	3646 <xPortStartScheduler+0x16>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:309
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
    3648:	681a      	ldr	r2, [r3, #0]
    364a:	4b30      	ldr	r3, [pc, #192]	; (370c <xPortStartScheduler+0xdc>)
    364c:	429a      	cmp	r2, r3
    364e:	d105      	bne.n	365c <xPortStartScheduler+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:309 (discriminator 1)
    3650:	492f      	ldr	r1, [pc, #188]	; (3710 <xPortStartScheduler+0xe0>)
    3652:	f240 1035 	movw	r0, #309	; 0x135
    3656:	f7ff fbb1 	bl	2dbc <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:309 (discriminator 3)
    365a:	e7fe      	b.n	365a <xPortStartScheduler+0x2a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:323
		ulOriginalPriority = *pucFirstUserPriorityRegister;
    365c:	4b2d      	ldr	r3, [pc, #180]	; (3714 <xPortStartScheduler+0xe4>)
    365e:	781a      	ldrb	r2, [r3, #0]
    3660:	b2d2      	uxtb	r2, r2
    3662:	9201      	str	r2, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:327
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
    3664:	22ff      	movs	r2, #255	; 0xff
    3666:	701a      	strb	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:330
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
    3668:	781b      	ldrb	r3, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:333
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
    366a:	4a2b      	ldr	r2, [pc, #172]	; (3718 <xPortStartScheduler+0xe8>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:330
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
    366c:	b2db      	uxtb	r3, r3
    366e:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:333
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
    3672:	f89d 3003 	ldrb.w	r3, [sp, #3]
    3676:	f003 0318 	and.w	r3, r3, #24
    367a:	7013      	strb	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:337
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
    367c:	4a27      	ldr	r2, [pc, #156]	; (371c <xPortStartScheduler+0xec>)
    367e:	2307      	movs	r3, #7
    3680:	6013      	str	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:338
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
    3682:	2100      	movs	r1, #0
    3684:	f89d 0003 	ldrb.w	r0, [sp, #3]
    3688:	0600      	lsls	r0, r0, #24
    368a:	f103 34ff 	add.w	r4, r3, #4294967295	; 0xffffffff
    368e:	d409      	bmi.n	36a4 <xPortStartScheduler+0x74>
    3690:	b111      	cbz	r1, 3698 <xPortStartScheduler+0x68>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:349
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == __NVIC_PRIO_BITS );
    3692:	2b02      	cmp	r3, #2
    3694:	6013      	str	r3, [r2, #0]
    3696:	d00e      	beq.n	36b6 <xPortStartScheduler+0x86>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:349 (discriminator 1)
    3698:	4921      	ldr	r1, [pc, #132]	; (3720 <xPortStartScheduler+0xf0>)
    369a:	f240 105d 	movw	r0, #349	; 0x15d
    369e:	f7ff fb8d 	bl	2dbc <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:349 (discriminator 4)
    36a2:	e7fe      	b.n	36a2 <xPortStartScheduler+0x72>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:341
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
    36a4:	f89d 3003 	ldrb.w	r3, [sp, #3]
    36a8:	005b      	lsls	r3, r3, #1
    36aa:	b2db      	uxtb	r3, r3
    36ac:	f88d 3003 	strb.w	r3, [sp, #3]
    36b0:	2101      	movs	r1, #1
    36b2:	4623      	mov	r3, r4
    36b4:	e7e6      	b.n	3684 <xPortStartScheduler+0x54>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:365
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
    36b6:	f44f 7300 	mov.w	r3, #512	; 0x200
    36ba:	6013      	str	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:369
		*pucFirstUserPriorityRegister = ulOriginalPriority;
    36bc:	9b01      	ldr	r3, [sp, #4]
    36be:	4a15      	ldr	r2, [pc, #84]	; (3714 <xPortStartScheduler+0xe4>)
    36c0:	b2db      	uxtb	r3, r3
    36c2:	7013      	strb	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:374
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
    36c4:	4b17      	ldr	r3, [pc, #92]	; (3724 <xPortStartScheduler+0xf4>)
    36c6:	681a      	ldr	r2, [r3, #0]
    36c8:	f442 0278 	orr.w	r2, r2, #16252928	; 0xf80000
    36cc:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:375
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
    36ce:	681a      	ldr	r2, [r3, #0]
    36d0:	f042 4278 	orr.w	r2, r2, #4160749568	; 0xf8000000
    36d4:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:379
	vPortSetupTimerInterrupt();
    36d6:	f7ff ff93 	bl	3600 <vPortSetupTimerInterrupt>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:382
	uxCriticalNesting = 0;
    36da:	4b13      	ldr	r3, [pc, #76]	; (3728 <xPortStartScheduler+0xf8>)
    36dc:	2400      	movs	r4, #0
    36de:	601c      	str	r4, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:385
	vPortEnableVFP();
    36e0:	f7ff febe 	bl	3460 <vPortEnableVFP>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:388
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
    36e4:	4a11      	ldr	r2, [pc, #68]	; (372c <xPortStartScheduler+0xfc>)
    36e6:	6813      	ldr	r3, [r2, #0]
    36e8:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
    36ec:	6013      	str	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:391
	prvPortStartFirstTask();
    36ee:	f7ff fea3 	bl	3438 <prvPortStartFirstTask>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:399
	vTaskSwitchContext();
    36f2:	f001 f981 	bl	49f8 <vTaskSwitchContext>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:400
	prvTaskExitError();
    36f6:	f7ff febd 	bl	3474 <prvTaskExitError>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:404
}
    36fa:	4620      	mov	r0, r4
    36fc:	b002      	add	sp, #8
    36fe:	bd10      	pop	{r4, pc}
    3700:	e000ed00 	.word	0xe000ed00
    3704:	410fc271 	.word	0x410fc271
    3708:	0000d269 	.word	0x0000d269
    370c:	410fc270 	.word	0x410fc270
    3710:	0000d28c 	.word	0x0000d28c
    3714:	e000e400 	.word	0xe000e400
    3718:	100012b4 	.word	0x100012b4
    371c:	100012b8 	.word	0x100012b8
    3720:	0000d2af 	.word	0x0000d2af
    3724:	e000ed20 	.word	0xe000ed20
    3728:	100012bc 	.word	0x100012bc
    372c:	e000ef34 	.word	0xe000ef34

00003730 <vPortValidateInterruptPriority>:
vPortValidateInterruptPriority():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:730
/*-----------------------------------------------------------*/

#if( configASSERT_DEFINED == 1 )

	void vPortValidateInterruptPriority( void )
	{
    3730:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:735
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
    3732:	f3ef 8305 	mrs	r3, IPSR
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:738

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
    3736:	2b0f      	cmp	r3, #15
    3738:	d90b      	bls.n	3752 <vPortValidateInterruptPriority+0x22>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:741
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
    373a:	4a0d      	ldr	r2, [pc, #52]	; (3770 <vPortValidateInterruptPriority+0x40>)
    373c:	5c9b      	ldrb	r3, [r3, r2]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:766
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
    373e:	4a0d      	ldr	r2, [pc, #52]	; (3774 <vPortValidateInterruptPriority+0x44>)
    3740:	7812      	ldrb	r2, [r2, #0]
    3742:	429a      	cmp	r2, r3
    3744:	d905      	bls.n	3752 <vPortValidateInterruptPriority+0x22>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:766 (discriminator 1)
    3746:	490c      	ldr	r1, [pc, #48]	; (3778 <vPortValidateInterruptPriority+0x48>)
    3748:	f240 20fe 	movw	r0, #766	; 0x2fe
    374c:	f7ff fb36 	bl	2dbc <configASSERT_callback>
    3750:	e7fe      	b.n	3750 <vPortValidateInterruptPriority+0x20>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:782
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
    3752:	4b0a      	ldr	r3, [pc, #40]	; (377c <vPortValidateInterruptPriority+0x4c>)
    3754:	4a0a      	ldr	r2, [pc, #40]	; (3780 <vPortValidateInterruptPriority+0x50>)
    3756:	681b      	ldr	r3, [r3, #0]
    3758:	6812      	ldr	r2, [r2, #0]
    375a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
    375e:	4293      	cmp	r3, r2
    3760:	d905      	bls.n	376e <vPortValidateInterruptPriority+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:782 (discriminator 1)
    3762:	4908      	ldr	r1, [pc, #32]	; (3784 <vPortValidateInterruptPriority+0x54>)
    3764:	f240 300e 	movw	r0, #782	; 0x30e
    3768:	f7ff fb28 	bl	2dbc <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:782 (discriminator 2)
    376c:	e7fe      	b.n	376c <vPortValidateInterruptPriority+0x3c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:783
	}
    376e:	bd08      	pop	{r3, pc}
    3770:	e000e3f0 	.word	0xe000e3f0
    3774:	100012b4 	.word	0x100012b4
    3778:	0000d1fd 	.word	0x0000d1fd
    377c:	e000ed0c 	.word	0xe000ed0c
    3780:	100012b8 	.word	0x100012b8
    3784:	0000d227 	.word	0x0000d227

00003788 <xEventGroupCreate>:
xEventGroupCreate():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:146
/*-----------------------------------------------------------*/

#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )

	EventGroupHandle_t xEventGroupCreate( void )
	{
    3788:	b538      	push	{r3, r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:162
		TickType_t alignment requirements the cast is safe.  In other cases,
		where the natural word size of the architecture is less than
		sizeof( TickType_t ), the TickType_t variables will be accessed in two
		or more reads operations, and the alignment requirements is only that
		of each individual read. */
		pxEventBits = ( EventGroup_t * ) pvPortMalloc( sizeof( EventGroup_t ) ); /*lint !e9087 !e9079 see comment above. */
    378a:	2020      	movs	r0, #32
    378c:	f7ff fe37 	bl	33fe <pvPortMalloc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:164

		if( pxEventBits != NULL )
    3790:	4604      	mov	r4, r0
    3792:	b128      	cbz	r0, 37a0 <xEventGroupCreate+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:166
		{
			pxEventBits->uxEventBits = 0;
    3794:	2500      	movs	r5, #0
    3796:	f840 5b04 	str.w	r5, [r0], #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:167
			vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
    379a:	f000 f8c9 	bl	3930 <vListInitialise>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:174
			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
			{
				/* Both static and dynamic allocation can be used, so note this
				event group was allocated statically in case the event group is
				later deleted. */
				pxEventBits->ucStaticallyAllocated = pdFALSE;
    379e:	7725      	strb	r5, [r4, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:186
		{
			traceEVENT_GROUP_CREATE_FAILED(); /*lint !e9063 Else branch only exists to allow tracing and does not generate code if trace macros are not defined. */
		}

		return pxEventBits;
	}
    37a0:	4620      	mov	r0, r4
    37a2:	bd38      	pop	{r3, r4, r5, pc}

000037a4 <xEventGroupWaitBits>:
xEventGroupWaitBits():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:312
	return uxReturn;
}
/*-----------------------------------------------------------*/

EventBits_t xEventGroupWaitBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToWaitFor, const BaseType_t xClearOnExit, const BaseType_t xWaitForAllBits, TickType_t xTicksToWait )
{
    37a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    37a8:	9f08      	ldr	r7, [sp, #32]
    37aa:	460c      	mov	r4, r1
    37ac:	4690      	mov	r8, r2
    37ae:	4699      	mov	r9, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:320
BaseType_t xWaitConditionMet, xAlreadyYielded;
BaseType_t xTimeoutOccurred = pdFALSE;

	/* Check the user is not attempting to wait on the bits used by the kernel
	itself, and that at least one bit is being requested. */
	configASSERT( xEventGroup );
    37b0:	4606      	mov	r6, r0
    37b2:	b928      	cbnz	r0, 37c0 <xEventGroupWaitBits+0x1c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:320 (discriminator 1)
    37b4:	4938      	ldr	r1, [pc, #224]	; (3898 <xEventGroupWaitBits+0xf4>)
    37b6:	f44f 70a0 	mov.w	r0, #320	; 0x140
    37ba:	f7ff faff 	bl	2dbc <configASSERT_callback>
    37be:	e7fe      	b.n	37be <xEventGroupWaitBits+0x1a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:321
	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
    37c0:	f011 4a7f 	ands.w	sl, r1, #4278190080	; 0xff000000
    37c4:	d005      	beq.n	37d2 <xEventGroupWaitBits+0x2e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:321 (discriminator 1)
    37c6:	4935      	ldr	r1, [pc, #212]	; (389c <xEventGroupWaitBits+0xf8>)
    37c8:	f240 1041 	movw	r0, #321	; 0x141
    37cc:	f7ff faf6 	bl	2dbc <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:321 (discriminator 2)
    37d0:	e7fe      	b.n	37d0 <xEventGroupWaitBits+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:322
	configASSERT( uxBitsToWaitFor != 0 );
    37d2:	b929      	cbnz	r1, 37e0 <xEventGroupWaitBits+0x3c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:322 (discriminator 1)
    37d4:	4932      	ldr	r1, [pc, #200]	; (38a0 <xEventGroupWaitBits+0xfc>)
    37d6:	f44f 70a1 	mov.w	r0, #322	; 0x142
    37da:	f7ff faef 	bl	2dbc <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:322 (discriminator 3)
    37de:	e7fe      	b.n	37de <xEventGroupWaitBits+0x3a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:325
	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
	{
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
    37e0:	f001 fb9a 	bl	4f18 <xTaskGetSchedulerState>
    37e4:	b930      	cbnz	r0, 37f4 <xEventGroupWaitBits+0x50>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:325 (discriminator 1)
    37e6:	b12f      	cbz	r7, 37f4 <xEventGroupWaitBits+0x50>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:325 (discriminator 2)
    37e8:	492e      	ldr	r1, [pc, #184]	; (38a4 <xEventGroupWaitBits+0x100>)
    37ea:	f240 1045 	movw	r0, #325	; 0x145
    37ee:	f7ff fae5 	bl	2dbc <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:325 (discriminator 4)
    37f2:	e7fe      	b.n	37f2 <xEventGroupWaitBits+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:329
	}
	#endif

	vTaskSuspendAll();
    37f4:	f000 ffc6 	bl	4784 <vTaskSuspendAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:331
	{
		const EventBits_t uxCurrentEventBits = pxEventBits->uxEventBits;
    37f8:	6835      	ldr	r5, [r6, #0]
prvTestWaitCondition():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:675

static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits, const EventBits_t uxBitsToWaitFor, const BaseType_t xWaitForAllBits )
{
BaseType_t xWaitConditionMet = pdFALSE;

	if( xWaitForAllBits == pdFALSE )
    37fa:	ea04 0305 	and.w	r3, r4, r5
    37fe:	f1b9 0f00 	cmp.w	r9, #0
    3802:	d114      	bne.n	382e <xEventGroupWaitBits+0x8a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:679
	{
		/* Task only has to wait for one bit within uxBitsToWaitFor to be
		set.  Is one already set? */
		if( ( uxCurrentEventBits & uxBitsToWaitFor ) != ( EventBits_t ) 0 )
    3804:	b9ab      	cbnz	r3, 3832 <xEventGroupWaitBits+0x8e>
xEventGroupWaitBits():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:353
		else if( xTicksToWait == ( TickType_t ) 0 )
    3806:	b187      	cbz	r7, 382a <xEventGroupWaitBits+0x86>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:368
				uxControlBits |= eventCLEAR_EVENTS_ON_EXIT_BIT;
    3808:	f1b8 0f00 	cmp.w	r8, #0
    380c:	bf0c      	ite	eq
    380e:	2100      	moveq	r1, #0
    3810:	f04f 7180 	movne.w	r1, #16777216	; 0x1000000
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:375
			if( xWaitForAllBits != pdFALSE )
    3814:	f1b9 0f00 	cmp.w	r9, #0
    3818:	d001      	beq.n	381e <xEventGroupWaitBits+0x7a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:377
				uxControlBits |= eventWAIT_FOR_ALL_BITS;
    381a:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:387
			vTaskPlaceOnUnorderedEventList( &( pxEventBits->xTasksWaitingForBits ), ( uxBitsToWaitFor | uxControlBits ), xTicksToWait );
    381e:	463a      	mov	r2, r7
    3820:	4321      	orrs	r1, r4
    3822:	1d30      	adds	r0, r6, #4
    3824:	f001 f9c8 	bl	4bb8 <vTaskPlaceOnUnorderedEventList>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:392
			uxReturn = 0;
    3828:	2500      	movs	r5, #0
    382a:	46ba      	mov	sl, r7
    382c:	e007      	b.n	383e <xEventGroupWaitBits+0x9a>
prvTestWaitCondition():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:692
	}
	else
	{
		/* Task has to wait for all the bits in uxBitsToWaitFor to be set.
		Are they set already? */
		if( ( uxCurrentEventBits & uxBitsToWaitFor ) == uxBitsToWaitFor )
    382e:	429c      	cmp	r4, r3
    3830:	d1e9      	bne.n	3806 <xEventGroupWaitBits+0x62>
xEventGroupWaitBits():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:344
			if( xClearOnExit != pdFALSE )
    3832:	f1b8 0f00 	cmp.w	r8, #0
    3836:	d002      	beq.n	383e <xEventGroupWaitBits+0x9a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:346
				pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
    3838:	ea25 0304 	bic.w	r3, r5, r4
    383c:	6033      	str	r3, [r6, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:397
	xAlreadyYielded = xTaskResumeAll();
    383e:	f001 f841 	bl	48c4 <xTaskResumeAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:399
	if( xTicksToWait != ( TickType_t ) 0 )
    3842:	f1ba 0f00 	cmp.w	sl, #0
    3846:	d01a      	beq.n	387e <xEventGroupWaitBits+0xda>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:401
		if( xAlreadyYielded == pdFALSE )
    3848:	b938      	cbnz	r0, 385a <xEventGroupWaitBits+0xb6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:403
			portYIELD_WITHIN_API();
    384a:	4b17      	ldr	r3, [pc, #92]	; (38a8 <xEventGroupWaitBits+0x104>)
    384c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    3850:	601a      	str	r2, [r3, #0]
    3852:	f3bf 8f4f 	dsb	sy
    3856:	f3bf 8f6f 	isb	sy
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:414
		uxReturn = uxTaskResetEventItemValue();
    385a:	f001 fc65 	bl	5128 <uxTaskResetEventItemValue>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:416
		if( ( uxReturn & eventUNBLOCKED_DUE_TO_BIT_SET ) == ( EventBits_t ) 0 )
    385e:	0183      	lsls	r3, r0, #6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:414
		uxReturn = uxTaskResetEventItemValue();
    3860:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:416
		if( ( uxReturn & eventUNBLOCKED_DUE_TO_BIT_SET ) == ( EventBits_t ) 0 )
    3862:	d40a      	bmi.n	387a <xEventGroupWaitBits+0xd6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:418
			taskENTER_CRITICAL();
    3864:	f7ff fe4e 	bl	3504 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:421
				uxReturn = pxEventBits->uxEventBits;
    3868:	6835      	ldr	r5, [r6, #0]
prvTestWaitCondition():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:675
	if( xWaitForAllBits == pdFALSE )
    386a:	ea04 0305 	and.w	r3, r4, r5
    386e:	f1b9 0f00 	cmp.w	r9, #0
    3872:	d107      	bne.n	3884 <xEventGroupWaitBits+0xe0>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:679
		if( ( uxCurrentEventBits & uxBitsToWaitFor ) != ( EventBits_t ) 0 )
    3874:	b943      	cbnz	r3, 3888 <xEventGroupWaitBits+0xe4>
xEventGroupWaitBits():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:442
			taskEXIT_CRITICAL();
    3876:	f7ff fe67 	bl	3548 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:450
		uxReturn &= ~eventEVENT_BITS_CONTROL_BYTES;
    387a:	f025 457f 	bic.w	r5, r5, #4278190080	; 0xff000000
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:458
}
    387e:	4628      	mov	r0, r5
    3880:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
prvTestWaitCondition():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:692
		if( ( uxCurrentEventBits & uxBitsToWaitFor ) == uxBitsToWaitFor )
    3884:	429c      	cmp	r4, r3
    3886:	d1f6      	bne.n	3876 <xEventGroupWaitBits+0xd2>
xEventGroupWaitBits():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:427
					if( xClearOnExit != pdFALSE )
    3888:	f1b8 0f00 	cmp.w	r8, #0
    388c:	d0f3      	beq.n	3876 <xEventGroupWaitBits+0xd2>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:429
						pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
    388e:	ea25 0404 	bic.w	r4, r5, r4
    3892:	6034      	str	r4, [r6, #0]
    3894:	e7ef      	b.n	3876 <xEventGroupWaitBits+0xd2>
    3896:	bf00      	nop
    3898:	0000d327 	.word	0x0000d327
    389c:	0000d333 	.word	0x0000d333
    38a0:	0000d36c 	.word	0x0000d36c
    38a4:	0000d381 	.word	0x0000d381
    38a8:	e000ed04 	.word	0xe000ed04

000038ac <xEventGroupSetBits>:
xEventGroupSetBits():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:520
{
    38ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    38b0:	460f      	mov	r7, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:530
	configASSERT( xEventGroup );
    38b2:	4604      	mov	r4, r0
    38b4:	b928      	cbnz	r0, 38c2 <xEventGroupSetBits+0x16>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:530 (discriminator 1)
    38b6:	491c      	ldr	r1, [pc, #112]	; (3928 <xEventGroupSetBits+0x7c>)
    38b8:	f240 2012 	movw	r0, #530	; 0x212
    38bc:	f7ff fa7e 	bl	2dbc <configASSERT_callback>
    38c0:	e7fe      	b.n	38c0 <xEventGroupSetBits+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:531
	configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
    38c2:	f011 457f 	ands.w	r5, r1, #4278190080	; 0xff000000
    38c6:	d005      	beq.n	38d4 <xEventGroupSetBits+0x28>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:531 (discriminator 1)
    38c8:	4918      	ldr	r1, [pc, #96]	; (392c <xEventGroupSetBits+0x80>)
    38ca:	f240 2013 	movw	r0, #531	; 0x213
    38ce:	f7ff fa75 	bl	2dbc <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:531 (discriminator 2)
    38d2:	e7fe      	b.n	38d2 <xEventGroupSetBits+0x26>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:534
	pxListEnd = listGET_END_MARKER( pxList ); /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
    38d4:	f100 060c 	add.w	r6, r0, #12
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:535
	vTaskSuspendAll();
    38d8:	f000 ff54 	bl	4784 <vTaskSuspendAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:542
		pxEventBits->uxEventBits |= uxBitsToSet;
    38dc:	6823      	ldr	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:539
		pxListItem = listGET_HEAD_ENTRY( pxList );
    38de:	6920      	ldr	r0, [r4, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:542
		pxEventBits->uxEventBits |= uxBitsToSet;
    38e0:	433b      	orrs	r3, r7
    38e2:	6023      	str	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:545
		while( pxListItem != pxListEnd )
    38e4:	4286      	cmp	r6, r0
    38e6:	6821      	ldr	r1, [r4, #0]
    38e8:	d107      	bne.n	38fa <xEventGroupSetBits+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:605
		pxEventBits->uxEventBits &= ~uxBitsToClear;
    38ea:	ea21 0105 	bic.w	r1, r1, r5
    38ee:	6021      	str	r1, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:607
	( void ) xTaskResumeAll();
    38f0:	f000 ffe8 	bl	48c4 <xTaskResumeAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:610
}
    38f4:	6820      	ldr	r0, [r4, #0]
    38f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:548
			uxBitsWaitedFor = listGET_LIST_ITEM_VALUE( pxListItem );
    38fa:	e9d0 2800 	ldrd	r2, r8, [r0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:553
			uxBitsWaitedFor &= ~eventEVENT_BITS_CONTROL_BYTES;
    38fe:	f022 437f 	bic.w	r3, r2, #4278190080	; 0xff000000
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:555
			if( ( uxControlBits & eventWAIT_FOR_ALL_BITS ) == ( EventBits_t ) 0 )
    3902:	f012 6f80 	tst.w	r2, #67108864	; 0x4000000
    3906:	ea03 0701 	and.w	r7, r3, r1
    390a:	d102      	bne.n	3912 <xEventGroupSetBits+0x66>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:558
				if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) != ( EventBits_t ) 0 )
    390c:	b91f      	cbnz	r7, 3916 <xEventGroupSetBits+0x6a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:520
{
    390e:	4640      	mov	r0, r8
    3910:	e7e8      	b.n	38e4 <xEventGroupSetBits+0x38>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:567
			else if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) == uxBitsWaitedFor )
    3912:	42bb      	cmp	r3, r7
    3914:	d1fb      	bne.n	390e <xEventGroupSetBits+0x62>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:580
				if( ( uxControlBits & eventCLEAR_EVENTS_ON_EXIT_BIT ) != ( EventBits_t ) 0 )
    3916:	01d2      	lsls	r2, r2, #7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:594
				vTaskRemoveFromUnorderedEventList( pxListItem, pxEventBits->uxEventBits | eventUNBLOCKED_DUE_TO_BIT_SET );
    3918:	f041 7100 	orr.w	r1, r1, #33554432	; 0x2000000
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:582
					uxBitsToClear |= uxBitsWaitedFor;
    391c:	bf48      	it	mi
    391e:	431d      	orrmi	r5, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:594
				vTaskRemoveFromUnorderedEventList( pxListItem, pxEventBits->uxEventBits | eventUNBLOCKED_DUE_TO_BIT_SET );
    3920:	f001 f9b4 	bl	4c8c <vTaskRemoveFromUnorderedEventList>
    3924:	e7f3      	b.n	390e <xEventGroupSetBits+0x62>
    3926:	bf00      	nop
    3928:	0000d327 	.word	0x0000d327
    392c:	0000d2f2 	.word	0x0000d2f2

00003930 <vListInitialise>:
vListInitialise():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:42
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
    3930:	f100 0308 	add.w	r3, r0, #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:46

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
    3934:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:42
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
    3938:	6043      	str	r3, [r0, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:50

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
    393a:	e9c0 2302 	strd	r2, r3, [r0, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:51
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
    393e:	6103      	str	r3, [r0, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:53

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
    3940:	2300      	movs	r3, #0
    3942:	6003      	str	r3, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:59

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
    3944:	4770      	bx	lr

00003946 <vListInitialiseItem>:
vListInitialiseItem():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:65
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
    3946:	2300      	movs	r3, #0
    3948:	6103      	str	r3, [r0, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:71

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
    394a:	4770      	bx	lr

0000394c <vListInsertEnd>:
vListInsertEnd():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:76
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
    394c:	6843      	ldr	r3, [r0, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:87
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
    394e:	604b      	str	r3, [r1, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:88
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
    3950:	689a      	ldr	r2, [r3, #8]
    3952:	608a      	str	r2, [r1, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:93

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
    3954:	689a      	ldr	r2, [r3, #8]
    3956:	6051      	str	r1, [r2, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:94
	pxIndex->pxPrevious = pxNewListItem;
    3958:	6099      	str	r1, [r3, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:99

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
    395a:	6803      	ldr	r3, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:97
	pxNewListItem->pxContainer = pxList;
    395c:	6108      	str	r0, [r1, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:99
	( pxList->uxNumberOfItems )++;
    395e:	3301      	adds	r3, #1
    3960:	6003      	str	r3, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:100
}
    3962:	4770      	bx	lr

00003964 <vListInsert>:
vListInsert():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:106
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
    3964:	680a      	ldr	r2, [r1, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:122
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
    3966:	1c53      	adds	r3, r2, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:104
{
    3968:	b530      	push	{r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:122
	if( xValueOfInsertion == portMAX_DELAY )
    396a:	d10a      	bne.n	3982 <vListInsert+0x1e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:124
	{
		pxIterator = pxList->xListEnd.pxPrevious;
    396c:	6903      	ldr	r3, [r0, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:157
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
    396e:	685a      	ldr	r2, [r3, #4]
    3970:	604a      	str	r2, [r1, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:158
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
    3972:	6091      	str	r1, [r2, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:159
	pxNewListItem->pxPrevious = pxIterator;
    3974:	608b      	str	r3, [r1, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:160
	pxIterator->pxNext = pxNewListItem;
    3976:	6059      	str	r1, [r3, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:166

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
    3978:	6803      	ldr	r3, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:164
	pxNewListItem->pxContainer = pxList;
    397a:	6108      	str	r0, [r1, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:166
	( pxList->uxNumberOfItems )++;
    397c:	3301      	adds	r3, #1
    397e:	6003      	str	r3, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:167
}
    3980:	bd30      	pop	{r4, r5, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:150
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
    3982:	f100 0308 	add.w	r3, r0, #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:150 (discriminator 1)
    3986:	685c      	ldr	r4, [r3, #4]
    3988:	6825      	ldr	r5, [r4, #0]
    398a:	4295      	cmp	r5, r2
    398c:	d8ef      	bhi.n	396e <vListInsert+0xa>
    398e:	4623      	mov	r3, r4
    3990:	e7f9      	b.n	3986 <vListInsert+0x22>

00003992 <uxListRemove>:
uxListRemove():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:176
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
    3992:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:174
List_t * const pxList = pxItemToRemove->pxContainer;
    3996:	6903      	ldr	r3, [r0, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:176
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
    3998:	608a      	str	r2, [r1, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:177
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
    399a:	6051      	str	r1, [r2, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:183

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
    399c:	6859      	ldr	r1, [r3, #4]
    399e:	4281      	cmp	r1, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:185
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
    39a0:	bf08      	it	eq
    39a2:	605a      	streq	r2, [r3, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:192
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
    39a4:	2200      	movs	r2, #0
    39a6:	6102      	str	r2, [r0, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:193
	( pxList->uxNumberOfItems )--;
    39a8:	681a      	ldr	r2, [r3, #0]
    39aa:	3a01      	subs	r2, #1
    39ac:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:195

	return pxList->uxNumberOfItems;
    39ae:	6818      	ldr	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:196
}
    39b0:	4770      	bx	lr

000039b2 <prvIsQueueEmpty>:
prvIsQueueEmpty():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2288
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
    39b2:	b510      	push	{r4, lr}
    39b4:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2291
BaseType_t xReturn;

	taskENTER_CRITICAL();
    39b6:	f7ff fda5 	bl	3504 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2293
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
    39ba:	6ba4      	ldr	r4, [r4, #56]	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2302
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
    39bc:	f7ff fdc4 	bl	3548 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2305

	return xReturn;
}
    39c0:	fab4 f084 	clz	r0, r4
    39c4:	0940      	lsrs	r0, r0, #5
    39c6:	bd10      	pop	{r4, pc}

000039c8 <prvCopyDataToQueue>:
prvCopyDataToQueue():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2071
{
    39c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    39ca:	4615      	mov	r5, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2079
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
    39cc:	6c02      	ldr	r2, [r0, #64]	; 0x40
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2077
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
    39ce:	6b86      	ldr	r6, [r0, #56]	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2071
{
    39d0:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2079
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
    39d2:	b952      	cbnz	r2, 39ea <prvCopyDataToQueue+0x22>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2083
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
    39d4:	6807      	ldr	r7, [r0, #0]
    39d6:	bb47      	cbnz	r7, 3a2a <prvCopyDataToQueue+0x62>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2086
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
    39d8:	6880      	ldr	r0, [r0, #8]
    39da:	f001 faff 	bl	4fdc <xTaskPriorityDisinherit>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2087
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
    39de:	60a7      	str	r7, [r4, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2086
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
    39e0:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2143
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
    39e2:	3601      	adds	r6, #1
    39e4:	63a6      	str	r6, [r4, #56]	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2146
}
    39e6:	4628      	mov	r0, r5
    39e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2096
	else if( xPosition == queueSEND_TO_BACK )
    39ea:	b965      	cbnz	r5, 3a06 <prvCopyDataToQueue+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2098
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
    39ec:	6840      	ldr	r0, [r0, #4]
    39ee:	f002 ff0d 	bl	680c <memcpy>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2099
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
    39f2:	6863      	ldr	r3, [r4, #4]
    39f4:	6c22      	ldr	r2, [r4, #64]	; 0x40
    39f6:	4413      	add	r3, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2100
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
    39f8:	68a2      	ldr	r2, [r4, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2099
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
    39fa:	6063      	str	r3, [r4, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2100
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
    39fc:	4293      	cmp	r3, r2
    39fe:	d3f0      	bcc.n	39e2 <prvCopyDataToQueue+0x1a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2102
			pxQueue->pcWriteTo = pxQueue->pcHead;
    3a00:	6823      	ldr	r3, [r4, #0]
    3a02:	6063      	str	r3, [r4, #4]
    3a04:	e7ed      	b.n	39e2 <prvCopyDataToQueue+0x1a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2111
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
    3a06:	68c0      	ldr	r0, [r0, #12]
    3a08:	f002 ff00 	bl	680c <memcpy>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2112
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
    3a0c:	6c23      	ldr	r3, [r4, #64]	; 0x40
    3a0e:	68e2      	ldr	r2, [r4, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2113
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
    3a10:	6821      	ldr	r1, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2112
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
    3a12:	425b      	negs	r3, r3
    3a14:	441a      	add	r2, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2113
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
    3a16:	428a      	cmp	r2, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2112
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
    3a18:	60e2      	str	r2, [r4, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2115
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
    3a1a:	bf3e      	ittt	cc
    3a1c:	68a2      	ldrcc	r2, [r4, #8]
    3a1e:	189b      	addcc	r3, r3, r2
    3a20:	60e3      	strcc	r3, [r4, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2122
		if( xPosition == queueOVERWRITE )
    3a22:	2d02      	cmp	r5, #2
    3a24:	d101      	bne.n	3a2a <prvCopyDataToQueue+0x62>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2124
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
    3a26:	b116      	cbz	r6, 3a2e <prvCopyDataToQueue+0x66>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2130
				--uxMessagesWaiting;
    3a28:	3e01      	subs	r6, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2072
BaseType_t xReturn = pdFALSE;
    3a2a:	2500      	movs	r5, #0
    3a2c:	e7d9      	b.n	39e2 <prvCopyDataToQueue+0x1a>
    3a2e:	4635      	mov	r5, r6
    3a30:	e7d7      	b.n	39e2 <prvCopyDataToQueue+0x1a>

00003a32 <prvCopyDataFromQueue>:
prvCopyDataFromQueue():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2150
{
    3a32:	4603      	mov	r3, r0
    3a34:	b410      	push	{r4}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2151
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
    3a36:	6c1a      	ldr	r2, [r3, #64]	; 0x40
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2150
{
    3a38:	4608      	mov	r0, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2151
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
    3a3a:	b162      	cbz	r2, 3a56 <prvCopyDataFromQueue+0x24>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2153
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
    3a3c:	68d9      	ldr	r1, [r3, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2154
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
    3a3e:	689c      	ldr	r4, [r3, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2153
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
    3a40:	4411      	add	r1, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2154
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
    3a42:	42a1      	cmp	r1, r4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2153
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
    3a44:	60d9      	str	r1, [r3, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2156
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
    3a46:	bf24      	itt	cs
    3a48:	6819      	ldrcs	r1, [r3, #0]
    3a4a:	60d9      	strcs	r1, [r3, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2162
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
    3a4c:	68d9      	ldr	r1, [r3, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2164
}
    3a4e:	f85d 4b04 	ldr.w	r4, [sp], #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2162
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
    3a52:	f002 bedb 	b.w	680c <memcpy>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2164
}
    3a56:	f85d 4b04 	ldr.w	r4, [sp], #4
    3a5a:	4770      	bx	lr

00003a5c <prvUnlockQueue>:
prvUnlockQueue():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2168
{
    3a5c:	b570      	push	{r4, r5, r6, lr}
    3a5e:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2175
	taskENTER_CRITICAL();
    3a60:	f7ff fd50 	bl	3504 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2177
		int8_t cTxLock = pxQueue->cTxLock;
    3a64:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2230
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
    3a68:	f104 0624 	add.w	r6, r4, #36	; 0x24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2177
		int8_t cTxLock = pxQueue->cTxLock;
    3a6c:	b26d      	sxtb	r5, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2180
		while( cTxLock > queueLOCKED_UNMODIFIED )
    3a6e:	2d00      	cmp	r5, #0
    3a70:	dc14      	bgt.n	3a9c <prvUnlockQueue+0x40>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2251
		pxQueue->cTxLock = queueUNLOCKED;
    3a72:	23ff      	movs	r3, #255	; 0xff
    3a74:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2253
	taskEXIT_CRITICAL();
    3a78:	f7ff fd66 	bl	3548 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2256
	taskENTER_CRITICAL();
    3a7c:	f7ff fd42 	bl	3504 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2258
		int8_t cRxLock = pxQueue->cRxLock;
    3a80:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2264
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    3a84:	f104 0610 	add.w	r6, r4, #16
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2258
		int8_t cRxLock = pxQueue->cRxLock;
    3a88:	b26d      	sxtb	r5, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2260
		while( cRxLock > queueLOCKED_UNMODIFIED )
    3a8a:	2d00      	cmp	r5, #0
    3a8c:	dc12      	bgt.n	3ab4 <prvUnlockQueue+0x58>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2281
		pxQueue->cRxLock = queueUNLOCKED;
    3a8e:	23ff      	movs	r3, #255	; 0xff
    3a90:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2284
}
    3a94:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2283
	taskEXIT_CRITICAL();
    3a98:	f7ff bd56 	b.w	3548 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2228
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
    3a9c:	6a63      	ldr	r3, [r4, #36]	; 0x24
    3a9e:	2b00      	cmp	r3, #0
    3aa0:	d0e7      	beq.n	3a72 <prvUnlockQueue+0x16>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2230
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
    3aa2:	4630      	mov	r0, r6
    3aa4:	f001 f8b2 	bl	4c0c <xTaskRemoveFromEventList>
    3aa8:	b108      	cbz	r0, 3aae <prvUnlockQueue+0x52>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2234
						vTaskMissedYield();
    3aaa:	f001 f977 	bl	4d9c <vTaskMissedYield>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2248
			--cTxLock;
    3aae:	3d01      	subs	r5, #1
    3ab0:	b26d      	sxtb	r5, r5
    3ab2:	e7dc      	b.n	3a6e <prvUnlockQueue+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2262
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
    3ab4:	6923      	ldr	r3, [r4, #16]
    3ab6:	2b00      	cmp	r3, #0
    3ab8:	d0e9      	beq.n	3a8e <prvUnlockQueue+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2264
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    3aba:	4630      	mov	r0, r6
    3abc:	f001 f8a6 	bl	4c0c <xTaskRemoveFromEventList>
    3ac0:	b108      	cbz	r0, 3ac6 <prvUnlockQueue+0x6a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2266
					vTaskMissedYield();
    3ac2:	f001 f96b 	bl	4d9c <vTaskMissedYield>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2273
				--cRxLock;
    3ac6:	3d01      	subs	r5, #1
    3ac8:	b26d      	sxtb	r5, r5
    3aca:	e7de      	b.n	3a8a <prvUnlockQueue+0x2e>

00003acc <xQueueGenericReset>:
xQueueGenericReset():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:256
{
    3acc:	b538      	push	{r3, r4, r5, lr}
    3ace:	460d      	mov	r5, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:259
	configASSERT( pxQueue );
    3ad0:	4604      	mov	r4, r0
    3ad2:	b928      	cbnz	r0, 3ae0 <xQueueGenericReset+0x14>
    3ad4:	491a      	ldr	r1, [pc, #104]	; (3b40 <xQueueGenericReset+0x74>)
    3ad6:	f240 1003 	movw	r0, #259	; 0x103
    3ada:	f7ff f96f 	bl	2dbc <configASSERT_callback>
    3ade:	e7fe      	b.n	3ade <xQueueGenericReset+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:261
	taskENTER_CRITICAL();
    3ae0:	f7ff fd10 	bl	3504 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:263
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
    3ae4:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	; 0x3c
    3ae8:	6822      	ldr	r2, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:265
		pxQueue->pcWriteTo = pxQueue->pcHead;
    3aea:	6062      	str	r2, [r4, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:263
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
    3aec:	4343      	muls	r3, r0
    3aee:	18d1      	adds	r1, r2, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:266
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
    3af0:	1a1b      	subs	r3, r3, r0
    3af2:	4413      	add	r3, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:263
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
    3af4:	60a1      	str	r1, [r4, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:266
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
    3af6:	60e3      	str	r3, [r4, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:264
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
    3af8:	2100      	movs	r1, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:267
		pxQueue->cRxLock = queueUNLOCKED;
    3afa:	23ff      	movs	r3, #255	; 0xff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:264
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
    3afc:	63a1      	str	r1, [r4, #56]	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:267
		pxQueue->cRxLock = queueUNLOCKED;
    3afe:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:268
		pxQueue->cTxLock = queueUNLOCKED;
    3b02:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:270
		if( xNewQueue == pdFALSE )
    3b06:	b995      	cbnz	r5, 3b2e <xQueueGenericReset+0x62>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:277
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
    3b08:	6923      	ldr	r3, [r4, #16]
    3b0a:	b163      	cbz	r3, 3b26 <xQueueGenericReset+0x5a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:279
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    3b0c:	f104 0010 	add.w	r0, r4, #16
    3b10:	f001 f87c 	bl	4c0c <xTaskRemoveFromEventList>
    3b14:	b138      	cbz	r0, 3b26 <xQueueGenericReset+0x5a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:281
					queueYIELD_IF_USING_PREEMPTION();
    3b16:	4b0b      	ldr	r3, [pc, #44]	; (3b44 <xQueueGenericReset+0x78>)
    3b18:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    3b1c:	601a      	str	r2, [r3, #0]
    3b1e:	f3bf 8f4f 	dsb	sy
    3b22:	f3bf 8f6f 	isb	sy
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:300
	taskEXIT_CRITICAL();
    3b26:	f7ff fd0f 	bl	3548 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:305
}
    3b2a:	2001      	movs	r0, #1
    3b2c:	bd38      	pop	{r3, r4, r5, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:296
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
    3b2e:	f104 0010 	add.w	r0, r4, #16
    3b32:	f7ff fefd 	bl	3930 <vListInitialise>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:297
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
    3b36:	f104 0024 	add.w	r0, r4, #36	; 0x24
    3b3a:	f7ff fef9 	bl	3930 <vListInitialise>
    3b3e:	e7f2      	b.n	3b26 <xQueueGenericReset+0x5a>
    3b40:	0000d49a 	.word	0x0000d49a
    3b44:	e000ed04 	.word	0xe000ed04

00003b48 <xQueueGenericCreateStatic>:
xQueueGenericCreateStatic():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:311
	{
    3b48:	b513      	push	{r0, r1, r4, lr}
    3b4a:	461c      	mov	r4, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:314
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
    3b4c:	b928      	cbnz	r0, 3b5a <xQueueGenericCreateStatic+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:314 (discriminator 1)
    3b4e:	491e      	ldr	r1, [pc, #120]	; (3bc8 <xQueueGenericCreateStatic+0x80>)
    3b50:	f44f 709d 	mov.w	r0, #314	; 0x13a
    3b54:	f7ff f932 	bl	2dbc <configASSERT_callback>
    3b58:	e7fe      	b.n	3b58 <xQueueGenericCreateStatic+0x10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:318
		configASSERT( pxStaticQueue != NULL );
    3b5a:	b92b      	cbnz	r3, 3b68 <xQueueGenericCreateStatic+0x20>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:318 (discriminator 1)
    3b5c:	491b      	ldr	r1, [pc, #108]	; (3bcc <xQueueGenericCreateStatic+0x84>)
    3b5e:	f44f 709f 	mov.w	r0, #318	; 0x13e
    3b62:	f7ff f92b 	bl	2dbc <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:318 (discriminator 2)
    3b66:	e7fe      	b.n	3b66 <xQueueGenericCreateStatic+0x1e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:322
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
    3b68:	b132      	cbz	r2, 3b78 <xQueueGenericCreateStatic+0x30>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:322 (discriminator 1)
    3b6a:	b961      	cbnz	r1, 3b86 <xQueueGenericCreateStatic+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:322 (discriminator 2)
    3b6c:	4918      	ldr	r1, [pc, #96]	; (3bd0 <xQueueGenericCreateStatic+0x88>)
    3b6e:	f44f 70a1 	mov.w	r0, #322	; 0x142
    3b72:	f7ff f923 	bl	2dbc <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:322 (discriminator 3)
    3b76:	e7fe      	b.n	3b76 <xQueueGenericCreateStatic+0x2e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:323 (discriminator 1)
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
    3b78:	b129      	cbz	r1, 3b86 <xQueueGenericCreateStatic+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:323
    3b7a:	4916      	ldr	r1, [pc, #88]	; (3bd4 <xQueueGenericCreateStatic+0x8c>)
    3b7c:	f240 1043 	movw	r0, #323	; 0x143
    3b80:	f7ff f91c 	bl	2dbc <configASSERT_callback>
    3b84:	e7fe      	b.n	3b84 <xQueueGenericCreateStatic+0x3c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:330
			volatile size_t xSize = sizeof( StaticQueue_t );
    3b86:	2350      	movs	r3, #80	; 0x50
    3b88:	9301      	str	r3, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:331
			configASSERT( xSize == sizeof( Queue_t ) );
    3b8a:	9b01      	ldr	r3, [sp, #4]
    3b8c:	2b50      	cmp	r3, #80	; 0x50
    3b8e:	d005      	beq.n	3b9c <xQueueGenericCreateStatic+0x54>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:331 (discriminator 1)
    3b90:	4911      	ldr	r1, [pc, #68]	; (3bd8 <xQueueGenericCreateStatic+0x90>)
    3b92:	f240 104b 	movw	r0, #331	; 0x14b
    3b96:	f7ff f911 	bl	2dbc <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:331 (discriminator 5)
    3b9a:	e7fe      	b.n	3b9a <xQueueGenericCreateStatic+0x52>
prvInitialiseNewQueue():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:435
	if( uxItemSize == ( UBaseType_t ) 0 )
    3b9c:	2900      	cmp	r1, #0
    3b9e:	bf08      	it	eq
    3ba0:	4622      	moveq	r2, r4
xQueueGenericCreateStatic():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:332
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
    3ba2:	9b01      	ldr	r3, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:348
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
    3ba4:	6022      	str	r2, [r4, #0]
    3ba6:	2301      	movs	r3, #1
prvInitialiseNewQueue():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:452
	pxNewQueue->uxItemSize = uxItemSize;
    3ba8:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
xQueueGenericCreateStatic():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:348
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
    3bac:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
prvInitialiseNewQueue():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:453
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
    3bb0:	4619      	mov	r1, r3
    3bb2:	4620      	mov	r0, r4
    3bb4:	f7ff ff8a 	bl	3acc <xQueueGenericReset>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:457
		pxNewQueue->ucQueueType = ucQueueType;
    3bb8:	f89d 3010 	ldrb.w	r3, [sp, #16]
    3bbc:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
xQueueGenericCreateStatic():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:361
	}
    3bc0:	4620      	mov	r0, r4
    3bc2:	b002      	add	sp, #8
    3bc4:	bd10      	pop	{r4, pc}
    3bc6:	bf00      	nop
    3bc8:	0000d3d7 	.word	0x0000d3d7
    3bcc:	0000d3f9 	.word	0x0000d3f9
    3bd0:	0000d40f 	.word	0x0000d40f
    3bd4:	0000d447 	.word	0x0000d447
    3bd8:	0000d47f 	.word	0x0000d47f

00003bdc <xQueueGenericCreate>:
xQueueGenericCreate():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:369
	{
    3bdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3bde:	460d      	mov	r5, r1
    3be0:	4617      	mov	r7, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:374
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
    3be2:	4606      	mov	r6, r0
    3be4:	b928      	cbnz	r0, 3bf2 <xQueueGenericCreate+0x16>
    3be6:	490f      	ldr	r1, [pc, #60]	; (3c24 <xQueueGenericCreate+0x48>)
    3be8:	f44f 70bb 	mov.w	r0, #374	; 0x176
    3bec:	f7ff f8e6 	bl	2dbc <configASSERT_callback>
    3bf0:	e7fe      	b.n	3bf0 <xQueueGenericCreate+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:385
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    3bf2:	4348      	muls	r0, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:397
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
    3bf4:	3050      	adds	r0, #80	; 0x50
    3bf6:	f7ff fc02 	bl	33fe <pvPortMalloc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:399
		if( pxNewQueue != NULL )
    3bfa:	4604      	mov	r4, r0
    3bfc:	b170      	cbz	r0, 3c1c <xQueueGenericCreate+0x40>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:411
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
    3bfe:	2300      	movs	r3, #0
    3c00:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
prvInitialiseNewQueue():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:435
	if( uxItemSize == ( UBaseType_t ) 0 )
    3c04:	b165      	cbz	r5, 3c20 <xQueueGenericCreate+0x44>
xQueueGenericCreate():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:404
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
    3c06:	f100 0350 	add.w	r3, r0, #80	; 0x50
prvInitialiseNewQueue():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:446
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
    3c0a:	6023      	str	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:452
	pxNewQueue->uxItemSize = uxItemSize;
    3c0c:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:453
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
    3c10:	2101      	movs	r1, #1
    3c12:	4620      	mov	r0, r4
    3c14:	f7ff ff5a 	bl	3acc <xQueueGenericReset>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:457
		pxNewQueue->ucQueueType = ucQueueType;
    3c18:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
xQueueGenericCreate():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:424
	}
    3c1c:	4620      	mov	r0, r4
    3c1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
prvInitialiseNewQueue():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:435
	if( uxItemSize == ( UBaseType_t ) 0 )
    3c20:	4603      	mov	r3, r0
    3c22:	e7f2      	b.n	3c0a <xQueueGenericCreate+0x2e>
    3c24:	0000d3d7 	.word	0x0000d3d7

00003c28 <xQueueGenericSend>:
xQueueGenericSend():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:748
{
    3c28:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
    3c2c:	4688      	mov	r8, r1
    3c2e:	9201      	str	r2, [sp, #4]
    3c30:	461f      	mov	r7, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:753
	configASSERT( pxQueue );
    3c32:	4604      	mov	r4, r0
    3c34:	b928      	cbnz	r0, 3c42 <xQueueGenericSend+0x1a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:753 (discriminator 1)
    3c36:	494e      	ldr	r1, [pc, #312]	; (3d70 <xQueueGenericSend+0x148>)
    3c38:	f240 20f1 	movw	r0, #753	; 0x2f1
    3c3c:	f7ff f8be 	bl	2dbc <configASSERT_callback>
    3c40:	e7fe      	b.n	3c40 <xQueueGenericSend+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:754
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
    3c42:	b939      	cbnz	r1, 3c54 <xQueueGenericSend+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:754 (discriminator 1)
    3c44:	6c03      	ldr	r3, [r0, #64]	; 0x40
    3c46:	b12b      	cbz	r3, 3c54 <xQueueGenericSend+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:754 (discriminator 2)
    3c48:	494a      	ldr	r1, [pc, #296]	; (3d74 <xQueueGenericSend+0x14c>)
    3c4a:	f240 20f2 	movw	r0, #754	; 0x2f2
    3c4e:	f7ff f8b5 	bl	2dbc <configASSERT_callback>
    3c52:	e7fe      	b.n	3c52 <xQueueGenericSend+0x2a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:755
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
    3c54:	2f02      	cmp	r7, #2
    3c56:	d108      	bne.n	3c6a <xQueueGenericSend+0x42>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:755 (discriminator 1)
    3c58:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    3c5a:	2b01      	cmp	r3, #1
    3c5c:	d005      	beq.n	3c6a <xQueueGenericSend+0x42>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:755 (discriminator 2)
    3c5e:	4946      	ldr	r1, [pc, #280]	; (3d78 <xQueueGenericSend+0x150>)
    3c60:	f240 20f3 	movw	r0, #755	; 0x2f3
    3c64:	f7ff f8aa 	bl	2dbc <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:755 (discriminator 3)
    3c68:	e7fe      	b.n	3c68 <xQueueGenericSend+0x40>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:758
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
    3c6a:	f001 f955 	bl	4f18 <xTaskGetSchedulerState>
    3c6e:	4606      	mov	r6, r0
    3c70:	b938      	cbnz	r0, 3c82 <xQueueGenericSend+0x5a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:758 (discriminator 1)
    3c72:	9b01      	ldr	r3, [sp, #4]
    3c74:	b133      	cbz	r3, 3c84 <xQueueGenericSend+0x5c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:758 (discriminator 2)
    3c76:	4941      	ldr	r1, [pc, #260]	; (3d7c <xQueueGenericSend+0x154>)
    3c78:	f240 20f6 	movw	r0, #758	; 0x2f6
    3c7c:	f7ff f89e 	bl	2dbc <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:758 (discriminator 4)
    3c80:	e7fe      	b.n	3c80 <xQueueGenericSend+0x58>
    3c82:	2600      	movs	r6, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:910
		prvLockQueue( pxQueue );
    3c84:	f04f 0900 	mov.w	r9, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:934
					portYIELD_WITHIN_API();
    3c88:	f8df a0f4 	ldr.w	sl, [pc, #244]	; 3d80 <xQueueGenericSend+0x158>
    3c8c:	e037      	b.n	3cfe <xQueueGenericSend+0xd6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:879
				if( xTicksToWait == ( TickType_t ) 0 )
    3c8e:	9d01      	ldr	r5, [sp, #4]
    3c90:	b91d      	cbnz	r5, 3c9a <xQueueGenericSend+0x72>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:883
					taskEXIT_CRITICAL();
    3c92:	f7ff fc59 	bl	3548 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:951
			return errQUEUE_FULL;
    3c96:	2000      	movs	r0, #0
    3c98:	e050      	b.n	3d3c <xQueueGenericSend+0x114>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:890
				else if( xEntryTimeSet == pdFALSE )
    3c9a:	b916      	cbnz	r6, 3ca2 <xQueueGenericSend+0x7a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:894
					vTaskInternalSetTimeOutState( &xTimeOut );
    3c9c:	a802      	add	r0, sp, #8
    3c9e:	f001 f837 	bl	4d10 <vTaskInternalSetTimeOutState>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:904
		taskEXIT_CRITICAL();
    3ca2:	f7ff fc51 	bl	3548 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:909
		vTaskSuspendAll();
    3ca6:	f000 fd6d 	bl	4784 <vTaskSuspendAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:910
		prvLockQueue( pxQueue );
    3caa:	f7ff fc2b 	bl	3504 <vPortEnterCritical>
    3cae:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
    3cb2:	2bff      	cmp	r3, #255	; 0xff
    3cb4:	bf08      	it	eq
    3cb6:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
    3cba:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
    3cbe:	2bff      	cmp	r3, #255	; 0xff
    3cc0:	bf08      	it	eq
    3cc2:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
    3cc6:	f7ff fc3f 	bl	3548 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:913
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
    3cca:	a901      	add	r1, sp, #4
    3ccc:	a802      	add	r0, sp, #8
    3cce:	f001 f82b 	bl	4d28 <xTaskCheckForTimeOut>
    3cd2:	2800      	cmp	r0, #0
    3cd4:	d146      	bne.n	3d64 <xQueueGenericSend+0x13c>
prvIsQueueFull():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2331

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
    3cd6:	f7ff fc15 	bl	3504 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2333
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
    3cda:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    3cdc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    3cde:	429a      	cmp	r2, r3
    3ce0:	d12f      	bne.n	3d42 <xQueueGenericSend+0x11a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2342
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
    3ce2:	f7ff fc31 	bl	3548 <vPortExitCritical>
xQueueGenericSend():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:918
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
    3ce6:	9901      	ldr	r1, [sp, #4]
    3ce8:	f104 0010 	add.w	r0, r4, #16
    3cec:	f000 ff4c 	bl	4b88 <vTaskPlaceOnEventList>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:925
				prvUnlockQueue( pxQueue );
    3cf0:	4620      	mov	r0, r4
    3cf2:	f7ff feb3 	bl	3a5c <prvUnlockQueue>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:932
				if( xTaskResumeAll() == pdFALSE )
    3cf6:	f000 fde5 	bl	48c4 <xTaskResumeAll>
    3cfa:	b350      	cbz	r0, 3d52 <xQueueGenericSend+0x12a>
    3cfc:	2601      	movs	r6, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:768
		taskENTER_CRITICAL();
    3cfe:	f7ff fc01 	bl	3504 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:774
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
    3d02:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    3d04:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    3d06:	429a      	cmp	r2, r3
    3d08:	d301      	bcc.n	3d0e <xQueueGenericSend+0xe6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:774 (discriminator 1)
    3d0a:	2f02      	cmp	r7, #2
    3d0c:	d1bf      	bne.n	3c8e <xQueueGenericSend+0x66>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:840
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
    3d0e:	463a      	mov	r2, r7
    3d10:	4641      	mov	r1, r8
    3d12:	4620      	mov	r0, r4
    3d14:	f7ff fe58 	bl	39c8 <prvCopyDataToQueue>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:844
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
    3d18:	6a63      	ldr	r3, [r4, #36]	; 0x24
    3d1a:	b11b      	cbz	r3, 3d24 <xQueueGenericSend+0xfc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:846
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
    3d1c:	f104 0024 	add.w	r0, r4, #36	; 0x24
    3d20:	f000 ff74 	bl	4c0c <xTaskRemoveFromEventList>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:859
					else if( xYieldRequired != pdFALSE )
    3d24:	b138      	cbz	r0, 3d36 <xQueueGenericSend+0x10e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:865
						queueYIELD_IF_USING_PREEMPTION();
    3d26:	4b16      	ldr	r3, [pc, #88]	; (3d80 <xQueueGenericSend+0x158>)
    3d28:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    3d2c:	601a      	str	r2, [r3, #0]
    3d2e:	f3bf 8f4f 	dsb	sy
    3d32:	f3bf 8f6f 	isb	sy
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:874
				taskEXIT_CRITICAL();
    3d36:	f7ff fc07 	bl	3548 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:875
				return pdPASS;
    3d3a:	2001      	movs	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:954
}
    3d3c:	b004      	add	sp, #16
    3d3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
prvIsQueueFull():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2342
	taskEXIT_CRITICAL();
    3d42:	f7ff fc01 	bl	3548 <vPortExitCritical>
xQueueGenericSend():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:940
				prvUnlockQueue( pxQueue );
    3d46:	4620      	mov	r0, r4
    3d48:	f7ff fe88 	bl	3a5c <prvUnlockQueue>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:941
				( void ) xTaskResumeAll();
    3d4c:	f000 fdba 	bl	48c4 <xTaskResumeAll>
    3d50:	e7d4      	b.n	3cfc <xQueueGenericSend+0xd4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:934
					portYIELD_WITHIN_API();
    3d52:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
    3d56:	f8ca 3000 	str.w	r3, [sl]
    3d5a:	f3bf 8f4f 	dsb	sy
    3d5e:	f3bf 8f6f 	isb	sy
    3d62:	e7cb      	b.n	3cfc <xQueueGenericSend+0xd4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:947
			prvUnlockQueue( pxQueue );
    3d64:	4620      	mov	r0, r4
    3d66:	f7ff fe79 	bl	3a5c <prvUnlockQueue>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:948
			( void ) xTaskResumeAll();
    3d6a:	f000 fdab 	bl	48c4 <xTaskResumeAll>
    3d6e:	e792      	b.n	3c96 <xQueueGenericSend+0x6e>
    3d70:	0000d49a 	.word	0x0000d49a
    3d74:	0000d4a2 	.word	0x0000d4a2
    3d78:	0000d4f2 	.word	0x0000d4f2
    3d7c:	0000d381 	.word	0x0000d381
    3d80:	e000ed04 	.word	0xe000ed04

00003d84 <xQueueCreateMutexStatic>:
xQueueCreateMutexStatic():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:520
	{
    3d84:	b513      	push	{r0, r1, r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:528
		xNewQueue = xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQueue, ucQueueType );
    3d86:	2200      	movs	r2, #0
    3d88:	9000      	str	r0, [sp, #0]
    3d8a:	460b      	mov	r3, r1
    3d8c:	2001      	movs	r0, #1
    3d8e:	4611      	mov	r1, r2
    3d90:	f7ff feda 	bl	3b48 <xQueueGenericCreateStatic>
prvInitialiseMutex():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:475
		if( pxNewQueue != NULL )
    3d94:	4604      	mov	r4, r0
    3d96:	b138      	cbz	r0, 3da8 <xQueueCreateMutexStatic+0x24>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:481
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
    3d98:	2300      	movs	r3, #0
    3d9a:	6083      	str	r3, [r0, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:482
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
    3d9c:	6003      	str	r3, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:485
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
    3d9e:	60c3      	str	r3, [r0, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:490
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
    3da0:	461a      	mov	r2, r3
    3da2:	4619      	mov	r1, r3
    3da4:	f7ff ff40 	bl	3c28 <xQueueGenericSend>
xQueueCreateMutexStatic():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:532
	}
    3da8:	4620      	mov	r0, r4
    3daa:	b002      	add	sp, #8
    3dac:	bd10      	pop	{r4, pc}
    3dae:	Address 0x0000000000003dae is out of bounds.


00003db0 <xQueueGenericSendFromISR>:
xQueueGenericSendFromISR():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:958
{
    3db0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    3db4:	4689      	mov	r9, r1
    3db6:	4690      	mov	r8, r2
    3db8:	461f      	mov	r7, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:963
	configASSERT( pxQueue );
    3dba:	4604      	mov	r4, r0
    3dbc:	b928      	cbnz	r0, 3dca <xQueueGenericSendFromISR+0x1a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:963 (discriminator 1)
    3dbe:	4928      	ldr	r1, [pc, #160]	; (3e60 <xQueueGenericSendFromISR+0xb0>)
    3dc0:	f240 30c3 	movw	r0, #963	; 0x3c3
    3dc4:	f7fe fffa 	bl	2dbc <configASSERT_callback>
    3dc8:	e7fe      	b.n	3dc8 <xQueueGenericSendFromISR+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:964
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
    3dca:	b939      	cbnz	r1, 3ddc <xQueueGenericSendFromISR+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:964 (discriminator 1)
    3dcc:	6c03      	ldr	r3, [r0, #64]	; 0x40
    3dce:	b12b      	cbz	r3, 3ddc <xQueueGenericSendFromISR+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:964 (discriminator 2)
    3dd0:	4924      	ldr	r1, [pc, #144]	; (3e64 <xQueueGenericSendFromISR+0xb4>)
    3dd2:	f44f 7071 	mov.w	r0, #964	; 0x3c4
    3dd6:	f7fe fff1 	bl	2dbc <configASSERT_callback>
    3dda:	e7fe      	b.n	3dda <xQueueGenericSendFromISR+0x2a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:965
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
    3ddc:	2f02      	cmp	r7, #2
    3dde:	d108      	bne.n	3df2 <xQueueGenericSendFromISR+0x42>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:965 (discriminator 1)
    3de0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    3de2:	2b01      	cmp	r3, #1
    3de4:	d005      	beq.n	3df2 <xQueueGenericSendFromISR+0x42>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:965 (discriminator 2)
    3de6:	4920      	ldr	r1, [pc, #128]	; (3e68 <xQueueGenericSendFromISR+0xb8>)
    3de8:	f240 30c5 	movw	r0, #965	; 0x3c5
    3dec:	f7fe ffe6 	bl	2dbc <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:965 (discriminator 3)
    3df0:	e7fe      	b.n	3df0 <xQueueGenericSendFromISR+0x40>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:981
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
    3df2:	f7ff fc9d 	bl	3730 <vPortValidateInterruptPriority>
ulPortRaiseBASEPRI():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:211
	__asm volatile
    3df6:	f3ef 8611 	mrs	r6, BASEPRI
    3dfa:	f04f 0318 	mov.w	r3, #24
    3dfe:	f383 8811 	msr	BASEPRI, r3
    3e02:	f3bf 8f6f 	isb	sy
    3e06:	f3bf 8f4f 	dsb	sy
xQueueGenericSendFromISR():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:990
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
    3e0a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    3e0c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    3e0e:	429a      	cmp	r2, r3
    3e10:	d301      	bcc.n	3e16 <xQueueGenericSendFromISR+0x66>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:990 (discriminator 1)
    3e12:	2f02      	cmp	r7, #2
    3e14:	d122      	bne.n	3e5c <xQueueGenericSendFromISR+0xac>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:992
			const int8_t cTxLock = pxQueue->cTxLock;
    3e16:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1001
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
    3e1a:	463a      	mov	r2, r7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:992
			const int8_t cTxLock = pxQueue->cTxLock;
    3e1c:	b26d      	sxtb	r5, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1001
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
    3e1e:	4649      	mov	r1, r9
    3e20:	4620      	mov	r0, r4
    3e22:	f7ff fdd1 	bl	39c8 <prvCopyDataToQueue>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1005
			if( cTxLock == queueUNLOCKED )
    3e26:	1c6b      	adds	r3, r5, #1
    3e28:	d113      	bne.n	3e52 <xQueueGenericSendFromISR+0xa2>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1060
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
    3e2a:	6a63      	ldr	r3, [r4, #36]	; 0x24
    3e2c:	b90b      	cbnz	r3, 3e32 <xQueueGenericSendFromISR+0x82>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1094
			xReturn = pdPASS;
    3e2e:	2001      	movs	r0, #1
    3e30:	e00b      	b.n	3e4a <xQueueGenericSendFromISR+0x9a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1062
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
    3e32:	f104 0024 	add.w	r0, r4, #36	; 0x24
    3e36:	f000 fee9 	bl	4c0c <xTaskRemoveFromEventList>
    3e3a:	2800      	cmp	r0, #0
    3e3c:	d0f7      	beq.n	3e2e <xQueueGenericSendFromISR+0x7e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1066
							if( pxHigherPriorityTaskWoken != NULL )
    3e3e:	f1b8 0f00 	cmp.w	r8, #0
    3e42:	d0f4      	beq.n	3e2e <xQueueGenericSendFromISR+0x7e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1068
								*pxHigherPriorityTaskWoken = pdTRUE;
    3e44:	2001      	movs	r0, #1
    3e46:	f8c8 0000 	str.w	r0, [r8]
vPortSetBASEPRI():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
	__asm volatile
    3e4a:	f386 8811 	msr	BASEPRI, r6
xQueueGenericSendFromISR():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1105
}
    3e4e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1091
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
    3e52:	3501      	adds	r5, #1
    3e54:	b26d      	sxtb	r5, r5
    3e56:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
    3e5a:	e7e8      	b.n	3e2e <xQueueGenericSendFromISR+0x7e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1099
			xReturn = errQUEUE_FULL;
    3e5c:	2000      	movs	r0, #0
    3e5e:	e7f4      	b.n	3e4a <xQueueGenericSendFromISR+0x9a>
    3e60:	0000d49a 	.word	0x0000d49a
    3e64:	0000d4a2 	.word	0x0000d4a2
    3e68:	0000d4f2 	.word	0x0000d4f2

00003e6c <xQueueGiveFromISR>:
xQueueGiveFromISR():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1109
{
    3e6c:	b570      	push	{r4, r5, r6, lr}
    3e6e:	460d      	mov	r5, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1120
	configASSERT( pxQueue );
    3e70:	4604      	mov	r4, r0
    3e72:	b928      	cbnz	r0, 3e80 <xQueueGiveFromISR+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1120 (discriminator 1)
    3e74:	4923      	ldr	r1, [pc, #140]	; (3f04 <xQueueGiveFromISR+0x98>)
    3e76:	f44f 608c 	mov.w	r0, #1120	; 0x460
    3e7a:	f7fe ff9f 	bl	2dbc <configASSERT_callback>
    3e7e:	e7fe      	b.n	3e7e <xQueueGiveFromISR+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1124
	configASSERT( pxQueue->uxItemSize == 0 );
    3e80:	6c03      	ldr	r3, [r0, #64]	; 0x40
    3e82:	b12b      	cbz	r3, 3e90 <xQueueGiveFromISR+0x24>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1124 (discriminator 1)
    3e84:	4920      	ldr	r1, [pc, #128]	; (3f08 <xQueueGiveFromISR+0x9c>)
    3e86:	f240 4064 	movw	r0, #1124	; 0x464
    3e8a:	f7fe ff97 	bl	2dbc <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1124 (discriminator 2)
    3e8e:	e7fe      	b.n	3e8e <xQueueGiveFromISR+0x22>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1129
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
    3e90:	6803      	ldr	r3, [r0, #0]
    3e92:	b93b      	cbnz	r3, 3ea4 <xQueueGiveFromISR+0x38>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1129 (discriminator 1)
    3e94:	6883      	ldr	r3, [r0, #8]
    3e96:	b12b      	cbz	r3, 3ea4 <xQueueGiveFromISR+0x38>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1129 (discriminator 2)
    3e98:	491c      	ldr	r1, [pc, #112]	; (3f0c <xQueueGiveFromISR+0xa0>)
    3e9a:	f240 4069 	movw	r0, #1129	; 0x469
    3e9e:	f7fe ff8d 	bl	2dbc <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1129 (discriminator 3)
    3ea2:	e7fe      	b.n	3ea2 <xQueueGiveFromISR+0x36>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1145
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
    3ea4:	f7ff fc44 	bl	3730 <vPortValidateInterruptPriority>
ulPortRaiseBASEPRI():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:211
	__asm volatile
    3ea8:	f3ef 8611 	mrs	r6, BASEPRI
    3eac:	f04f 0318 	mov.w	r3, #24
    3eb0:	f383 8811 	msr	BASEPRI, r3
    3eb4:	f3bf 8f6f 	isb	sy
    3eb8:	f3bf 8f4f 	dsb	sy
xQueueGiveFromISR():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1149
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
    3ebc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1154
		if( uxMessagesWaiting < pxQueue->uxLength )
    3ebe:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    3ec0:	4293      	cmp	r3, r2
    3ec2:	d91c      	bls.n	3efe <xQueueGiveFromISR+0x92>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1156
			const int8_t cTxLock = pxQueue->cTxLock;
    3ec4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1166
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
    3ec8:	3201      	adds	r2, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1156
			const int8_t cTxLock = pxQueue->cTxLock;
    3eca:	b25b      	sxtb	r3, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1166
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
    3ecc:	63a2      	str	r2, [r4, #56]	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1170
			if( cTxLock == queueUNLOCKED )
    3ece:	1c5a      	adds	r2, r3, #1
    3ed0:	d110      	bne.n	3ef4 <xQueueGiveFromISR+0x88>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1225
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
    3ed2:	6a63      	ldr	r3, [r4, #36]	; 0x24
    3ed4:	b90b      	cbnz	r3, 3eda <xQueueGiveFromISR+0x6e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1259
			xReturn = pdPASS;
    3ed6:	2001      	movs	r0, #1
    3ed8:	e009      	b.n	3eee <xQueueGiveFromISR+0x82>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1227
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
    3eda:	f104 0024 	add.w	r0, r4, #36	; 0x24
    3ede:	f000 fe95 	bl	4c0c <xTaskRemoveFromEventList>
    3ee2:	2800      	cmp	r0, #0
    3ee4:	d0f7      	beq.n	3ed6 <xQueueGiveFromISR+0x6a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1231
							if( pxHigherPriorityTaskWoken != NULL )
    3ee6:	2d00      	cmp	r5, #0
    3ee8:	d0f5      	beq.n	3ed6 <xQueueGiveFromISR+0x6a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1233
								*pxHigherPriorityTaskWoken = pdTRUE;
    3eea:	2001      	movs	r0, #1
    3eec:	6028      	str	r0, [r5, #0]
vPortSetBASEPRI():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
	__asm volatile
    3eee:	f386 8811 	msr	BASEPRI, r6
xQueueGiveFromISR():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1270
}
    3ef2:	bd70      	pop	{r4, r5, r6, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1256
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
    3ef4:	3301      	adds	r3, #1
    3ef6:	b25b      	sxtb	r3, r3
    3ef8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
    3efc:	e7eb      	b.n	3ed6 <xQueueGiveFromISR+0x6a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1264
			xReturn = errQUEUE_FULL;
    3efe:	2000      	movs	r0, #0
    3f00:	e7f5      	b.n	3eee <xQueueGiveFromISR+0x82>
    3f02:	bf00      	nop
    3f04:	0000d49a 	.word	0x0000d49a
    3f08:	0000d539 	.word	0x0000d539
    3f0c:	0000d552 	.word	0x0000d552

00003f10 <xQueueReceive>:
xQueueReceive():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1274
{
    3f10:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    3f14:	b085      	sub	sp, #20
    3f16:	460f      	mov	r7, r1
    3f18:	9201      	str	r2, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1280
	configASSERT( ( pxQueue ) );
    3f1a:	4604      	mov	r4, r0
    3f1c:	b928      	cbnz	r0, 3f2a <xQueueReceive+0x1a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1280 (discriminator 1)
    3f1e:	4947      	ldr	r1, [pc, #284]	; (403c <xQueueReceive+0x12c>)
    3f20:	f44f 60a0 	mov.w	r0, #1280	; 0x500
    3f24:	f7fe ff4a 	bl	2dbc <configASSERT_callback>
    3f28:	e7fe      	b.n	3f28 <xQueueReceive+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1284
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
    3f2a:	b939      	cbnz	r1, 3f3c <xQueueReceive+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1284 (discriminator 1)
    3f2c:	6c03      	ldr	r3, [r0, #64]	; 0x40
    3f2e:	b12b      	cbz	r3, 3f3c <xQueueReceive+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1284 (discriminator 2)
    3f30:	4943      	ldr	r1, [pc, #268]	; (4040 <xQueueReceive+0x130>)
    3f32:	f240 5004 	movw	r0, #1284	; 0x504
    3f36:	f7fe ff41 	bl	2dbc <configASSERT_callback>
    3f3a:	e7fe      	b.n	3f3a <xQueueReceive+0x2a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1289
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
    3f3c:	f000 ffec 	bl	4f18 <xTaskGetSchedulerState>
    3f40:	4606      	mov	r6, r0
    3f42:	b938      	cbnz	r0, 3f54 <xQueueReceive+0x44>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1289 (discriminator 1)
    3f44:	9b01      	ldr	r3, [sp, #4]
    3f46:	b133      	cbz	r3, 3f56 <xQueueReceive+0x46>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1289 (discriminator 2)
    3f48:	493e      	ldr	r1, [pc, #248]	; (4044 <xQueueReceive+0x134>)
    3f4a:	f240 5009 	movw	r0, #1289	; 0x509
    3f4e:	f7fe ff35 	bl	2dbc <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1289 (discriminator 3)
    3f52:	e7fe      	b.n	3f52 <xQueueReceive+0x42>
    3f54:	2600      	movs	r6, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1364
		prvLockQueue( pxQueue );
    3f56:	f04f 0800 	mov.w	r8, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1378
					portYIELD_WITHIN_API();
    3f5a:	f8df 90ec 	ldr.w	r9, [pc, #236]	; 4048 <xQueueReceive+0x138>
    3f5e:	e03b      	b.n	3fd8 <xQueueReceive+0xc8>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1336
				if( xTicksToWait == ( TickType_t ) 0 )
    3f60:	9d01      	ldr	r5, [sp, #4]
    3f62:	b91d      	cbnz	r5, 3f6c <xQueueReceive+0x5c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1340
					taskEXIT_CRITICAL();
    3f64:	f7ff faf0 	bl	3548 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1403
				return errQUEUE_EMPTY;
    3f68:	2000      	movs	r0, #0
    3f6a:	e052      	b.n	4012 <xQueueReceive+0x102>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1344
				else if( xEntryTimeSet == pdFALSE )
    3f6c:	b916      	cbnz	r6, 3f74 <xQueueReceive+0x64>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1348
					vTaskInternalSetTimeOutState( &xTimeOut );
    3f6e:	a802      	add	r0, sp, #8
    3f70:	f000 fece 	bl	4d10 <vTaskInternalSetTimeOutState>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1358
		taskEXIT_CRITICAL();
    3f74:	f7ff fae8 	bl	3548 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1363
		vTaskSuspendAll();
    3f78:	f000 fc04 	bl	4784 <vTaskSuspendAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1364
		prvLockQueue( pxQueue );
    3f7c:	f7ff fac2 	bl	3504 <vPortEnterCritical>
    3f80:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
    3f84:	2bff      	cmp	r3, #255	; 0xff
    3f86:	bf08      	it	eq
    3f88:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
    3f8c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
    3f90:	2bff      	cmp	r3, #255	; 0xff
    3f92:	bf08      	it	eq
    3f94:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
    3f98:	f7ff fad6 	bl	3548 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1367
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
    3f9c:	a901      	add	r1, sp, #4
    3f9e:	a802      	add	r0, sp, #8
    3fa0:	f000 fec2 	bl	4d28 <xTaskCheckForTimeOut>
    3fa4:	2800      	cmp	r0, #0
    3fa6:	d13d      	bne.n	4024 <xQueueReceive+0x114>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1371
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
    3fa8:	4620      	mov	r0, r4
    3faa:	f7ff fd02 	bl	39b2 <prvIsQueueEmpty>
    3fae:	b398      	cbz	r0, 4018 <xQueueReceive+0x108>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1374
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
    3fb0:	9901      	ldr	r1, [sp, #4]
    3fb2:	f104 0024 	add.w	r0, r4, #36	; 0x24
    3fb6:	f000 fde7 	bl	4b88 <vTaskPlaceOnEventList>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1375
				prvUnlockQueue( pxQueue );
    3fba:	4620      	mov	r0, r4
    3fbc:	f7ff fd4e 	bl	3a5c <prvUnlockQueue>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1376
				if( xTaskResumeAll() == pdFALSE )
    3fc0:	f000 fc80 	bl	48c4 <xTaskResumeAll>
    3fc4:	b938      	cbnz	r0, 3fd6 <xQueueReceive+0xc6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1378
					portYIELD_WITHIN_API();
    3fc6:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
    3fca:	f8c9 3000 	str.w	r3, [r9]
    3fce:	f3bf 8f4f 	dsb	sy
    3fd2:	f3bf 8f6f 	isb	sy
    3fd6:	2601      	movs	r6, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1299
		taskENTER_CRITICAL();
    3fd8:	f7ff fa94 	bl	3504 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1301
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
    3fdc:	6ba5      	ldr	r5, [r4, #56]	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1305
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
    3fde:	2d00      	cmp	r5, #0
    3fe0:	d0be      	beq.n	3f60 <xQueueReceive+0x50>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1308
				prvCopyDataFromQueue( pxQueue, pvBuffer );
    3fe2:	4639      	mov	r1, r7
    3fe4:	4620      	mov	r0, r4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1310
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
    3fe6:	3d01      	subs	r5, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1308
				prvCopyDataFromQueue( pxQueue, pvBuffer );
    3fe8:	f7ff fd23 	bl	3a32 <prvCopyDataFromQueue>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1310
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
    3fec:	63a5      	str	r5, [r4, #56]	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1315
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
    3fee:	6923      	ldr	r3, [r4, #16]
    3ff0:	b163      	cbz	r3, 400c <xQueueReceive+0xfc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1317
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    3ff2:	f104 0010 	add.w	r0, r4, #16
    3ff6:	f000 fe09 	bl	4c0c <xTaskRemoveFromEventList>
    3ffa:	b138      	cbz	r0, 400c <xQueueReceive+0xfc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1319
						queueYIELD_IF_USING_PREEMPTION();
    3ffc:	4b12      	ldr	r3, [pc, #72]	; (4048 <xQueueReceive+0x138>)
    3ffe:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    4002:	601a      	str	r2, [r3, #0]
    4004:	f3bf 8f4f 	dsb	sy
    4008:	f3bf 8f6f 	isb	sy
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1331
				taskEXIT_CRITICAL();
    400c:	f7ff fa9c 	bl	3548 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1332
				return pdPASS;
    4010:	2001      	movs	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1411
}
    4012:	b005      	add	sp, #20
    4014:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1389
				prvUnlockQueue( pxQueue );
    4018:	4620      	mov	r0, r4
    401a:	f7ff fd1f 	bl	3a5c <prvUnlockQueue>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1390
				( void ) xTaskResumeAll();
    401e:	f000 fc51 	bl	48c4 <xTaskResumeAll>
    4022:	e7d8      	b.n	3fd6 <xQueueReceive+0xc6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1397
			prvUnlockQueue( pxQueue );
    4024:	4620      	mov	r0, r4
    4026:	f7ff fd19 	bl	3a5c <prvUnlockQueue>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1398
			( void ) xTaskResumeAll();
    402a:	f000 fc4b 	bl	48c4 <xTaskResumeAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1400
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
    402e:	4620      	mov	r0, r4
    4030:	f7ff fcbf 	bl	39b2 <prvIsQueueEmpty>
    4034:	2800      	cmp	r0, #0
    4036:	d0ce      	beq.n	3fd6 <xQueueReceive+0xc6>
    4038:	e796      	b.n	3f68 <xQueueReceive+0x58>
    403a:	bf00      	nop
    403c:	0000d5b9 	.word	0x0000d5b9
    4040:	0000d5c5 	.word	0x0000d5c5
    4044:	0000d381 	.word	0x0000d381
    4048:	e000ed04 	.word	0xe000ed04

0000404c <xQueueSemaphoreTake>:
xQueueSemaphoreTake():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1415
{
    404c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1425
	configASSERT( ( pxQueue ) );
    4050:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1415
{
    4052:	9101      	str	r1, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1425
	configASSERT( ( pxQueue ) );
    4054:	b928      	cbnz	r0, 4062 <xQueueSemaphoreTake+0x16>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1425 (discriminator 1)
    4056:	4958      	ldr	r1, [pc, #352]	; (41b8 <xQueueSemaphoreTake+0x16c>)
    4058:	f240 5091 	movw	r0, #1425	; 0x591
    405c:	f7fe feae 	bl	2dbc <configASSERT_callback>
    4060:	e7fe      	b.n	4060 <xQueueSemaphoreTake+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1429
	configASSERT( pxQueue->uxItemSize == 0 );
    4062:	6c05      	ldr	r5, [r0, #64]	; 0x40
    4064:	b12d      	cbz	r5, 4072 <xQueueSemaphoreTake+0x26>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1429 (discriminator 1)
    4066:	4955      	ldr	r1, [pc, #340]	; (41bc <xQueueSemaphoreTake+0x170>)
    4068:	f240 5095 	movw	r0, #1429	; 0x595
    406c:	f7fe fea6 	bl	2dbc <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1429 (discriminator 2)
    4070:	e7fe      	b.n	4070 <xQueueSemaphoreTake+0x24>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1434
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
    4072:	f000 ff51 	bl	4f18 <xTaskGetSchedulerState>
    4076:	4606      	mov	r6, r0
    4078:	b938      	cbnz	r0, 408a <xQueueSemaphoreTake+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1434 (discriminator 1)
    407a:	9b01      	ldr	r3, [sp, #4]
    407c:	b153      	cbz	r3, 4094 <xQueueSemaphoreTake+0x48>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1434 (discriminator 2)
    407e:	4950      	ldr	r1, [pc, #320]	; (41c0 <xQueueSemaphoreTake+0x174>)
    4080:	f240 509a 	movw	r0, #1434	; 0x59a
    4084:	f7fe fe9a 	bl	2dbc <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1434 (discriminator 3)
    4088:	e7fe      	b.n	4088 <xQueueSemaphoreTake+0x3c>
    408a:	462e      	mov	r6, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1535
		prvLockQueue( pxQueue );
    408c:	2700      	movs	r7, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1569
					portYIELD_WITHIN_API();
    408e:	f8df 8138 	ldr.w	r8, [pc, #312]	; 41c8 <xQueueSemaphoreTake+0x17c>
    4092:	e04e      	b.n	4132 <xQueueSemaphoreTake+0xe6>
    4094:	4605      	mov	r5, r0
    4096:	e7f9      	b.n	408c <xQueueSemaphoreTake+0x40>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1498
				if( xTicksToWait == ( TickType_t ) 0 )
    4098:	9b01      	ldr	r3, [sp, #4]
    409a:	b94b      	cbnz	r3, 40b0 <xQueueSemaphoreTake+0x64>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1505
						configASSERT( xInheritanceOccurred == pdFALSE );
    409c:	b12d      	cbz	r5, 40aa <xQueueSemaphoreTake+0x5e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1505 (discriminator 1)
    409e:	4949      	ldr	r1, [pc, #292]	; (41c4 <xQueueSemaphoreTake+0x178>)
    40a0:	f240 50e1 	movw	r0, #1505	; 0x5e1
    40a4:	f7fe fe8a 	bl	2dbc <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1505 (discriminator 4)
    40a8:	e7fe      	b.n	40a8 <xQueueSemaphoreTake+0x5c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1511
					taskEXIT_CRITICAL();
    40aa:	f7ff fa4d 	bl	3548 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1513
					return errQUEUE_EMPTY;
    40ae:	e05e      	b.n	416e <xQueueSemaphoreTake+0x122>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1515
				else if( xEntryTimeSet == pdFALSE )
    40b0:	b916      	cbnz	r6, 40b8 <xQueueSemaphoreTake+0x6c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1519
					vTaskInternalSetTimeOutState( &xTimeOut );
    40b2:	a802      	add	r0, sp, #8
    40b4:	f000 fe2c 	bl	4d10 <vTaskInternalSetTimeOutState>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1529
		taskEXIT_CRITICAL();
    40b8:	f7ff fa46 	bl	3548 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1534
		vTaskSuspendAll();
    40bc:	f000 fb62 	bl	4784 <vTaskSuspendAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1535
		prvLockQueue( pxQueue );
    40c0:	f7ff fa20 	bl	3504 <vPortEnterCritical>
    40c4:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
    40c8:	2bff      	cmp	r3, #255	; 0xff
    40ca:	bf08      	it	eq
    40cc:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
    40d0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
    40d4:	2bff      	cmp	r3, #255	; 0xff
    40d6:	bf08      	it	eq
    40d8:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
    40dc:	f7ff fa34 	bl	3548 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1538
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
    40e0:	a901      	add	r1, sp, #4
    40e2:	a802      	add	r0, sp, #8
    40e4:	f000 fe20 	bl	4d28 <xTaskCheckForTimeOut>
    40e8:	2800      	cmp	r0, #0
    40ea:	d14a      	bne.n	4182 <xQueueSemaphoreTake+0x136>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1544
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
    40ec:	4620      	mov	r0, r4
    40ee:	f7ff fc60 	bl	39b2 <prvIsQueueEmpty>
    40f2:	2800      	cmp	r0, #0
    40f4:	d03f      	beq.n	4176 <xQueueSemaphoreTake+0x12a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1550
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
    40f6:	6823      	ldr	r3, [r4, #0]
    40f8:	b93b      	cbnz	r3, 410a <xQueueSemaphoreTake+0xbe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1552
						taskENTER_CRITICAL();
    40fa:	f7ff fa03 	bl	3504 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1554
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
    40fe:	68a0      	ldr	r0, [r4, #8]
    4100:	f000 ff1a 	bl	4f38 <xTaskPriorityInherit>
    4104:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1556
						taskEXIT_CRITICAL();
    4106:	f7ff fa1f 	bl	3548 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1565
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
    410a:	9901      	ldr	r1, [sp, #4]
    410c:	f104 0024 	add.w	r0, r4, #36	; 0x24
    4110:	f000 fd3a 	bl	4b88 <vTaskPlaceOnEventList>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1566
				prvUnlockQueue( pxQueue );
    4114:	4620      	mov	r0, r4
    4116:	f7ff fca1 	bl	3a5c <prvUnlockQueue>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1567
				if( xTaskResumeAll() == pdFALSE )
    411a:	f000 fbd3 	bl	48c4 <xTaskResumeAll>
    411e:	b938      	cbnz	r0, 4130 <xQueueSemaphoreTake+0xe4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1569
					portYIELD_WITHIN_API();
    4120:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
    4124:	f8c8 3000 	str.w	r3, [r8]
    4128:	f3bf 8f4f 	dsb	sy
    412c:	f3bf 8f6f 	isb	sy
    4130:	2601      	movs	r6, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1444
		taskENTER_CRITICAL();
    4132:	f7ff f9e7 	bl	3504 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1448
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
    4136:	6ba3      	ldr	r3, [r4, #56]	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1452
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
    4138:	2b00      	cmp	r3, #0
    413a:	d0ad      	beq.n	4098 <xQueueSemaphoreTake+0x4c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1458
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
    413c:	3b01      	subs	r3, #1
    413e:	63a3      	str	r3, [r4, #56]	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1462
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
    4140:	6823      	ldr	r3, [r4, #0]
    4142:	b913      	cbnz	r3, 414a <xQueueSemaphoreTake+0xfe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1466
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
    4144:	f000 fffc 	bl	5140 <pvTaskIncrementMutexHeldCount>
    4148:	60a0      	str	r0, [r4, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1477
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
    414a:	6923      	ldr	r3, [r4, #16]
    414c:	b163      	cbz	r3, 4168 <xQueueSemaphoreTake+0x11c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1479
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    414e:	f104 0010 	add.w	r0, r4, #16
    4152:	f000 fd5b 	bl	4c0c <xTaskRemoveFromEventList>
    4156:	b138      	cbz	r0, 4168 <xQueueSemaphoreTake+0x11c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1481
						queueYIELD_IF_USING_PREEMPTION();
    4158:	4b1b      	ldr	r3, [pc, #108]	; (41c8 <xQueueSemaphoreTake+0x17c>)
    415a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    415e:	601a      	str	r2, [r3, #0]
    4160:	f3bf 8f4f 	dsb	sy
    4164:	f3bf 8f6f 	isb	sy
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1493
				taskEXIT_CRITICAL();
    4168:	f7ff f9ee 	bl	3548 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1494
				return pdPASS;
    416c:	2501      	movs	r5, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1629
}
    416e:	4628      	mov	r0, r5
    4170:	b004      	add	sp, #16
    4172:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1580
				prvUnlockQueue( pxQueue );
    4176:	4620      	mov	r0, r4
    4178:	f7ff fc70 	bl	3a5c <prvUnlockQueue>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1581
				( void ) xTaskResumeAll();
    417c:	f000 fba2 	bl	48c4 <xTaskResumeAll>
    4180:	e7d6      	b.n	4130 <xQueueSemaphoreTake+0xe4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1587
			prvUnlockQueue( pxQueue );
    4182:	4620      	mov	r0, r4
    4184:	f7ff fc6a 	bl	3a5c <prvUnlockQueue>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1588
			( void ) xTaskResumeAll();
    4188:	f000 fb9c 	bl	48c4 <xTaskResumeAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1594
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
    418c:	4620      	mov	r0, r4
    418e:	f7ff fc10 	bl	39b2 <prvIsQueueEmpty>
    4192:	2800      	cmp	r0, #0
    4194:	d0cc      	beq.n	4130 <xQueueSemaphoreTake+0xe4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1601
					if( xInheritanceOccurred != pdFALSE )
    4196:	2d00      	cmp	r5, #0
    4198:	d0e9      	beq.n	416e <xQueueSemaphoreTake+0x122>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1603
						taskENTER_CRITICAL();
    419a:	f7ff f9b3 	bl	3504 <vPortEnterCritical>
prvGetDisinheritPriorityAfterTimeout():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2055
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
    419e:	6a61      	ldr	r1, [r4, #36]	; 0x24
    41a0:	b119      	cbz	r1, 41aa <xQueueSemaphoreTake+0x15e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2057
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
    41a2:	6b23      	ldr	r3, [r4, #48]	; 0x30
    41a4:	6819      	ldr	r1, [r3, #0]
    41a6:	f1c1 010a 	rsb	r1, r1, #10
xQueueSemaphoreTake():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1613
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
    41aa:	68a0      	ldr	r0, [r4, #8]
    41ac:	f000 ff64 	bl	5078 <vTaskPriorityDisinheritAfterTimeout>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1621
				return errQUEUE_EMPTY;
    41b0:	2500      	movs	r5, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1615
						taskEXIT_CRITICAL();
    41b2:	f7ff f9c9 	bl	3548 <vPortExitCritical>
    41b6:	e7da      	b.n	416e <xQueueSemaphoreTake+0x122>
    41b8:	0000d5b9 	.word	0x0000d5b9
    41bc:	0000d539 	.word	0x0000d539
    41c0:	0000d381 	.word	0x0000d381
    41c4:	0000d663 	.word	0x0000d663
    41c8:	e000ed04 	.word	0xe000ed04

000041cc <xQueueReceiveFromISR>:
xQueueReceiveFromISR():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1782
{
    41cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    41d0:	4689      	mov	r9, r1
    41d2:	4690      	mov	r8, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1787
	configASSERT( pxQueue );
    41d4:	4605      	mov	r5, r0
    41d6:	b928      	cbnz	r0, 41e4 <xQueueReceiveFromISR+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1787 (discriminator 1)
    41d8:	4921      	ldr	r1, [pc, #132]	; (4260 <xQueueReceiveFromISR+0x94>)
    41da:	f240 60fb 	movw	r0, #1787	; 0x6fb
    41de:	f7fe fded 	bl	2dbc <configASSERT_callback>
    41e2:	e7fe      	b.n	41e2 <xQueueReceiveFromISR+0x16>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1788
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
    41e4:	b939      	cbnz	r1, 41f6 <xQueueReceiveFromISR+0x2a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1788 (discriminator 1)
    41e6:	6c03      	ldr	r3, [r0, #64]	; 0x40
    41e8:	b12b      	cbz	r3, 41f6 <xQueueReceiveFromISR+0x2a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1788 (discriminator 2)
    41ea:	491e      	ldr	r1, [pc, #120]	; (4264 <xQueueReceiveFromISR+0x98>)
    41ec:	f240 60fc 	movw	r0, #1788	; 0x6fc
    41f0:	f7fe fde4 	bl	2dbc <configASSERT_callback>
    41f4:	e7fe      	b.n	41f4 <xQueueReceiveFromISR+0x28>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1804
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
    41f6:	f7ff fa9b 	bl	3730 <vPortValidateInterruptPriority>
ulPortRaiseBASEPRI():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:211
	__asm volatile
    41fa:	f3ef 8711 	mrs	r7, BASEPRI
    41fe:	f04f 0318 	mov.w	r3, #24
    4202:	f383 8811 	msr	BASEPRI, r3
    4206:	f3bf 8f6f 	isb	sy
    420a:	f3bf 8f4f 	dsb	sy
xQueueReceiveFromISR():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1808
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
    420e:	6bac      	ldr	r4, [r5, #56]	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1811
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
    4210:	b31c      	cbz	r4, 425a <xQueueReceiveFromISR+0x8e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1813
			const int8_t cRxLock = pxQueue->cRxLock;
    4212:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1817
			prvCopyDataFromQueue( pxQueue, pvBuffer );
    4216:	4649      	mov	r1, r9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1813
			const int8_t cRxLock = pxQueue->cRxLock;
    4218:	b276      	sxtb	r6, r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1817
			prvCopyDataFromQueue( pxQueue, pvBuffer );
    421a:	4628      	mov	r0, r5
    421c:	f7ff fc09 	bl	3a32 <prvCopyDataFromQueue>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1818
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
    4220:	3c01      	subs	r4, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1824
			if( cRxLock == queueUNLOCKED )
    4222:	1c73      	adds	r3, r6, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1818
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
    4224:	63ac      	str	r4, [r5, #56]	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1824
			if( cRxLock == queueUNLOCKED )
    4226:	d113      	bne.n	4250 <xQueueReceiveFromISR+0x84>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1826
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
    4228:	692b      	ldr	r3, [r5, #16]
    422a:	b90b      	cbnz	r3, 4230 <xQueueReceiveFromISR+0x64>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1858
			xReturn = pdPASS;
    422c:	2001      	movs	r0, #1
    422e:	e00b      	b.n	4248 <xQueueReceiveFromISR+0x7c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1828
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    4230:	f105 0010 	add.w	r0, r5, #16
    4234:	f000 fcea 	bl	4c0c <xTaskRemoveFromEventList>
    4238:	2800      	cmp	r0, #0
    423a:	d0f7      	beq.n	422c <xQueueReceiveFromISR+0x60>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1832
						if( pxHigherPriorityTaskWoken != NULL )
    423c:	f1b8 0f00 	cmp.w	r8, #0
    4240:	d0f4      	beq.n	422c <xQueueReceiveFromISR+0x60>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1834
							*pxHigherPriorityTaskWoken = pdTRUE;
    4242:	2001      	movs	r0, #1
    4244:	f8c8 0000 	str.w	r0, [r8]
vPortSetBASEPRI():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
	__asm volatile
    4248:	f387 8811 	msr	BASEPRI, r7
xQueueReceiveFromISR():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1869
}
    424c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1855
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
    4250:	3601      	adds	r6, #1
    4252:	b276      	sxtb	r6, r6
    4254:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
    4258:	e7e8      	b.n	422c <xQueueReceiveFromISR+0x60>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1862
			xReturn = pdFAIL;
    425a:	4620      	mov	r0, r4
    425c:	e7f4      	b.n	4248 <xQueueReceiveFromISR+0x7c>
    425e:	bf00      	nop
    4260:	0000d49a 	.word	0x0000d49a
    4264:	0000d618 	.word	0x0000d618

00004268 <vQueueDelete>:
vQueueDelete():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1972
{
    4268:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1975
	configASSERT( pxQueue );
    426a:	b928      	cbnz	r0, 4278 <vQueueDelete+0x10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1975 (discriminator 1)
    426c:	4906      	ldr	r1, [pc, #24]	; (4288 <vQueueDelete+0x20>)
    426e:	f240 70b7 	movw	r0, #1975	; 0x7b7
    4272:	f7fe fda3 	bl	2dbc <configASSERT_callback>
    4276:	e7fe      	b.n	4276 <vQueueDelete+0xe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1994
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
    4278:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
    427c:	b91b      	cbnz	r3, 4286 <vQueueDelete+0x1e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2010
}
    427e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1996
			vPortFree( pxQueue );
    4282:	f7ff b8cb 	b.w	341c <vPortFree>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2010
}
    4286:	bd08      	pop	{r3, pc}
    4288:	0000d49a 	.word	0x0000d49a

0000428c <prvResetRunTimeStatsInList>:
prvResetRunTimeStatsInList():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:27
}

static void prvResetRunTimeStatsInList(List_t *pxList) {
  volatile tskTCB *pxNextTCB, *pxFirstTCB;

  listGET_OWNER_OF_NEXT_ENTRY(pxFirstTCB, pxList);
    428c:	6843      	ldr	r3, [r0, #4]
    428e:	685b      	ldr	r3, [r3, #4]
    4290:	6043      	str	r3, [r0, #4]
    4292:	f100 0208 	add.w	r2, r0, #8
    4296:	4293      	cmp	r3, r2
    4298:	bf04      	itt	eq
    429a:	68c3      	ldreq	r3, [r0, #12]
    429c:	6043      	streq	r3, [r0, #4]
    429e:	6843      	ldr	r3, [r0, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:24
static void prvResetRunTimeStatsInList(List_t *pxList) {
    42a0:	b530      	push	{r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:27
  listGET_OWNER_OF_NEXT_ENTRY(pxFirstTCB, pxList);
    42a2:	68dc      	ldr	r4, [r3, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:30
  do {
    listGET_OWNER_OF_NEXT_ENTRY(pxNextTCB, pxList);
    pxNextTCB->ulRunTimeCounter = 0;
    42a4:	2500      	movs	r5, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:29 (discriminator 4)
    listGET_OWNER_OF_NEXT_ENTRY(pxNextTCB, pxList);
    42a6:	685b      	ldr	r3, [r3, #4]
    42a8:	429a      	cmp	r2, r3
    42aa:	bf08      	it	eq
    42ac:	6853      	ldreq	r3, [r2, #4]
    42ae:	68d9      	ldr	r1, [r3, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:31 (discriminator 4)
  } while (pxNextTCB != pxFirstTCB);
    42b0:	428c      	cmp	r4, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:30 (discriminator 4)
    pxNextTCB->ulRunTimeCounter = 0;
    42b2:	650d      	str	r5, [r1, #80]	; 0x50
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:31 (discriminator 4)
  } while (pxNextTCB != pxFirstTCB);
    42b4:	d1f7      	bne.n	42a6 <prvResetRunTimeStatsInList+0x1a>
    42b6:	6043      	str	r3, [r0, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:32
}
    42b8:	bd30      	pop	{r4, r5, pc}
    42ba:	Address 0x00000000000042ba is out of bounds.


000042bc <prvAddNewTaskToReadyList>:
prvAddNewTaskToReadyList():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1073
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
    42bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    42c0:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1076
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
    42c2:	f7ff f91f 	bl	3504 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1078
	{
		uxCurrentNumberOfTasks++;
    42c6:	4b2d      	ldr	r3, [pc, #180]	; (437c <prvAddNewTaskToReadyList+0xc0>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1079
		if( pxCurrentTCB == NULL )
    42c8:	4d2d      	ldr	r5, [pc, #180]	; (4380 <prvAddNewTaskToReadyList+0xc4>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1078
		uxCurrentNumberOfTasks++;
    42ca:	681a      	ldr	r2, [r3, #0]
    42cc:	4f2d      	ldr	r7, [pc, #180]	; (4384 <prvAddNewTaskToReadyList+0xc8>)
    42ce:	3201      	adds	r2, #1
    42d0:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1079
		if( pxCurrentTCB == NULL )
    42d2:	682e      	ldr	r6, [r5, #0]
    42d4:	2e00      	cmp	r6, #0
    42d6:	d146      	bne.n	4366 <prvAddNewTaskToReadyList+0xaa>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1083
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
    42d8:	602c      	str	r4, [r5, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1085

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
    42da:	681b      	ldr	r3, [r3, #0]
    42dc:	2b01      	cmp	r3, #1
    42de:	d11c      	bne.n	431a <prvAddNewTaskToReadyList+0x5e>
    42e0:	46b8      	mov	r8, r7
prvInitialiseTaskLists():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3552
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
    42e2:	4640      	mov	r0, r8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3550
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
    42e4:	3601      	adds	r6, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3552
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
    42e6:	f7ff fb23 	bl	3930 <vListInitialise>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3550
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
    42ea:	2e0a      	cmp	r6, #10
    42ec:	f108 0814 	add.w	r8, r8, #20
    42f0:	d1f7      	bne.n	42e2 <prvAddNewTaskToReadyList+0x26>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3555
	}

	vListInitialise( &xDelayedTaskList1 );
    42f2:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 43ac <prvAddNewTaskToReadyList+0xf0>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3556
	vListInitialise( &xDelayedTaskList2 );
    42f6:	4e24      	ldr	r6, [pc, #144]	; (4388 <prvAddNewTaskToReadyList+0xcc>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3555
	vListInitialise( &xDelayedTaskList1 );
    42f8:	4640      	mov	r0, r8
    42fa:	f7ff fb19 	bl	3930 <vListInitialise>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3556
	vListInitialise( &xDelayedTaskList2 );
    42fe:	4630      	mov	r0, r6
    4300:	f7ff fb16 	bl	3930 <vListInitialise>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3557
	vListInitialise( &xPendingReadyList );
    4304:	4821      	ldr	r0, [pc, #132]	; (438c <prvAddNewTaskToReadyList+0xd0>)
    4306:	f7ff fb13 	bl	3930 <vListInitialise>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3567
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
    430a:	4821      	ldr	r0, [pc, #132]	; (4390 <prvAddNewTaskToReadyList+0xd4>)
    430c:	f7ff fb10 	bl	3930 <vListInitialise>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3573
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
    4310:	4b20      	ldr	r3, [pc, #128]	; (4394 <prvAddNewTaskToReadyList+0xd8>)
    4312:	f8c3 8000 	str.w	r8, [r3]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3574
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
    4316:	4b20      	ldr	r3, [pc, #128]	; (4398 <prvAddNewTaskToReadyList+0xdc>)
    4318:	601e      	str	r6, [r3, #0]
prvAddNewTaskToReadyList():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1119
		uxTaskNumber++;
    431a:	4a20      	ldr	r2, [pc, #128]	; (439c <prvAddNewTaskToReadyList+0xe0>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1129
		prvAddTaskToReadyList( pxNewTCB );
    431c:	4920      	ldr	r1, [pc, #128]	; (43a0 <prvAddNewTaskToReadyList+0xe4>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1119
		uxTaskNumber++;
    431e:	6813      	ldr	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1129
		prvAddTaskToReadyList( pxNewTCB );
    4320:	6808      	ldr	r0, [r1, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1119
		uxTaskNumber++;
    4322:	3301      	adds	r3, #1
    4324:	6013      	str	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1129
		prvAddTaskToReadyList( pxNewTCB );
    4326:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1124
			pxNewTCB->uxTCBNumber = uxTaskNumber;
    4328:	6423      	str	r3, [r4, #64]	; 0x40
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1129
		prvAddTaskToReadyList( pxNewTCB );
    432a:	2301      	movs	r3, #1
    432c:	4093      	lsls	r3, r2
    432e:	4303      	orrs	r3, r0
    4330:	2014      	movs	r0, #20
    4332:	600b      	str	r3, [r1, #0]
    4334:	fb00 7002 	mla	r0, r0, r2, r7
    4338:	1d21      	adds	r1, r4, #4
    433a:	f7ff fb07 	bl	394c <vListInsertEnd>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1133
	taskEXIT_CRITICAL();
    433e:	f7ff f903 	bl	3548 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1135
	if( xSchedulerRunning != pdFALSE )
    4342:	4b18      	ldr	r3, [pc, #96]	; (43a4 <prvAddNewTaskToReadyList+0xe8>)
    4344:	681b      	ldr	r3, [r3, #0]
    4346:	b163      	cbz	r3, 4362 <prvAddNewTaskToReadyList+0xa6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1139
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
    4348:	682b      	ldr	r3, [r5, #0]
    434a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    434c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    434e:	429a      	cmp	r2, r3
    4350:	d207      	bcs.n	4362 <prvAddNewTaskToReadyList+0xa6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1141
			taskYIELD_IF_USING_PREEMPTION();
    4352:	4b15      	ldr	r3, [pc, #84]	; (43a8 <prvAddNewTaskToReadyList+0xec>)
    4354:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    4358:	601a      	str	r2, [r3, #0]
    435a:	f3bf 8f4f 	dsb	sy
    435e:	f3bf 8f6f 	isb	sy
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1152
}
    4362:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1102
			if( xSchedulerRunning == pdFALSE )
    4366:	4b0f      	ldr	r3, [pc, #60]	; (43a4 <prvAddNewTaskToReadyList+0xe8>)
    4368:	681b      	ldr	r3, [r3, #0]
    436a:	2b00      	cmp	r3, #0
    436c:	d1d5      	bne.n	431a <prvAddNewTaskToReadyList+0x5e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1104
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
    436e:	682b      	ldr	r3, [r5, #0]
    4370:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    4372:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    4374:	429a      	cmp	r2, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1106
					pxCurrentTCB = pxNewTCB;
    4376:	bf98      	it	ls
    4378:	602c      	strls	r4, [r5, #0]
    437a:	e7ce      	b.n	431a <prvAddNewTaskToReadyList+0x5e>
    437c:	10001398 	.word	0x10001398
    4380:	100012c0 	.word	0x100012c0
    4384:	100012cc 	.word	0x100012cc
    4388:	100013c0 	.word	0x100013c0
    438c:	100013e0 	.word	0x100013e0
    4390:	100013f8 	.word	0x100013f8
    4394:	100012c4 	.word	0x100012c4
    4398:	100012c8 	.word	0x100012c8
    439c:	100013a4 	.word	0x100013a4
    43a0:	100013a8 	.word	0x100013a8
    43a4:	100013f4 	.word	0x100013f4
    43a8:	e000ed04 	.word	0xe000ed04
    43ac:	100013ac 	.word	0x100013ac

000043b0 <prvIdleTask>:
prvIdleTask():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3335
{
    43b0:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3374
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
    43b2:	4c07      	ldr	r4, [pc, #28]	; (43d0 <prvIdleTask+0x20>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3376
				taskYIELD();
    43b4:	4d07      	ldr	r5, [pc, #28]	; (43d4 <prvIdleTask+0x24>)
    43b6:	f04f 5680 	mov.w	r6, #268435456	; 0x10000000
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3374
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
    43ba:	6823      	ldr	r3, [r4, #0]
    43bc:	2b01      	cmp	r3, #1
    43be:	d904      	bls.n	43ca <prvIdleTask+0x1a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3376
				taskYIELD();
    43c0:	602e      	str	r6, [r5, #0]
    43c2:	f3bf 8f4f 	dsb	sy
    43c6:	f3bf 8f6f 	isb	sy
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3394
			vApplicationIdleHook();
    43ca:	f7fe fcef 	bl	2dac <vApplicationIdleHook>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3351
		prvCheckTasksWaitingTermination();
    43ce:	e7f4      	b.n	43ba <prvIdleTask+0xa>
    43d0:	100012cc 	.word	0x100012cc
    43d4:	e000ed04 	.word	0xe000ed04

000043d8 <prvResetNextTaskUnblockTime>:
prvResetNextTaskUnblockTime():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3884

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
    43d8:	4a06      	ldr	r2, [pc, #24]	; (43f4 <prvResetNextTaskUnblockTime+0x1c>)
    43da:	6813      	ldr	r3, [r2, #0]
    43dc:	6819      	ldr	r1, [r3, #0]
    43de:	4b06      	ldr	r3, [pc, #24]	; (43f8 <prvResetNextTaskUnblockTime+0x20>)
    43e0:	b919      	cbnz	r1, 43ea <prvResetNextTaskUnblockTime+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3890
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
    43e2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3899
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
    43e6:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3901
	}
}
    43e8:	4770      	bx	lr
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3898
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    43ea:	6812      	ldr	r2, [r2, #0]
    43ec:	68d2      	ldr	r2, [r2, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3899
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
    43ee:	68d2      	ldr	r2, [r2, #12]
    43f0:	6852      	ldr	r2, [r2, #4]
    43f2:	e7f8      	b.n	43e6 <prvResetNextTaskUnblockTime+0xe>
    43f4:	100012c4 	.word	0x100012c4
    43f8:	100013d8 	.word	0x100013d8

000043fc <prvTaskIsTaskSuspended>:
prvTaskIsTaskSuspended():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1798
	{
    43fc:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1806
		configASSERT( xTask );
    43fe:	b928      	cbnz	r0, 440c <prvTaskIsTaskSuspended+0x10>
    4400:	4909      	ldr	r1, [pc, #36]	; (4428 <prvTaskIsTaskSuspended+0x2c>)
    4402:	f240 700e 	movw	r0, #1806	; 0x70e
    4406:	f7fe fcd9 	bl	2dbc <configASSERT_callback>
    440a:	e7fe      	b.n	440a <prvTaskIsTaskSuspended+0xe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1809
		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
    440c:	6942      	ldr	r2, [r0, #20]
    440e:	4b07      	ldr	r3, [pc, #28]	; (442c <prvTaskIsTaskSuspended+0x30>)
    4410:	429a      	cmp	r2, r3
    4412:	d107      	bne.n	4424 <prvTaskIsTaskSuspended+0x28>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1812
			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
    4414:	6a80      	ldr	r0, [r0, #40]	; 0x28
    4416:	4b06      	ldr	r3, [pc, #24]	; (4430 <prvTaskIsTaskSuspended+0x34>)
    4418:	4298      	cmp	r0, r3
    441a:	d003      	beq.n	4424 <prvTaskIsTaskSuspended+0x28>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1816
				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The cast is only redundant when NULL is used. */
    441c:	fab0 f080 	clz	r0, r0
    4420:	0940      	lsrs	r0, r0, #5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1836
	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
    4422:	bd08      	pop	{r3, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1799
	BaseType_t xReturn = pdFALSE;
    4424:	2000      	movs	r0, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1835
		return xReturn;
    4426:	e7fc      	b.n	4422 <prvTaskIsTaskSuspended+0x26>
    4428:	0000d689 	.word	0x0000d689
    442c:	100013f8 	.word	0x100013f8
    4430:	100013e0 	.word	0x100013e0

00004434 <prvInitialiseNewTask.isra.2>:
prvInitialiseNewTask():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:821
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
    4434:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    4438:	e9dd 6409 	ldrd	r6, r4, [sp, #36]	; 0x24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:851
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
    443c:	ea4f 0982 	mov.w	r9, r2, lsl #2
    4440:	464a      	mov	r2, r9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:821
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
    4442:	4607      	mov	r7, r0
    4444:	460d      	mov	r5, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:851
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
    4446:	6b20      	ldr	r0, [r4, #48]	; 0x30
    4448:	21a5      	movs	r1, #165	; 0xa5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:821
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
    444a:	4698      	mov	r8, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:851
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
    444c:	f002 fa06 	bl	685c <memset>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:861
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
    4450:	6b23      	ldr	r3, [r4, #48]	; 0x30
    4452:	f1a9 0904 	sub.w	r9, r9, #4
    4456:	4499      	add	r9, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:862
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
    4458:	f029 0907 	bic.w	r9, r9, #7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:889
	if( pcName != NULL )
    445c:	b39d      	cbz	r5, 44c6 <prvInitialiseNewTask.isra.2+0x92>
    445e:	1e6b      	subs	r3, r5, #1
    4460:	f104 0234 	add.w	r2, r4, #52	; 0x34
    4464:	350b      	adds	r5, #11
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:893
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
    4466:	f813 1f01 	ldrb.w	r1, [r3, #1]!
    446a:	f802 1b01 	strb.w	r1, [r2], #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:898
			if( pcName[ x ] == ( char ) 0x00 )
    446e:	b109      	cbz	r1, 4474 <prvInitialiseNewTask.isra.2+0x40>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:891
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
    4470:	42ab      	cmp	r3, r5
    4472:	d1f8      	bne.n	4466 <prvInitialiseNewTask.isra.2+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:910
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
    4474:	2300      	movs	r3, #0
    4476:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:921
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
    447a:	9d08      	ldr	r5, [sp, #32]
    447c:	2d09      	cmp	r5, #9
    447e:	bf28      	it	cs
    4480:	2509      	movcs	r5, #9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:934
		pxNewTCB->uxMutexesHeld = 0;
    4482:	f04f 0a00 	mov.w	sl, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:930
	pxNewTCB->uxPriority = uxPriority;
    4486:	62e5      	str	r5, [r4, #44]	; 0x2c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:933
		pxNewTCB->uxBasePriority = uxPriority;
    4488:	64a5      	str	r5, [r4, #72]	; 0x48
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:938
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
    448a:	1d20      	adds	r0, r4, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:934
		pxNewTCB->uxMutexesHeld = 0;
    448c:	f8c4 a04c 	str.w	sl, [r4, #76]	; 0x4c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:938
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
    4490:	f7ff fa59 	bl	3946 <vListInitialiseItem>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:946
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    4494:	f1c5 050a 	rsb	r5, r5, #10
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:939
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
    4498:	f104 0018 	add.w	r0, r4, #24
    449c:	f7ff fa53 	bl	3946 <vListInitialiseItem>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:989
		pxNewTCB->ulNotifiedValue = 0;
    44a0:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:943
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
    44a4:	6124      	str	r4, [r4, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:946
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    44a6:	61a5      	str	r5, [r4, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:947
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
    44a8:	6264      	str	r4, [r4, #36]	; 0x24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:963
		pxNewTCB->ulRunTimeCounter = 0UL;
    44aa:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:990
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
    44ae:	f884 a058 	strb.w	sl, [r4, #88]	; 0x58
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1053
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
    44b2:	4642      	mov	r2, r8
    44b4:	4639      	mov	r1, r7
    44b6:	4648      	mov	r0, r9
    44b8:	f7fe fffa 	bl	34b0 <pxPortInitialiseStack>
    44bc:	6020      	str	r0, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1059
	if( pxCreatedTask != NULL )
    44be:	b106      	cbz	r6, 44c2 <prvInitialiseNewTask.isra.2+0x8e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1063
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
    44c0:	6034      	str	r4, [r6, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1069
}
    44c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:916
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
    44c6:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
    44ca:	e7d6      	b.n	447a <prvInitialiseNewTask.isra.2+0x46>

000044cc <prvAddCurrentTaskToDelayedList>:
prvAddCurrentTaskToDelayedList():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5082
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
    44cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5084
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
    44ce:	4b1b      	ldr	r3, [pc, #108]	; (453c <prvAddCurrentTaskToDelayedList+0x70>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5097
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    44d0:	4e1b      	ldr	r6, [pc, #108]	; (4540 <prvAddCurrentTaskToDelayedList+0x74>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5084
const TickType_t xConstTickCount = xTickCount;
    44d2:	681c      	ldr	r4, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5082
{
    44d4:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5097
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    44d6:	6830      	ldr	r0, [r6, #0]
    44d8:	3004      	adds	r0, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5082
{
    44da:	460f      	mov	r7, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5097
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    44dc:	f7ff fa59 	bl	3992 <uxListRemove>
    44e0:	4633      	mov	r3, r6
    44e2:	b940      	cbnz	r0, 44f6 <prvAddCurrentTaskToDelayedList+0x2a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5101
	{
		/* The current task must be in a ready list, so there is no need to
		check, and the port reset macro can be called directly. */
		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority ); /*lint !e931 pxCurrentTCB cannot change as it is the calling task.  pxCurrentTCB->uxPriority and uxTopReadyPriority cannot change as called with scheduler suspended or in a critical section. */
    44e4:	6831      	ldr	r1, [r6, #0]
    44e6:	4e17      	ldr	r6, [pc, #92]	; (4544 <prvAddCurrentTaskToDelayedList+0x78>)
    44e8:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
    44ea:	6832      	ldr	r2, [r6, #0]
    44ec:	2001      	movs	r0, #1
    44ee:	4088      	lsls	r0, r1
    44f0:	ea22 0200 	bic.w	r2, r2, r0
    44f4:	6032      	str	r2, [r6, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5110
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
    44f6:	1c6a      	adds	r2, r5, #1
    44f8:	d107      	bne.n	450a <prvAddCurrentTaskToDelayedList+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5110 (discriminator 1)
    44fa:	b137      	cbz	r7, 450a <prvAddCurrentTaskToDelayedList+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5115
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
    44fc:	6819      	ldr	r1, [r3, #0]
    44fe:	4812      	ldr	r0, [pc, #72]	; (4548 <prvAddCurrentTaskToDelayedList+0x7c>)
    4500:	3104      	adds	r1, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5190

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
    4502:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5115
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
    4506:	f7ff ba21 	b.w	394c <vListInsertEnd>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5125
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
    450a:	681a      	ldr	r2, [r3, #0]
    450c:	1964      	adds	r4, r4, r5
    450e:	6054      	str	r4, [r2, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5127
			if( xTimeToWake < xConstTickCount )
    4510:	d307      	bcc.n	4522 <prvAddCurrentTaskToDelayedList+0x56>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5131
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
    4512:	4a0e      	ldr	r2, [pc, #56]	; (454c <prvAddCurrentTaskToDelayedList+0x80>)
    4514:	6810      	ldr	r0, [r2, #0]
    4516:	6819      	ldr	r1, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5190
}
    4518:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5131
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
    451c:	3104      	adds	r1, #4
    451e:	f7ff ba21 	b.w	3964 <vListInsert>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5137
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
    4522:	4a0b      	ldr	r2, [pc, #44]	; (4550 <prvAddCurrentTaskToDelayedList+0x84>)
    4524:	6810      	ldr	r0, [r2, #0]
    4526:	6819      	ldr	r1, [r3, #0]
    4528:	3104      	adds	r1, #4
    452a:	f7ff fa1b 	bl	3964 <vListInsert>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5142
				if( xTimeToWake < xNextTaskUnblockTime )
    452e:	4b09      	ldr	r3, [pc, #36]	; (4554 <prvAddCurrentTaskToDelayedList+0x88>)
    4530:	681a      	ldr	r2, [r3, #0]
    4532:	42a2      	cmp	r2, r4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5144
					xNextTaskUnblockTime = xTimeToWake;
    4534:	bf88      	it	hi
    4536:	601c      	strhi	r4, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5190
}
    4538:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    453a:	bf00      	nop
    453c:	1000140c 	.word	0x1000140c
    4540:	100012c0 	.word	0x100012c0
    4544:	100013a8 	.word	0x100013a8
    4548:	100013f8 	.word	0x100013f8
    454c:	100012c8 	.word	0x100012c8
    4550:	100012c4 	.word	0x100012c4
    4554:	100013d8 	.word	0x100013d8

00004558 <xTaskCreateStatic>:
xTaskCreateStatic():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:585
	{
    4558:	b570      	push	{r4, r5, r6, lr}
    455a:	b086      	sub	sp, #24
    455c:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:589
		configASSERT( puxStackBuffer != NULL );
    4560:	b92d      	cbnz	r5, 456e <xTaskCreateStatic+0x16>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:589 (discriminator 1)
    4562:	4915      	ldr	r1, [pc, #84]	; (45b8 <xTaskCreateStatic+0x60>)
    4564:	f240 204d 	movw	r0, #589	; 0x24d
    4568:	f7fe fc28 	bl	2dbc <configASSERT_callback>
    456c:	e7fe      	b.n	456c <xTaskCreateStatic+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:590
		configASSERT( pxTaskBuffer != NULL );
    456e:	b92c      	cbnz	r4, 457c <xTaskCreateStatic+0x24>
    4570:	4912      	ldr	r1, [pc, #72]	; (45bc <xTaskCreateStatic+0x64>)
    4572:	f240 204e 	movw	r0, #590	; 0x24e
    4576:	f7fe fc21 	bl	2dbc <configASSERT_callback>
    457a:	e7fe      	b.n	457a <xTaskCreateStatic+0x22>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:597
			volatile size_t xSize = sizeof( StaticTask_t );
    457c:	265c      	movs	r6, #92	; 0x5c
    457e:	9605      	str	r6, [sp, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:598
			configASSERT( xSize == sizeof( TCB_t ) );
    4580:	9e05      	ldr	r6, [sp, #20]
    4582:	2e5c      	cmp	r6, #92	; 0x5c
    4584:	d005      	beq.n	4592 <xTaskCreateStatic+0x3a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:598 (discriminator 1)
    4586:	490e      	ldr	r1, [pc, #56]	; (45c0 <xTaskCreateStatic+0x68>)
    4588:	f240 2056 	movw	r0, #598	; 0x256
    458c:	f7fe fc16 	bl	2dbc <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:598 (discriminator 3)
    4590:	e7fe      	b.n	4590 <xTaskCreateStatic+0x38>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:609
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
    4592:	6325      	str	r5, [r4, #48]	; 0x30
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:615
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
    4594:	2502      	movs	r5, #2
    4596:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:619
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
    459a:	ad04      	add	r5, sp, #16
    459c:	9501      	str	r5, [sp, #4]
    459e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    45a0:	9402      	str	r4, [sp, #8]
    45a2:	9500      	str	r5, [sp, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:599
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
    45a4:	9e05      	ldr	r6, [sp, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:619
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
    45a6:	f7ff ff45 	bl	4434 <prvInitialiseNewTask.isra.2>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:620
			prvAddNewTaskToReadyList( pxNewTCB );
    45aa:	4620      	mov	r0, r4
    45ac:	f7ff fe86 	bl	42bc <prvAddNewTaskToReadyList>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:628
	}
    45b0:	9804      	ldr	r0, [sp, #16]
    45b2:	b006      	add	sp, #24
    45b4:	bd70      	pop	{r4, r5, r6, pc}
    45b6:	bf00      	nop
    45b8:	0000d7a2 	.word	0x0000d7a2
    45bc:	0000d7b9 	.word	0x0000d7b9
    45c0:	0000d7ce 	.word	0x0000d7ce

000045c4 <xTaskCreate>:
xTaskCreate():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:736
	{
    45c4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    45c8:	4607      	mov	r7, r0
    45ca:	b085      	sub	sp, #20
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:770
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
    45cc:	0090      	lsls	r0, r2, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:736
	{
    45ce:	4688      	mov	r8, r1
    45d0:	4616      	mov	r6, r2
    45d2:	4699      	mov	r9, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:770
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
    45d4:	f7fe ff13 	bl	33fe <pvPortMalloc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:772
			if( pxStack != NULL )
    45d8:	4605      	mov	r5, r0
    45da:	b1e8      	cbz	r0, 4618 <xTaskCreate+0x54>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:775
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
    45dc:	205c      	movs	r0, #92	; 0x5c
    45de:	f7fe ff0e 	bl	33fe <pvPortMalloc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:777
				if( pxNewTCB != NULL )
    45e2:	4604      	mov	r4, r0
    45e4:	b1a8      	cbz	r0, 4612 <xTaskCreate+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:802
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
    45e6:	2300      	movs	r3, #0
    45e8:	f880 3059 	strb.w	r3, [r0, #89]	; 0x59
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:806
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
    45ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:780
					pxNewTCB->pxStack = pxStack;
    45ee:	6305      	str	r5, [r0, #48]	; 0x30
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:806
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
    45f0:	9301      	str	r3, [sp, #4]
    45f2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    45f4:	9002      	str	r0, [sp, #8]
    45f6:	9300      	str	r3, [sp, #0]
    45f8:	4632      	mov	r2, r6
    45fa:	464b      	mov	r3, r9
    45fc:	4641      	mov	r1, r8
    45fe:	4638      	mov	r0, r7
    4600:	f7ff ff18 	bl	4434 <prvInitialiseNewTask.isra.2>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:807
			prvAddNewTaskToReadyList( pxNewTCB );
    4604:	4620      	mov	r0, r4
    4606:	f7ff fe59 	bl	42bc <prvAddNewTaskToReadyList>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:808
			xReturn = pdPASS;
    460a:	2001      	movs	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:816
	}
    460c:	b005      	add	sp, #20
    460e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:786
					vPortFree( pxStack );
    4612:	4628      	mov	r0, r5
    4614:	f7fe ff02 	bl	341c <vPortFree>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:812
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
    4618:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:815
		return xReturn;
    461c:	e7f6      	b.n	460c <xTaskCreate+0x48>
    461e:	Address 0x000000000000461e is out of bounds.


00004620 <eTaskGetState>:
eTaskGetState():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1379
	{
    4620:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1384
		configASSERT( pxTCB );
    4622:	4604      	mov	r4, r0
    4624:	b928      	cbnz	r0, 4632 <eTaskGetState+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1384 (discriminator 1)
    4626:	4914      	ldr	r1, [pc, #80]	; (4678 <eTaskGetState+0x58>)
    4628:	f44f 60ad 	mov.w	r0, #1384	; 0x568
    462c:	f7fe fbc6 	bl	2dbc <configASSERT_callback>
    4630:	e7fe      	b.n	4630 <eTaskGetState+0x10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1386
		if( pxTCB == pxCurrentTCB )
    4632:	4b12      	ldr	r3, [pc, #72]	; (467c <eTaskGetState+0x5c>)
    4634:	681b      	ldr	r3, [r3, #0]
    4636:	4283      	cmp	r3, r0
    4638:	d018      	beq.n	466c <eTaskGetState+0x4c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1393
			taskENTER_CRITICAL();
    463a:	f7fe ff63 	bl	3504 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1396
				pxDelayedList = pxDelayedTaskList;
    463e:	4b10      	ldr	r3, [pc, #64]	; (4680 <eTaskGetState+0x60>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1395
				pxStateList = listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
    4640:	6965      	ldr	r5, [r4, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1396
				pxDelayedList = pxDelayedTaskList;
    4642:	681f      	ldr	r7, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1397
				pxOverflowedDelayedList = pxOverflowDelayedTaskList;
    4644:	4b0f      	ldr	r3, [pc, #60]	; (4684 <eTaskGetState+0x64>)
    4646:	681e      	ldr	r6, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1399
			taskEXIT_CRITICAL();
    4648:	f7fe ff7e 	bl	3548 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1401
			if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
    464c:	42bd      	cmp	r5, r7
    464e:	d011      	beq.n	4674 <eTaskGetState+0x54>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1401 (discriminator 1)
    4650:	42b5      	cmp	r5, r6
    4652:	d00f      	beq.n	4674 <eTaskGetState+0x54>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1409
				else if( pxStateList == &xSuspendedTaskList )
    4654:	4b0c      	ldr	r3, [pc, #48]	; (4688 <eTaskGetState+0x68>)
    4656:	429d      	cmp	r5, r3
    4658:	d10a      	bne.n	4670 <eTaskGetState+0x50>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1414
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
    465a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    465c:	b953      	cbnz	r3, 4674 <eTaskGetState+0x54>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1422
							if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
    465e:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1428
								eReturn = eSuspended;
    4662:	2b01      	cmp	r3, #1
    4664:	bf0c      	ite	eq
    4666:	2002      	moveq	r0, #2
    4668:	2003      	movne	r0, #3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1463
	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
    466a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1389
			eReturn = eRunning;
    466c:	2000      	movs	r0, #0
    466e:	e7fc      	b.n	466a <eTaskGetState+0x4a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1458
				eReturn = eReady;
    4670:	2001      	movs	r0, #1
    4672:	e7fa      	b.n	466a <eTaskGetState+0x4a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1405
				eReturn = eBlocked;
    4674:	2002      	movs	r0, #2
    4676:	e7f8      	b.n	466a <eTaskGetState+0x4a>
    4678:	0000d683 	.word	0x0000d683
    467c:	100012c0 	.word	0x100012c0
    4680:	100012c4 	.word	0x100012c4
    4684:	100012c8 	.word	0x100012c8
    4688:	100013f8 	.word	0x100013f8

0000468c <vTaskResume>:
vTaskResume():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1844
	{
    468c:	b570      	push	{r4, r5, r6, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1848
		configASSERT( xTaskToResume );
    468e:	4604      	mov	r4, r0
    4690:	b928      	cbnz	r0, 469e <vTaskResume+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1848 (discriminator 1)
    4692:	491a      	ldr	r1, [pc, #104]	; (46fc <vTaskResume+0x70>)
    4694:	f44f 60e7 	mov.w	r0, #1848	; 0x738
    4698:	f7fe fb90 	bl	2dbc <configASSERT_callback>
    469c:	e7fe      	b.n	469c <vTaskResume+0x10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1852
		if( ( pxTCB != pxCurrentTCB ) && ( pxTCB != NULL ) )
    469e:	4d18      	ldr	r5, [pc, #96]	; (4700 <vTaskResume+0x74>)
    46a0:	682b      	ldr	r3, [r5, #0]
    46a2:	4283      	cmp	r3, r0
    46a4:	d028      	beq.n	46f8 <vTaskResume+0x6c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1854
			taskENTER_CRITICAL();
    46a6:	f7fe ff2d 	bl	3504 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1856
				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
    46aa:	4620      	mov	r0, r4
    46ac:	f7ff fea6 	bl	43fc <prvTaskIsTaskSuspended>
    46b0:	b1f0      	cbz	r0, 46f0 <vTaskResume+0x64>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1862
					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
    46b2:	1d26      	adds	r6, r4, #4
    46b4:	4630      	mov	r0, r6
    46b6:	f7ff f96c 	bl	3992 <uxListRemove>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1863
					prvAddTaskToReadyList( pxTCB );
    46ba:	4912      	ldr	r1, [pc, #72]	; (4704 <vTaskResume+0x78>)
    46bc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    46be:	6808      	ldr	r0, [r1, #0]
    46c0:	2301      	movs	r3, #1
    46c2:	4093      	lsls	r3, r2
    46c4:	4303      	orrs	r3, r0
    46c6:	600b      	str	r3, [r1, #0]
    46c8:	4b0f      	ldr	r3, [pc, #60]	; (4708 <vTaskResume+0x7c>)
    46ca:	2014      	movs	r0, #20
    46cc:	fb00 3002 	mla	r0, r0, r2, r3
    46d0:	4631      	mov	r1, r6
    46d2:	f7ff f93b 	bl	394c <vListInsertEnd>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1866
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
    46d6:	682b      	ldr	r3, [r5, #0]
    46d8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    46da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    46dc:	429a      	cmp	r2, r3
    46de:	d307      	bcc.n	46f0 <vTaskResume+0x64>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1871
						taskYIELD_IF_USING_PREEMPTION();
    46e0:	4b0a      	ldr	r3, [pc, #40]	; (470c <vTaskResume+0x80>)
    46e2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    46e6:	601a      	str	r2, [r3, #0]
    46e8:	f3bf 8f4f 	dsb	sy
    46ec:	f3bf 8f6f 	isb	sy
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1889
	}
    46f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1883
			taskEXIT_CRITICAL();
    46f4:	f7fe bf28 	b.w	3548 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1889
	}
    46f8:	bd70      	pop	{r4, r5, r6, pc}
    46fa:	bf00      	nop
    46fc:	0000d730 	.word	0x0000d730
    4700:	100012c0 	.word	0x100012c0
    4704:	100013a8 	.word	0x100013a8
    4708:	100012cc 	.word	0x100012cc
    470c:	e000ed04 	.word	0xe000ed04

00004710 <vTaskStartScheduler>:
vTaskStartScheduler():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1968
{
    4710:	b510      	push	{r4, lr}
    4712:	b088      	sub	sp, #32
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1974
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
    4714:	2400      	movs	r4, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1980
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
    4716:	aa07      	add	r2, sp, #28
    4718:	a906      	add	r1, sp, #24
    471a:	a805      	add	r0, sp, #20
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1975
		StackType_t *pxIdleTaskStackBuffer = NULL;
    471c:	e9cd 4405 	strd	r4, r4, [sp, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1980
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
    4720:	f7fe fb6c 	bl	2dfc <vApplicationGetIdleTaskMemory>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1981
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
    4724:	9b05      	ldr	r3, [sp, #20]
    4726:	9302      	str	r3, [sp, #8]
    4728:	9b06      	ldr	r3, [sp, #24]
    472a:	9a07      	ldr	r2, [sp, #28]
    472c:	490f      	ldr	r1, [pc, #60]	; (476c <vTaskStartScheduler+0x5c>)
    472e:	4810      	ldr	r0, [pc, #64]	; (4770 <vTaskStartScheduler+0x60>)
    4730:	e9cd 4300 	strd	r4, r3, [sp]
    4734:	4623      	mov	r3, r4
    4736:	f7ff ff0f 	bl	4558 <xTaskCreateStatic>
    473a:	4b0e      	ldr	r3, [pc, #56]	; (4774 <vTaskStartScheduler+0x64>)
    473c:	6018      	str	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1989
		if( xIdleTaskHandle != NULL )
    473e:	b190      	cbz	r0, 4766 <vTaskStartScheduler+0x56>
vPortRaiseBASEPRI():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:195
	__asm volatile
    4740:	f04f 0318 	mov.w	r3, #24
    4744:	f383 8811 	msr	BASEPRI, r3
    4748:	f3bf 8f6f 	isb	sy
    474c:	f3bf 8f4f 	dsb	sy
vTaskStartScheduler():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2049
		xNextTaskUnblockTime = portMAX_DELAY;
    4750:	4b09      	ldr	r3, [pc, #36]	; (4778 <vTaskStartScheduler+0x68>)
    4752:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    4756:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2050
		xSchedulerRunning = pdTRUE;
    4758:	4b08      	ldr	r3, [pc, #32]	; (477c <vTaskStartScheduler+0x6c>)
    475a:	2201      	movs	r2, #1
    475c:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2051
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
    475e:	4b08      	ldr	r3, [pc, #32]	; (4780 <vTaskStartScheduler+0x70>)
    4760:	601c      	str	r4, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2065
		if( xPortStartScheduler() != pdFALSE )
    4762:	f7fe ff65 	bl	3630 <xPortStartScheduler>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2086
}
    4766:	b008      	add	sp, #32
    4768:	bd10      	pop	{r4, pc}
    476a:	bf00      	nop
    476c:	0000d748 	.word	0x0000d748
    4770:	000043b1 	.word	0x000043b1
    4774:	100013d4 	.word	0x100013d4
    4778:	100013d8 	.word	0x100013d8
    477c:	100013f4 	.word	0x100013f4
    4780:	1000140c 	.word	0x1000140c

00004784 <vTaskSuspendAll>:
vTaskSuspendAll():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2106
	++uxSchedulerSuspended;
    4784:	4a02      	ldr	r2, [pc, #8]	; (4790 <vTaskSuspendAll+0xc>)
    4786:	6813      	ldr	r3, [r2, #0]
    4788:	3301      	adds	r3, #1
    478a:	6013      	str	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2108
}
    478c:	4770      	bx	lr
    478e:	bf00      	nop
    4790:	100013a0 	.word	0x100013a0

00004794 <xTaskGetTickCount>:
xTaskGetTickCount():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2291
		xTicks = xTickCount;
    4794:	4b01      	ldr	r3, [pc, #4]	; (479c <xTaskGetTickCount+0x8>)
    4796:	6818      	ldr	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2296
}
    4798:	4770      	bx	lr
    479a:	bf00      	nop
    479c:	1000140c 	.word	0x1000140c

000047a0 <xTaskIncrementTick>:
xTaskIncrementTick():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2666
{
    47a0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2675
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
    47a4:	4b3b      	ldr	r3, [pc, #236]	; (4894 <xTaskIncrementTick+0xf4>)
    47a6:	681b      	ldr	r3, [r3, #0]
    47a8:	2b00      	cmp	r3, #0
    47aa:	d16b      	bne.n	4884 <xTaskIncrementTick+0xe4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2679
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
    47ac:	4b3a      	ldr	r3, [pc, #232]	; (4898 <xTaskIncrementTick+0xf8>)
    47ae:	681c      	ldr	r4, [r3, #0]
    47b0:	3401      	adds	r4, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2683
		xTickCount = xConstTickCount;
    47b2:	601c      	str	r4, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2685
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
    47b4:	b9a4      	cbnz	r4, 47e0 <xTaskIncrementTick+0x40>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2687
			taskSWITCH_DELAYED_LISTS();
    47b6:	4b39      	ldr	r3, [pc, #228]	; (489c <xTaskIncrementTick+0xfc>)
    47b8:	681a      	ldr	r2, [r3, #0]
    47ba:	6812      	ldr	r2, [r2, #0]
    47bc:	b12a      	cbz	r2, 47ca <xTaskIncrementTick+0x2a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2687 (discriminator 1)
    47be:	4938      	ldr	r1, [pc, #224]	; (48a0 <xTaskIncrementTick+0x100>)
    47c0:	f640 207f 	movw	r0, #2687	; 0xa7f
    47c4:	f7fe fafa 	bl	2dbc <configASSERT_callback>
    47c8:	e7fe      	b.n	47c8 <xTaskIncrementTick+0x28>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2687 (discriminator 2)
    47ca:	4a36      	ldr	r2, [pc, #216]	; (48a4 <xTaskIncrementTick+0x104>)
    47cc:	6819      	ldr	r1, [r3, #0]
    47ce:	6810      	ldr	r0, [r2, #0]
    47d0:	6018      	str	r0, [r3, #0]
    47d2:	6011      	str	r1, [r2, #0]
    47d4:	4a34      	ldr	r2, [pc, #208]	; (48a8 <xTaskIncrementTick+0x108>)
    47d6:	6813      	ldr	r3, [r2, #0]
    47d8:	3301      	adds	r3, #1
    47da:	6013      	str	r3, [r2, #0]
    47dc:	f7ff fdfc 	bl	43d8 <prvResetNextTaskUnblockTime>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2698
		if( xConstTickCount >= xNextTaskUnblockTime )
    47e0:	4d32      	ldr	r5, [pc, #200]	; (48ac <xTaskIncrementTick+0x10c>)
    47e2:	4f33      	ldr	r7, [pc, #204]	; (48b0 <xTaskIncrementTick+0x110>)
    47e4:	682b      	ldr	r3, [r5, #0]
    47e6:	42a3      	cmp	r3, r4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2669
BaseType_t xSwitchRequired = pdFALSE;
    47e8:	f04f 0b00 	mov.w	fp, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2698
		if( xConstTickCount >= xNextTaskUnblockTime )
    47ec:	d911      	bls.n	4812 <xTaskIncrementTick+0x72>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2781
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
    47ee:	683a      	ldr	r2, [r7, #0]
    47f0:	4b30      	ldr	r3, [pc, #192]	; (48b4 <xTaskIncrementTick+0x114>)
    47f2:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
    47f4:	2214      	movs	r2, #20
    47f6:	434a      	muls	r2, r1
    47f8:	589a      	ldr	r2, [r3, r2]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2783
				xSwitchRequired = pdTRUE;
    47fa:	2a02      	cmp	r2, #2
    47fc:	bf28      	it	cs
    47fe:	f04f 0b01 	movcs.w	fp, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2822
		if( xYieldPending != pdFALSE )
    4802:	4a2d      	ldr	r2, [pc, #180]	; (48b8 <xTaskIncrementTick+0x118>)
    4804:	6812      	ldr	r2, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2824
			xSwitchRequired = pdTRUE;
    4806:	2a00      	cmp	r2, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2834
}
    4808:	bf0c      	ite	eq
    480a:	4658      	moveq	r0, fp
    480c:	2001      	movne	r0, #1
    480e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2702
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
    4812:	f8df a088 	ldr.w	sl, [pc, #136]	; 489c <xTaskIncrementTick+0xfc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2752
					prvAddTaskToReadyList( pxTCB );
    4816:	f8df 90a8 	ldr.w	r9, [pc, #168]	; 48c0 <xTaskIncrementTick+0x120>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2702
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
    481a:	f8da 2000 	ldr.w	r2, [sl]
    481e:	6812      	ldr	r2, [r2, #0]
    4820:	b91a      	cbnz	r2, 482a <xTaskIncrementTick+0x8a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2709
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    4822:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    4826:	602a      	str	r2, [r5, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2710
					break;
    4828:	e7e1      	b.n	47ee <xTaskIncrementTick+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2718
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    482a:	f8da 2000 	ldr.w	r2, [sl]
    482e:	68d2      	ldr	r2, [r2, #12]
    4830:	68d6      	ldr	r6, [r2, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2719
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
    4832:	6871      	ldr	r1, [r6, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2721
					if( xConstTickCount < xItemValue )
    4834:	428c      	cmp	r4, r1
    4836:	d201      	bcs.n	483c <xTaskIncrementTick+0x9c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2728
						xNextTaskUnblockTime = xItemValue;
    4838:	6029      	str	r1, [r5, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2729
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
    483a:	e7d8      	b.n	47ee <xTaskIncrementTick+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2737
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
    483c:	f106 0804 	add.w	r8, r6, #4
    4840:	4640      	mov	r0, r8
    4842:	f7ff f8a6 	bl	3992 <uxListRemove>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2741
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
    4846:	6ab1      	ldr	r1, [r6, #40]	; 0x28
    4848:	b119      	cbz	r1, 4852 <xTaskIncrementTick+0xb2>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2743
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
    484a:	f106 0018 	add.w	r0, r6, #24
    484e:	f7ff f8a0 	bl	3992 <uxListRemove>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2752
					prvAddTaskToReadyList( pxTCB );
    4852:	6af0      	ldr	r0, [r6, #44]	; 0x2c
    4854:	f8d9 3000 	ldr.w	r3, [r9]
    4858:	2201      	movs	r2, #1
    485a:	fa02 f100 	lsl.w	r1, r2, r0
    485e:	4319      	orrs	r1, r3
    4860:	4b14      	ldr	r3, [pc, #80]	; (48b4 <xTaskIncrementTick+0x114>)
    4862:	f8c9 1000 	str.w	r1, [r9]
    4866:	f04f 0c14 	mov.w	ip, #20
    486a:	4641      	mov	r1, r8
    486c:	fb0c 3000 	mla	r0, ip, r0, r3
    4870:	f7ff f86c 	bl	394c <vListInsertEnd>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2762
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
    4874:	6838      	ldr	r0, [r7, #0]
    4876:	6af1      	ldr	r1, [r6, #44]	; 0x2c
    4878:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2764
							xSwitchRequired = pdTRUE;
    487a:	4291      	cmp	r1, r2
    487c:	bf28      	it	cs
    487e:	f04f 0b01 	movcs.w	fp, #1
    4882:	e7ca      	b.n	481a <xTaskIncrementTick+0x7a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2809
		++uxPendedTicks;
    4884:	4a0d      	ldr	r2, [pc, #52]	; (48bc <xTaskIncrementTick+0x11c>)
    4886:	6813      	ldr	r3, [r2, #0]
    4888:	3301      	adds	r3, #1
    488a:	6013      	str	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2669
BaseType_t xSwitchRequired = pdFALSE;
    488c:	f04f 0b00 	mov.w	fp, #0
    4890:	e7b7      	b.n	4802 <xTaskIncrementTick+0x62>
    4892:	bf00      	nop
    4894:	100013a0 	.word	0x100013a0
    4898:	1000140c 	.word	0x1000140c
    489c:	100012c4 	.word	0x100012c4
    48a0:	0000d7e7 	.word	0x0000d7e7
    48a4:	100012c8 	.word	0x100012c8
    48a8:	100013dc 	.word	0x100013dc
    48ac:	100013d8 	.word	0x100013d8
    48b0:	100012c0 	.word	0x100012c0
    48b4:	100012cc 	.word	0x100012cc
    48b8:	10001410 	.word	0x10001410
    48bc:	1000139c 	.word	0x1000139c
    48c0:	100013a8 	.word	0x100013a8

000048c4 <xTaskResumeAll>:
xTaskResumeAll():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2175
{
    48c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2181
	configASSERT( uxSchedulerSuspended );
    48c8:	4c2f      	ldr	r4, [pc, #188]	; (4988 <xTaskResumeAll+0xc4>)
    48ca:	6823      	ldr	r3, [r4, #0]
    48cc:	b92b      	cbnz	r3, 48da <xTaskResumeAll+0x16>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2181 (discriminator 1)
    48ce:	492f      	ldr	r1, [pc, #188]	; (498c <xTaskResumeAll+0xc8>)
    48d0:	f640 0085 	movw	r0, #2181	; 0x885
    48d4:	f7fe fa72 	bl	2dbc <configASSERT_callback>
    48d8:	e7fe      	b.n	48d8 <xTaskResumeAll+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2188
	taskENTER_CRITICAL();
    48da:	f7fe fe13 	bl	3504 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2190
		--uxSchedulerSuspended;
    48de:	6823      	ldr	r3, [r4, #0]
    48e0:	3b01      	subs	r3, #1
    48e2:	6023      	str	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2192
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
    48e4:	6824      	ldr	r4, [r4, #0]
    48e6:	b12c      	cbz	r4, 48f4 <xTaskResumeAll+0x30>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2177
BaseType_t xAlreadyYielded = pdFALSE;
    48e8:	2400      	movs	r4, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2278
	taskEXIT_CRITICAL();
    48ea:	f7fe fe2d 	bl	3548 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2281
}
    48ee:	4620      	mov	r0, r4
    48f0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2194
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
    48f4:	4b26      	ldr	r3, [pc, #152]	; (4990 <xTaskResumeAll+0xcc>)
    48f6:	681b      	ldr	r3, [r3, #0]
    48f8:	2b00      	cmp	r3, #0
    48fa:	d0f5      	beq.n	48e8 <xTaskResumeAll+0x24>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2198
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
    48fc:	4d25      	ldr	r5, [pc, #148]	; (4994 <xTaskResumeAll+0xd0>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2203
					prvAddTaskToReadyList( pxTCB );
    48fe:	4e26      	ldr	r6, [pc, #152]	; (4998 <xTaskResumeAll+0xd4>)
    4900:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 49ac <xTaskResumeAll+0xe8>
    4904:	e01f      	b.n	4946 <xTaskResumeAll+0x82>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2200
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    4906:	68eb      	ldr	r3, [r5, #12]
    4908:	68dc      	ldr	r4, [r3, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2202
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
    490a:	f104 0904 	add.w	r9, r4, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2201
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
    490e:	f104 0018 	add.w	r0, r4, #24
    4912:	f7ff f83e 	bl	3992 <uxListRemove>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2202
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
    4916:	4648      	mov	r0, r9
    4918:	f7ff f83b 	bl	3992 <uxListRemove>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2203
					prvAddTaskToReadyList( pxTCB );
    491c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    491e:	6831      	ldr	r1, [r6, #0]
    4920:	2701      	movs	r7, #1
    4922:	fa07 f302 	lsl.w	r3, r7, r2
    4926:	2014      	movs	r0, #20
    4928:	430b      	orrs	r3, r1
    492a:	fb00 8002 	mla	r0, r0, r2, r8
    492e:	4649      	mov	r1, r9
    4930:	6033      	str	r3, [r6, #0]
    4932:	f7ff f80b 	bl	394c <vListInsertEnd>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2207
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
    4936:	4b19      	ldr	r3, [pc, #100]	; (499c <xTaskResumeAll+0xd8>)
    4938:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    493a:	681b      	ldr	r3, [r3, #0]
    493c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    493e:	429a      	cmp	r2, r3
    4940:	d301      	bcc.n	4946 <xTaskResumeAll+0x82>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2209
						xYieldPending = pdTRUE;
    4942:	4b17      	ldr	r3, [pc, #92]	; (49a0 <xTaskResumeAll+0xdc>)
    4944:	601f      	str	r7, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2198
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
    4946:	682b      	ldr	r3, [r5, #0]
    4948:	2b00      	cmp	r3, #0
    494a:	d1dc      	bne.n	4906 <xTaskResumeAll+0x42>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2217
				if( pxTCB != NULL )
    494c:	b10c      	cbz	r4, 4952 <xTaskResumeAll+0x8e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2225
					prvResetNextTaskUnblockTime();
    494e:	f7ff fd43 	bl	43d8 <prvResetNextTaskUnblockTime>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2233
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
    4952:	4d14      	ldr	r5, [pc, #80]	; (49a4 <xTaskResumeAll+0xe0>)
    4954:	682c      	ldr	r4, [r5, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2235
					if( uxPendedCounts > ( UBaseType_t ) 0U )
    4956:	b144      	cbz	r4, 496a <xTaskResumeAll+0xa6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2241
								xYieldPending = pdTRUE;
    4958:	4e11      	ldr	r6, [pc, #68]	; (49a0 <xTaskResumeAll+0xdc>)
    495a:	2701      	movs	r7, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2239
							if( xTaskIncrementTick() != pdFALSE )
    495c:	f7ff ff20 	bl	47a0 <xTaskIncrementTick>
    4960:	b100      	cbz	r0, 4964 <xTaskResumeAll+0xa0>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2241
								xYieldPending = pdTRUE;
    4962:	6037      	str	r7, [r6, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2248
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
    4964:	3c01      	subs	r4, #1
    4966:	d1f9      	bne.n	495c <xTaskResumeAll+0x98>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2250
						uxPendedTicks = 0;
    4968:	602c      	str	r4, [r5, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2258
				if( xYieldPending != pdFALSE )
    496a:	4b0d      	ldr	r3, [pc, #52]	; (49a0 <xTaskResumeAll+0xdc>)
    496c:	681b      	ldr	r3, [r3, #0]
    496e:	2b00      	cmp	r3, #0
    4970:	d0ba      	beq.n	48e8 <xTaskResumeAll+0x24>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2265
					taskYIELD_IF_USING_PREEMPTION();
    4972:	4b0d      	ldr	r3, [pc, #52]	; (49a8 <xTaskResumeAll+0xe4>)
    4974:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    4978:	601a      	str	r2, [r3, #0]
    497a:	f3bf 8f4f 	dsb	sy
    497e:	f3bf 8f6f 	isb	sy
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2262
						xAlreadyYielded = pdTRUE;
    4982:	2401      	movs	r4, #1
    4984:	e7b1      	b.n	48ea <xTaskResumeAll+0x26>
    4986:	bf00      	nop
    4988:	100013a0 	.word	0x100013a0
    498c:	0000d84c 	.word	0x0000d84c
    4990:	10001398 	.word	0x10001398
    4994:	100013e0 	.word	0x100013e0
    4998:	100013a8 	.word	0x100013a8
    499c:	100012c0 	.word	0x100012c0
    49a0:	10001410 	.word	0x10001410
    49a4:	1000139c 	.word	0x1000139c
    49a8:	e000ed04 	.word	0xe000ed04
    49ac:	100012cc 	.word	0x100012cc

000049b0 <vTaskDelay>:
vTaskDelay():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1334
	{
    49b0:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1338
		if( xTicksToDelay > ( TickType_t ) 0U )
    49b2:	b940      	cbnz	r0, 49c6 <vTaskDelay+0x16>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1365
			portYIELD_WITHIN_API();
    49b4:	4b0d      	ldr	r3, [pc, #52]	; (49ec <vTaskDelay+0x3c>)
    49b6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    49ba:	601a      	str	r2, [r3, #0]
    49bc:	f3bf 8f4f 	dsb	sy
    49c0:	f3bf 8f6f 	isb	sy
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1371
	}
    49c4:	bd08      	pop	{r3, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1340
			configASSERT( uxSchedulerSuspended == 0 );
    49c6:	4b0a      	ldr	r3, [pc, #40]	; (49f0 <vTaskDelay+0x40>)
    49c8:	6819      	ldr	r1, [r3, #0]
    49ca:	b129      	cbz	r1, 49d8 <vTaskDelay+0x28>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1340 (discriminator 1)
    49cc:	4909      	ldr	r1, [pc, #36]	; (49f4 <vTaskDelay+0x44>)
    49ce:	f240 503c 	movw	r0, #1340	; 0x53c
    49d2:	f7fe f9f3 	bl	2dbc <configASSERT_callback>
    49d6:	e7fe      	b.n	49d6 <vTaskDelay+0x26>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1341
			vTaskSuspendAll();
    49d8:	f7ff fed4 	bl	4784 <vTaskSuspendAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1352
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
    49dc:	f7ff fd76 	bl	44cc <prvAddCurrentTaskToDelayedList>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1354
			xAlreadyYielded = xTaskResumeAll();
    49e0:	f7ff ff70 	bl	48c4 <xTaskResumeAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1363
		if( xAlreadyYielded == pdFALSE )
    49e4:	2800      	cmp	r0, #0
    49e6:	d0e5      	beq.n	49b4 <vTaskDelay+0x4>
    49e8:	e7ec      	b.n	49c4 <vTaskDelay+0x14>
    49ea:	bf00      	nop
    49ec:	e000ed04 	.word	0xe000ed04
    49f0:	100013a0 	.word	0x100013a0
    49f4:	0000d6ba 	.word	0x0000d6ba

000049f8 <vTaskSwitchContext>:
vTaskSwitchContext():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2948
{
    49f8:	b538      	push	{r3, r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2949
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
    49fa:	4b27      	ldr	r3, [pc, #156]	; (4a98 <vTaskSwitchContext+0xa0>)
    49fc:	681a      	ldr	r2, [r3, #0]
    49fe:	4b27      	ldr	r3, [pc, #156]	; (4a9c <vTaskSwitchContext+0xa4>)
    4a00:	b112      	cbz	r2, 4a08 <vTaskSwitchContext+0x10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2953
		xYieldPending = pdTRUE;
    4a02:	2201      	movs	r2, #1
    4a04:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3017
}
    4a06:	bd38      	pop	{r3, r4, r5, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2957
		xYieldPending = pdFALSE;
    4a08:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2965
				ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
    4a0a:	f7fe fa03 	bl	2e14 <freertos_hooks__get_run_time_counter_value>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2975
			if( ulTotalRunTime > ulTaskSwitchedInTime )
    4a0e:	4a24      	ldr	r2, [pc, #144]	; (4aa0 <vTaskSwitchContext+0xa8>)
    4a10:	4c24      	ldr	r4, [pc, #144]	; (4aa4 <vTaskSwitchContext+0xac>)
    4a12:	6815      	ldr	r5, [r2, #0]
    4a14:	42a8      	cmp	r0, r5
    4a16:	d904      	bls.n	4a22 <vTaskSwitchContext+0x2a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2977
				pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
    4a18:	6821      	ldr	r1, [r4, #0]
    4a1a:	6d0b      	ldr	r3, [r1, #80]	; 0x50
    4a1c:	1b5b      	subs	r3, r3, r5
    4a1e:	4403      	add	r3, r0
    4a20:	650b      	str	r3, [r1, #80]	; 0x50
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2988
		taskCHECK_FOR_STACK_OVERFLOW();
    4a22:	6823      	ldr	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2983
			ulTaskSwitchedInTime = ulTotalRunTime;
    4a24:	6010      	str	r0, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2988
		taskCHECK_FOR_STACK_OVERFLOW();
    4a26:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    4a28:	681a      	ldr	r2, [r3, #0]
    4a2a:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
    4a2e:	d10b      	bne.n	4a48 <vTaskSwitchContext+0x50>
    4a30:	685a      	ldr	r2, [r3, #4]
    4a32:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
    4a36:	d107      	bne.n	4a48 <vTaskSwitchContext+0x50>
    4a38:	689a      	ldr	r2, [r3, #8]
    4a3a:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
    4a3e:	d103      	bne.n	4a48 <vTaskSwitchContext+0x50>
    4a40:	68db      	ldr	r3, [r3, #12]
    4a42:	f1b3 3fa5 	cmp.w	r3, #2779096485	; 0xa5a5a5a5
    4a46:	d004      	beq.n	4a52 <vTaskSwitchContext+0x5a>
    4a48:	6820      	ldr	r0, [r4, #0]
    4a4a:	6821      	ldr	r1, [r4, #0]
    4a4c:	3134      	adds	r1, #52	; 0x34
    4a4e:	f7fe f997 	bl	2d80 <vApplicationStackOverflowHook>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2999
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    4a52:	4b15      	ldr	r3, [pc, #84]	; (4aa8 <vTaskSwitchContext+0xb0>)
    4a54:	681b      	ldr	r3, [r3, #0]
ucPortCountLeadingZeros():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:134
		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
    4a56:	fab3 f383 	clz	r3, r3
    4a5a:	b2db      	uxtb	r3, r3
vTaskSwitchContext():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2999
    4a5c:	f1c3 031f 	rsb	r3, r3, #31
    4a60:	2214      	movs	r2, #20
    4a62:	4912      	ldr	r1, [pc, #72]	; (4aac <vTaskSwitchContext+0xb4>)
    4a64:	435a      	muls	r2, r3
    4a66:	1888      	adds	r0, r1, r2
    4a68:	588d      	ldr	r5, [r1, r2]
    4a6a:	b92d      	cbnz	r5, 4a78 <vTaskSwitchContext+0x80>
    4a6c:	4910      	ldr	r1, [pc, #64]	; (4ab0 <vTaskSwitchContext+0xb8>)
    4a6e:	f640 30b7 	movw	r0, #2999	; 0xbb7
    4a72:	f7fe f9a3 	bl	2dbc <configASSERT_callback>
    4a76:	e7fe      	b.n	4a76 <vTaskSwitchContext+0x7e>
    4a78:	6845      	ldr	r5, [r0, #4]
    4a7a:	3208      	adds	r2, #8
    4a7c:	686d      	ldr	r5, [r5, #4]
    4a7e:	6045      	str	r5, [r0, #4]
    4a80:	440a      	add	r2, r1
    4a82:	4295      	cmp	r5, r2
    4a84:	bf04      	itt	eq
    4a86:	686a      	ldreq	r2, [r5, #4]
    4a88:	6042      	streq	r2, [r0, #4]
    4a8a:	2214      	movs	r2, #20
    4a8c:	fb02 1303 	mla	r3, r2, r3, r1
    4a90:	685b      	ldr	r3, [r3, #4]
    4a92:	68db      	ldr	r3, [r3, #12]
    4a94:	6023      	str	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3017
}
    4a96:	e7b6      	b.n	4a06 <vTaskSwitchContext+0xe>
    4a98:	100013a0 	.word	0x100013a0
    4a9c:	10001410 	.word	0x10001410
    4aa0:	10001394 	.word	0x10001394
    4aa4:	100012c0 	.word	0x100012c0
    4aa8:	100013a8 	.word	0x100013a8
    4aac:	100012cc 	.word	0x100012cc
    4ab0:	0000d74d 	.word	0x0000d74d

00004ab4 <vTaskSuspend>:
vTaskSuspend():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1697
	{
    4ab4:	b570      	push	{r4, r5, r6, lr}
    4ab6:	4604      	mov	r4, r0
    4ab8:	4e2a      	ldr	r6, [pc, #168]	; (4b64 <vTaskSuspend+0xb0>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1700
		taskENTER_CRITICAL();
    4aba:	f7fe fd23 	bl	3504 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1704
			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
    4abe:	b904      	cbnz	r4, 4ac2 <vTaskSuspend+0xe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1704 (discriminator 1)
    4ac0:	6834      	ldr	r4, [r6, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1710 (discriminator 4)
			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    4ac2:	1d25      	adds	r5, r4, #4
    4ac4:	4628      	mov	r0, r5
    4ac6:	f7fe ff64 	bl	3992 <uxListRemove>
    4aca:	b960      	cbnz	r0, 4ae6 <vTaskSuspend+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1712
				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
    4acc:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
    4ace:	4b26      	ldr	r3, [pc, #152]	; (4b68 <vTaskSuspend+0xb4>)
    4ad0:	2114      	movs	r1, #20
    4ad2:	4341      	muls	r1, r0
    4ad4:	585b      	ldr	r3, [r3, r1]
    4ad6:	b933      	cbnz	r3, 4ae6 <vTaskSuspend+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1712 (discriminator 1)
    4ad8:	4924      	ldr	r1, [pc, #144]	; (4b6c <vTaskSuspend+0xb8>)
    4ada:	2201      	movs	r2, #1
    4adc:	680b      	ldr	r3, [r1, #0]
    4ade:	4082      	lsls	r2, r0
    4ae0:	ea23 0302 	bic.w	r3, r3, r2
    4ae4:	600b      	str	r3, [r1, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1720
			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
    4ae6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    4ae8:	b11b      	cbz	r3, 4af2 <vTaskSuspend+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1722
				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
    4aea:	f104 0018 	add.w	r0, r4, #24
    4aee:	f7fe ff50 	bl	3992 <uxListRemove>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1729
			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
    4af2:	4629      	mov	r1, r5
    4af4:	481e      	ldr	r0, [pc, #120]	; (4b70 <vTaskSuspend+0xbc>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1744
		if( xSchedulerRunning != pdFALSE )
    4af6:	4d1f      	ldr	r5, [pc, #124]	; (4b74 <vTaskSuspend+0xc0>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1729
			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
    4af8:	f7fe ff28 	bl	394c <vListInsertEnd>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1733
				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
    4afc:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
    4b00:	2b01      	cmp	r3, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1737
					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
    4b02:	bf04      	itt	eq
    4b04:	2300      	moveq	r3, #0
    4b06:	f884 3058 	strbeq.w	r3, [r4, #88]	; 0x58
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1742
		taskEXIT_CRITICAL();
    4b0a:	f7fe fd1d 	bl	3548 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1744
		if( xSchedulerRunning != pdFALSE )
    4b0e:	682a      	ldr	r2, [r5, #0]
    4b10:	b12a      	cbz	r2, 4b1e <vTaskSuspend+0x6a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1748
			taskENTER_CRITICAL();
    4b12:	f7fe fcf7 	bl	3504 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1750
				prvResetNextTaskUnblockTime();
    4b16:	f7ff fc5f 	bl	43d8 <prvResetNextTaskUnblockTime>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1752
			taskEXIT_CRITICAL();
    4b1a:	f7fe fd15 	bl	3548 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1759
		if( pxTCB == pxCurrentTCB )
    4b1e:	6833      	ldr	r3, [r6, #0]
    4b20:	42a3      	cmp	r3, r4
    4b22:	d112      	bne.n	4b4a <vTaskSuspend+0x96>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1761
			if( xSchedulerRunning != pdFALSE )
    4b24:	682b      	ldr	r3, [r5, #0]
    4b26:	b18b      	cbz	r3, 4b4c <vTaskSuspend+0x98>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1764
				configASSERT( uxSchedulerSuspended == 0 );
    4b28:	4b13      	ldr	r3, [pc, #76]	; (4b78 <vTaskSuspend+0xc4>)
    4b2a:	681b      	ldr	r3, [r3, #0]
    4b2c:	b12b      	cbz	r3, 4b3a <vTaskSuspend+0x86>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1764 (discriminator 1)
    4b2e:	4913      	ldr	r1, [pc, #76]	; (4b7c <vTaskSuspend+0xc8>)
    4b30:	f240 60e4 	movw	r0, #1764	; 0x6e4
    4b34:	f7fe f942 	bl	2dbc <configASSERT_callback>
    4b38:	e7fe      	b.n	4b38 <vTaskSuspend+0x84>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1765
				portYIELD_WITHIN_API();
    4b3a:	4b11      	ldr	r3, [pc, #68]	; (4b80 <vTaskSuspend+0xcc>)
    4b3c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    4b40:	601a      	str	r2, [r3, #0]
    4b42:	f3bf 8f4f 	dsb	sy
    4b46:	f3bf 8f6f 	isb	sy
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1790
	}
    4b4a:	bd70      	pop	{r4, r5, r6, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1772
				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) /*lint !e931 Right has no side effect, just volatile. */
    4b4c:	4a08      	ldr	r2, [pc, #32]	; (4b70 <vTaskSuspend+0xbc>)
    4b4e:	6811      	ldr	r1, [r2, #0]
    4b50:	4a0c      	ldr	r2, [pc, #48]	; (4b84 <vTaskSuspend+0xd0>)
    4b52:	6812      	ldr	r2, [r2, #0]
    4b54:	4291      	cmp	r1, r2
    4b56:	d101      	bne.n	4b5c <vTaskSuspend+0xa8>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1778
					pxCurrentTCB = NULL;
    4b58:	6033      	str	r3, [r6, #0]
    4b5a:	e7f6      	b.n	4b4a <vTaskSuspend+0x96>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1790
	}
    4b5c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1782
					vTaskSwitchContext();
    4b60:	f7ff bf4a 	b.w	49f8 <vTaskSwitchContext>
    4b64:	100012c0 	.word	0x100012c0
    4b68:	100012cc 	.word	0x100012cc
    4b6c:	100013a8 	.word	0x100013a8
    4b70:	100013f8 	.word	0x100013f8
    4b74:	100013f4 	.word	0x100013f4
    4b78:	100013a0 	.word	0x100013a0
    4b7c:	0000d6ba 	.word	0x0000d6ba
    4b80:	e000ed04 	.word	0xe000ed04
    4b84:	10001398 	.word	0x10001398

00004b88 <vTaskPlaceOnEventList>:
vTaskPlaceOnEventList():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3021
{
    4b88:	b510      	push	{r4, lr}
    4b8a:	460c      	mov	r4, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3022
	configASSERT( pxEventList );
    4b8c:	b928      	cbnz	r0, 4b9a <vTaskPlaceOnEventList+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3022 (discriminator 1)
    4b8e:	4908      	ldr	r1, [pc, #32]	; (4bb0 <vTaskPlaceOnEventList+0x28>)
    4b90:	f640 30ce 	movw	r0, #3022	; 0xbce
    4b94:	f7fe f912 	bl	2dbc <configASSERT_callback>
    4b98:	e7fe      	b.n	4b98 <vTaskPlaceOnEventList+0x10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3031
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
    4b9a:	4b06      	ldr	r3, [pc, #24]	; (4bb4 <vTaskPlaceOnEventList+0x2c>)
    4b9c:	6819      	ldr	r1, [r3, #0]
    4b9e:	3118      	adds	r1, #24
    4ba0:	f7fe fee0 	bl	3964 <vListInsert>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3033
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
    4ba4:	4620      	mov	r0, r4
    4ba6:	2101      	movs	r1, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3034
}
    4ba8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3033
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
    4bac:	f7ff bc8e 	b.w	44cc <prvAddCurrentTaskToDelayedList>
    4bb0:	0000d6d4 	.word	0x0000d6d4
    4bb4:	100012c0 	.word	0x100012c0

00004bb8 <vTaskPlaceOnUnorderedEventList>:
vTaskPlaceOnUnorderedEventList():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3038
{
    4bb8:	b510      	push	{r4, lr}
    4bba:	4614      	mov	r4, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3039
	configASSERT( pxEventList );
    4bbc:	b928      	cbnz	r0, 4bca <vTaskPlaceOnUnorderedEventList+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3039 (discriminator 1)
    4bbe:	490f      	ldr	r1, [pc, #60]	; (4bfc <vTaskPlaceOnUnorderedEventList+0x44>)
    4bc0:	f640 30df 	movw	r0, #3039	; 0xbdf
    4bc4:	f7fe f8fa 	bl	2dbc <configASSERT_callback>
    4bc8:	e7fe      	b.n	4bc8 <vTaskPlaceOnUnorderedEventList+0x10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3043
	configASSERT( uxSchedulerSuspended != 0 );
    4bca:	4b0d      	ldr	r3, [pc, #52]	; (4c00 <vTaskPlaceOnUnorderedEventList+0x48>)
    4bcc:	681b      	ldr	r3, [r3, #0]
    4bce:	b92b      	cbnz	r3, 4bdc <vTaskPlaceOnUnorderedEventList+0x24>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3043 (discriminator 1)
    4bd0:	490c      	ldr	r1, [pc, #48]	; (4c04 <vTaskPlaceOnUnorderedEventList+0x4c>)
    4bd2:	f640 30e3 	movw	r0, #3043	; 0xbe3
    4bd6:	f7fe f8f1 	bl	2dbc <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3043 (discriminator 2)
    4bda:	e7fe      	b.n	4bda <vTaskPlaceOnUnorderedEventList+0x22>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3048
	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
    4bdc:	4b0a      	ldr	r3, [pc, #40]	; (4c08 <vTaskPlaceOnUnorderedEventList+0x50>)
    4bde:	681a      	ldr	r2, [r3, #0]
    4be0:	f041 4100 	orr.w	r1, r1, #2147483648	; 0x80000000
    4be4:	6191      	str	r1, [r2, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3055
	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
    4be6:	6819      	ldr	r1, [r3, #0]
    4be8:	3118      	adds	r1, #24
    4bea:	f7fe feaf 	bl	394c <vListInsertEnd>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3057
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
    4bee:	4620      	mov	r0, r4
    4bf0:	2101      	movs	r1, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3058
}
    4bf2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3057
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
    4bf6:	f7ff bc69 	b.w	44cc <prvAddCurrentTaskToDelayedList>
    4bfa:	bf00      	nop
    4bfc:	0000d6d4 	.word	0x0000d6d4
    4c00:	100013a0 	.word	0x100013a0
    4c04:	0000d6e0 	.word	0x0000d6e0
    4c08:	100012c0 	.word	0x100012c0

00004c0c <xTaskRemoveFromEventList>:
xTaskRemoveFromEventList():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3095
{
    4c0c:	b538      	push	{r3, r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3112
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    4c0e:	68c3      	ldr	r3, [r0, #12]
    4c10:	68dc      	ldr	r4, [r3, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3113
	configASSERT( pxUnblockedTCB );
    4c12:	b92c      	cbnz	r4, 4c20 <xTaskRemoveFromEventList+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3113 (discriminator 1)
    4c14:	4916      	ldr	r1, [pc, #88]	; (4c70 <xTaskRemoveFromEventList+0x64>)
    4c16:	f640 4029 	movw	r0, #3113	; 0xc29
    4c1a:	f7fe f8cf 	bl	2dbc <configASSERT_callback>
    4c1e:	e7fe      	b.n	4c1e <xTaskRemoveFromEventList+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3114
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
    4c20:	f104 0518 	add.w	r5, r4, #24
    4c24:	4628      	mov	r0, r5
    4c26:	f7fe feb4 	bl	3992 <uxListRemove>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3116
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
    4c2a:	4b12      	ldr	r3, [pc, #72]	; (4c74 <xTaskRemoveFromEventList+0x68>)
    4c2c:	681b      	ldr	r3, [r3, #0]
    4c2e:	b9e3      	cbnz	r3, 4c6a <xTaskRemoveFromEventList+0x5e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3118
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
    4c30:	1d25      	adds	r5, r4, #4
    4c32:	4628      	mov	r0, r5
    4c34:	f7fe fead 	bl	3992 <uxListRemove>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3119
		prvAddTaskToReadyList( pxUnblockedTCB );
    4c38:	490f      	ldr	r1, [pc, #60]	; (4c78 <xTaskRemoveFromEventList+0x6c>)
    4c3a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    4c3c:	6808      	ldr	r0, [r1, #0]
    4c3e:	2301      	movs	r3, #1
    4c40:	4093      	lsls	r3, r2
    4c42:	4303      	orrs	r3, r0
    4c44:	600b      	str	r3, [r1, #0]
    4c46:	4b0d      	ldr	r3, [pc, #52]	; (4c7c <xTaskRemoveFromEventList+0x70>)
    4c48:	2014      	movs	r0, #20
    4c4a:	4629      	mov	r1, r5
    4c4c:	fb00 3002 	mla	r0, r0, r2, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3139
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
    4c50:	f7fe fe7c 	bl	394c <vListInsertEnd>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3142
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
    4c54:	4b0a      	ldr	r3, [pc, #40]	; (4c80 <xTaskRemoveFromEventList+0x74>)
    4c56:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    4c58:	681b      	ldr	r3, [r3, #0]
    4c5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    4c5c:	429a      	cmp	r2, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3151
		xYieldPending = pdTRUE;
    4c5e:	bf83      	ittte	hi
    4c60:	4b08      	ldrhi	r3, [pc, #32]	; (4c84 <xTaskRemoveFromEventList+0x78>)
    4c62:	2001      	movhi	r0, #1
    4c64:	6018      	strhi	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3155
		xReturn = pdFALSE;
    4c66:	2000      	movls	r0, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3159
}
    4c68:	bd38      	pop	{r3, r4, r5, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3139
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
    4c6a:	4629      	mov	r1, r5
    4c6c:	4806      	ldr	r0, [pc, #24]	; (4c88 <xTaskRemoveFromEventList+0x7c>)
    4c6e:	e7ef      	b.n	4c50 <xTaskRemoveFromEventList+0x44>
    4c70:	0000d83d 	.word	0x0000d83d
    4c74:	100013a0 	.word	0x100013a0
    4c78:	100013a8 	.word	0x100013a8
    4c7c:	100012cc 	.word	0x100012cc
    4c80:	100012c0 	.word	0x100012c0
    4c84:	10001410 	.word	0x10001410
    4c88:	100013e0 	.word	0x100013e0

00004c8c <vTaskRemoveFromUnorderedEventList>:
vTaskRemoveFromUnorderedEventList():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3168
	configASSERT( uxSchedulerSuspended != pdFALSE );
    4c8c:	4a19      	ldr	r2, [pc, #100]	; (4cf4 <vTaskRemoveFromUnorderedEventList+0x68>)
    4c8e:	6812      	ldr	r2, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3163
{
    4c90:	b570      	push	{r4, r5, r6, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3168
	configASSERT( uxSchedulerSuspended != pdFALSE );
    4c92:	b92a      	cbnz	r2, 4ca0 <vTaskRemoveFromUnorderedEventList+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3168 (discriminator 1)
    4c94:	4918      	ldr	r1, [pc, #96]	; (4cf8 <vTaskRemoveFromUnorderedEventList+0x6c>)
    4c96:	f44f 6046 	mov.w	r0, #3168	; 0xc60
    4c9a:	f7fe f88f 	bl	2dbc <configASSERT_callback>
    4c9e:	e7fe      	b.n	4c9e <vTaskRemoveFromUnorderedEventList+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3175
	pxUnblockedTCB = listGET_LIST_ITEM_OWNER( pxEventListItem ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    4ca0:	68c4      	ldr	r4, [r0, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3171
	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
    4ca2:	f041 4100 	orr.w	r1, r1, #2147483648	; 0x80000000
    4ca6:	6001      	str	r1, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3176
	configASSERT( pxUnblockedTCB );
    4ca8:	b92c      	cbnz	r4, 4cb6 <vTaskRemoveFromUnorderedEventList+0x2a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3176 (discriminator 1)
    4caa:	4914      	ldr	r1, [pc, #80]	; (4cfc <vTaskRemoveFromUnorderedEventList+0x70>)
    4cac:	f640 4068 	movw	r0, #3176	; 0xc68
    4cb0:	f7fe f884 	bl	2dbc <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3176 (discriminator 2)
    4cb4:	e7fe      	b.n	4cb4 <vTaskRemoveFromUnorderedEventList+0x28>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3182
	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
    4cb6:	1d26      	adds	r6, r4, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3177
	( void ) uxListRemove( pxEventListItem );
    4cb8:	f7fe fe6b 	bl	3992 <uxListRemove>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3182
	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
    4cbc:	4630      	mov	r0, r6
    4cbe:	f7fe fe68 	bl	3992 <uxListRemove>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3183
	prvAddTaskToReadyList( pxUnblockedTCB );
    4cc2:	490f      	ldr	r1, [pc, #60]	; (4d00 <vTaskRemoveFromUnorderedEventList+0x74>)
    4cc4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    4cc6:	6808      	ldr	r0, [r1, #0]
    4cc8:	2501      	movs	r5, #1
    4cca:	fa05 f302 	lsl.w	r3, r5, r2
    4cce:	4303      	orrs	r3, r0
    4cd0:	600b      	str	r3, [r1, #0]
    4cd2:	4b0c      	ldr	r3, [pc, #48]	; (4d04 <vTaskRemoveFromUnorderedEventList+0x78>)
    4cd4:	2014      	movs	r0, #20
    4cd6:	fb00 3002 	mla	r0, r0, r2, r3
    4cda:	4631      	mov	r1, r6
    4cdc:	f7fe fe36 	bl	394c <vListInsertEnd>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3185
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
    4ce0:	4b09      	ldr	r3, [pc, #36]	; (4d08 <vTaskRemoveFromUnorderedEventList+0x7c>)
    4ce2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    4ce4:	681b      	ldr	r3, [r3, #0]
    4ce6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    4ce8:	429a      	cmp	r2, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3191
		xYieldPending = pdTRUE;
    4cea:	bf84      	itt	hi
    4cec:	4b07      	ldrhi	r3, [pc, #28]	; (4d0c <vTaskRemoveFromUnorderedEventList+0x80>)
    4cee:	601d      	strhi	r5, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3193
}
    4cf0:	bd70      	pop	{r4, r5, r6, pc}
    4cf2:	bf00      	nop
    4cf4:	100013a0 	.word	0x100013a0
    4cf8:	0000d710 	.word	0x0000d710
    4cfc:	0000d83d 	.word	0x0000d83d
    4d00:	100013a8 	.word	0x100013a8
    4d04:	100012cc 	.word	0x100012cc
    4d08:	100012c0 	.word	0x100012c0
    4d0c:	10001410 	.word	0x10001410

00004d10 <vTaskInternalSetTimeOutState>:
vTaskInternalSetTimeOutState():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3211
	pxTimeOut->xOverflowCount = xNumOfOverflows;
    4d10:	4b03      	ldr	r3, [pc, #12]	; (4d20 <vTaskInternalSetTimeOutState+0x10>)
    4d12:	681b      	ldr	r3, [r3, #0]
    4d14:	6003      	str	r3, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3212
	pxTimeOut->xTimeOnEntering = xTickCount;
    4d16:	4b03      	ldr	r3, [pc, #12]	; (4d24 <vTaskInternalSetTimeOutState+0x14>)
    4d18:	681b      	ldr	r3, [r3, #0]
    4d1a:	6043      	str	r3, [r0, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3213
}
    4d1c:	4770      	bx	lr
    4d1e:	bf00      	nop
    4d20:	100013dc 	.word	0x100013dc
    4d24:	1000140c 	.word	0x1000140c

00004d28 <xTaskCheckForTimeOut>:
xTaskCheckForTimeOut():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3217
{
    4d28:	b570      	push	{r4, r5, r6, lr}
    4d2a:	460c      	mov	r4, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3220
	configASSERT( pxTimeOut );
    4d2c:	4605      	mov	r5, r0
    4d2e:	b928      	cbnz	r0, 4d3c <xTaskCheckForTimeOut+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3220 (discriminator 1)
    4d30:	4916      	ldr	r1, [pc, #88]	; (4d8c <xTaskCheckForTimeOut+0x64>)
    4d32:	f640 4094 	movw	r0, #3220	; 0xc94
    4d36:	f7fe f841 	bl	2dbc <configASSERT_callback>
    4d3a:	e7fe      	b.n	4d3a <xTaskCheckForTimeOut+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3221
	configASSERT( pxTicksToWait );
    4d3c:	b929      	cbnz	r1, 4d4a <xTaskCheckForTimeOut+0x22>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3221 (discriminator 1)
    4d3e:	4914      	ldr	r1, [pc, #80]	; (4d90 <xTaskCheckForTimeOut+0x68>)
    4d40:	f640 4095 	movw	r0, #3221	; 0xc95
    4d44:	f7fe f83a 	bl	2dbc <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3221 (discriminator 2)
    4d48:	e7fe      	b.n	4d48 <xTaskCheckForTimeOut+0x20>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3223
	taskENTER_CRITICAL();
    4d4a:	f7fe fbdb 	bl	3504 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3226
		const TickType_t xConstTickCount = xTickCount;
    4d4e:	4b11      	ldr	r3, [pc, #68]	; (4d94 <xTaskCheckForTimeOut+0x6c>)
    4d50:	6819      	ldr	r1, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3241
			if( *pxTicksToWait == portMAX_DELAY )
    4d52:	6823      	ldr	r3, [r4, #0]
    4d54:	1c5a      	adds	r2, r3, #1
    4d56:	d010      	beq.n	4d7a <xTaskCheckForTimeOut+0x52>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3251
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
    4d58:	480f      	ldr	r0, [pc, #60]	; (4d98 <xTaskCheckForTimeOut+0x70>)
    4d5a:	682e      	ldr	r6, [r5, #0]
    4d5c:	6800      	ldr	r0, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3227
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
    4d5e:	686a      	ldr	r2, [r5, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3251
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
    4d60:	4286      	cmp	r6, r0
    4d62:	d001      	beq.n	4d68 <xTaskCheckForTimeOut+0x40>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3251 (discriminator 1)
    4d64:	428a      	cmp	r2, r1
    4d66:	d90f      	bls.n	4d88 <xTaskCheckForTimeOut+0x60>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3227
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
    4d68:	1a88      	subs	r0, r1, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3260
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
    4d6a:	4283      	cmp	r3, r0
    4d6c:	d90a      	bls.n	4d84 <xTaskCheckForTimeOut+0x5c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3263
			*pxTicksToWait -= xElapsedTime;
    4d6e:	1a5b      	subs	r3, r3, r1
    4d70:	4413      	add	r3, r2
    4d72:	6023      	str	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3264
			vTaskInternalSetTimeOutState( pxTimeOut );
    4d74:	4628      	mov	r0, r5
    4d76:	f7ff ffcb 	bl	4d10 <vTaskInternalSetTimeOutState>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3246
				xReturn = pdFALSE;
    4d7a:	2400      	movs	r4, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3273
	taskEXIT_CRITICAL();
    4d7c:	f7fe fbe4 	bl	3548 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3276
}
    4d80:	4620      	mov	r0, r4
    4d82:	bd70      	pop	{r4, r5, r6, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3269
			*pxTicksToWait = 0;
    4d84:	2300      	movs	r3, #0
    4d86:	6023      	str	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3258
			xReturn = pdTRUE;
    4d88:	2401      	movs	r4, #1
    4d8a:	e7f7      	b.n	4d7c <xTaskCheckForTimeOut+0x54>
    4d8c:	0000d73e 	.word	0x0000d73e
    4d90:	0000d794 	.word	0x0000d794
    4d94:	1000140c 	.word	0x1000140c
    4d98:	100013dc 	.word	0x100013dc

00004d9c <vTaskMissedYield>:
vTaskMissedYield():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3281
	xYieldPending = pdTRUE;
    4d9c:	4b01      	ldr	r3, [pc, #4]	; (4da4 <vTaskMissedYield+0x8>)
    4d9e:	2201      	movs	r2, #1
    4da0:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3282
}
    4da2:	4770      	bx	lr
    4da4:	10001410 	.word	0x10001410

00004da8 <vTaskGetInfo>:
vTaskGetInfo():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3610
	{
    4da8:	b570      	push	{r4, r5, r6, lr}
    4daa:	460c      	mov	r4, r1
    4dac:	4616      	mov	r6, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3614
		pxTCB = prvGetTCBFromHandle( xTask );
    4dae:	4605      	mov	r5, r0
    4db0:	b908      	cbnz	r0, 4db6 <vTaskGetInfo+0xe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3614 (discriminator 1)
    4db2:	4a1b      	ldr	r2, [pc, #108]	; (4e20 <vTaskGetInfo+0x78>)
    4db4:	6815      	ldr	r5, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3616 (discriminator 4)
		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
    4db6:	6025      	str	r5, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3617 (discriminator 4)
		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
    4db8:	f105 0234 	add.w	r2, r5, #52	; 0x34
    4dbc:	6062      	str	r2, [r4, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3618 (discriminator 4)
		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
    4dbe:	6aea      	ldr	r2, [r5, #44]	; 0x2c
    4dc0:	6122      	str	r2, [r4, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3619 (discriminator 4)
		pxTaskStatus->pxStackBase = pxTCB->pxStack;
    4dc2:	6b2a      	ldr	r2, [r5, #48]	; 0x30
    4dc4:	61e2      	str	r2, [r4, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3620 (discriminator 4)
		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
    4dc6:	6c2a      	ldr	r2, [r5, #64]	; 0x40
    4dc8:	60a2      	str	r2, [r4, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3624 (discriminator 4)
			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
    4dca:	6caa      	ldr	r2, [r5, #72]	; 0x48
    4dcc:	6162      	str	r2, [r4, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3645 (discriminator 4)
		if( eState != eInvalid )
    4dce:	2b05      	cmp	r3, #5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3634 (discriminator 4)
			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
    4dd0:	6d2a      	ldr	r2, [r5, #80]	; 0x50
    4dd2:	61a2      	str	r2, [r4, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3645 (discriminator 4)
		if( eState != eInvalid )
    4dd4:	d01a      	beq.n	4e0c <vTaskGetInfo+0x64>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3647
			if( pxTCB == pxCurrentTCB )
    4dd6:	4a12      	ldr	r2, [pc, #72]	; (4e20 <vTaskGetInfo+0x78>)
    4dd8:	6812      	ldr	r2, [r2, #0]
    4dda:	42aa      	cmp	r2, r5
    4ddc:	d10a      	bne.n	4df4 <vTaskGetInfo+0x4c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3649
				pxTaskStatus->eCurrentState = eRunning;
    4dde:	2300      	movs	r3, #0
    4de0:	7323      	strb	r3, [r4, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3682
		if( xGetFreeStackSpace != pdFALSE )
    4de2:	b1d6      	cbz	r6, 4e1a <vTaskGetInfo+0x72>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3690
				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack );
    4de4:	6b29      	ldr	r1, [r5, #48]	; 0x30
prvTaskCheckFreeStackSpace():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3740
	uint32_t ulCount = 0U;
    4de6:	2300      	movs	r3, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3742
		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
    4de8:	5cca      	ldrb	r2, [r1, r3]
    4dea:	2aa5      	cmp	r2, #165	; 0xa5
    4dec:	d013      	beq.n	4e16 <vTaskGetInfo+0x6e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3748
		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller architectures. */
    4dee:	089b      	lsrs	r3, r3, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3750
		return ( configSTACK_DEPTH_TYPE ) ulCount;
    4df0:	8423      	strh	r3, [r4, #32]
vTaskGetInfo():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3698
	}
    4df2:	bd70      	pop	{r4, r5, r6, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3660
					if( eState == eSuspended )
    4df4:	2b03      	cmp	r3, #3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3653
				pxTaskStatus->eCurrentState = eState;
    4df6:	7323      	strb	r3, [r4, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3660
					if( eState == eSuspended )
    4df8:	d1f3      	bne.n	4de2 <vTaskGetInfo+0x3a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3662
						vTaskSuspendAll();
    4dfa:	f7ff fcc3 	bl	4784 <vTaskSuspendAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3664
							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
    4dfe:	6aab      	ldr	r3, [r5, #40]	; 0x28
    4e00:	b10b      	cbz	r3, 4e06 <vTaskGetInfo+0x5e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3666
								pxTaskStatus->eCurrentState = eBlocked;
    4e02:	2302      	movs	r3, #2
    4e04:	7323      	strb	r3, [r4, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3669
						( void ) xTaskResumeAll();
    4e06:	f7ff fd5d 	bl	48c4 <xTaskResumeAll>
    4e0a:	e7ea      	b.n	4de2 <vTaskGetInfo+0x3a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3677
			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
    4e0c:	4628      	mov	r0, r5
    4e0e:	f7ff fc07 	bl	4620 <eTaskGetState>
    4e12:	7320      	strb	r0, [r4, #12]
    4e14:	e7e5      	b.n	4de2 <vTaskGetInfo+0x3a>
prvTaskCheckFreeStackSpace():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3745
			ulCount++;
    4e16:	3301      	adds	r3, #1
    4e18:	e7e6      	b.n	4de8 <vTaskGetInfo+0x40>
vTaskGetInfo():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3696
			pxTaskStatus->usStackHighWaterMark = 0;
    4e1a:	8426      	strh	r6, [r4, #32]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3698
	}
    4e1c:	e7e9      	b.n	4df2 <vTaskGetInfo+0x4a>
    4e1e:	bf00      	nop
    4e20:	100012c0 	.word	0x100012c0

00004e24 <prvListTasksWithinSingleList>:
prvListTasksWithinSingleList():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3706
	{
    4e24:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3710
		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
    4e28:	680d      	ldr	r5, [r1, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3706
	{
    4e2a:	4681      	mov	r9, r0
    4e2c:	460c      	mov	r4, r1
    4e2e:	4693      	mov	fp, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3710
		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
    4e30:	b315      	cbz	r5, 4e78 <prvListTasksWithinSingleList+0x54>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3712
			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    4e32:	684b      	ldr	r3, [r1, #4]
    4e34:	685b      	ldr	r3, [r3, #4]
    4e36:	604b      	str	r3, [r1, #4]
    4e38:	f101 0608 	add.w	r6, r1, #8
    4e3c:	42b3      	cmp	r3, r6
    4e3e:	bf04      	itt	eq
    4e40:	68cb      	ldreq	r3, [r1, #12]
    4e42:	604b      	streq	r3, [r1, #4]
    4e44:	684b      	ldr	r3, [r1, #4]
    4e46:	f8d3 800c 	ldr.w	r8, [r3, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3708
	UBaseType_t uxTask = 0;
    4e4a:	2500      	movs	r5, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3721
				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
    4e4c:	f04f 0a24 	mov.w	sl, #36	; 0x24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3720
				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    4e50:	6863      	ldr	r3, [r4, #4]
    4e52:	685b      	ldr	r3, [r3, #4]
    4e54:	6063      	str	r3, [r4, #4]
    4e56:	429e      	cmp	r6, r3
    4e58:	bf04      	itt	eq
    4e5a:	6873      	ldreq	r3, [r6, #4]
    4e5c:	6063      	streq	r3, [r4, #4]
    4e5e:	6863      	ldr	r3, [r4, #4]
    4e60:	68df      	ldr	r7, [r3, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3721
				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
    4e62:	fb0a 9105 	mla	r1, sl, r5, r9
    4e66:	465b      	mov	r3, fp
    4e68:	2201      	movs	r2, #1
    4e6a:	4638      	mov	r0, r7
    4e6c:	f7ff ff9c 	bl	4da8 <vTaskGetInfo>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3723
			} while( pxNextTCB != pxFirstTCB );
    4e70:	45b8      	cmp	r8, r7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3722
				uxTask++;
    4e72:	f105 0501 	add.w	r5, r5, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3723
			} while( pxNextTCB != pxFirstTCB );
    4e76:	d1eb      	bne.n	4e50 <prvListTasksWithinSingleList+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3731
	}
    4e78:	4628      	mov	r0, r5
    4e7a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4e7e:	Address 0x0000000000004e7e is out of bounds.


00004e80 <uxTaskGetSystemState>:
uxTaskGetSystemState():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2486
	{
    4e80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    4e84:	4605      	mov	r5, r0
    4e86:	4690      	mov	r8, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2489
		vTaskSuspendAll();
    4e88:	f7ff fc7c 	bl	4784 <vTaskSuspendAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2492
			if( uxArraySize >= uxCurrentNumberOfTasks )
    4e8c:	4b1d      	ldr	r3, [pc, #116]	; (4f04 <uxTaskGetSystemState+0x84>)
    4e8e:	681b      	ldr	r3, [r3, #0]
    4e90:	428b      	cmp	r3, r1
    4e92:	d834      	bhi.n	4efe <uxTaskGetSystemState+0x7e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2499
					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists[ uxQueue ] ), eReady );
    4e94:	f8df 907c 	ldr.w	r9, [pc, #124]	; 4f14 <uxTaskGetSystemState+0x94>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2487
	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
    4e98:	270a      	movs	r7, #10
    4e9a:	2400      	movs	r4, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2499
					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists[ uxQueue ] ), eReady );
    4e9c:	f04f 0a14 	mov.w	sl, #20
    4ea0:	2624      	movs	r6, #36	; 0x24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2498 (discriminator 1)
					uxQueue--;
    4ea2:	3f01      	subs	r7, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2499 (discriminator 1)
					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists[ uxQueue ] ), eReady );
    4ea4:	fb06 5004 	mla	r0, r6, r4, r5
    4ea8:	2201      	movs	r2, #1
    4eaa:	fb0a 9107 	mla	r1, sl, r7, r9
    4eae:	f7ff ffb9 	bl	4e24 <prvListTasksWithinSingleList>
    4eb2:	4404      	add	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2501 (discriminator 1)
				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    4eb4:	2f00      	cmp	r7, #0
    4eb6:	d1f4      	bne.n	4ea2 <uxTaskGetSystemState+0x22>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2505
				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelayedTaskList, eBlocked );
    4eb8:	4b13      	ldr	r3, [pc, #76]	; (4f08 <uxTaskGetSystemState+0x88>)
    4eba:	2202      	movs	r2, #2
    4ebc:	6819      	ldr	r1, [r3, #0]
    4ebe:	fb06 5004 	mla	r0, r6, r4, r5
    4ec2:	f7ff ffaf 	bl	4e24 <prvListTasksWithinSingleList>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2506
				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverflowDelayedTaskList, eBlocked );
    4ec6:	4b11      	ldr	r3, [pc, #68]	; (4f0c <uxTaskGetSystemState+0x8c>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2505
				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelayedTaskList, eBlocked );
    4ec8:	4404      	add	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2506
				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverflowDelayedTaskList, eBlocked );
    4eca:	6819      	ldr	r1, [r3, #0]
    4ecc:	2202      	movs	r2, #2
    4ece:	fb06 5004 	mla	r0, r6, r4, r5
    4ed2:	f7ff ffa7 	bl	4e24 <prvListTasksWithinSingleList>
    4ed6:	4404      	add	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2520
					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList, eSuspended );
    4ed8:	fb06 5004 	mla	r0, r6, r4, r5
    4edc:	2203      	movs	r2, #3
    4ede:	490c      	ldr	r1, [pc, #48]	; (4f10 <uxTaskGetSystemState+0x90>)
    4ee0:	f7ff ffa0 	bl	4e24 <prvListTasksWithinSingleList>
    4ee4:	4404      	add	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2526
					if( pulTotalRunTime != NULL )
    4ee6:	f1b8 0f00 	cmp.w	r8, #0
    4eea:	d003      	beq.n	4ef4 <uxTaskGetSystemState+0x74>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2531
							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
    4eec:	f7fd ff92 	bl	2e14 <freertos_hooks__get_run_time_counter_value>
    4ef0:	f8c8 0000 	str.w	r0, [r8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2549
		( void ) xTaskResumeAll();
    4ef4:	f7ff fce6 	bl	48c4 <xTaskResumeAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2552
	}
    4ef8:	4620      	mov	r0, r4
    4efa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2487
	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
    4efe:	2400      	movs	r4, #0
    4f00:	e7f8      	b.n	4ef4 <uxTaskGetSystemState+0x74>
    4f02:	bf00      	nop
    4f04:	10001398 	.word	0x10001398
    4f08:	100012c4 	.word	0x100012c4
    4f0c:	100012c8 	.word	0x100012c8
    4f10:	100013f8 	.word	0x100013f8
    4f14:	100012cc 	.word	0x100012cc

00004f18 <xTaskGetSchedulerState>:
xTaskGetSchedulerState():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3927
		if( xSchedulerRunning == pdFALSE )
    4f18:	4b05      	ldr	r3, [pc, #20]	; (4f30 <xTaskGetSchedulerState+0x18>)
    4f1a:	681b      	ldr	r3, [r3, #0]
    4f1c:	b133      	cbz	r3, 4f2c <xTaskGetSchedulerState+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3933
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
    4f1e:	4b05      	ldr	r3, [pc, #20]	; (4f34 <xTaskGetSchedulerState+0x1c>)
    4f20:	681b      	ldr	r3, [r3, #0]
    4f22:	2b00      	cmp	r3, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3939
				xReturn = taskSCHEDULER_SUSPENDED;
    4f24:	bf0c      	ite	eq
    4f26:	2002      	moveq	r0, #2
    4f28:	2000      	movne	r0, #0
    4f2a:	4770      	bx	lr
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3929
			xReturn = taskSCHEDULER_NOT_STARTED;
    4f2c:	2001      	movs	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3944
	}
    4f2e:	4770      	bx	lr
    4f30:	100013f4 	.word	0x100013f4
    4f34:	100013a0 	.word	0x100013a0

00004f38 <xTaskPriorityInherit>:
xTaskPriorityInherit():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3952
	{
    4f38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3959
		if( pxMutexHolder != NULL )
    4f3c:	4604      	mov	r4, r0
    4f3e:	2800      	cmp	r0, #0
    4f40:	d035      	beq.n	4fae <xTaskPriorityInherit+0x76>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3964
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
    4f42:	4a23      	ldr	r2, [pc, #140]	; (4fd0 <xTaskPriorityInherit+0x98>)
    4f44:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
    4f46:	6811      	ldr	r1, [r2, #0]
    4f48:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
    4f4a:	428b      	cmp	r3, r1
    4f4c:	4617      	mov	r7, r2
    4f4e:	d236      	bcs.n	4fbe <xTaskPriorityInherit+0x86>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3969
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
    4f50:	6982      	ldr	r2, [r0, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3980
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
    4f52:	4d20      	ldr	r5, [pc, #128]	; (4fd4 <xTaskPriorityInherit+0x9c>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3969
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
    4f54:	2a00      	cmp	r2, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3971
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    4f56:	bfa1      	itttt	ge
    4f58:	683a      	ldrge	r2, [r7, #0]
    4f5a:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
    4f5c:	f1c2 020a 	rsbge	r2, r2, #10
    4f60:	6182      	strge	r2, [r0, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3980
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
    4f62:	2614      	movs	r6, #20
    4f64:	6942      	ldr	r2, [r0, #20]
    4f66:	fb06 5303 	mla	r3, r6, r3, r5
    4f6a:	429a      	cmp	r2, r3
    4f6c:	d121      	bne.n	4fb2 <xTaskPriorityInherit+0x7a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3982
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    4f6e:	f100 0804 	add.w	r8, r0, #4
    4f72:	4640      	mov	r0, r8
    4f74:	f7fe fd0d 	bl	3992 <uxListRemove>
    4f78:	4b17      	ldr	r3, [pc, #92]	; (4fd8 <xTaskPriorityInherit+0xa0>)
    4f7a:	b948      	cbnz	r0, 4f90 <xTaskPriorityInherit+0x58>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3984
						taskRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority );
    4f7c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
    4f7e:	4346      	muls	r6, r0
    4f80:	59aa      	ldr	r2, [r5, r6]
    4f82:	b92a      	cbnz	r2, 4f90 <xTaskPriorityInherit+0x58>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3984 (discriminator 1)
    4f84:	681a      	ldr	r2, [r3, #0]
    4f86:	2101      	movs	r1, #1
    4f88:	4081      	lsls	r1, r0
    4f8a:	ea22 0201 	bic.w	r2, r2, r1
    4f8e:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3992
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
    4f90:	683a      	ldr	r2, [r7, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3993
					prvAddTaskToReadyList( pxMutexHolderTCB );
    4f92:	6819      	ldr	r1, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3992
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
    4f94:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
    4f96:	62e2      	str	r2, [r4, #44]	; 0x2c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3993
					prvAddTaskToReadyList( pxMutexHolderTCB );
    4f98:	2401      	movs	r4, #1
    4f9a:	fa04 f002 	lsl.w	r0, r4, r2
    4f9e:	4308      	orrs	r0, r1
    4fa0:	6018      	str	r0, [r3, #0]
    4fa2:	2014      	movs	r0, #20
    4fa4:	4641      	mov	r1, r8
    4fa6:	fb00 5002 	mla	r0, r0, r2, r5
    4faa:	f7fe fccf 	bl	394c <vListInsertEnd>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3954
	BaseType_t xReturn = pdFALSE;
    4fae:	4620      	mov	r0, r4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4030
		return xReturn;
    4fb0:	e003      	b.n	4fba <xTaskPriorityInherit+0x82>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3998
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
    4fb2:	683b      	ldr	r3, [r7, #0]
    4fb4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    4fb6:	62c3      	str	r3, [r0, #44]	; 0x2c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4004
				xReturn = pdTRUE;
    4fb8:	2001      	movs	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4031
	}
    4fba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4008
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
    4fbe:	6813      	ldr	r3, [r2, #0]
    4fc0:	6c80      	ldr	r0, [r0, #72]	; 0x48
    4fc2:	6adc      	ldr	r4, [r3, #44]	; 0x2c
    4fc4:	42a0      	cmp	r0, r4
    4fc6:	bf2c      	ite	cs
    4fc8:	2000      	movcs	r0, #0
    4fca:	2001      	movcc	r0, #1
    4fcc:	e7f5      	b.n	4fba <xTaskPriorityInherit+0x82>
    4fce:	bf00      	nop
    4fd0:	100012c0 	.word	0x100012c0
    4fd4:	100012cc 	.word	0x100012cc
    4fd8:	100013a8 	.word	0x100013a8

00004fdc <xTaskPriorityDisinherit>:
xTaskPriorityDisinherit():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4039
	{
    4fdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4043
		if( pxMutexHolder != NULL )
    4fde:	4604      	mov	r4, r0
    4fe0:	b908      	cbnz	r0, 4fe6 <xTaskPriorityDisinherit+0xa>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4041
	BaseType_t xReturn = pdFALSE;
    4fe2:	2000      	movs	r0, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4111
	}
    4fe4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4049
			configASSERT( pxTCB == pxCurrentTCB );
    4fe6:	4b1f      	ldr	r3, [pc, #124]	; (5064 <xTaskPriorityDisinherit+0x88>)
    4fe8:	681b      	ldr	r3, [r3, #0]
    4fea:	4283      	cmp	r3, r0
    4fec:	d005      	beq.n	4ffa <xTaskPriorityDisinherit+0x1e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4049 (discriminator 1)
    4fee:	491e      	ldr	r1, [pc, #120]	; (5068 <xTaskPriorityDisinherit+0x8c>)
    4ff0:	f640 70d1 	movw	r0, #4049	; 0xfd1
    4ff4:	f7fd fee2 	bl	2dbc <configASSERT_callback>
    4ff8:	e7fe      	b.n	4ff8 <xTaskPriorityDisinherit+0x1c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4050
			configASSERT( pxTCB->uxMutexesHeld );
    4ffa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    4ffc:	b92b      	cbnz	r3, 500a <xTaskPriorityDisinherit+0x2e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4050 (discriminator 1)
    4ffe:	491b      	ldr	r1, [pc, #108]	; (506c <xTaskPriorityDisinherit+0x90>)
    5000:	f640 70d2 	movw	r0, #4050	; 0xfd2
    5004:	f7fd feda 	bl	2dbc <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4050 (discriminator 2)
    5008:	e7fe      	b.n	5008 <xTaskPriorityDisinherit+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4055
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
    500a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
    500c:	6c82      	ldr	r2, [r0, #72]	; 0x48
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4051
			( pxTCB->uxMutexesHeld )--;
    500e:	3b01      	subs	r3, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4055
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
    5010:	4291      	cmp	r1, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4051
			( pxTCB->uxMutexesHeld )--;
    5012:	64c3      	str	r3, [r0, #76]	; 0x4c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4055
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
    5014:	d0e5      	beq.n	4fe2 <xTaskPriorityDisinherit+0x6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4058
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
    5016:	2b00      	cmp	r3, #0
    5018:	d1e3      	bne.n	4fe2 <xTaskPriorityDisinherit+0x6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4065
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    501a:	1d05      	adds	r5, r0, #4
    501c:	4628      	mov	r0, r5
    501e:	f7fe fcb8 	bl	3992 <uxListRemove>
    5022:	4e13      	ldr	r6, [pc, #76]	; (5070 <xTaskPriorityDisinherit+0x94>)
    5024:	4a13      	ldr	r2, [pc, #76]	; (5074 <xTaskPriorityDisinherit+0x98>)
    5026:	b950      	cbnz	r0, 503e <xTaskPriorityDisinherit+0x62>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4067
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
    5028:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    502a:	2114      	movs	r1, #20
    502c:	4379      	muls	r1, r7
    502e:	5873      	ldr	r3, [r6, r1]
    5030:	b92b      	cbnz	r3, 503e <xTaskPriorityDisinherit+0x62>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4067 (discriminator 1)
    5032:	6813      	ldr	r3, [r2, #0]
    5034:	2001      	movs	r0, #1
    5036:	40b8      	lsls	r0, r7
    5038:	ea23 0300 	bic.w	r3, r3, r0
    503c:	6013      	str	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4077
					pxTCB->uxPriority = pxTCB->uxBasePriority;
    503e:	6ca3      	ldr	r3, [r4, #72]	; 0x48
    5040:	62e3      	str	r3, [r4, #44]	; 0x2c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4082
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    5042:	f1c3 010a 	rsb	r1, r3, #10
    5046:	61a1      	str	r1, [r4, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4083
					prvAddTaskToReadyList( pxTCB );
    5048:	6811      	ldr	r1, [r2, #0]
    504a:	2401      	movs	r4, #1
    504c:	fa04 f003 	lsl.w	r0, r4, r3
    5050:	4308      	orrs	r0, r1
    5052:	6010      	str	r0, [r2, #0]
    5054:	2014      	movs	r0, #20
    5056:	fb00 6003 	mla	r0, r0, r3, r6
    505a:	4629      	mov	r1, r5
    505c:	f7fe fc76 	bl	394c <vListInsertEnd>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4093
					xReturn = pdTRUE;
    5060:	4620      	mov	r0, r4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4110
		return xReturn;
    5062:	e7bf      	b.n	4fe4 <xTaskPriorityDisinherit+0x8>
    5064:	100012c0 	.word	0x100012c0
    5068:	0000d812 	.word	0x0000d812
    506c:	0000d828 	.word	0x0000d828
    5070:	100012cc 	.word	0x100012cc
    5074:	100013a8 	.word	0x100013a8

00005078 <vTaskPriorityDisinheritAfterTimeout>:
vTaskPriorityDisinheritAfterTimeout():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4119
	{
    5078:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4124
		if( pxMutexHolder != NULL )
    507a:	4604      	mov	r4, r0
    507c:	2800      	cmp	r0, #0
    507e:	d047      	beq.n	5110 <vTaskPriorityDisinheritAfterTimeout+0x98>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4128
			configASSERT( pxTCB->uxMutexesHeld );
    5080:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
    5082:	b92a      	cbnz	r2, 5090 <vTaskPriorityDisinheritAfterTimeout+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4128 (discriminator 1)
    5084:	4923      	ldr	r1, [pc, #140]	; (5114 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
    5086:	f44f 5081 	mov.w	r0, #4128	; 0x1020
    508a:	f7fd fe97 	bl	2dbc <configASSERT_callback>
    508e:	e7fe      	b.n	508e <vTaskPriorityDisinheritAfterTimeout+0x16>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4134
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
    5090:	6c83      	ldr	r3, [r0, #72]	; 0x48
    5092:	4299      	cmp	r1, r3
    5094:	bf38      	it	cc
    5096:	4619      	movcc	r1, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4144
			if( pxTCB->uxPriority != uxPriorityToUse )
    5098:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
    509a:	428b      	cmp	r3, r1
    509c:	d038      	beq.n	5110 <vTaskPriorityDisinheritAfterTimeout+0x98>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4150
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
    509e:	2a01      	cmp	r2, #1
    50a0:	d136      	bne.n	5110 <vTaskPriorityDisinheritAfterTimeout+0x98>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4155
					configASSERT( pxTCB != pxCurrentTCB );
    50a2:	4a1d      	ldr	r2, [pc, #116]	; (5118 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
    50a4:	6812      	ldr	r2, [r2, #0]
    50a6:	4282      	cmp	r2, r0
    50a8:	d105      	bne.n	50b6 <vTaskPriorityDisinheritAfterTimeout+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4155 (discriminator 1)
    50aa:	491c      	ldr	r1, [pc, #112]	; (511c <vTaskPriorityDisinheritAfterTimeout+0xa4>)
    50ac:	f241 003b 	movw	r0, #4155	; 0x103b
    50b0:	f7fd fe84 	bl	2dbc <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4155 (discriminator 2)
    50b4:	e7fe      	b.n	50b4 <vTaskPriorityDisinheritAfterTimeout+0x3c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4166
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
    50b6:	6982      	ldr	r2, [r0, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4181
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
    50b8:	4d19      	ldr	r5, [pc, #100]	; (5120 <vTaskPriorityDisinheritAfterTimeout+0xa8>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4162
					pxTCB->uxPriority = uxPriorityToUse;
    50ba:	62c1      	str	r1, [r0, #44]	; 0x2c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4166
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
    50bc:	2a00      	cmp	r2, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4181
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
    50be:	f04f 0614 	mov.w	r6, #20
    50c2:	6942      	ldr	r2, [r0, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4168
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    50c4:	bfa8      	it	ge
    50c6:	f1c1 010a 	rsbge	r1, r1, #10
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4181
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
    50ca:	fb06 5303 	mla	r3, r6, r3, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4168
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    50ce:	bfa8      	it	ge
    50d0:	6181      	strge	r1, [r0, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4181
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
    50d2:	429a      	cmp	r2, r3
    50d4:	d11c      	bne.n	5110 <vTaskPriorityDisinheritAfterTimeout+0x98>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4183
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    50d6:	1d07      	adds	r7, r0, #4
    50d8:	4638      	mov	r0, r7
    50da:	f7fe fc5a 	bl	3992 <uxListRemove>
    50de:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    50e0:	4c10      	ldr	r4, [pc, #64]	; (5124 <vTaskPriorityDisinheritAfterTimeout+0xac>)
    50e2:	b940      	cbnz	r0, 50f6 <vTaskPriorityDisinheritAfterTimeout+0x7e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4185
							taskRESET_READY_PRIORITY( pxTCB->uxPriority );
    50e4:	4356      	muls	r6, r2
    50e6:	59ab      	ldr	r3, [r5, r6]
    50e8:	b92b      	cbnz	r3, 50f6 <vTaskPriorityDisinheritAfterTimeout+0x7e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4185 (discriminator 1)
    50ea:	6823      	ldr	r3, [r4, #0]
    50ec:	2101      	movs	r1, #1
    50ee:	4091      	lsls	r1, r2
    50f0:	ea23 0301 	bic.w	r3, r3, r1
    50f4:	6023      	str	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4192
						prvAddTaskToReadyList( pxTCB );
    50f6:	6821      	ldr	r1, [r4, #0]
    50f8:	2301      	movs	r3, #1
    50fa:	4093      	lsls	r3, r2
    50fc:	430b      	orrs	r3, r1
    50fe:	2014      	movs	r0, #20
    5100:	6023      	str	r3, [r4, #0]
    5102:	4639      	mov	r1, r7
    5104:	fb00 5002 	mla	r0, r0, r2, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4213
	}
    5108:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4192
						prvAddTaskToReadyList( pxTCB );
    510c:	f7fe bc1e 	b.w	394c <vListInsertEnd>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4213
	}
    5110:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    5112:	bf00      	nop
    5114:	0000d828 	.word	0x0000d828
    5118:	100012c0 	.word	0x100012c0
    511c:	0000d6fa 	.word	0x0000d6fa
    5120:	100012cc 	.word	0x100012cc
    5124:	100013a8 	.word	0x100013a8

00005128 <uxTaskResetEventItemValue>:
uxTaskResetEventItemValue():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4537
	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
    5128:	4b04      	ldr	r3, [pc, #16]	; (513c <uxTaskResetEventItemValue+0x14>)
    512a:	681a      	ldr	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4541
	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ) ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    512c:	6819      	ldr	r1, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4537
	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
    512e:	6990      	ldr	r0, [r2, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4541
	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ) ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    5130:	681a      	ldr	r2, [r3, #0]
    5132:	6acb      	ldr	r3, [r1, #44]	; 0x2c
    5134:	f1c3 030a 	rsb	r3, r3, #10
    5138:	6193      	str	r3, [r2, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4544
}
    513a:	4770      	bx	lr
    513c:	100012c0 	.word	0x100012c0

00005140 <pvTaskIncrementMutexHeldCount>:
pvTaskIncrementMutexHeldCount():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4553
		if( pxCurrentTCB != NULL )
    5140:	4b04      	ldr	r3, [pc, #16]	; (5154 <pvTaskIncrementMutexHeldCount+0x14>)
    5142:	681a      	ldr	r2, [r3, #0]
    5144:	b11a      	cbz	r2, 514e <pvTaskIncrementMutexHeldCount+0xe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4555
			( pxCurrentTCB->uxMutexesHeld )++;
    5146:	6819      	ldr	r1, [r3, #0]
    5148:	6cca      	ldr	r2, [r1, #76]	; 0x4c
    514a:	3201      	adds	r2, #1
    514c:	64ca      	str	r2, [r1, #76]	; 0x4c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4558
		return pxCurrentTCB;
    514e:	6818      	ldr	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4559
	}
    5150:	4770      	bx	lr
    5152:	bf00      	nop
    5154:	100012c0 	.word	0x100012c0

00005158 <vTaskResetRunTimeStats>:
vTaskResetRunTimeStats():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:34

void vTaskResetRunTimeStats(void) {
    5158:	b570      	push	{r4, r5, r6, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:36
  BaseType_t uxQueue = configMAX_PRIORITIES;
  vTaskSuspendAll();
    515a:	f7ff fb13 	bl	4784 <vTaskSuspendAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:40
  {
    do {
      uxQueue--;
      if (listLIST_IS_EMPTY(&(pxReadyTasksLists[uxQueue])) == pdFALSE) {
    515e:	4d14      	ldr	r5, [pc, #80]	; (51b0 <vTaskResetRunTimeStats+0x58>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:35
  BaseType_t uxQueue = configMAX_PRIORITIES;
    5160:	240a      	movs	r4, #10
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:40
      if (listLIST_IS_EMPTY(&(pxReadyTasksLists[uxQueue])) == pdFALSE) {
    5162:	2614      	movs	r6, #20
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:39
      uxQueue--;
    5164:	3c01      	subs	r4, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:40
      if (listLIST_IS_EMPTY(&(pxReadyTasksLists[uxQueue])) == pdFALSE) {
    5166:	fb06 f304 	mul.w	r3, r6, r4
    516a:	18e8      	adds	r0, r5, r3
    516c:	58eb      	ldr	r3, [r5, r3]
    516e:	b10b      	cbz	r3, 5174 <vTaskResetRunTimeStats+0x1c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:41
        prvResetRunTimeStatsInList((List_t *)&(pxReadyTasksLists[uxQueue]));
    5170:	f7ff f88c 	bl	428c <prvResetRunTimeStatsInList>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:43
      }
    } while (uxQueue > (unsigned portBASE_TYPE)tskIDLE_PRIORITY);
    5174:	2c00      	cmp	r4, #0
    5176:	d1f5      	bne.n	5164 <vTaskResetRunTimeStats+0xc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:45

    if (listLIST_IS_EMPTY(pxDelayedTaskList) == pdFALSE) {
    5178:	4b0e      	ldr	r3, [pc, #56]	; (51b4 <vTaskResetRunTimeStats+0x5c>)
    517a:	681a      	ldr	r2, [r3, #0]
    517c:	6812      	ldr	r2, [r2, #0]
    517e:	b112      	cbz	r2, 5186 <vTaskResetRunTimeStats+0x2e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:46
      prvResetRunTimeStatsInList((List_t *)pxDelayedTaskList);
    5180:	6818      	ldr	r0, [r3, #0]
    5182:	f7ff f883 	bl	428c <prvResetRunTimeStatsInList>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:49
    }

    if (listLIST_IS_EMPTY(pxOverflowDelayedTaskList) == pdFALSE) {
    5186:	4b0c      	ldr	r3, [pc, #48]	; (51b8 <vTaskResetRunTimeStats+0x60>)
    5188:	681a      	ldr	r2, [r3, #0]
    518a:	6812      	ldr	r2, [r2, #0]
    518c:	b112      	cbz	r2, 5194 <vTaskResetRunTimeStats+0x3c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:50
      prvResetRunTimeStatsInList((List_t *)pxOverflowDelayedTaskList);
    518e:	6818      	ldr	r0, [r3, #0]
    5190:	f7ff f87c 	bl	428c <prvResetRunTimeStatsInList>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:63
    }
#endif

#if (INCLUDE_vTaskSuspend == 1)
    {
      if (listLIST_IS_EMPTY(&xSuspendedTaskList) == pdFALSE) {
    5194:	4809      	ldr	r0, [pc, #36]	; (51bc <vTaskResetRunTimeStats+0x64>)
    5196:	6803      	ldr	r3, [r0, #0]
    5198:	b10b      	cbz	r3, 519e <vTaskResetRunTimeStats+0x46>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:64
        prvResetRunTimeStatsInList((List_t *)&xSuspendedTaskList);
    519a:	f7ff f877 	bl	428c <prvResetRunTimeStatsInList>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:68
      }
    }
#endif
    ulTaskSwitchedInTime = 0;
    519e:	4b08      	ldr	r3, [pc, #32]	; (51c0 <vTaskResetRunTimeStats+0x68>)
    51a0:	2200      	movs	r2, #0
    51a2:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:69
    portRESET_TIMER_FOR_RUN_TIME_STATS();
    51a4:	f7fd fe40 	bl	2e28 <freertos_hooks__reset_run_time_stats>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:72
  }
  xTaskResumeAll();
}
    51a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:71
  xTaskResumeAll();
    51ac:	f7ff bb8a 	b.w	48c4 <xTaskResumeAll>
    51b0:	100012cc 	.word	0x100012cc
    51b4:	100012c4 	.word	0x100012c4
    51b8:	100012c8 	.word	0x100012c8
    51bc:	100013f8 	.word	0x100013f8
    51c0:	10001394 	.word	0x10001394

000051c4 <vRunTimeStatIsrEntry>:
vRunTimeStatIsrEntry():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:74

void vRunTimeStatIsrEntry(void) {
    51c4:	b510      	push	{r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:75
  unsigned long ulTempCounter = portGET_RUN_TIME_COUNTER_VALUE();
    51c6:	f7fd fe25 	bl	2e14 <freertos_hooks__get_run_time_counter_value>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:78

  // Add the time spent in the previously running task's counter.
  if (NULL != pxCurrentTCB) {
    51ca:	4b06      	ldr	r3, [pc, #24]	; (51e4 <vRunTimeStatIsrEntry+0x20>)
    51cc:	4a06      	ldr	r2, [pc, #24]	; (51e8 <vRunTimeStatIsrEntry+0x24>)
    51ce:	6819      	ldr	r1, [r3, #0]
    51d0:	b129      	cbz	r1, 51de <vRunTimeStatIsrEntry+0x1a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:79
    pxCurrentTCB->ulRunTimeCounter += (ulTempCounter - ulTaskSwitchedInTime);
    51d2:	6819      	ldr	r1, [r3, #0]
    51d4:	6814      	ldr	r4, [r2, #0]
    51d6:	6d0b      	ldr	r3, [r1, #80]	; 0x50
    51d8:	1b1b      	subs	r3, r3, r4
    51da:	4403      	add	r3, r0
    51dc:	650b      	str	r3, [r1, #80]	; 0x50
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:83
  }

  // Save the current time to log how long the ISR is going to take.
  ulTaskSwitchedInTime = ulTempCounter;
    51de:	6010      	str	r0, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:84
}
    51e0:	bd10      	pop	{r4, pc}
    51e2:	bf00      	nop
    51e4:	100012c0 	.word	0x100012c0
    51e8:	10001394 	.word	0x10001394

000051ec <vRunTimeStatIsrExit>:
vRunTimeStatIsrExit():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:85
void vRunTimeStatIsrExit(void) {
    51ec:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:86
  unsigned long ulTempCounter = portGET_RUN_TIME_COUNTER_VALUE();
    51ee:	f7fd fe11 	bl	2e14 <freertos_hooks__get_run_time_counter_value>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:94
  // We don't need this because whatever is the "leftover" for the counters, that is
  // is the overhead itself!
  // ulISROverhead += ( ulTempCounter - ulTaskSwitchedInTime );

  // Save the current time so next time when task is switched out, it will use this time-stamp.
  ulTaskSwitchedInTime = ulTempCounter;
    51f2:	4b01      	ldr	r3, [pc, #4]	; (51f8 <vRunTimeStatIsrExit+0xc>)
    51f4:	6018      	str	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:95
}
    51f6:	bd08      	pop	{r3, pc}
    51f8:	10001394 	.word	0x10001394

000051fc <board_io__initialize>:
board_io__initialize():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:36
static const uint32_t board_io__sd_card_cs_pin = (1 << 8);
static const uint32_t board_io__sd_card_detect_pin = (1 << 9);
static gpio_s board_io__led0, board_io__led1, board_io__led2, board_io__led3;
static gpio_s board_io__sw0, board_io__sw1, board_io__sw2, board_io__sw3;

void board_io__initialize(void) {
    51fc:	b538      	push	{r3, r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:40
  // Note: return type of gpio__construct_with_function() because we do not need
  // GPIO instance after its configuration

  gpio__construct_with_function(GPIO__PORT_0, 2,
    51fe:	2201      	movs	r2, #1
    5200:	2102      	movs	r1, #2
    5202:	2000      	movs	r0, #0
    5204:	f000 f8c3 	bl	538e <gpio__construct_with_function>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:42
                                GPIO__FUNCTION_1); // P0.2 - Uart-0 Tx
  gpio__construct_with_function(GPIO__PORT_0, 3,
    5208:	2201      	movs	r2, #1
    520a:	2103      	movs	r1, #3
    520c:	2000      	movs	r0, #0
    520e:	f000 f8be 	bl	538e <gpio__construct_with_function>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:46
                                GPIO__FUNCTION_1); // P0.3 - Uart-0 Rx

  // SPI bus 2 (SSP2)
  gpio__construct_with_function(GPIO__PORT_1, 0,
    5212:	2204      	movs	r2, #4
    5214:	2100      	movs	r1, #0
    5216:	2001      	movs	r0, #1
    5218:	f000 f8b9 	bl	538e <gpio__construct_with_function>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:48
                                GPIO__FUNCTION_4); // P1.0 - SCK2
  gpio__construct_with_function(GPIO__PORT_1, 1,
    521c:	2101      	movs	r1, #1
    521e:	2204      	movs	r2, #4
    5220:	4608      	mov	r0, r1
    5222:	f000 f8b4 	bl	538e <gpio__construct_with_function>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:50
                                GPIO__FUNCTION_4); // P1.1 - MOSI2
  gpio__construct_with_function(GPIO__PORT_1, 4,
    5226:	2204      	movs	r2, #4
    5228:	4611      	mov	r1, r2
    522a:	2001      	movs	r0, #1
    522c:	f000 f8af 	bl	538e <gpio__construct_with_function>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:54
                                GPIO__FUNCTION_4); // P1.4 - MISO2

  // SD card
  gpio__construct_as_output(GPIO__PORT_1, 8); // SD card CS
    5230:	2108      	movs	r1, #8
    5232:	2001      	movs	r0, #1
    5234:	f000 f91a 	bl	546c <gpio__construct_as_output>
board_io__sd_card_ds():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:87
  gpio__enable_pull_down_resistors(board_io__sw1);
}

// Note: Not using gpio.h API here to optimize the speed of SSP CS selection
void board_io__sd_card_cs(void) { LPC_GPIO1->CLR = board_io__sd_card_cs_pin; }
void board_io__sd_card_ds(void) { LPC_GPIO1->SET = board_io__sd_card_cs_pin; }
    5238:	4b28      	ldr	r3, [pc, #160]	; (52dc <board_io__initialize+0xe0>)
    523a:	f44f 7280 	mov.w	r2, #256	; 0x100
    523e:	619a      	str	r2, [r3, #24]
board_io__initialize():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:56
  gpio__construct_as_input(GPIO__PORT_1, 9); // SD card detect
    5240:	2109      	movs	r1, #9
    5242:	2001      	movs	r0, #1
    5244:	f000 f8ee 	bl	5424 <gpio__construct_as_input>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:59
  const gpio_s sda_2 = gpio__construct_with_function(
    5248:	2202      	movs	r2, #2
    524a:	210a      	movs	r1, #10
    524c:	2000      	movs	r0, #0
    524e:	f000 f89e 	bl	538e <gpio__construct_with_function>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:61
  const gpio_s scl_2 = gpio__construct_with_function(
    5252:	2202      	movs	r2, #2
    5254:	210b      	movs	r1, #11
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:59
  const gpio_s sda_2 = gpio__construct_with_function(
    5256:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:61
  const gpio_s scl_2 = gpio__construct_with_function(
    5258:	2000      	movs	r0, #0
    525a:	f000 f898 	bl	538e <gpio__construct_with_function>
    525e:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:63
  gpio__enable_open_drain(sda_2);
    5260:	4628      	mov	r0, r5
    5262:	f000 f8a9 	bl	53b8 <gpio__enable_open_drain>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:64
  gpio__enable_open_drain(scl_2);
    5266:	4620      	mov	r0, r4
    5268:	f000 f8a6 	bl	53b8 <gpio__enable_open_drain>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:67
  board_io__led0 = gpio__construct_as_output(GPIO__PORT_2, 3);
    526c:	2103      	movs	r1, #3
    526e:	2002      	movs	r0, #2
    5270:	f000 f8fc 	bl	546c <gpio__construct_as_output>
    5274:	4b1a      	ldr	r3, [pc, #104]	; (52e0 <board_io__initialize+0xe4>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:73
  board_io__sw0 = gpio__construct_as_input(GPIO__PORT_1, 19);
    5276:	4d1b      	ldr	r5, [pc, #108]	; (52e4 <board_io__initialize+0xe8>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:67
  board_io__led0 = gpio__construct_as_output(GPIO__PORT_2, 3);
    5278:	7018      	strb	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:68
  board_io__led1 = gpio__construct_as_output(GPIO__PORT_1, 26);
    527a:	211a      	movs	r1, #26
    527c:	2001      	movs	r0, #1
    527e:	f000 f8f5 	bl	546c <gpio__construct_as_output>
    5282:	4b19      	ldr	r3, [pc, #100]	; (52e8 <board_io__initialize+0xec>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:74
  board_io__sw1 = gpio__construct_as_input(GPIO__PORT_1, 15);
    5284:	4c19      	ldr	r4, [pc, #100]	; (52ec <board_io__initialize+0xf0>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:68
  board_io__led1 = gpio__construct_as_output(GPIO__PORT_1, 26);
    5286:	7018      	strb	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:69
  board_io__led2 = gpio__construct_as_output(GPIO__PORT_1, 24);
    5288:	2118      	movs	r1, #24
    528a:	2001      	movs	r0, #1
    528c:	f000 f8ee 	bl	546c <gpio__construct_as_output>
    5290:	4b17      	ldr	r3, [pc, #92]	; (52f0 <board_io__initialize+0xf4>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:70
  board_io__led3 = gpio__construct_as_output(GPIO__PORT_1, 18);
    5292:	2112      	movs	r1, #18
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:69
  board_io__led2 = gpio__construct_as_output(GPIO__PORT_1, 24);
    5294:	7018      	strb	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:70
  board_io__led3 = gpio__construct_as_output(GPIO__PORT_1, 18);
    5296:	2001      	movs	r0, #1
    5298:	f000 f8e8 	bl	546c <gpio__construct_as_output>
    529c:	4b15      	ldr	r3, [pc, #84]	; (52f4 <board_io__initialize+0xf8>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:73
  board_io__sw0 = gpio__construct_as_input(GPIO__PORT_1, 19);
    529e:	2113      	movs	r1, #19
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:70
  board_io__led3 = gpio__construct_as_output(GPIO__PORT_1, 18);
    52a0:	7018      	strb	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:73
  board_io__sw0 = gpio__construct_as_input(GPIO__PORT_1, 19);
    52a2:	2001      	movs	r0, #1
    52a4:	f000 f8be 	bl	5424 <gpio__construct_as_input>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:74
  board_io__sw1 = gpio__construct_as_input(GPIO__PORT_1, 15);
    52a8:	210f      	movs	r1, #15
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:73
  board_io__sw0 = gpio__construct_as_input(GPIO__PORT_1, 19);
    52aa:	7028      	strb	r0, [r5, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:74
  board_io__sw1 = gpio__construct_as_input(GPIO__PORT_1, 15);
    52ac:	2001      	movs	r0, #1
    52ae:	f000 f8b9 	bl	5424 <gpio__construct_as_input>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:75
  board_io__sw2 = gpio__construct_as_input(GPIO__PORT_0, 30);
    52b2:	211e      	movs	r1, #30
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:74
  board_io__sw1 = gpio__construct_as_input(GPIO__PORT_1, 15);
    52b4:	7020      	strb	r0, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:75
  board_io__sw2 = gpio__construct_as_input(GPIO__PORT_0, 30);
    52b6:	2000      	movs	r0, #0
    52b8:	f000 f8b4 	bl	5424 <gpio__construct_as_input>
    52bc:	4b0e      	ldr	r3, [pc, #56]	; (52f8 <board_io__initialize+0xfc>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:76
  board_io__sw3 = gpio__construct_as_input(GPIO__PORT_0, 29);
    52be:	211d      	movs	r1, #29
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:75
  board_io__sw2 = gpio__construct_as_input(GPIO__PORT_0, 30);
    52c0:	7018      	strb	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:76
  board_io__sw3 = gpio__construct_as_input(GPIO__PORT_0, 29);
    52c2:	2000      	movs	r0, #0
    52c4:	f000 f8ae 	bl	5424 <gpio__construct_as_input>
    52c8:	4b0c      	ldr	r3, [pc, #48]	; (52fc <board_io__initialize+0x100>)
    52ca:	7018      	strb	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:81
  gpio__enable_pull_down_resistors(board_io__sw0);
    52cc:	7828      	ldrb	r0, [r5, #0]
    52ce:	f000 f883 	bl	53d8 <gpio__enable_pull_down_resistors>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:82
  gpio__enable_pull_down_resistors(board_io__sw1);
    52d2:	7820      	ldrb	r0, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:83
}
    52d4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:82
  gpio__enable_pull_down_resistors(board_io__sw1);
    52d8:	f000 b87e 	b.w	53d8 <gpio__enable_pull_down_resistors>
    52dc:	20098020 	.word	0x20098020
    52e0:	10001414 	.word	0x10001414
    52e4:	10001418 	.word	0x10001418
    52e8:	10001415 	.word	0x10001415
    52ec:	10001419 	.word	0x10001419
    52f0:	10001416 	.word	0x10001416
    52f4:	10001417 	.word	0x10001417
    52f8:	1000141a 	.word	0x1000141a
    52fc:	1000141b 	.word	0x1000141b

00005300 <board_io__sd_card_cs>:
board_io__sd_card_cs():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:86
void board_io__sd_card_cs(void) { LPC_GPIO1->CLR = board_io__sd_card_cs_pin; }
    5300:	4b02      	ldr	r3, [pc, #8]	; (530c <board_io__sd_card_cs+0xc>)
    5302:	f44f 7280 	mov.w	r2, #256	; 0x100
    5306:	61da      	str	r2, [r3, #28]
    5308:	4770      	bx	lr
    530a:	bf00      	nop
    530c:	20098020 	.word	0x20098020

00005310 <board_io__sd_card_ds>:
board_io__sd_card_ds():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:87
void board_io__sd_card_ds(void) { LPC_GPIO1->SET = board_io__sd_card_cs_pin; }
    5310:	4b02      	ldr	r3, [pc, #8]	; (531c <board_io__sd_card_ds+0xc>)
    5312:	f44f 7280 	mov.w	r2, #256	; 0x100
    5316:	619a      	str	r2, [r3, #24]
    5318:	4770      	bx	lr
    531a:	bf00      	nop
    531c:	20098020 	.word	0x20098020

00005320 <board_io__sd_card_is_present>:
board_io__sd_card_is_present():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:91

bool board_io__sd_card_is_present(void) {
  const uint32_t card_present_bitmask =
      (LPC_GPIO1->PIN & board_io__sd_card_detect_pin);
    5320:	4b03      	ldr	r3, [pc, #12]	; (5330 <board_io__sd_card_is_present+0x10>)
    5322:	6958      	ldr	r0, [r3, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:92
  return (0 == card_present_bitmask); // Signal is active low
    5324:	f480 7000 	eor.w	r0, r0, #512	; 0x200
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:93
}
    5328:	f3c0 2040 	ubfx	r0, r0, #9, #1
    532c:	4770      	bx	lr
    532e:	bf00      	nop
    5330:	20098020 	.word	0x20098020

00005334 <board_io__get_led0>:
board_io__get_led0():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:95

gpio_s board_io__get_led0(void) { return board_io__led0; }
    5334:	4b01      	ldr	r3, [pc, #4]	; (533c <board_io__get_led0+0x8>)
    5336:	7818      	ldrb	r0, [r3, #0]
    5338:	4770      	bx	lr
    533a:	bf00      	nop
    533c:	10001414 	.word	0x10001414

00005340 <board_io__get_led1>:
board_io__get_led1():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:96
gpio_s board_io__get_led1(void) { return board_io__led1; }
    5340:	4b01      	ldr	r3, [pc, #4]	; (5348 <board_io__get_led1+0x8>)
    5342:	7818      	ldrb	r0, [r3, #0]
    5344:	4770      	bx	lr
    5346:	bf00      	nop
    5348:	10001415 	.word	0x10001415

0000534c <board_io__get_led2>:
board_io__get_led2():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:97
gpio_s board_io__get_led2(void) { return board_io__led2; }
    534c:	4b01      	ldr	r3, [pc, #4]	; (5354 <board_io__get_led2+0x8>)
    534e:	7818      	ldrb	r0, [r3, #0]
    5350:	4770      	bx	lr
    5352:	bf00      	nop
    5354:	10001416 	.word	0x10001416

00005358 <board_io__get_led3>:
board_io__get_led3():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:98
gpio_s board_io__get_led3(void) { return board_io__led3; }
    5358:	4b01      	ldr	r3, [pc, #4]	; (5360 <board_io__get_led3+0x8>)
    535a:	7818      	ldrb	r0, [r3, #0]
    535c:	4770      	bx	lr
    535e:	bf00      	nop
    5360:	10001417 	.word	0x10001417

00005364 <gpio__set_function>:
gpio__get_iocon():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:23

  // Each port is offset by thirty-two 32-bit registers
  volatile uint32_t *port_offset = IOCON_base + (32 * gpio.port_number);

  // Each pin configuration is a single 32-bit
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    5364:	f3c0 03c4 	ubfx	r3, r0, #3, #5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:20
  volatile uint32_t *port_offset = IOCON_base + (32 * gpio.port_number);
    5368:	f000 0207 	and.w	r2, r0, #7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:23
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    536c:	009b      	lsls	r3, r3, #2
    536e:	eb03 13c2 	add.w	r3, r3, r2, lsl #7
    5372:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
    5376:	f503 3330 	add.w	r3, r3, #180224	; 0x2c000
gpio__set_function():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:70
  volatile uint32_t *pin_iocon = gpio__get_iocon(gpio);

  // Reference chapter 7: table 83
  const uint32_t config_mask = UINT32_C(7);
  *pin_iocon &= ~(config_mask << 0);
  *pin_iocon |= ((uint32_t)function & config_mask);
    537a:	f001 0107 	and.w	r1, r1, #7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:69
  *pin_iocon &= ~(config_mask << 0);
    537e:	681a      	ldr	r2, [r3, #0]
    5380:	f022 0207 	bic.w	r2, r2, #7
    5384:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:70
  *pin_iocon |= ((uint32_t)function & config_mask);
    5386:	681a      	ldr	r2, [r3, #0]
    5388:	4311      	orrs	r1, r2
    538a:	6019      	str	r1, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:71
}
    538c:	4770      	bx	lr

0000538e <gpio__construct_with_function>:
gpio__construct_with_function():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:58
                                     gpio__function_e function) {
    538e:	b538      	push	{r3, r4, r5, lr}
gpio__construct():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:36
      .port_number = (uint8_t)port,
    5390:	f000 0507 	and.w	r5, r0, #7
gpio__construct_with_function():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:60
  gpio__set_function(gpio, function);
    5394:	f04f 0000 	mov.w	r0, #0
gpio__construct():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:35
  gpio_s gpio = {
    5398:	f001 041f 	and.w	r4, r1, #31
gpio__construct_with_function():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:60
  gpio__set_function(gpio, function);
    539c:	f365 0002 	bfi	r0, r5, #0, #3
    53a0:	f364 00c7 	bfi	r0, r4, #3, #5
    53a4:	4611      	mov	r1, r2
    53a6:	f7ff ffdd 	bl	5364 <gpio__set_function>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:61
  return gpio;
    53aa:	f04f 0000 	mov.w	r0, #0
    53ae:	f365 0002 	bfi	r0, r5, #0, #3
    53b2:	f364 00c7 	bfi	r0, r4, #3, #5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:62
}
    53b6:	bd38      	pop	{r3, r4, r5, pc}

000053b8 <gpio__enable_open_drain>:
gpio__get_iocon():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:23
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    53b8:	f3c0 03c4 	ubfx	r3, r0, #3, #5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:20
  volatile uint32_t *port_offset = IOCON_base + (32 * gpio.port_number);
    53bc:	f000 0207 	and.w	r2, r0, #7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:23
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    53c0:	009b      	lsls	r3, r3, #2
    53c2:	eb03 13c2 	add.w	r3, r3, r2, lsl #7
    53c6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
    53ca:	f503 3330 	add.w	r3, r3, #180224	; 0x2c000
gpio__enable_open_drain():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:75

void gpio__enable_open_drain(gpio_s gpio) {
  volatile uint32_t *pin_iocon = gpio__get_iocon(gpio);
  *pin_iocon |= (UINT32_C(1) << 10);
    53ce:	681a      	ldr	r2, [r3, #0]
    53d0:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
    53d4:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:76
}
    53d6:	4770      	bx	lr

000053d8 <gpio__enable_pull_down_resistors>:
gpio__get_iocon():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:23
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    53d8:	f3c0 03c4 	ubfx	r3, r0, #3, #5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:20
  volatile uint32_t *port_offset = IOCON_base + (32 * gpio.port_number);
    53dc:	f000 0207 	and.w	r2, r0, #7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:23
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    53e0:	009b      	lsls	r3, r3, #2
    53e2:	eb03 13c2 	add.w	r3, r3, r2, lsl #7
    53e6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
    53ea:	f503 3330 	add.w	r3, r3, #180224	; 0x2c000
gpio__enable_pull_down_resistors():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:82

void gpio__enable_pull_down_resistors(gpio_s gpio) {
  volatile uint32_t *pin_iocon = gpio__get_iocon(gpio);

  const uint32_t mode_mask = UINT32_C(3);
  *pin_iocon &= ~(mode_mask << 3);
    53ee:	681a      	ldr	r2, [r3, #0]
    53f0:	f022 0218 	bic.w	r2, r2, #24
    53f4:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:83
  *pin_iocon |= (UINT32_C(1) << 3);
    53f6:	681a      	ldr	r2, [r3, #0]
    53f8:	f042 0208 	orr.w	r2, r2, #8
    53fc:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:84
}
    53fe:	4770      	bx	lr

00005400 <gpio__set_as_input>:
gpio__get_struct():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    5400:	f000 0207 	and.w	r2, r0, #7
    5404:	4b06      	ldr	r3, [pc, #24]	; (5420 <gpio__set_as_input+0x20>)
    5406:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
gpio__get_pin_mask():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    540a:	f3c0 00c4 	ubfx	r0, r0, #3, #5
gpio__set_as_input():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:87

void gpio__set_as_input(gpio_s gpio) {
  gpio__get_struct(gpio)->DIR &= ~gpio__get_pin_mask(gpio);
    540e:	680b      	ldr	r3, [r1, #0]
gpio__get_pin_mask():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    5410:	2201      	movs	r2, #1
    5412:	fa02 f000 	lsl.w	r0, r2, r0
gpio__set_as_input():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:87
  gpio__get_struct(gpio)->DIR &= ~gpio__get_pin_mask(gpio);
    5416:	ea23 0300 	bic.w	r3, r3, r0
    541a:	600b      	str	r3, [r1, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:88
}
    541c:	4770      	bx	lr
    541e:	bf00      	nop
    5420:	0000d864 	.word	0x0000d864

00005424 <gpio__construct_as_input>:
gpio__construct_as_input():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:43
gpio_s gpio__construct_as_input(gpio__port_e port, uint8_t pin_number_0_to_31) {
    5424:	b538      	push	{r3, r4, r5, lr}
gpio__construct():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:36
      .port_number = (uint8_t)port,
    5426:	f000 0507 	and.w	r5, r0, #7
gpio__construct_as_input():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:45
  gpio__set_as_input(gpio);
    542a:	f04f 0000 	mov.w	r0, #0
gpio__construct():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:35
  gpio_s gpio = {
    542e:	f001 041f 	and.w	r4, r1, #31
gpio__construct_as_input():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:45
  gpio__set_as_input(gpio);
    5432:	f365 0002 	bfi	r0, r5, #0, #3
    5436:	f364 00c7 	bfi	r0, r4, #3, #5
    543a:	f7ff ffe1 	bl	5400 <gpio__set_as_input>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:46
  return gpio;
    543e:	f04f 0000 	mov.w	r0, #0
    5442:	f365 0002 	bfi	r0, r5, #0, #3
    5446:	f364 00c7 	bfi	r0, r4, #3, #5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:47
}
    544a:	bd38      	pop	{r3, r4, r5, pc}

0000544c <gpio__set_as_output>:
gpio__get_struct():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    544c:	f000 0207 	and.w	r2, r0, #7
    5450:	4b05      	ldr	r3, [pc, #20]	; (5468 <gpio__set_as_output+0x1c>)
    5452:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
gpio__get_pin_mask():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    5456:	f3c0 03c4 	ubfx	r3, r0, #3, #5
gpio__set_as_output():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:91

void gpio__set_as_output(gpio_s gpio) {
  gpio__get_struct(gpio)->DIR |= gpio__get_pin_mask(gpio);
    545a:	6811      	ldr	r1, [r2, #0]
gpio__get_pin_mask():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    545c:	2001      	movs	r0, #1
    545e:	4098      	lsls	r0, r3
gpio__set_as_output():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:91
  gpio__get_struct(gpio)->DIR |= gpio__get_pin_mask(gpio);
    5460:	4308      	orrs	r0, r1
    5462:	6010      	str	r0, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:92
}
    5464:	4770      	bx	lr
    5466:	bf00      	nop
    5468:	0000d864 	.word	0x0000d864

0000546c <gpio__construct_as_output>:
gpio__construct_as_output():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:50
                                 uint8_t pin_number_0_to_31) {
    546c:	b538      	push	{r3, r4, r5, lr}
gpio__construct():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:36
      .port_number = (uint8_t)port,
    546e:	f000 0507 	and.w	r5, r0, #7
gpio__construct_as_output():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:52
  gpio__set_as_output(gpio);
    5472:	f04f 0000 	mov.w	r0, #0
gpio__construct():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:35
  gpio_s gpio = {
    5476:	f001 041f 	and.w	r4, r1, #31
gpio__construct_as_output():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:52
  gpio__set_as_output(gpio);
    547a:	f365 0002 	bfi	r0, r5, #0, #3
    547e:	f364 00c7 	bfi	r0, r4, #3, #5
    5482:	f7ff ffe3 	bl	544c <gpio__set_as_output>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:53
  return gpio;
    5486:	f04f 0000 	mov.w	r0, #0
    548a:	f365 0002 	bfi	r0, r5, #0, #3
    548e:	f364 00c7 	bfi	r0, r4, #3, #5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:54
}
    5492:	bd38      	pop	{r3, r4, r5, pc}

00005494 <gpio__get>:
gpio__get_struct():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    5494:	f000 0207 	and.w	r2, r0, #7
    5498:	4b06      	ldr	r3, [pc, #24]	; (54b4 <gpio__get+0x20>)
    549a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
gpio__get_pin_mask():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    549e:	f3c0 00c4 	ubfx	r0, r0, #3, #5
gpio__get():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:95

bool gpio__get(gpio_s gpio) {
  return (gpio__get_struct(gpio)->PIN & gpio__get_pin_mask(gpio));
    54a2:	695a      	ldr	r2, [r3, #20]
gpio__get_pin_mask():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    54a4:	2301      	movs	r3, #1
    54a6:	fa03 f000 	lsl.w	r0, r3, r0
gpio__get():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:95
  return (gpio__get_struct(gpio)->PIN & gpio__get_pin_mask(gpio));
    54aa:	4210      	tst	r0, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:96
}
    54ac:	bf14      	ite	ne
    54ae:	4618      	movne	r0, r3
    54b0:	2000      	moveq	r0, #0
    54b2:	4770      	bx	lr
    54b4:	0000d864 	.word	0x0000d864

000054b8 <gpio__set>:
gpio__get_struct():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    54b8:	f000 0207 	and.w	r2, r0, #7
    54bc:	4b04      	ldr	r3, [pc, #16]	; (54d0 <gpio__set+0x18>)
gpio__get_pin_mask():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    54be:	f3c0 00c4 	ubfx	r0, r0, #3, #5
gpio__get_struct():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    54c2:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
gpio__get_pin_mask():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    54c6:	2301      	movs	r3, #1
    54c8:	fa03 f000 	lsl.w	r0, r3, r0
gpio__set():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:99

void gpio__set(gpio_s gpio) {
  gpio__get_struct(gpio)->SET = gpio__get_pin_mask(gpio);
    54cc:	6190      	str	r0, [r2, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:100
}
    54ce:	4770      	bx	lr
    54d0:	0000d864 	.word	0x0000d864

000054d4 <gpio__reset>:
gpio__get_struct():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    54d4:	f000 0207 	and.w	r2, r0, #7
    54d8:	4b04      	ldr	r3, [pc, #16]	; (54ec <gpio__reset+0x18>)
gpio__get_pin_mask():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    54da:	f3c0 00c4 	ubfx	r0, r0, #3, #5
gpio__get_struct():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    54de:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
gpio__get_pin_mask():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    54e2:	2301      	movs	r3, #1
    54e4:	fa03 f000 	lsl.w	r0, r3, r0
gpio__reset():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:103

void gpio__reset(gpio_s gpio) {
  gpio__get_struct(gpio)->CLR = gpio__get_pin_mask(gpio);
    54e8:	61d0      	str	r0, [r2, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:104
}
    54ea:	4770      	bx	lr
    54ec:	0000d864 	.word	0x0000d864

000054f0 <gpio__toggle>:
gpio__toggle():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:106

void gpio__toggle(gpio_s gpio) {
    54f0:	b508      	push	{r3, lr}
    54f2:	4601      	mov	r1, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:108
  // Avoiding XOR logic with PIN register to make it thread safe
  if (gpio__get(gpio)) {
    54f4:	f7ff ffce 	bl	5494 <gpio__get>
    54f8:	b120      	cbz	r0, 5504 <gpio__toggle+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:109
    gpio__reset(gpio);
    54fa:	4608      	mov	r0, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:113
  } else {
    gpio__set(gpio);
  }
}
    54fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:109
    gpio__reset(gpio);
    5500:	f7ff bfe8 	b.w	54d4 <gpio__reset>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:111
    gpio__set(gpio);
    5504:	4608      	mov	r0, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:113
}
    5506:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:111
    gpio__set(gpio);
    550a:	f7ff bfd5 	b.w	54b8 <gpio__set>
    550e:	Address 0x000000000000550e is out of bounds.


00005510 <hw_timer__enable>:
hw_timer__enable():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:20
    {LPC_TIM2, LPC_PERIPHERAL__TIMER2, "HW_T2"},
    {LPC_TIM3, LPC_PERIPHERAL__TIMER3, "HW_T3"},
};

void hw_timer__enable(lpc_timer_e timer, const uint32_t prescalar_divider,
                      function__void_f isr_callback) {
    5510:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:22
  // Peripheral must be turned on before accessing its registers
  lpc_peripheral__turn_on_power_to(hw_timers[timer].peripheral_id);
    5514:	4f0f      	ldr	r7, [pc, #60]	; (5554 <hw_timer__enable+0x44>)
    5516:	240c      	movs	r4, #12
    5518:	4344      	muls	r4, r0
    551a:	193e      	adds	r6, r7, r4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:20
                      function__void_f isr_callback) {
    551c:	4688      	mov	r8, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:22
  lpc_peripheral__turn_on_power_to(hw_timers[timer].peripheral_id);
    551e:	7935      	ldrb	r5, [r6, #4]
    5520:	4628      	mov	r0, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:20
                      function__void_f isr_callback) {
    5522:	4691      	mov	r9, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:22
  lpc_peripheral__turn_on_power_to(hw_timers[timer].peripheral_id);
    5524:	f000 fa0e 	bl	5944 <lpc_peripheral__turn_on_power_to>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:24

  hw_timers[timer].registers->TCR = 0;
    5528:	593c      	ldr	r4, [r7, r4]
    552a:	2300      	movs	r3, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:27
  hw_timers[timer].registers->TC = 0;

  hw_timers[timer].registers->IR = 0x3F; // Clear all interrupts
    552c:	223f      	movs	r2, #63	; 0x3f
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:24
  hw_timers[timer].registers->TCR = 0;
    552e:	6063      	str	r3, [r4, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:37
  hw_timers[timer].registers->MR3 = 0;

  /* Interrupt can be enabled because we can assume the timer is not setup
   * for interrupt yet through hw_timer__enable_match_isr()
   */
  lpc_peripheral__enable_interrupt(hw_timers[timer].peripheral_id, isr_callback,
    5530:	4649      	mov	r1, r9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:25
  hw_timers[timer].registers->TC = 0;
    5532:	60a3      	str	r3, [r4, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:37
  lpc_peripheral__enable_interrupt(hw_timers[timer].peripheral_id, isr_callback,
    5534:	4628      	mov	r0, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:27
  hw_timers[timer].registers->IR = 0x3F; // Clear all interrupts
    5536:	6022      	str	r2, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:28
  hw_timers[timer].registers->MCR = 0;   // Clear all match register settings
    5538:	6163      	str	r3, [r4, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:37
  lpc_peripheral__enable_interrupt(hw_timers[timer].peripheral_id, isr_callback,
    553a:	68b2      	ldr	r2, [r6, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:29
  hw_timers[timer].registers->MR0 = 0;
    553c:	61a3      	str	r3, [r4, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:30
  hw_timers[timer].registers->MR1 = 0;
    553e:	61e3      	str	r3, [r4, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:31
  hw_timers[timer].registers->MR2 = 0;
    5540:	6223      	str	r3, [r4, #32]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:32
  hw_timers[timer].registers->MR3 = 0;
    5542:	6263      	str	r3, [r4, #36]	; 0x24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:37
  lpc_peripheral__enable_interrupt(hw_timers[timer].peripheral_id, isr_callback,
    5544:	f000 fa22 	bl	598c <lpc_peripheral__enable_interrupt>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:41
                                   hw_timers[timer].rtos_isr_trace_name);

  hw_timers[timer].registers->PR = prescalar_divider;
  hw_timers[timer].registers->TCR = 1; // Enable
    5548:	2301      	movs	r3, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:40
  hw_timers[timer].registers->PR = prescalar_divider;
    554a:	f8c4 800c 	str.w	r8, [r4, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:41
  hw_timers[timer].registers->TCR = 1; // Enable
    554e:	6063      	str	r3, [r4, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:42
}
    5550:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    5554:	0000d87c 	.word	0x0000d87c

00005558 <hw_timer__enable_match_isr>:
hw_timer__enable_match_isr():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:47

void hw_timer__enable_match_isr(lpc_timer_e timer, lpc_timer__mr_e mr_type,
                                const uint32_t mr_value) {
  const uint32_t interrupt_on_match = (uint32_t)mr_type * 3; // 3 bits per MR
  hw_timers[timer].registers->MCR |= (1 << interrupt_on_match);
    5558:	230c      	movs	r3, #12
    555a:	4358      	muls	r0, r3
    555c:	4b06      	ldr	r3, [pc, #24]	; (5578 <hw_timer__enable_match_isr+0x20>)
    555e:	581b      	ldr	r3, [r3, r0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:45
                                const uint32_t mr_value) {
    5560:	b530      	push	{r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:47
  hw_timers[timer].registers->MCR |= (1 << interrupt_on_match);
    5562:	2001      	movs	r0, #1
    5564:	695c      	ldr	r4, [r3, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:46
  const uint32_t interrupt_on_match = (uint32_t)mr_type * 3; // 3 bits per MR
    5566:	eb01 0541 	add.w	r5, r1, r1, lsl #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:47
  hw_timers[timer].registers->MCR |= (1 << interrupt_on_match);
    556a:	40a8      	lsls	r0, r5
    556c:	4320      	orrs	r0, r4
    556e:	6158      	str	r0, [r3, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:50

  // Four MR registers are contiguous and they start from &MR0
  volatile uint32_t *mr_base = &(hw_timers[timer].registers->MR0);
    5570:	3318      	adds	r3, #24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:53
  volatile uint32_t *mr_register = mr_base + mr_type;

  *mr_register = mr_value;
    5572:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:54
}
    5576:	bd30      	pop	{r4, r5, pc}
    5578:	0000d87c 	.word	0x0000d87c

0000557c <hw_timer__acknowledge_interrupt>:
hw_timer__acknowledge_interrupt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:58

void hw_timer__acknowledge_interrupt(lpc_timer_e timer,
                                     lpc_timer__mr_e mr_type) {
  hw_timers[timer].registers->IR = (1 << (uint32_t)mr_type);
    557c:	230c      	movs	r3, #12
    557e:	4358      	muls	r0, r3
    5580:	4b03      	ldr	r3, [pc, #12]	; (5590 <hw_timer__acknowledge_interrupt+0x14>)
    5582:	581a      	ldr	r2, [r3, r0]
    5584:	2301      	movs	r3, #1
    5586:	fa03 f101 	lsl.w	r1, r3, r1
    558a:	6011      	str	r1, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:59
}
    558c:	4770      	bx	lr
    558e:	bf00      	nop
    5590:	0000d87c 	.word	0x0000d87c

00005594 <hw_timer__get_value>:
hw_timer__get_value():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:62

uint32_t hw_timer__get_value(lpc_timer_e timer) {
  return hw_timers[timer].registers->TC;
    5594:	230c      	movs	r3, #12
    5596:	4358      	muls	r0, r3
    5598:	4b01      	ldr	r3, [pc, #4]	; (55a0 <hw_timer__get_value+0xc>)
    559a:	581b      	ldr	r3, [r3, r0]
    559c:	6898      	ldr	r0, [r3, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:63
}
    559e:	4770      	bx	lr
    55a0:	0000d87c 	.word	0x0000d87c

000055a4 <hw_timer__set_value>:
hw_timer__set_value():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:66

void hw_timer__set_value(lpc_timer_e timer, uint32_t tc_value) {
  hw_timers[timer].registers->TC = tc_value;
    55a4:	230c      	movs	r3, #12
    55a6:	4358      	muls	r0, r3
    55a8:	4b01      	ldr	r3, [pc, #4]	; (55b0 <hw_timer__set_value+0xc>)
    55aa:	581b      	ldr	r3, [r3, r0]
    55ac:	6099      	str	r1, [r3, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:67
}
    55ae:	4770      	bx	lr
    55b0:	0000d87c 	.word	0x0000d87c

000055b4 <i2c__transfer_unprotected>:
i2c__transfer_unprotected():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:269

static bool i2c__transfer_unprotected(i2c_s *i2c, uint8_t slave_address,
                                      uint8_t starting_slave_memory_address,
                                      uint8_t *input_byte_pointer,
                                      const uint8_t *output_byte_pointer,
                                      uint32_t number_of_bytes_to_transfer) {
    55b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    55b8:	4604      	mov	r4, r0
    55ba:	4617      	mov	r7, r2
    55bc:	461e      	mov	r6, r3
    55be:	4688      	mov	r8, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:273
  bool status = false;
  const uint32_t timeout_ms = 3000;
  const bool rtos_is_running =
      (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
    55c0:	f7ff fcaa 	bl	4f18 <xTaskGetSchedulerState>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:275

  xSemaphoreTake(i2c->transfer_complete_signal,
    55c4:	2100      	movs	r1, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:273
      (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
    55c6:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:275
  xSemaphoreTake(i2c->transfer_complete_signal,
    55c8:	68a0      	ldr	r0, [r4, #8]
    55ca:	f7fe fd3f 	bl	404c <xQueueSemaphoreTake>
i2c__kick_off_transfer():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:304
static void i2c__kick_off_transfer(i2c_s *i2c, uint8_t slave_address,
                                   uint8_t starting_slave_memory_address,
                                   uint8_t *input_byte_pointer,
                                   const uint8_t *output_byte_pointer,
                                   uint32_t number_of_bytes_to_transfer) {
  i2c->error_code = 0;
    55ce:	2300      	movs	r3, #0
    55d0:	7423      	strb	r3, [r4, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:309
  i2c->slave_address = slave_address;
  i2c->starting_slave_memory_address = starting_slave_memory_address;

  i2c->input_byte_pointer = input_byte_pointer;
  i2c->output_byte_pointer = output_byte_pointer;
    55d2:	9b06      	ldr	r3, [sp, #24]
    55d4:	61a3      	str	r3, [r4, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:310
  i2c->number_of_bytes_to_transfer = number_of_bytes_to_transfer;
    55d6:	9b07      	ldr	r3, [sp, #28]
    55d8:	61e3      	str	r3, [r4, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:316

  // Send START, I2C State Machine will finish the rest through interrupts; @see
  // i2c__handle_state_machine()
  I2C__DEBUG_PRINTF("Starting transfer with device address: 0x%02X",
                    (unsigned)slave_address);
  i2c__set_start_flag(i2c->registers);
    55da:	6823      	ldr	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:305
  i2c->slave_address = slave_address;
    55dc:	f884 8011 	strb.w	r8, [r4, #17]
i2c__set_start_flag():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:111
static void i2c__set_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONSET = 0x20; }
    55e0:	2220      	movs	r2, #32
i2c__transfer_unprotected():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:283
  if (rtos_is_running) {
    55e2:	2d02      	cmp	r5, #2
i2c__kick_off_transfer():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:306
  i2c->starting_slave_memory_address = starting_slave_memory_address;
    55e4:	74a7      	strb	r7, [r4, #18]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:308
  i2c->input_byte_pointer = input_byte_pointer;
    55e6:	6166      	str	r6, [r4, #20]
i2c__set_start_flag():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:111
static void i2c__set_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONSET = 0x20; }
    55e8:	601a      	str	r2, [r3, #0]
i2c__transfer_unprotected():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:283
  if (rtos_is_running) {
    55ea:	d10b      	bne.n	5604 <i2c__transfer_unprotected+0x50>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:285
    if (xSemaphoreTake(i2c->transfer_complete_signal, timeout_ms)) {
    55ec:	f640 31b8 	movw	r1, #3000	; 0xbb8
    55f0:	68a0      	ldr	r0, [r4, #8]
    55f2:	f7fe fd2b 	bl	404c <xQueueSemaphoreTake>
    55f6:	b118      	cbz	r0, 5600 <i2c__transfer_unprotected+0x4c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:293
    status = (0 == i2c->error_code);
    55f8:	7c20      	ldrb	r0, [r4, #16]
    55fa:	fab0 f080 	clz	r0, r0
    55fe:	0940      	lsrs	r0, r0, #5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:297
}
    5600:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:291 (discriminator 1)
    while (!xSemaphoreTake(i2c->transfer_complete_signal, 0)) {
    5604:	2100      	movs	r1, #0
    5606:	68a0      	ldr	r0, [r4, #8]
    5608:	f7fe fd20 	bl	404c <xQueueSemaphoreTake>
    560c:	2800      	cmp	r0, #0
    560e:	d0f9      	beq.n	5604 <i2c__transfer_unprotected+0x50>
    5610:	e7f2      	b.n	55f8 <i2c__transfer_unprotected+0x44>
    5612:	Address 0x0000000000005612 is out of bounds.


00005614 <i2c__handle_interrupt>:
i2c__handle_state_machine():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:359
   * I2C__STATE_MR_SLAVE_NACK_SENT --> (stop) For 1  byte :
   *I2C__STATE_MR_SLAVE_NACK_SENT --> (stop)
   ***********************************************************************************************************
   */

  LPC_I2C_TypeDef *lpc_i2c = i2c->registers;
    5614:	6803      	ldr	r3, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:360
  const unsigned i2c_state = lpc_i2c->STAT;
    5616:	685a      	ldr	r2, [r3, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:363
  I2C__DEBUG_PRINTF("  HW State: 0x%02X", i2c_state);

  switch (i2c_state) {
    5618:	2a28      	cmp	r2, #40	; 0x28
i2c__handle_interrupt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:483
  }

  return true;
}

static void i2c__handle_interrupt(i2c_s *i2c) {
    561a:	b513      	push	{r0, r1, r4, lr}
i2c__handle_state_machine():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:363
  switch (i2c_state) {
    561c:	d057      	beq.n	56ce <i2c__handle_interrupt+0xba>
    561e:	d80a      	bhi.n	5636 <i2c__handle_interrupt+0x22>
    5620:	2a10      	cmp	r2, #16
    5622:	d02c      	beq.n	567e <i2c__handle_interrupt+0x6a>
    5624:	2a18      	cmp	r2, #24
    5626:	d032      	beq.n	568e <i2c__handle_interrupt+0x7a>
    5628:	2a08      	cmp	r2, #8
    562a:	d109      	bne.n	5640 <i2c__handle_interrupt+0x2c>
i2c__write_address():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:93
  return (slave_address & 0xFE);
    562c:	7c41      	ldrb	r1, [r0, #17]
i2c__handle_state_machine():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:366
    lpc_i2c->DAT = i2c__write_address(i2c->slave_address);
    562e:	f001 01fe 	and.w	r1, r1, #254	; 0xfe
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:383
      lpc_i2c->DAT = i2c->starting_slave_memory_address;
    5632:	6099      	str	r1, [r3, #8]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:109
  i2c->CONCLR = 0x08;
    5634:	e028      	b.n	5688 <i2c__handle_interrupt+0x74>
i2c__handle_state_machine():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:363
  switch (i2c_state) {
    5636:	2a40      	cmp	r2, #64	; 0x40
    5638:	d063      	beq.n	5702 <i2c__handle_interrupt+0xee>
    563a:	d80d      	bhi.n	5658 <i2c__handle_interrupt+0x44>
    563c:	2a38      	cmp	r2, #56	; 0x38
    563e:	d077      	beq.n	5730 <i2c__handle_interrupt+0x11c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:463
    i2c->error_code = lpc_i2c->STAT;
    5640:	685a      	ldr	r2, [r3, #4]
    5642:	7402      	strb	r2, [r0, #16]
i2c__clear_start_flag():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:112
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    5644:	2220      	movs	r2, #32
    5646:	619a      	str	r2, [r3, #24]
i2c__set_stop():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:474
  i2c->CONSET = stop_bit;
    5648:	2210      	movs	r2, #16
    564a:	601a      	str	r2, [r3, #0]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:109
  i2c->CONCLR = 0x08;
    564c:	2208      	movs	r2, #8
    564e:	619a      	str	r2, [r3, #24]
i2c__set_stop():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:477
  while (i2c->CONSET & stop_bit) {
    5650:	681a      	ldr	r2, [r3, #0]
    5652:	06d2      	lsls	r2, r2, #27
    5654:	d4fc      	bmi.n	5650 <i2c__handle_interrupt+0x3c>
    5656:	e026      	b.n	56a6 <i2c__handle_interrupt+0x92>
i2c__handle_state_machine():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:363
  switch (i2c_state) {
    5658:	2a50      	cmp	r2, #80	; 0x50
    565a:	d05b      	beq.n	5714 <i2c__handle_interrupt+0x100>
    565c:	2a58      	cmp	r2, #88	; 0x58
    565e:	d1ef      	bne.n	5640 <i2c__handle_interrupt+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:446
    *(i2c->input_byte_pointer) = lpc_i2c->DAT;
    5660:	6942      	ldr	r2, [r0, #20]
    5662:	6899      	ldr	r1, [r3, #8]
    5664:	7011      	strb	r1, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:447
    i2c->number_of_bytes_to_transfer = 0;
    5666:	2200      	movs	r2, #0
    5668:	61c2      	str	r2, [r0, #28]
i2c__clear_start_flag():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:112
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    566a:	2220      	movs	r2, #32
    566c:	619a      	str	r2, [r3, #24]
i2c__set_stop():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:474
  i2c->CONSET = stop_bit;
    566e:	2210      	movs	r2, #16
    5670:	601a      	str	r2, [r3, #0]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:109
  i2c->CONCLR = 0x08;
    5672:	2208      	movs	r2, #8
    5674:	619a      	str	r2, [r3, #24]
i2c__set_stop():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:477
  while (i2c->CONSET & stop_bit) {
    5676:	681a      	ldr	r2, [r3, #0]
    5678:	06d1      	lsls	r1, r2, #27
    567a:	d4fc      	bmi.n	5676 <i2c__handle_interrupt+0x62>
    567c:	e013      	b.n	56a6 <i2c__handle_interrupt+0x92>
i2c__read_address():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:90
  return (slave_address | 0x01);
    567e:	7c42      	ldrb	r2, [r0, #17]
i2c__handle_state_machine():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:371
    lpc_i2c->DAT = i2c__read_address(i2c->slave_address);
    5680:	f042 0201 	orr.w	r2, r2, #1
    5684:	609a      	str	r2, [r3, #8]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:109
  i2c->CONCLR = 0x08;
    5686:	2208      	movs	r2, #8
    5688:	619a      	str	r2, [r3, #24]
i2c__handle_interrupt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:492
    long higher_priority_task_woke = 0;
    xSemaphoreGiveFromISR(i2c->transfer_complete_signal,
                          &higher_priority_task_woke);
    portEND_SWITCHING_ISR(higher_priority_task_woke);
  }
}
    568a:	b002      	add	sp, #8
    568c:	bd10      	pop	{r4, pc}
i2c__handle_state_machine():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:380
    if (0 == i2c->number_of_bytes_to_transfer) {
    568e:	69c4      	ldr	r4, [r0, #28]
i2c__clear_start_flag():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:112
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    5690:	2120      	movs	r1, #32
    5692:	6199      	str	r1, [r3, #24]
i2c__handle_state_machine():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:380
    if (0 == i2c->number_of_bytes_to_transfer) {
    5694:	2208      	movs	r2, #8
    5696:	b9c4      	cbnz	r4, 56ca <i2c__handle_interrupt+0xb6>
i2c__clear_start_flag():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:112
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    5698:	6199      	str	r1, [r3, #24]
i2c__set_stop():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:474
  i2c->CONSET = stop_bit;
    569a:	2110      	movs	r1, #16
    569c:	6019      	str	r1, [r3, #0]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:109
  i2c->CONCLR = 0x08;
    569e:	619a      	str	r2, [r3, #24]
i2c__set_stop():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:477
  while (i2c->CONSET & stop_bit) {
    56a0:	681a      	ldr	r2, [r3, #0]
    56a2:	06d1      	lsls	r1, r2, #27
    56a4:	d4fc      	bmi.n	56a0 <i2c__handle_interrupt+0x8c>
i2c__handle_interrupt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:487
    long higher_priority_task_woke = 0;
    56a6:	2300      	movs	r3, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:488
    xSemaphoreGiveFromISR(i2c->transfer_complete_signal,
    56a8:	a901      	add	r1, sp, #4
    56aa:	6880      	ldr	r0, [r0, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:487
    long higher_priority_task_woke = 0;
    56ac:	9301      	str	r3, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:488
    xSemaphoreGiveFromISR(i2c->transfer_complete_signal,
    56ae:	f7fe fbdd 	bl	3e6c <xQueueGiveFromISR>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:490
    portEND_SWITCHING_ISR(higher_priority_task_woke);
    56b2:	9b01      	ldr	r3, [sp, #4]
    56b4:	2b00      	cmp	r3, #0
    56b6:	d0e8      	beq.n	568a <i2c__handle_interrupt+0x76>
    56b8:	4b1f      	ldr	r3, [pc, #124]	; (5738 <i2c__handle_interrupt+0x124>)
    56ba:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    56be:	601a      	str	r2, [r3, #0]
    56c0:	f3bf 8f4f 	dsb	sy
    56c4:	f3bf 8f6f 	isb	sy
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:492
}
    56c8:	e7df      	b.n	568a <i2c__handle_interrupt+0x76>
i2c__handle_state_machine():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:383
      lpc_i2c->DAT = i2c->starting_slave_memory_address;
    56ca:	7c81      	ldrb	r1, [r0, #18]
    56cc:	e7b1      	b.n	5632 <i2c__handle_interrupt+0x1e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:392
    if (i2c__is_read_address(i2c->slave_address)) {
    56ce:	7c42      	ldrb	r2, [r0, #17]
    56d0:	07d2      	lsls	r2, r2, #31
    56d2:	d502      	bpl.n	56da <i2c__handle_interrupt+0xc6>
i2c__set_start_flag():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:111
static void i2c__set_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONSET = 0x20; }
    56d4:	2220      	movs	r2, #32
i2c__set_ack_flag():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:113
static void i2c__set_ack_flag(LPC_I2C_TypeDef *i2c) { i2c->CONSET = 0x04; }
    56d6:	601a      	str	r2, [r3, #0]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:109
  i2c->CONCLR = 0x08;
    56d8:	e7d5      	b.n	5686 <i2c__handle_interrupt+0x72>
i2c__handle_state_machine():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:396
      if (0 == i2c->number_of_bytes_to_transfer) {
    56da:	69c2      	ldr	r2, [r0, #28]
    56dc:	b94a      	cbnz	r2, 56f2 <i2c__handle_interrupt+0xde>
i2c__clear_start_flag():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:112
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    56de:	2220      	movs	r2, #32
    56e0:	619a      	str	r2, [r3, #24]
i2c__set_stop():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:474
  i2c->CONSET = stop_bit;
    56e2:	2210      	movs	r2, #16
    56e4:	601a      	str	r2, [r3, #0]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:109
  i2c->CONCLR = 0x08;
    56e6:	2208      	movs	r2, #8
    56e8:	619a      	str	r2, [r3, #24]
i2c__set_stop():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:477
  while (i2c->CONSET & stop_bit) {
    56ea:	681a      	ldr	r2, [r3, #0]
    56ec:	06d4      	lsls	r4, r2, #27
    56ee:	d4fc      	bmi.n	56ea <i2c__handle_interrupt+0xd6>
    56f0:	e7d9      	b.n	56a6 <i2c__handle_interrupt+0x92>
i2c__handle_state_machine():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:399
        lpc_i2c->DAT = *(i2c->output_byte_pointer);
    56f2:	6981      	ldr	r1, [r0, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:401
        --(i2c->number_of_bytes_to_transfer);
    56f4:	3a01      	subs	r2, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:399
        lpc_i2c->DAT = *(i2c->output_byte_pointer);
    56f6:	f811 4b01 	ldrb.w	r4, [r1], #1
    56fa:	609c      	str	r4, [r3, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:400
        ++(i2c->output_byte_pointer);
    56fc:	6181      	str	r1, [r0, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:401
        --(i2c->number_of_bytes_to_transfer);
    56fe:	61c2      	str	r2, [r0, #28]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:109
  i2c->CONCLR = 0x08;
    5700:	e7c1      	b.n	5686 <i2c__handle_interrupt+0x72>
i2c__clear_start_flag():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:112
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    5702:	2220      	movs	r2, #32
    5704:	619a      	str	r2, [r3, #24]
i2c__handle_state_machine():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:416
    if (i2c->number_of_bytes_to_transfer > 1) {
    5706:	69c2      	ldr	r2, [r0, #28]
    5708:	2a01      	cmp	r2, #1
    570a:	f04f 0204 	mov.w	r2, #4
    570e:	d8e2      	bhi.n	56d6 <i2c__handle_interrupt+0xc2>
i2c__set_nack_flag():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:114
static void i2c__set_nack_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x04; }
    5710:	619a      	str	r2, [r3, #24]
    5712:	e7b8      	b.n	5686 <i2c__handle_interrupt+0x72>
i2c__handle_state_machine():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:429
    *(i2c->input_byte_pointer) = lpc_i2c->DAT;
    5714:	6942      	ldr	r2, [r0, #20]
    5716:	6899      	ldr	r1, [r3, #8]
    5718:	7011      	strb	r1, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:430
    ++(i2c->input_byte_pointer);
    571a:	6942      	ldr	r2, [r0, #20]
    571c:	3201      	adds	r2, #1
    571e:	6142      	str	r2, [r0, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:431
    --(i2c->number_of_bytes_to_transfer);
    5720:	69c2      	ldr	r2, [r0, #28]
    5722:	3a01      	subs	r2, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:433
    if (1 == i2c->number_of_bytes_to_transfer) { // Only 1 more byte remaining
    5724:	2a01      	cmp	r2, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:431
    --(i2c->number_of_bytes_to_transfer);
    5726:	61c2      	str	r2, [r0, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:433
    if (1 == i2c->number_of_bytes_to_transfer) { // Only 1 more byte remaining
    5728:	f04f 0204 	mov.w	r2, #4
    572c:	d1d3      	bne.n	56d6 <i2c__handle_interrupt+0xc2>
    572e:	e7ef      	b.n	5710 <i2c__handle_interrupt+0xfc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:455
    i2c->error_code = lpc_i2c->STAT;
    5730:	685b      	ldr	r3, [r3, #4]
    5732:	7403      	strb	r3, [r0, #16]
i2c__handle_interrupt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:486
  if (stop_sent) {
    5734:	e7b7      	b.n	56a6 <i2c__handle_interrupt+0x92>
    5736:	bf00      	nop
    5738:	e000ed04 	.word	0xe000ed04

0000573c <i2c2_isr>:
i2c2_isr():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:118
static void i2c2_isr(void) { i2c__handle_interrupt(&i2c_structs[I2C__2]); }
    573c:	4801      	ldr	r0, [pc, #4]	; (5744 <i2c2_isr+0x8>)
    573e:	f7ff bf69 	b.w	5614 <i2c__handle_interrupt>
    5742:	bf00      	nop
    5744:	100000ac 	.word	0x100000ac

00005748 <i2c1_isr>:
i2c1_isr():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:117
static void i2c1_isr(void) { i2c__handle_interrupt(&i2c_structs[I2C__1]); }
    5748:	4801      	ldr	r0, [pc, #4]	; (5750 <i2c1_isr+0x8>)
    574a:	f7ff bf63 	b.w	5614 <i2c__handle_interrupt>
    574e:	bf00      	nop
    5750:	1000008c 	.word	0x1000008c

00005754 <i2c0_isr>:
i2c0_isr():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:116
static void i2c0_isr(void) { i2c__handle_interrupt(&i2c_structs[I2C__0]); }
    5754:	4801      	ldr	r0, [pc, #4]	; (575c <i2c0_isr+0x8>)
    5756:	f7ff bf5d 	b.w	5614 <i2c__handle_interrupt>
    575a:	bf00      	nop
    575c:	1000006c 	.word	0x1000006c

00005760 <i2c__initialize>:
i2c__initialize():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:129
                     StaticSemaphore_t *mutex_struct) {
    5760:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    5764:	4615      	mov	r5, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:130
  const function__void_f isrs[] = {i2c0_isr, i2c1_isr, i2c2_isr};
    5766:	4a28      	ldr	r2, [pc, #160]	; (5808 <i2c__initialize+0xa8>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:129
                     StaticSemaphore_t *mutex_struct) {
    5768:	4606      	mov	r6, r0
    576a:	4689      	mov	r9, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:130
  const function__void_f isrs[] = {i2c0_isr, i2c1_isr, i2c2_isr};
    576c:	ca07      	ldmia	r2, {r0, r1, r2}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:129
                     StaticSemaphore_t *mutex_struct) {
    576e:	b086      	sub	sp, #24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:130
  const function__void_f isrs[] = {i2c0_isr, i2c1_isr, i2c2_isr};
    5770:	ac06      	add	r4, sp, #24
    5772:	e904 0007 	stmdb	r4, {r0, r1, r2}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:131
  const lpc_peripheral_e peripheral_ids[] = {
    5776:	f640 320a 	movw	r2, #2826	; 0xb0a
    577a:	f8ad 2008 	strh.w	r2, [sp, #8]
    577e:	220c      	movs	r2, #12
    5780:	f88d 200a 	strb.w	r2, [sp, #10]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:140
  LPC_I2C_TypeDef *lpc_i2c = i2c->registers;
    5784:	4921      	ldr	r1, [pc, #132]	; (580c <i2c__initialize+0xac>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:129
                     StaticSemaphore_t *mutex_struct) {
    5786:	f8dd a038 	ldr.w	sl, [sp, #56]	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:140
  LPC_I2C_TypeDef *lpc_i2c = i2c->registers;
    578a:	0172      	lsls	r2, r6, #5
    578c:	188f      	adds	r7, r1, r2
    578e:	588c      	ldr	r4, [r1, r2]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:141
  const lpc_peripheral_e peripheral_id = peripheral_ids[i2c_number];
    5790:	aa06      	add	r2, sp, #24
    5792:	4432      	add	r2, r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:147
      xSemaphoreCreateBinaryStatic(binary_sem_struct);
    5794:	2001      	movs	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:141
  const lpc_peripheral_e peripheral_id = peripheral_ids[i2c_number];
    5796:	f812 8c10 	ldrb.w	r8, [r2, #-16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:147
      xSemaphoreCreateBinaryStatic(binary_sem_struct);
    579a:	2203      	movs	r2, #3
    579c:	9200      	str	r2, [sp, #0]
    579e:	2200      	movs	r2, #0
    57a0:	4611      	mov	r1, r2
    57a2:	f7fe f9d1 	bl	3b48 <xQueueGenericCreateStatic>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:149
  i2c->mutex = xSemaphoreCreateMutexStatic(mutex_struct);
    57a6:	4651      	mov	r1, sl
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:146
  i2c->transfer_complete_signal =
    57a8:	60b8      	str	r0, [r7, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:149
  i2c->mutex = xSemaphoreCreateMutexStatic(mutex_struct);
    57aa:	2001      	movs	r0, #1
    57ac:	f7fe faea 	bl	3d84 <xQueueCreateMutexStatic>
    57b0:	60f8      	str	r0, [r7, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:156
  lpc_peripheral__turn_on_power_to(peripheral_id);
    57b2:	4640      	mov	r0, r8
    57b4:	f000 f8c6 	bl	5944 <lpc_peripheral__turn_on_power_to>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:157
  lpc_i2c->CONCLR = 0x6C; // Clear ALL I2C Flags
    57b8:	236c      	movs	r3, #108	; 0x6c
    57ba:	61a3      	str	r3, [r4, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:175
                               : desired_i2c_bus_speed_in_hz;
    57bc:	4a14      	ldr	r2, [pc, #80]	; (5810 <i2c__initialize+0xb0>)
    57be:	4b15      	ldr	r3, [pc, #84]	; (5814 <i2c__initialize+0xb4>)
    57c0:	4591      	cmp	r9, r2
    57c2:	bf88      	it	hi
    57c4:	4699      	movhi	r9, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:179
  lpc_i2c->SCLH = ((half_clock_divider * percent_high) / 100) / 2;
    57c6:	2328      	movs	r3, #40	; 0x28
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:176
  const uint32_t half_clock_divider = (peripheral_clock_hz / freq_hz) / 2;
    57c8:	fbb5 f2f9 	udiv	r2, r5, r9
    57cc:	0852      	lsrs	r2, r2, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:179
  lpc_i2c->SCLH = ((half_clock_divider * percent_high) / 100) / 2;
    57ce:	21c8      	movs	r1, #200	; 0xc8
    57d0:	4353      	muls	r3, r2
    57d2:	fbb3 f3f1 	udiv	r3, r3, r1
    57d6:	6123      	str	r3, [r4, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:180
  lpc_i2c->SCLL = ((half_clock_divider * percent_low) / 100) / 2;
    57d8:	233c      	movs	r3, #60	; 0x3c
    57da:	435a      	muls	r2, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:183
  lpc_i2c->ADR0 = lpc_i2c->ADR1 = lpc_i2c->ADR2 = lpc_i2c->ADR3 = 0;
    57dc:	2300      	movs	r3, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:180
  lpc_i2c->SCLL = ((half_clock_divider * percent_low) / 100) / 2;
    57de:	fbb2 f2f1 	udiv	r2, r2, r1
    57e2:	6162      	str	r2, [r4, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:183
  lpc_i2c->ADR0 = lpc_i2c->ADR1 = lpc_i2c->ADR2 = lpc_i2c->ADR3 = 0;
    57e4:	62a3      	str	r3, [r4, #40]	; 0x28
    57e6:	6263      	str	r3, [r4, #36]	; 0x24
    57e8:	6223      	str	r3, [r4, #32]
    57ea:	60e3      	str	r3, [r4, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:186
  lpc_i2c->CONSET = 0x40;
    57ec:	2340      	movs	r3, #64	; 0x40
    57ee:	6023      	str	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:187
  lpc_peripheral__enable_interrupt(peripheral_id, isrs[i2c_number],
    57f0:	ab06      	add	r3, sp, #24
    57f2:	eb03 0686 	add.w	r6, r3, r6, lsl #2
    57f6:	687a      	ldr	r2, [r7, #4]
    57f8:	f856 1c0c 	ldr.w	r1, [r6, #-12]
    57fc:	4640      	mov	r0, r8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:189
}
    57fe:	b006      	add	sp, #24
    5800:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:187
  lpc_peripheral__enable_interrupt(peripheral_id, isrs[i2c_number],
    5804:	f000 b8c2 	b.w	598c <lpc_peripheral__enable_interrupt>
    5808:	0000d8c4 	.word	0x0000d8c4
    580c:	1000006c 	.word	0x1000006c
    5810:	000f4240 	.word	0x000f4240
    5814:	000186a0 	.word	0x000186a0

00005818 <i2c__read_slave_data>:
i2c__read_slave_data():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:213
                          uint32_t number_of_bytes_to_transfer) {
    5818:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    581c:	460f      	mov	r7, r1
    581e:	4690      	mov	r8, r2
i2c__transfer():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:252
  if ((NULL != input_byte_pointer) ^ (NULL != output_byte_pointer)) {
    5820:	461d      	mov	r5, r3
    5822:	b923      	cbnz	r3, 582e <i2c__read_slave_data+0x16>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:249
  bool status = false;
    5824:	2500      	movs	r5, #0
i2c__read_slave_data():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:219
}
    5826:	4628      	mov	r0, r5
    5828:	b002      	add	sp, #8
    582a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
i2c__transfer():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:253
    if (xSemaphoreTake(i2c->mutex, portMAX_DELAY)) {
    582e:	4c0e      	ldr	r4, [pc, #56]	; (5868 <i2c__read_slave_data+0x50>)
    5830:	eb04 1440 	add.w	r4, r4, r0, lsl #5
    5834:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
    5838:	68e0      	ldr	r0, [r4, #12]
    583a:	f7fe fc07 	bl	404c <xQueueSemaphoreTake>
    583e:	2800      	cmp	r0, #0
    5840:	d0f0      	beq.n	5824 <i2c__read_slave_data+0xc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:254
      status = i2c__transfer_unprotected(
    5842:	2600      	movs	r6, #0
    5844:	9b08      	ldr	r3, [sp, #32]
    5846:	9301      	str	r3, [sp, #4]
    5848:	4642      	mov	r2, r8
    584a:	462b      	mov	r3, r5
    584c:	f047 0101 	orr.w	r1, r7, #1
    5850:	9600      	str	r6, [sp, #0]
    5852:	4620      	mov	r0, r4
    5854:	f7ff feae 	bl	55b4 <i2c__transfer_unprotected>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:257
      xSemaphoreGive(i2c->mutex);
    5858:	4633      	mov	r3, r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:254
      status = i2c__transfer_unprotected(
    585a:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:257
      xSemaphoreGive(i2c->mutex);
    585c:	4632      	mov	r2, r6
    585e:	4631      	mov	r1, r6
    5860:	68e0      	ldr	r0, [r4, #12]
    5862:	f7fe f9e1 	bl	3c28 <xQueueGenericSend>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:262
  return status;
    5866:	e7de      	b.n	5826 <i2c__read_slave_data+0xe>
    5868:	1000006c 	.word	0x1000006c

0000586c <i2c__read_single>:
i2c__read_single():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:203
                         uint8_t slave_memory_address) {
    586c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:204
  uint8_t byte = 0;
    586e:	2300      	movs	r3, #0
    5870:	f88d 300f 	strb.w	r3, [sp, #15]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:205
  i2c__read_slave_data(i2c_number, slave_address, slave_memory_address, &byte,
    5874:	2301      	movs	r3, #1
    5876:	9300      	str	r3, [sp, #0]
    5878:	f10d 030f 	add.w	r3, sp, #15
    587c:	f7ff ffcc 	bl	5818 <i2c__read_slave_data>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:208
}
    5880:	f89d 000f 	ldrb.w	r0, [sp, #15]
    5884:	b005      	add	sp, #20
    5886:	f85d fb04 	ldr.w	pc, [sp], #4
    588a:	Address 0x000000000000588a is out of bounds.


0000588c <i2c__write_slave_data>:
i2c__write_slave_data():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:230
                           uint32_t number_of_bytes_to_transfer) {
    588c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    588e:	460e      	mov	r6, r1
    5890:	4617      	mov	r7, r2
i2c__transfer():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:252
  if ((NULL != input_byte_pointer) ^ (NULL != output_byte_pointer)) {
    5892:	461d      	mov	r5, r3
    5894:	b91b      	cbnz	r3, 589e <i2c__write_slave_data+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:249
  bool status = false;
    5896:	2500      	movs	r5, #0
i2c__write_slave_data():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:236
}
    5898:	4628      	mov	r0, r5
    589a:	b003      	add	sp, #12
    589c:	bdf0      	pop	{r4, r5, r6, r7, pc}
i2c__transfer():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:253
    if (xSemaphoreTake(i2c->mutex, portMAX_DELAY)) {
    589e:	4c0e      	ldr	r4, [pc, #56]	; (58d8 <i2c__write_slave_data+0x4c>)
    58a0:	eb04 1440 	add.w	r4, r4, r0, lsl #5
    58a4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
    58a8:	68e0      	ldr	r0, [r4, #12]
    58aa:	f7fe fbcf 	bl	404c <xQueueSemaphoreTake>
    58ae:	2800      	cmp	r0, #0
    58b0:	d0f1      	beq.n	5896 <i2c__write_slave_data+0xa>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:254
      status = i2c__transfer_unprotected(
    58b2:	9b08      	ldr	r3, [sp, #32]
    58b4:	463a      	mov	r2, r7
    58b6:	e9cd 5300 	strd	r5, r3, [sp]
    58ba:	f006 01fe 	and.w	r1, r6, #254	; 0xfe
    58be:	2300      	movs	r3, #0
    58c0:	4620      	mov	r0, r4
    58c2:	f7ff fe77 	bl	55b4 <i2c__transfer_unprotected>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:257
      xSemaphoreGive(i2c->mutex);
    58c6:	2300      	movs	r3, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:254
      status = i2c__transfer_unprotected(
    58c8:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:257
      xSemaphoreGive(i2c->mutex);
    58ca:	461a      	mov	r2, r3
    58cc:	4619      	mov	r1, r3
    58ce:	68e0      	ldr	r0, [r4, #12]
    58d0:	f7fe f9aa 	bl	3c28 <xQueueGenericSend>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:262
  return status;
    58d4:	e7e0      	b.n	5898 <i2c__write_slave_data+0xc>
    58d6:	bf00      	nop
    58d8:	1000006c 	.word	0x1000006c

000058dc <i2c__detect>:
i2c__detect():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:191
bool i2c__detect(i2c_e i2c_number, uint8_t slave_address) {
    58dc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:196
  uint8_t unused = 0;
    58de:	2200      	movs	r2, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:198
  return i2c__write_slave_data(i2c_number, slave_address, dummy_register,
    58e0:	9200      	str	r2, [sp, #0]
    58e2:	f10d 030f 	add.w	r3, sp, #15
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:196
  uint8_t unused = 0;
    58e6:	f88d 200f 	strb.w	r2, [sp, #15]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:198
  return i2c__write_slave_data(i2c_number, slave_address, dummy_register,
    58ea:	f7ff ffcf 	bl	588c <i2c__write_slave_data>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:200
}
    58ee:	b005      	add	sp, #20
    58f0:	f85d fb04 	ldr.w	pc, [sp], #4

000058f4 <i2c__write_single>:
i2c__write_single():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:222
                       uint8_t slave_memory_address, uint8_t value) {
    58f4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    58f6:	f88d 300f 	strb.w	r3, [sp, #15]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:223
  return i2c__write_slave_data(i2c_number, slave_address, slave_memory_address,
    58fa:	2301      	movs	r3, #1
    58fc:	9300      	str	r3, [sp, #0]
    58fe:	f10d 030f 	add.w	r3, sp, #15
    5902:	f7ff ffc3 	bl	588c <i2c__write_slave_data>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:225
}
    5906:	b005      	add	sp, #20
    5908:	f85d fb04 	ldr.w	pc, [sp], #4

0000590c <lpc_peripheral__halt_handler>:
lpc_peripheral__halt_handler():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:44 (discriminator 1)
// clang-format on

/// An unregistered interrupt handler is a forever loop
static void lpc_peripheral__halt_handler(void) {
  while (1) {
  }
    590c:	e7fe      	b.n	590c <lpc_peripheral__halt_handler>
    590e:	Address 0x000000000000590e is out of bounds.


00005910 <lpc_peripheral__interrupt_dispatcher>:
lpc_peripheral__interrupt_dispatcher():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:115
/**
 * This function is intentionally not declared at the header file
 * This is registered by the startup code and registered as the interrupt
 * callback for each peripheral
 */
void lpc_peripheral__interrupt_dispatcher(void) {
    5910:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:116
  vRunTimeStatIsrEntry();
    5912:	f7ff fc57 	bl	51c4 <vRunTimeStatIsrEntry>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:122

  /* Get the IRQ number we are in.  Note that ICSR's real ISR bits are offset
   * by 16. We can read ICSR register too, but let's just read 8-bits directly.
   */
  const uint8_t isr_num =
      (*((uint8_t *)0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
    5916:	4b08      	ldr	r3, [pc, #32]	; (5938 <lpc_peripheral__interrupt_dispatcher+0x28>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:129
  /* Lookup the function pointer we want to call and make the call */
  function__void_f isr_to_service = lpc_peripheral__isr_registrations[isr_num];

#if (0 != configUSE_TRACE_FACILITY)
  vTraceStoreISRBegin(lpc_peripheral__trace_handles[isr_num]);
  isr_to_service();
    5918:	4a08      	ldr	r2, [pc, #32]	; (593c <lpc_peripheral__interrupt_dispatcher+0x2c>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:121
  const uint8_t isr_num =
    591a:	781b      	ldrb	r3, [r3, #0]
    591c:	3b10      	subs	r3, #16
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:125
  function__void_f isr_to_service = lpc_peripheral__isr_registrations[isr_num];
    591e:	b2db      	uxtb	r3, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:129
  isr_to_service();
    5920:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
    5924:	4798      	blx	r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:137
  isr_to_service();
#endif

  // http://www.keil.com/support/docs/3928.htm
  static volatile int memory_write_to_avoid_spurious_interrupt;
  memory_write_to_avoid_spurious_interrupt = 0;
    5926:	4b06      	ldr	r3, [pc, #24]	; (5940 <lpc_peripheral__interrupt_dispatcher+0x30>)
    5928:	2200      	movs	r2, #0
    592a:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:138
  (void)memory_write_to_avoid_spurious_interrupt; // Avoid 'variable set but not
    592c:	681b      	ldr	r3, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:142
                                                  // used' warning

  vRunTimeStatIsrExit();
}
    592e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:141
  vRunTimeStatIsrExit();
    5932:	f7ff bc5b 	b.w	51ec <vRunTimeStatIsrExit>
    5936:	bf00      	nop
    5938:	e000ed04 	.word	0xe000ed04
    593c:	100000cc 	.word	0x100000cc
    5940:	1000141c 	.word	0x1000141c

00005944 <lpc_peripheral__turn_on_power_to>:
lpc_peripheral__turn_on_power_to():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:145

void lpc_peripheral__turn_on_power_to(lpc_peripheral_e peripheral) {
  if (peripheral < sizeof(lpc_peripheral_pconp_bit_map)) {
    5944:	2859      	cmp	r0, #89	; 0x59
    5946:	d809      	bhi.n	595c <lpc_peripheral__turn_on_power_to+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:147
    const uint32_t power_on_bit =
        (uint32_t)lpc_peripheral_pconp_bit_map[peripheral];
    5948:	4b05      	ldr	r3, [pc, #20]	; (5960 <lpc_peripheral__turn_on_power_to+0x1c>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:148
    LPC_SC->PCONP |= (UINT32_C(1) << power_on_bit);
    594a:	4a06      	ldr	r2, [pc, #24]	; (5964 <lpc_peripheral__turn_on_power_to+0x20>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:146
    const uint32_t power_on_bit =
    594c:	5c18      	ldrb	r0, [r3, r0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:148
    LPC_SC->PCONP |= (UINT32_C(1) << power_on_bit);
    594e:	f8d2 10c4 	ldr.w	r1, [r2, #196]	; 0xc4
    5952:	2301      	movs	r3, #1
    5954:	4083      	lsls	r3, r0
    5956:	430b      	orrs	r3, r1
    5958:	f8c2 30c4 	str.w	r3, [r2, #196]	; 0xc4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:150
  }
}
    595c:	4770      	bx	lr
    595e:	bf00      	nop
    5960:	0000d8df 	.word	0x0000d8df
    5964:	400fc000 	.word	0x400fc000

00005968 <lpc_peripheral__is_powered_on>:
lpc_peripheral__is_powered_on():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:155

bool lpc_peripheral__is_powered_on(lpc_peripheral_e peripheral) {
  bool powered_on = false;

  if (peripheral < sizeof(lpc_peripheral_pconp_bit_map)) {
    5968:	2859      	cmp	r0, #89	; 0x59
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:158
    const uint32_t power_on_bit =
        (uint32_t)lpc_peripheral_pconp_bit_map[peripheral];
    powered_on = 0 != (LPC_SC->PCONP & (UINT32_C(1) << power_on_bit));
    596a:	bf9f      	itttt	ls
    596c:	4b05      	ldrls	r3, [pc, #20]	; (5984 <lpc_peripheral__is_powered_on+0x1c>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:157
        (uint32_t)lpc_peripheral_pconp_bit_map[peripheral];
    596e:	4a06      	ldrls	r2, [pc, #24]	; (5988 <lpc_peripheral__is_powered_on+0x20>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:158
    powered_on = 0 != (LPC_SC->PCONP & (UINT32_C(1) << power_on_bit));
    5970:	f8d3 30c4 	ldrls.w	r3, [r3, #196]	; 0xc4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:156
    const uint32_t power_on_bit =
    5974:	5c10      	ldrbls	r0, [r2, r0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:158
    powered_on = 0 != (LPC_SC->PCONP & (UINT32_C(1) << power_on_bit));
    5976:	bf9a      	itte	ls
    5978:	fa23 f000 	lsrls.w	r0, r3, r0
    597c:	f000 0001 	andls.w	r0, r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:153
  bool powered_on = false;
    5980:	2000      	movhi	r0, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:162
  }

  return powered_on;
}
    5982:	4770      	bx	lr
    5984:	400fc000 	.word	0x400fc000
    5988:	0000d8df 	.word	0x0000d8df

0000598c <lpc_peripheral__enable_interrupt>:
lpc_peripheral__enable_interrupt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:169
void lpc_peripheral__enable_interrupt(lpc_peripheral_e peripheral,
                                      function__void_f isr_callback,
                                      const char *name_for_rtos_trace) {
  // Sorry: Nasty hack because CAN1 shares interrupt with CAN0
  if (LPC_PERIPHERAL__CAN1 == peripheral) {
    peripheral = LPC_PERIPHERAL__CAN0;
    598c:	2859      	cmp	r0, #89	; 0x59
    598e:	bf08      	it	eq
    5990:	2019      	moveq	r0, #25
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:171
  }
  lpc_peripheral__isr_registrations[peripheral] = isr_callback;
    5992:	4b08      	ldr	r3, [pc, #32]	; (59b4 <lpc_peripheral__enable_interrupt+0x28>)
    5994:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:195
   *
   * Unless you really know what you are doing, never call NVIC_SetPriority()
   * with a priority other than: NVIC_SetPriority(peripheral,
   * RTOS_HIGHEST_INTERRUPT_PRIORITY + 1);
   */
  const IRQn_Type irq_type = (IRQn_Type)peripheral;
    5998:	b243      	sxtb	r3, r0
__NVIC_EnableIRQ():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1681
  if ((int32_t)(IRQn) >= 0)
    599a:	2b00      	cmp	r3, #0
    599c:	db08      	blt.n	59b0 <lpc_peripheral__enable_interrupt+0x24>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1684
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    599e:	2201      	movs	r2, #1
    59a0:	f000 001f 	and.w	r0, r0, #31
    59a4:	fa02 f000 	lsl.w	r0, r2, r0
    59a8:	095b      	lsrs	r3, r3, #5
    59aa:	4a03      	ldr	r2, [pc, #12]	; (59b8 <lpc_peripheral__enable_interrupt+0x2c>)
    59ac:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
lpc_peripheral__enable_interrupt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:197
  NVIC_EnableIRQ(irq_type); // Use CMS API
}
    59b0:	4770      	bx	lr
    59b2:	bf00      	nop
    59b4:	100000cc 	.word	0x100000cc
    59b8:	e000e100 	.word	0xe000e100

000059bc <ssp2__dma_transfer_block>:
ssp2__dma_transfer_block():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:123
  // (uint32_t)(&(LPC_SSP2->DR)); ssp2__dma_rx->CSrcAddr =
  // (uint32_t)(&(LPC_SSP2->DR));
}

ssp_dma_error_e ssp2__dma_transfer_block(unsigned char *buffer_pointer,
                                         uint32_t num_bytes, bool is_write_op) {
    59bc:	b573      	push	{r0, r1, r4, r5, r6, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:124
  uint32_t dummyBuffer = 0xffffffff;
    59be:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:127

  // DMA is limited to 12-bit transfer size
  if (num_bytes >= 0x1000) {
    59c2:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:124
  uint32_t dummyBuffer = 0xffffffff;
    59c6:	9301      	str	r3, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:127
  if (num_bytes >= 0x1000) {
    59c8:	d236      	bcs.n	5a38 <ssp2__dma_transfer_block+0x7c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:132
    return SSP_DMA__ERROR_LENGTH;
  }

  // DMA channels should not be busy
  if ((ssp2__dma_tx->CConfig & 1) || (ssp2__dma_rx->CConfig & 1)) {
    59ca:	4c1d      	ldr	r4, [pc, #116]	; (5a40 <ssp2__dma_transfer_block+0x84>)
    59cc:	6923      	ldr	r3, [r4, #16]
    59ce:	07de      	lsls	r6, r3, #31
    59d0:	d434      	bmi.n	5a3c <ssp2__dma_transfer_block+0x80>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:132 (discriminator 1)
    59d2:	4b1c      	ldr	r3, [pc, #112]	; (5a44 <ssp2__dma_transfer_block+0x88>)
    59d4:	691d      	ldr	r5, [r3, #16]
    59d6:	07ed      	lsls	r5, r5, #31
    59d8:	d430      	bmi.n	5a3c <ssp2__dma_transfer_block+0x80>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:182

  /**
   * Clear existing terminal count and error interrupts otherwise
   * DMA will not start.
   */
  LPC_GPDMA->IntTCClear =
    59da:	4d1b      	ldr	r5, [pc, #108]	; (5a48 <ssp2__dma_transfer_block+0x8c>)
    59dc:	2603      	movs	r6, #3
    59de:	60ae      	str	r6, [r5, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:184
      (1 << SSP2__DMA_RX_CHANNEL) | (1 << SSP2__DMA_TX_CHANNEL);
  LPC_GPDMA->IntErrClr =
    59e0:	612e      	str	r6, [r5, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:199
   *      - Increment destination
   *
   * Note: Setting destination burst of 2 or 4 bytes makes no difference (1 <<
   * 15)
   */
  ssp2__dma_rx->CSrcAddr = (uint32_t)(&(LPC_SSP2->DR));
    59e2:	4d1a      	ldr	r5, [pc, #104]	; (5a4c <ssp2__dma_transfer_block+0x90>)
    59e4:	601d      	str	r5, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:200
  if (is_write_op) {
    59e6:	b302      	cbz	r2, 5a2a <ssp2__dma_transfer_block+0x6e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:201
    ssp2__dma_rx->CDestAddr = (uint32_t)(&dummyBuffer);
    59e8:	ae01      	add	r6, sp, #4
    59ea:	605e      	str	r6, [r3, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:202
    ssp2__dma_rx->CControl = num_bytes | terminal_count_interrupt_enable;
    59ec:	f041 4600 	orr.w	r6, r1, #2147483648	; 0x80000000
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:205
  } else {
    ssp2__dma_rx->CDestAddr = (uint32_t)buffer_pointer;
    ssp2__dma_rx->CControl = num_bytes | increment_destination_address |
    59f0:	60de      	str	r6, [r3, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:208
                             terminal_count_interrupt_enable;
  }
  ssp2__dma_rx->CConfig =
    59f2:	f241 060f 	movw	r6, #4111	; 0x100f
    59f6:	611e      	str	r6, [r3, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:220
   *      - Increment source data
   * For read operation:
   *      - Source data is buffer with 0xFF
   *      - Don't increment source data
   */
  if (is_write_op) {
    59f8:	b1da      	cbz	r2, 5a32 <ssp2__dma_transfer_block+0x76>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:221
    ssp2__dma_tx->CSrcAddr = (uint32_t)(buffer_pointer);
    59fa:	6020      	str	r0, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:222
    ssp2__dma_tx->CControl = num_bytes | increment_source_address;
    59fc:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:228
  } else {
    ssp2__dma_tx->CSrcAddr = (uint32_t)(&dummyBuffer);
    ssp2__dma_tx->CControl = num_bytes;
  }
  ssp2__dma_tx->CDestAddr = (uint32_t)(&(LPC_SSP2->DR));
  ssp2__dma_tx->CConfig =
    5a00:	f640 1281 	movw	r2, #2433	; 0x981
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:225
    ssp2__dma_tx->CControl = num_bytes;
    5a04:	60e1      	str	r1, [r4, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:227
  ssp2__dma_tx->CDestAddr = (uint32_t)(&(LPC_SSP2->DR));
    5a06:	6065      	str	r5, [r4, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:228
  ssp2__dma_tx->CConfig =
    5a08:	6122      	str	r2, [r4, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:236
  /**
   * Channel must be fully configured and then enabled separately.
   * Setting DMACR's Rx/Tx bits should trigger the DMA
   */
  static const uint32_t enable_rx_tx_dma_triggers = 0x03;
  LPC_SSP2->DMACR |= enable_rx_tx_dma_triggers;
    5a0a:	4a11      	ldr	r2, [pc, #68]	; (5a50 <ssp2__dma_transfer_block+0x94>)
    5a0c:	6a51      	ldr	r1, [r2, #36]	; 0x24
    5a0e:	f041 0103 	orr.w	r1, r1, #3
    5a12:	6251      	str	r1, [r2, #36]	; 0x24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:238 (discriminator 1)

  while ((ssp2__dma_rx->CControl & 0xfff)) {
    5a14:	68d8      	ldr	r0, [r3, #12]
    5a16:	f3c0 000b 	ubfx	r0, r0, #0, #12
    5a1a:	2800      	cmp	r0, #0
    5a1c:	d1fa      	bne.n	5a14 <ssp2__dma_transfer_block+0x58>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:241
    ; // Poll for DMA transfer to complete
  }
  LPC_SSP2->DMACR &= ~enable_rx_tx_dma_triggers;
    5a1e:	6a53      	ldr	r3, [r2, #36]	; 0x24
    5a20:	f023 0303 	bic.w	r3, r3, #3
    5a24:	6253      	str	r3, [r2, #36]	; 0x24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:244

  return SSP_DMA__ERROR_NONE;
    5a26:	b002      	add	sp, #8
    5a28:	bd70      	pop	{r4, r5, r6, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:204
    ssp2__dma_rx->CDestAddr = (uint32_t)buffer_pointer;
    5a2a:	6058      	str	r0, [r3, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:205
    ssp2__dma_rx->CControl = num_bytes | increment_destination_address |
    5a2c:	f041 4608 	orr.w	r6, r1, #2281701376	; 0x88000000
    5a30:	e7de      	b.n	59f0 <ssp2__dma_transfer_block+0x34>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:224
    ssp2__dma_tx->CSrcAddr = (uint32_t)(&dummyBuffer);
    5a32:	aa01      	add	r2, sp, #4
    5a34:	6022      	str	r2, [r4, #0]
    5a36:	e7e3      	b.n	5a00 <ssp2__dma_transfer_block+0x44>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:128
    return SSP_DMA__ERROR_LENGTH;
    5a38:	2001      	movs	r0, #1
    5a3a:	e7f4      	b.n	5a26 <ssp2__dma_transfer_block+0x6a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:133
    return SSP_DMA__ERROR_BUSY;
    5a3c:	2002      	movs	r0, #2
    5a3e:	e7f2      	b.n	5a26 <ssp2__dma_transfer_block+0x6a>
    5a40:	20080100 	.word	0x20080100
    5a44:	20080120 	.word	0x20080120
    5a48:	20080000 	.word	0x20080000
    5a4c:	400ac008 	.word	0x400ac008
    5a50:	400ac000 	.word	0x400ac000

00005a54 <ssp2__set_max_clock>:
ssp2__set_max_clock():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:69
void ssp2__set_max_clock(uint32_t max_clock_khz) {
    5a54:	b510      	push	{r4, lr}
    5a56:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:71
  const uint32_t cpu_clock_khz = clock__get_core_clock_hz() / 1000UL;
    5a58:	f7fa fbe0 	bl	21c <clock__get_core_clock_hz>
    5a5c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    5a60:	fbb0 f0f3 	udiv	r0, r0, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:70
  uint8_t divider = 2;
    5a64:	2302      	movs	r3, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:74
  while (max_clock_khz < (cpu_clock_khz / divider) && divider <= 254) {
    5a66:	fbb0 f2f3 	udiv	r2, r0, r3
    5a6a:	42a2      	cmp	r2, r4
    5a6c:	d802      	bhi.n	5a74 <ssp2__set_max_clock+0x20>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:78
  LPC_SSP2->CPSR = divider;
    5a6e:	4a03      	ldr	r2, [pc, #12]	; (5a7c <ssp2__set_max_clock+0x28>)
    5a70:	6113      	str	r3, [r2, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:79
}
    5a72:	bd10      	pop	{r4, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:75
    divider += 2;
    5a74:	3302      	adds	r3, #2
    5a76:	b2db      	uxtb	r3, r3
    5a78:	e7f5      	b.n	5a66 <ssp2__set_max_clock+0x12>
    5a7a:	bf00      	nop
    5a7c:	400ac000 	.word	0x400ac000

00005a80 <ssp2__initialize>:
ssp2__initialize():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:59
void ssp2__initialize(uint32_t max_clock_khz) {
    5a80:	b510      	push	{r4, lr}
    5a82:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:60
  lpc_peripheral__turn_on_power_to(LPC_PERIPHERAL__SSP2);
    5a84:	2024      	movs	r0, #36	; 0x24
    5a86:	f7ff ff5d 	bl	5944 <lpc_peripheral__turn_on_power_to>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:62
  LPC_SSP2->CR0 = 7;        // 8-bit mode
    5a8a:	4b0b      	ldr	r3, [pc, #44]	; (5ab8 <ssp2__initialize+0x38>)
    5a8c:	2207      	movs	r2, #7
    5a8e:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:63
  LPC_SSP2->CR1 = (1 << 1); // Enable SSP as Master
    5a90:	2202      	movs	r2, #2
    5a92:	605a      	str	r2, [r3, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:64
  ssp2__set_max_clock(max_clock_khz);
    5a94:	4620      	mov	r0, r4
    5a96:	f7ff ffdd 	bl	5a54 <ssp2__set_max_clock>
ssp2__dma_init():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:104
  lpc_peripheral__turn_on_power_to(LPC_PERIPHERAL__GPDMA);
    5a9a:	201a      	movs	r0, #26
    5a9c:	f7ff ff52 	bl	5944 <lpc_peripheral__turn_on_power_to>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:107
  LPC_GPDMA->Config = enable_bitmask;
    5aa0:	4b06      	ldr	r3, [pc, #24]	; (5abc <ssp2__initialize+0x3c>)
    5aa2:	2201      	movs	r2, #1
    5aa4:	631a      	str	r2, [r3, #48]	; 0x30
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:108
  while (!(LPC_GPDMA->Config & enable_bitmask)) {
    5aa6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
    5aa8:	07d2      	lsls	r2, r2, #31
    5aaa:	d5fc      	bpl.n	5aa6 <ssp2__initialize+0x26>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:113
  ssp2__dma_rx->CLLI = 0;
    5aac:	4a04      	ldr	r2, [pc, #16]	; (5ac0 <ssp2__initialize+0x40>)
    5aae:	2300      	movs	r3, #0
    5ab0:	6093      	str	r3, [r2, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:114
  ssp2__dma_tx->CLLI = 0;
    5ab2:	f842 3c18 	str.w	r3, [r2, #-24]
ssp2__initialize():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:67
}
    5ab6:	bd10      	pop	{r4, pc}
    5ab8:	400ac000 	.word	0x400ac000
    5abc:	20080000 	.word	0x20080000
    5ac0:	20080120 	.word	0x20080120

00005ac4 <ssp2__exchange_byte>:
ssp2__exchange_byte():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:82
  LPC_SSP2->DR = byte_to_transmit;
    5ac4:	4b03      	ldr	r3, [pc, #12]	; (5ad4 <ssp2__exchange_byte+0x10>)
    5ac6:	6098      	str	r0, [r3, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:84 (discriminator 1)
  while (LPC_SSP2->SR & (1 << 4)) {
    5ac8:	68da      	ldr	r2, [r3, #12]
    5aca:	06d2      	lsls	r2, r2, #27
    5acc:	d4fc      	bmi.n	5ac8 <ssp2__exchange_byte+0x4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:88
  return (uint8_t)(LPC_SSP2->DR & 0xFF);
    5ace:	6898      	ldr	r0, [r3, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:89
}
    5ad0:	b2c0      	uxtb	r0, r0
    5ad2:	4770      	bx	lr
    5ad4:	400ac000 	.word	0x400ac000

00005ad8 <ssp2__dma_write_block>:
ssp2__dma_write_block():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:94
  ssp2__dma_transfer_block((unsigned char *)output_block, number_of_bytes,
    5ad8:	2201      	movs	r2, #1
    5ada:	f7ff bf6f 	b.w	59bc <ssp2__dma_transfer_block>

00005ade <ssp2__dma_read_block>:
ssp2__dma_read_block():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:100
  ssp2__dma_transfer_block(input_block, number_of_bytes, !is_write_operation);
    5ade:	2200      	movs	r2, #0
    5ae0:	f7ff bf6c 	b.w	59bc <ssp2__dma_transfer_block>

00005ae4 <uart__isr_common>:
uart__isr_common():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:146
    receive_data_available = (2 << 0),
    receive_data_available_timeout = (6 << 0),
  } interrupt_reason_e;

  const interrupt_reason_e interrupt_reason =
      (interrupt_reason_e)((uart_type->registers->IIR & 0xE) >> 1);
    5ae4:	6802      	ldr	r2, [r0, #0]
    5ae6:	6893      	ldr	r3, [r2, #8]
    5ae8:	f3c3 0342 	ubfx	r3, r3, #1, #3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:148

  switch (interrupt_reason) {
    5aec:	2b02      	cmp	r3, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:135
static void uart__isr_common(uart_s *uart_type) {
    5aee:	b573      	push	{r0, r1, r4, r5, r6, lr}
    5af0:	4606      	mov	r6, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:148
  switch (interrupt_reason) {
    5af2:	d023      	beq.n	5b3c <uart__isr_common+0x58>
    5af4:	2b06      	cmp	r3, #6
    5af6:	d021      	beq.n	5b3c <uart__isr_common+0x58>
    5af8:	2b01      	cmp	r3, #1
    5afa:	d134      	bne.n	5b66 <uart__isr_common+0x82>
uart__load_pending_transmit_bytes():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:77
  char transmit_byte = 0;
    5afc:	2400      	movs	r4, #0
    5afe:	f88d 4003 	strb.w	r4, [sp, #3]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:79
  BaseType_t higher_priority_task_woke = 0;
    5b02:	9401      	str	r4, [sp, #4]
    5b04:	2510      	movs	r5, #16
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:82
    if (xQueueReceiveFromISR(uart_type->queue_transmit, &transmit_byte,
    5b06:	aa01      	add	r2, sp, #4
    5b08:	f10d 0103 	add.w	r1, sp, #3
    5b0c:	68b0      	ldr	r0, [r6, #8]
    5b0e:	f7fe fb5d 	bl	41cc <xQueueReceiveFromISR>
    5b12:	b148      	cbz	r0, 5b28 <uart__isr_common+0x44>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:84
      uart_type->registers->THR = transmit_byte;
    5b14:	6833      	ldr	r3, [r6, #0]
    5b16:	f89d 2003 	ldrb.w	r2, [sp, #3]
    5b1a:	701a      	strb	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:85
      if (higher_priority_task_woke) {
    5b1c:	9b01      	ldr	r3, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:86
        context_switch_required = true;
    5b1e:	2b00      	cmp	r3, #0
    5b20:	bf18      	it	ne
    5b22:	2401      	movne	r4, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:81
  for (size_t counter = 0; counter < hw_fifo_size; counter++) {
    5b24:	3d01      	subs	r5, #1
    5b26:	d1ee      	bne.n	5b06 <uart__isr_common+0x22>
uart__isr_common():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:165
    (void)unused_to_clear_isr;
    break;
  }
  }

  portEND_SWITCHING_ISR(context_switch_required);
    5b28:	b30c      	cbz	r4, 5b6e <uart__isr_common+0x8a>
    5b2a:	4b12      	ldr	r3, [pc, #72]	; (5b74 <uart__isr_common+0x90>)
    5b2c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    5b30:	601a      	str	r2, [r3, #0]
    5b32:	f3bf 8f4f 	dsb	sy
    5b36:	f3bf 8f6f 	isb	sy
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:166
}
    5b3a:	e018      	b.n	5b6e <uart__isr_common+0x8a>
uart__clear_receive_fifo():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:100
  BaseType_t higher_priority_task_woke = 0;
    5b3c:	2400      	movs	r4, #0
    5b3e:	9401      	str	r4, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:107
  while (uart_type->registers->LSR & char_available_bitmask) {
    5b40:	6833      	ldr	r3, [r6, #0]
    5b42:	7d1a      	ldrb	r2, [r3, #20]
    5b44:	07d2      	lsls	r2, r2, #31
    5b46:	d5ef      	bpl.n	5b28 <uart__isr_common+0x44>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:108
    const char received_byte = uart_type->registers->RBR;
    5b48:	781b      	ldrb	r3, [r3, #0]
    5b4a:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:109
    xQueueSendFromISR(uart_type->queue_receive, &received_byte,
    5b4e:	aa01      	add	r2, sp, #4
    5b50:	2300      	movs	r3, #0
    5b52:	f10d 0103 	add.w	r1, sp, #3
    5b56:	68f0      	ldr	r0, [r6, #12]
    5b58:	f7fe f92a 	bl	3db0 <xQueueGenericSendFromISR>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:112
    if (higher_priority_task_woke) {
    5b5c:	9b01      	ldr	r3, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:113
      context_switch_required = true;
    5b5e:	2b00      	cmp	r3, #0
    5b60:	bf18      	it	ne
    5b62:	2401      	movne	r4, #1
    5b64:	e7ec      	b.n	5b40 <uart__isr_common+0x5c>
uart__isr_common():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:159
    volatile const uint32_t unused_to_clear_isr = uart_type->registers->LSR;
    5b66:	7d13      	ldrb	r3, [r2, #20]
    5b68:	b2db      	uxtb	r3, r3
    5b6a:	9301      	str	r3, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:160
    (void)unused_to_clear_isr;
    5b6c:	9b01      	ldr	r3, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:166
}
    5b6e:	b002      	add	sp, #8
    5b70:	bd70      	pop	{r4, r5, r6, pc}
    5b72:	bf00      	nop
    5b74:	e000ed04 	.word	0xe000ed04

00005b78 <uart3_isr>:
uart3_isr():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:133
static void uart3_isr(void) { uart__isr_common(&uarts[UART__3]); }
    5b78:	4801      	ldr	r0, [pc, #4]	; (5b80 <uart3_isr+0x8>)
    5b7a:	f7ff bfb3 	b.w	5ae4 <uart__isr_common>
    5b7e:	bf00      	nop
    5b80:	100001a0 	.word	0x100001a0

00005b84 <uart2_isr>:
uart2_isr():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:132
static void uart2_isr(void) { uart__isr_common(&uarts[UART__2]); }
    5b84:	4801      	ldr	r0, [pc, #4]	; (5b8c <uart2_isr+0x8>)
    5b86:	f7ff bfad 	b.w	5ae4 <uart__isr_common>
    5b8a:	bf00      	nop
    5b8c:	10000190 	.word	0x10000190

00005b90 <uart1_isr>:
uart1_isr():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:131
static void uart1_isr(void) { uart__isr_common(&uarts[UART__1]); }
    5b90:	4801      	ldr	r0, [pc, #4]	; (5b98 <uart1_isr+0x8>)
    5b92:	f7ff bfa7 	b.w	5ae4 <uart__isr_common>
    5b96:	bf00      	nop
    5b98:	10000180 	.word	0x10000180

00005b9c <uart0_isr>:
uart0_isr():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:130
static void uart0_isr(void) { uart__isr_common(&uarts[UART__0]); }
    5b9c:	4801      	ldr	r0, [pc, #4]	; (5ba4 <uart0_isr+0x8>)
    5b9e:	f7ff bfa1 	b.w	5ae4 <uart__isr_common>
    5ba2:	bf00      	nop
    5ba4:	10000170 	.word	0x10000170

00005ba8 <uart__init>:
uart__init():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:175
 *                      P U B L I C    F U N C T I O N S
 *
 ******************************************************************************/

void uart__init(uart_e uart, uint32_t peripheral_clock, uint32_t baud_rate) {
  lpc_peripheral__turn_on_power_to(uart_peripheral_ids[uart]);
    5ba8:	4b15      	ldr	r3, [pc, #84]	; (5c00 <uart__init+0x58>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:174
void uart__init(uart_e uart, uint32_t peripheral_clock, uint32_t baud_rate) {
    5baa:	b570      	push	{r4, r5, r6, lr}
    5bac:	4616      	mov	r6, r2
    5bae:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:175
  lpc_peripheral__turn_on_power_to(uart_peripheral_ids[uart]);
    5bb0:	5c18      	ldrb	r0, [r3, r0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:174
void uart__init(uart_e uart, uint32_t peripheral_clock, uint32_t baud_rate) {
    5bb2:	460c      	mov	r4, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:179

  const float roundup_offset = 0.5;
  const uint16_t divider =
      (uint16_t)((peripheral_clock / (16 * baud_rate)) + roundup_offset);
    5bb4:	0136      	lsls	r6, r6, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:175
  lpc_peripheral__turn_on_power_to(uart_peripheral_ids[uart]);
    5bb6:	f7ff fec5 	bl	5944 <lpc_peripheral__turn_on_power_to>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:179
      (uint16_t)((peripheral_clock / (16 * baud_rate)) + roundup_offset);
    5bba:	fbb4 f3f6 	udiv	r3, r4, r6
    5bbe:	ee07 3a90 	vmov	s15, r3
    5bc2:	eef8 7a67 	vcvt.f32.u32	s15, s15
    5bc6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
    5bca:	ee77 7a87 	vadd.f32	s15, s15, s14
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:183
  const uint8_t dlab_bit = (1 << 7);
  const uint8_t eight_bit_datalen = 3;

  lpc_uart *uart_regs = uarts[uart].registers;
    5bce:	012d      	lsls	r5, r5, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:178
  const uint16_t divider =
    5bd0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:183
  lpc_uart *uart_regs = uarts[uart].registers;
    5bd4:	4a0b      	ldr	r2, [pc, #44]	; (5c04 <uart__init+0x5c>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:178
  const uint16_t divider =
    5bd6:	ee17 3a90 	vmov	r3, s15
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:183
  lpc_uart *uart_regs = uarts[uart].registers;
    5bda:	5952      	ldr	r2, [r2, r5]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:178
  const uint16_t divider =
    5bdc:	b29b      	uxth	r3, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:185

  uart_regs->LCR = dlab_bit; // Set DLAB bit to access DLM & DLL
    5bde:	2180      	movs	r1, #128	; 0x80
    5be0:	7311      	strb	r1, [r2, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:186
  uart_regs->DLM = (divider >> 8) & 0xFF;
    5be2:	0a19      	lsrs	r1, r3, #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:187
  uart_regs->DLL = (divider >> 0) & 0xFF;
    5be4:	b2db      	uxtb	r3, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:186
  uart_regs->DLM = (divider >> 8) & 0xFF;
    5be6:	7111      	strb	r1, [r2, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:187
  uart_regs->DLL = (divider >> 0) & 0xFF;
    5be8:	7013      	strb	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:193

  /* Bootloader uses Uart0 fractional dividers and can wreck havoc in our baud
   * rate code, so re-initialize it Lesson learned: DO NOT RELY ON RESET VALUES
   */
  const uint32_t default_reset_fdr_value = (1 << 4);
  uart_regs->FDR = default_reset_fdr_value;
    5bea:	2310      	movs	r3, #16
    5bec:	f882 3028 	strb.w	r3, [r2, #40]	; 0x28
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:199

  // Important: Set FCR value before enable UART by writing the LCR register
  // Important: FCR is a write-only register, and we cannot use R/M/W such as |=
  const uint8_t enable_fifo = (1 << 0); // Must be done!
  const uint8_t eight_char_timeout = (2 << 6);
  uart_regs->FCR = enable_fifo;
    5bf0:	2301      	movs	r3, #1
    5bf2:	7213      	strb	r3, [r2, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:200
  uart_regs->FCR = enable_fifo | eight_char_timeout;
    5bf4:	2381      	movs	r3, #129	; 0x81
    5bf6:	7213      	strb	r3, [r2, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:202

  uart_regs->LCR = eight_bit_datalen; // DLAB is reset back to zero also
    5bf8:	2303      	movs	r3, #3
    5bfa:	7313      	strb	r3, [r2, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:203
}
    5bfc:	bd70      	pop	{r4, r5, r6, pc}
    5bfe:	bf00      	nop
    5c00:	0000d964 	.word	0x0000d964
    5c04:	10000170 	.word	0x10000170

00005c08 <uart__is_initialized>:
uart__is_initialized():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:206

bool uart__is_initialized(uart_e uart) {
  return lpc_peripheral__is_powered_on(uart_peripheral_ids[uart]) &&
    5c08:	4b07      	ldr	r3, [pc, #28]	; (5c28 <uart__is_initialized+0x20>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:205
bool uart__is_initialized(uart_e uart) {
    5c0a:	b510      	push	{r4, lr}
    5c0c:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:206
  return lpc_peripheral__is_powered_on(uart_peripheral_ids[uart]) &&
    5c0e:	5c18      	ldrb	r0, [r3, r0]
    5c10:	f7ff feaa 	bl	5968 <lpc_peripheral__is_powered_on>
    5c14:	b130      	cbz	r0, 5c24 <uart__is_initialized+0x1c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:207 (discriminator 1)
         (0 != uarts[uart].registers->LCR);
    5c16:	0124      	lsls	r4, r4, #4
    5c18:	4b04      	ldr	r3, [pc, #16]	; (5c2c <uart__is_initialized+0x24>)
    5c1a:	591b      	ldr	r3, [r3, r4]
    5c1c:	7b18      	ldrb	r0, [r3, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:206 (discriminator 1)
  return lpc_peripheral__is_powered_on(uart_peripheral_ids[uart]) &&
    5c1e:	3000      	adds	r0, #0
    5c20:	bf18      	it	ne
    5c22:	2001      	movne	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:208 (discriminator 6)
}
    5c24:	bd10      	pop	{r4, pc}
    5c26:	bf00      	nop
    5c28:	0000d964 	.word	0x0000d964
    5c2c:	10000170 	.word	0x10000170

00005c30 <uart__is_transmit_queue_initialized>:
uart__is_transmit_queue_initialized():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:211

bool uart__is_transmit_queue_initialized(uart_e uart) {
  return (NULL != uarts[uart].queue_transmit);
    5c30:	4b03      	ldr	r3, [pc, #12]	; (5c40 <uart__is_transmit_queue_initialized+0x10>)
    5c32:	eb03 1000 	add.w	r0, r3, r0, lsl #4
    5c36:	6880      	ldr	r0, [r0, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:212
}
    5c38:	3000      	adds	r0, #0
    5c3a:	bf18      	it	ne
    5c3c:	2001      	movne	r0, #1
    5c3e:	4770      	bx	lr
    5c40:	10000170 	.word	0x10000170

00005c44 <uart__is_receive_queue_initialized>:
uart__is_receive_queue_initialized():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:215

bool uart__is_receive_queue_initialized(uart_e uart) {
  return (NULL != uarts[uart].queue_receive);
    5c44:	4b03      	ldr	r3, [pc, #12]	; (5c54 <uart__is_receive_queue_initialized+0x10>)
    5c46:	eb03 1000 	add.w	r0, r3, r0, lsl #4
    5c4a:	68c0      	ldr	r0, [r0, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:216
}
    5c4c:	3000      	adds	r0, #0
    5c4e:	bf18      	it	ne
    5c50:	2001      	movne	r0, #1
    5c52:	4770      	bx	lr
    5c54:	10000170 	.word	0x10000170

00005c58 <uart__enable_queues>:
uart__enable_queues():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:219

bool uart__enable_queues(uart_e uart, QueueHandle_t queue_receive,
                         QueueHandle_t queue_transmit) {
    5c58:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    5c5c:	4607      	mov	r7, r0
    5c5e:	4689      	mov	r9, r1
    5c60:	4690      	mov	r8, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:224
  bool status = false;
  uart_s *uart_type = &uarts[uart];

  // We can only access UART registers after its power has been enabled
  if (uart__is_initialized(uart)) {
    5c62:	f7ff ffd1 	bl	5c08 <uart__is_initialized>
    5c66:	4606      	mov	r6, r0
    5c68:	b918      	cbnz	r0, 5c72 <uart__enable_queues+0x1a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:220
  bool status = false;
    5c6a:	2600      	movs	r6, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:249
      uart__enable_receive_and_transmit_interrupts(uart);
    }
  }

  return status;
}
    5c6c:	4630      	mov	r0, r6
    5c6e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
uart__is_receive_queue_initialized():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:215
  return (NULL != uarts[uart].queue_receive);
    5c72:	4c12      	ldr	r4, [pc, #72]	; (5cbc <uart__enable_queues+0x64>)
    5c74:	013d      	lsls	r5, r7, #4
    5c76:	1963      	adds	r3, r4, r5
uart__enable_queues():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:226
    if (!uart__is_receive_queue_initialized(uart) && NULL != queue_receive) {
    5c78:	68da      	ldr	r2, [r3, #12]
    5c7a:	b922      	cbnz	r2, 5c86 <uart__enable_queues+0x2e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:226 (discriminator 1)
    5c7c:	f1b9 0f00 	cmp.w	r9, #0
    5c80:	d001      	beq.n	5c86 <uart__enable_queues+0x2e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:227
      uart_type->queue_receive = queue_receive;
    5c82:	f8c3 900c 	str.w	r9, [r3, #12]
uart__is_transmit_queue_initialized():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:211
  return (NULL != uarts[uart].queue_transmit);
    5c86:	1963      	adds	r3, r4, r5
uart__enable_queues():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:233
    if (!uart__is_transmit_queue_initialized(uart) && NULL != queue_transmit) {
    5c88:	689a      	ldr	r2, [r3, #8]
    5c8a:	b922      	cbnz	r2, 5c96 <uart__enable_queues+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:233 (discriminator 1)
    5c8c:	f1b8 0f00 	cmp.w	r8, #0
    5c90:	d001      	beq.n	5c96 <uart__enable_queues+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:234
      uart_type->queue_transmit = queue_transmit;
    5c92:	f8c3 8008 	str.w	r8, [r3, #8]
uart__is_receive_queue_initialized():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:215
  return (NULL != uarts[uart].queue_receive);
    5c96:	1963      	adds	r3, r4, r5
uart__enable_queues():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:241
    status = uart__is_receive_queue_initialized(uart) &&
    5c98:	68da      	ldr	r2, [r3, #12]
    5c9a:	2a00      	cmp	r2, #0
    5c9c:	d0e5      	beq.n	5c6a <uart__enable_queues+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:243
    if (status) {
    5c9e:	689a      	ldr	r2, [r3, #8]
    5ca0:	2a00      	cmp	r2, #0
    5ca2:	d0e2      	beq.n	5c6a <uart__enable_queues+0x12>
uart__enable_receive_and_transmit_interrupts():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:122
  lpc_peripheral__enable_interrupt(uart_peripheral_ids[uart], uart__isrs[uart],
    5ca4:	685a      	ldr	r2, [r3, #4]
    5ca6:	4b06      	ldr	r3, [pc, #24]	; (5cc0 <uart__enable_queues+0x68>)
    5ca8:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
    5cac:	4b05      	ldr	r3, [pc, #20]	; (5cc4 <uart__enable_queues+0x6c>)
    5cae:	5dd8      	ldrb	r0, [r3, r7]
    5cb0:	f7ff fe6c 	bl	598c <lpc_peripheral__enable_interrupt>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:127
  uart_type->registers->IER = enable_rx_tx_interrupts;
    5cb4:	5963      	ldr	r3, [r4, r5]
    5cb6:	2207      	movs	r2, #7
    5cb8:	605a      	str	r2, [r3, #4]
    5cba:	e7d7      	b.n	5c6c <uart__enable_queues+0x14>
    5cbc:	10000170 	.word	0x10000170
    5cc0:	0000d954 	.word	0x0000d954
    5cc4:	0000d964 	.word	0x0000d964

00005cc8 <uart__polled_put>:
uart__polled_put():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:282
  }

  return status;
}

bool uart__polled_put(uart_e uart, char output_byte) {
    5cc8:	b538      	push	{r3, r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:284
  bool status = false;
  lpc_uart *uart_regs = uarts[uart].registers;
    5cca:	4a07      	ldr	r2, [pc, #28]	; (5ce8 <uart__polled_put+0x20>)
    5ccc:	0103      	lsls	r3, r0, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:282
bool uart__polled_put(uart_e uart, char output_byte) {
    5cce:	460d      	mov	r5, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:284
  lpc_uart *uart_regs = uarts[uart].registers;
    5cd0:	58d4      	ldr	r4, [r2, r3]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:286

  if (uart__is_initialized(uart)) {
    5cd2:	f7ff ff99 	bl	5c08 <uart__is_initialized>
    5cd6:	b130      	cbz	r0, 5ce6 <uart__polled_put+0x1e>
uart__wait_for_transmit_to_complete():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:70
  while (!(uart_regs->LSR & transmitter_empty)) {
    5cd8:	7d23      	ldrb	r3, [r4, #20]
    5cda:	069a      	lsls	r2, r3, #26
    5cdc:	d5fc      	bpl.n	5cd8 <uart__polled_put+0x10>
uart__polled_put():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:291
    status = true;

    // Wait for any prior transmission to complete
    uart__wait_for_transmit_to_complete(uart_regs);
    uart_regs->THR = output_byte;
    5cde:	7025      	strb	r5, [r4, #0]
uart__wait_for_transmit_to_complete():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:70
  while (!(uart_regs->LSR & transmitter_empty)) {
    5ce0:	7d23      	ldrb	r3, [r4, #20]
    5ce2:	069b      	lsls	r3, r3, #26
    5ce4:	d5fc      	bpl.n	5ce0 <uart__polled_put+0x18>
uart__polled_put():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:296
    uart__wait_for_transmit_to_complete(uart_regs);
  }

  return status;
}
    5ce6:	bd38      	pop	{r3, r4, r5, pc}
    5ce8:	10000170 	.word	0x10000170

00005cec <uart__get>:
uart__get():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:298

bool uart__get(uart_e uart, char *input_byte, uint32_t timeout_ms) {
    5cec:	b570      	push	{r4, r5, r6, lr}
    5cee:	4604      	mov	r4, r0
    5cf0:	460e      	mov	r6, r1
    5cf2:	4615      	mov	r5, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:301
  bool status = false;
  const bool rtos_is_running =
      taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    5cf4:	f7ff f910 	bl	4f18 <xTaskGetSchedulerState>
uart__is_receive_queue_initialized():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:215
  return (NULL != uarts[uart].queue_receive);
    5cf8:	4b0e      	ldr	r3, [pc, #56]	; (5d34 <uart__get+0x48>)
    5cfa:	eb03 1304 	add.w	r3, r3, r4, lsl #4
    5cfe:	68dc      	ldr	r4, [r3, #12]
uart__get():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:307

  /* If a user calls this function without the RTOS running, we fail gracefully.
   * We do not desire to perform polling because that would involve time keeping
   * without an RTOS which increases the driver complexity.
   */
  if (uart__is_receive_queue_initialized(uart) && rtos_is_running) {
    5d00:	b1b4      	cbz	r4, 5d30 <uart__get+0x44>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:307 (discriminator 1)
    5d02:	2802      	cmp	r0, #2
    5d04:	d114      	bne.n	5d30 <uart__get+0x44>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:308
    status = xQueueReceive(uarts[uart].queue_receive, input_byte,
    5d06:	1c6b      	adds	r3, r5, #1
    5d08:	d009      	beq.n	5d1e <uart__get+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:309 (discriminator 1)
                           RTOS_MS_TO_TICKS(timeout_ms));
    5d0a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
    5d0e:	fba5 0100 	umull	r0, r1, r5, r0
    5d12:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    5d16:	2300      	movs	r3, #0
    5d18:	f000 fb50 	bl	63bc <__aeabi_uldivmod>
    5d1c:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:308 (discriminator 4)
    status = xQueueReceive(uarts[uart].queue_receive, input_byte,
    5d1e:	462a      	mov	r2, r5
    5d20:	4631      	mov	r1, r6
    5d22:	4620      	mov	r0, r4
    5d24:	f7fe f8f4 	bl	3f10 <xQueueReceive>
    5d28:	3000      	adds	r0, #0
    5d2a:	bf18      	it	ne
    5d2c:	2001      	movne	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:313
  }

  return status;
}
    5d2e:	bd70      	pop	{r4, r5, r6, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:299
  bool status = false;
    5d30:	2000      	movs	r0, #0
    5d32:	e7fc      	b.n	5d2e <uart__get+0x42>
    5d34:	10000170 	.word	0x10000170

00005d38 <uart__polled_get>:
uart__polled_get():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:251
bool uart__polled_get(uart_e uart, char *input_byte) {
    5d38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    5d3c:	4605      	mov	r5, r0
    5d3e:	460e      	mov	r6, r1
uart__is_receive_queue_initialized():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:215
  return (NULL != uarts[uart].queue_receive);
    5d40:	4c11      	ldr	r4, [pc, #68]	; (5d88 <uart__polled_get+0x50>)
uart__polled_get():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:255
      taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    5d42:	f7ff f8e9 	bl	4f18 <xTaskGetSchedulerState>
uart__is_receive_queue_initialized():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:215
  return (NULL != uarts[uart].queue_receive);
    5d46:	012f      	lsls	r7, r5, #4
    5d48:	19e3      	adds	r3, r4, r7
uart__polled_get():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:255
      taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    5d4a:	4681      	mov	r9, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:258
  if (uart__is_initialized(uart)) {
    5d4c:	4628      	mov	r0, r5
uart__is_receive_queue_initialized():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:215
  return (NULL != uarts[uart].queue_receive);
    5d4e:	f8d3 800c 	ldr.w	r8, [r3, #12]
uart__polled_get():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:258
  if (uart__is_initialized(uart)) {
    5d52:	f7ff ff59 	bl	5c08 <uart__is_initialized>
    5d56:	b198      	cbz	r0, 5d80 <uart__polled_get+0x48>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:267
    if (rtos_is_running && queue_is_enabled) {
    5d58:	f1b9 0f02 	cmp.w	r9, #2
    5d5c:	d10a      	bne.n	5d74 <uart__polled_get+0x3c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:267 (discriminator 1)
    5d5e:	f1b8 0f00 	cmp.w	r8, #0
    5d62:	d007      	beq.n	5d74 <uart__polled_get+0x3c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:268
      status = uart__get(uart, input_byte, UINT32_MAX);
    5d64:	4631      	mov	r1, r6
    5d66:	4628      	mov	r0, r5
    5d68:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:280
}
    5d6c:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:268
      status = uart__get(uart, input_byte, UINT32_MAX);
    5d70:	f7ff bfbc 	b.w	5cec <uart__get>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:270
      lpc_uart *uart_regs = uarts[uart].registers;
    5d74:	59e3      	ldr	r3, [r4, r7]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:273 (discriminator 1)
      while (!(uart_regs->LSR & char_available_bitmask)) {
    5d76:	7d1a      	ldrb	r2, [r3, #20]
    5d78:	07d2      	lsls	r2, r2, #31
    5d7a:	d5fc      	bpl.n	5d76 <uart__polled_get+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:275
      *input_byte = uart_regs->RBR;
    5d7c:	781b      	ldrb	r3, [r3, #0]
    5d7e:	7033      	strb	r3, [r6, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:280
}
    5d80:	2000      	movs	r0, #0
    5d82:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    5d86:	bf00      	nop
    5d88:	10000170 	.word	0x10000170

00005d8c <uart__put>:
uart__put():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:315

bool uart__put(uart_e uart, char output_byte, uint32_t timeout_ms) {
    5d8c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    5d8e:	4605      	mov	r5, r0
uart__is_transmit_queue_initialized():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:211
  return (NULL != uarts[uart].queue_transmit);
    5d90:	4e1c      	ldr	r6, [pc, #112]	; (5e04 <uart__put+0x78>)
uart__put():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:315
bool uart__put(uart_e uart, char output_byte, uint32_t timeout_ms) {
    5d92:	f88d 1007 	strb.w	r1, [sp, #7]
uart__is_transmit_queue_initialized():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:211
  return (NULL != uarts[uart].queue_transmit);
    5d96:	012d      	lsls	r5, r5, #4
uart__put():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:315
bool uart__put(uart_e uart, char output_byte, uint32_t timeout_ms) {
    5d98:	4617      	mov	r7, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:318
  bool status = false;
  const bool rtos_is_running =
      taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    5d9a:	f7ff f8bd 	bl	4f18 <xTaskGetSchedulerState>
uart__is_transmit_queue_initialized():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:211
  return (NULL != uarts[uart].queue_transmit);
    5d9e:	1973      	adds	r3, r6, r5
    5da0:	689c      	ldr	r4, [r3, #8]
uart__put():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:320

  if (uart__is_transmit_queue_initialized(uart) && rtos_is_running) {
    5da2:	b354      	cbz	r4, 5dfa <uart__put+0x6e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:320 (discriminator 1)
    5da4:	2802      	cmp	r0, #2
    5da6:	d12b      	bne.n	5e00 <uart__put+0x74>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:322
    // Deposit to the transmit queue for now
    status = xQueueSend(uarts[uart].queue_transmit, &output_byte,
    5da8:	1c79      	adds	r1, r7, #1
    5daa:	d009      	beq.n	5dc0 <uart__put+0x34>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:322 (discriminator 1)
    5dac:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
    5db0:	fba7 0100 	umull	r0, r1, r7, r0
    5db4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    5db8:	2300      	movs	r3, #0
    5dba:	f000 faff 	bl	63bc <__aeabi_uldivmod>
    5dbe:	4607      	mov	r7, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:322 (discriminator 4)
    5dc0:	2300      	movs	r3, #0
    5dc2:	463a      	mov	r2, r7
    5dc4:	f10d 0107 	add.w	r1, sp, #7
    5dc8:	4620      	mov	r0, r4
    5dca:	f7fd ff2d 	bl	3c28 <xQueueGenericSend>
    5dce:	1c04      	adds	r4, r0, #0
    5dd0:	bf18      	it	ne
    5dd2:	2401      	movne	r4, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:330 (discriminator 4)
    /* 'Transmit Complete Interrupt' may have already fired when we get here, so
     * if there is no further pending data to be sent, it will not fire again to
     * send any data. Hence, we check here in a critical section if transmit
     * holder register is empty, and kick-off the tranmisssion
     */
    portENTER_CRITICAL();
    5dd4:	f7fd fb96 	bl	3504 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:332 (discriminator 4)
    {
      lpc_uart *uart_regs = uarts[uart].registers;
    5dd8:	1973      	adds	r3, r6, r5
    5dda:	5975      	ldr	r5, [r6, r5]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:335 (discriminator 4)
      const uint32_t uart_tx_is_idle = (1 << 6);

      if (uart_regs->LSR & uart_tx_is_idle) {
    5ddc:	7d2a      	ldrb	r2, [r5, #20]
    5dde:	0652      	lsls	r2, r2, #25
    5de0:	d509      	bpl.n	5df6 <uart__put+0x6a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:340
        /* Receive oldest char from the queue to send
         * Since we are inside a critical section, we use FromISR() FreeRTOS API
         * variant
         */
        if (xQueueReceiveFromISR(uarts[uart].queue_transmit, &output_byte,
    5de2:	2200      	movs	r2, #0
    5de4:	f10d 0107 	add.w	r1, sp, #7
    5de8:	6898      	ldr	r0, [r3, #8]
    5dea:	f7fe f9ef 	bl	41cc <xQueueReceiveFromISR>
    5dee:	b110      	cbz	r0, 5df6 <uart__put+0x6a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:342
                                 NULL)) {
          uart_regs->THR = output_byte;
    5df0:	f89d 3007 	ldrb.w	r3, [sp, #7]
    5df4:	702b      	strb	r3, [r5, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:346
        }
      }
    }
    portEXIT_CRITICAL();
    5df6:	f7fd fba7 	bl	3548 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:350
  }

  return status;
}
    5dfa:	4620      	mov	r0, r4
    5dfc:	b003      	add	sp, #12
    5dfe:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:316
  bool status = false;
    5e00:	2400      	movs	r4, #0
    5e02:	e7fa      	b.n	5dfa <uart__put+0x6e>
    5e04:	10000170 	.word	0x10000170

00005e08 <producer_task>:
producer_task():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:61
static void create_watchdog_task() {
  xTaskCreate(watchdog_task, "Watchdog", (512U * 8) / sizeof(void *), NULL,
              PRIORITY_HIGH, NULL);
}

static void producer_task(void *params) {
    5e08:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:115
    }
    accel_data_avg.x = x / 100;
    accel_data_avg.y = x / 100;
    accel_data_avg.z = x / 100;

    if (xQueueSend(sd_card_Q, &accel_data_avg, 0)) {
    5e0c:	f8df 8064 	ldr.w	r8, [pc, #100]	; 5e74 <producer_task+0x6c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:117
    }
    xEventGroupSetBits(Check_In, 1 << 0);
    5e10:	4f17      	ldr	r7, [pc, #92]	; (5e70 <producer_task+0x68>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:61
static void producer_task(void *params) {
    5e12:	f5ad 7d18 	sub.w	sp, sp, #608	; 0x260
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:103
    for (int i = 0; i < 100; i++) {
    5e16:	2500      	movs	r5, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:99
    int16_t x = 0;
    5e18:	462c      	mov	r4, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:105
      accel_data[i] = acceleration__get_data();
    5e1a:	ae02      	add	r6, sp, #8
    5e1c:	f04f 0a06 	mov.w	sl, #6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:105 (discriminator 3)
    5e20:	fb0a f905 	mul.w	r9, sl, r5
    5e24:	eb06 0009 	add.w	r0, r6, r9
    5e28:	f7fa fafb 	bl	422 <acceleration__get_data>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:106 (discriminator 3)
      x += accel_data[i].x;
    5e2c:	f839 3006 	ldrh.w	r3, [r9, r6]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:109 (discriminator 3)
      vTaskDelay(1);
    5e30:	2001      	movs	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:103 (discriminator 3)
    for (int i = 0; i < 100; i++) {
    5e32:	3501      	adds	r5, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:106 (discriminator 3)
      x += accel_data[i].x;
    5e34:	441c      	add	r4, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:109 (discriminator 3)
      vTaskDelay(1);
    5e36:	f7fe fdbb 	bl	49b0 <vTaskDelay>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:103 (discriminator 3)
    for (int i = 0; i < 100; i++) {
    5e3a:	2d64      	cmp	r5, #100	; 0x64
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:106 (discriminator 3)
      x += accel_data[i].x;
    5e3c:	b224      	sxth	r4, r4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:103 (discriminator 3)
    for (int i = 0; i < 100; i++) {
    5e3e:	d1ef      	bne.n	5e20 <producer_task+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:115
    if (xQueueSend(sd_card_Q, &accel_data_avg, 0)) {
    5e40:	2300      	movs	r3, #0
    5e42:	461a      	mov	r2, r3
    5e44:	4669      	mov	r1, sp
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:111
    accel_data_avg.x = x / 100;
    5e46:	fb94 f4f5 	sdiv	r4, r4, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:115
    if (xQueueSend(sd_card_Q, &accel_data_avg, 0)) {
    5e4a:	f8d8 0000 	ldr.w	r0, [r8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:111
    accel_data_avg.x = x / 100;
    5e4e:	b224      	sxth	r4, r4
    5e50:	f8ad 4000 	strh.w	r4, [sp]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:112
    accel_data_avg.y = x / 100;
    5e54:	f8ad 4002 	strh.w	r4, [sp, #2]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:113
    accel_data_avg.z = x / 100;
    5e58:	f8ad 4004 	strh.w	r4, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:115
    if (xQueueSend(sd_card_Q, &accel_data_avg, 0)) {
    5e5c:	f7fd fee4 	bl	3c28 <xQueueGenericSend>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:117
    xEventGroupSetBits(Check_In, 1 << 0);
    5e60:	2101      	movs	r1, #1
    5e62:	6838      	ldr	r0, [r7, #0]
    5e64:	f7fd fd22 	bl	38ac <xEventGroupSetBits>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:118
    vTaskDelay(100);
    5e68:	4628      	mov	r0, r5
    5e6a:	f7fe fda1 	bl	49b0 <vTaskDelay>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:62
  while (1) {
    5e6e:	e7d2      	b.n	5e16 <producer_task+0xe>
    5e70:	10001428 	.word	0x10001428
    5e74:	1000146c 	.word	0x1000146c

00005e78 <watchdog_task>:
watchdog_task():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:186
- Print a message when the Watchdog task is able to verify the check-in of other
tasks
- Print an error message clearly indicating which task failed to check-in with
the RTOS Event Groups API
*/
void watchdog_task(void *params) {
    5e78:	b573      	push	{r0, r1, r4, r5, r6, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:195
    // We either should vTaskDelay, but for better robustness, we should
    // block on xEventGroupWaitBits() for slightly more than 100ms because
    // of the expected production rate of the producer() task and its check-in
    const TickType_t xTicksToWait = 200;
    EventBits_t uxBits;
    uxBits = xEventGroupWaitBits(
    5e7a:	4d13      	ldr	r5, [pc, #76]	; (5ec8 <watchdog_task+0x50>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:211
              "Tasks did not complete: Producer Succeeded, Conusmer Failed\n");
    } else if (uxBits == 0x2) {
      fprintf(stderr,
              "Tasks did not complete: Producer Failed, Conusmer Succeeded\n");
    } else if (uxBits == 0x3) {
      fprintf(stderr, "Tasks completed\n");
    5e7c:	4c13      	ldr	r4, [pc, #76]	; (5ecc <watchdog_task+0x54>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:189
    vTaskDelay(200);
    5e7e:	26c8      	movs	r6, #200	; 0xc8
    5e80:	20c8      	movs	r0, #200	; 0xc8
    5e82:	f7fe fd95 	bl	49b0 <vTaskDelay>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:195
    uxBits = xEventGroupWaitBits(
    5e86:	2301      	movs	r3, #1
    5e88:	9600      	str	r6, [sp, #0]
    5e8a:	461a      	mov	r2, r3
    5e8c:	2103      	movs	r1, #3
    5e8e:	6828      	ldr	r0, [r5, #0]
    5e90:	f7fd fc88 	bl	37a4 <xEventGroupWaitBits>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:202
    if (uxBits == 0x0) {
    5e94:	b928      	cbnz	r0, 5ea2 <watchdog_task+0x2a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:203
      fprintf(stderr, "Tasks did not complete: Producer and Consumer failed\n");
    5e96:	6823      	ldr	r3, [r4, #0]
    5e98:	480d      	ldr	r0, [pc, #52]	; (5ed0 <watchdog_task+0x58>)
    5e9a:	68d9      	ldr	r1, [r3, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:211
      fprintf(stderr, "Tasks completed\n");
    5e9c:	f000 fc88 	bl	67b0 <fputs>
    5ea0:	e7ee      	b.n	5e80 <watchdog_task+0x8>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:204
    } else if (uxBits == 0x1) {
    5ea2:	2801      	cmp	r0, #1
    5ea4:	d103      	bne.n	5eae <watchdog_task+0x36>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:205
      fprintf(stderr,
    5ea6:	6823      	ldr	r3, [r4, #0]
    5ea8:	480a      	ldr	r0, [pc, #40]	; (5ed4 <watchdog_task+0x5c>)
    5eaa:	68d9      	ldr	r1, [r3, #12]
    5eac:	e7f6      	b.n	5e9c <watchdog_task+0x24>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:207
    } else if (uxBits == 0x2) {
    5eae:	2802      	cmp	r0, #2
    5eb0:	d103      	bne.n	5eba <watchdog_task+0x42>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:208
      fprintf(stderr,
    5eb2:	6823      	ldr	r3, [r4, #0]
    5eb4:	4808      	ldr	r0, [pc, #32]	; (5ed8 <watchdog_task+0x60>)
    5eb6:	68d9      	ldr	r1, [r3, #12]
    5eb8:	e7f0      	b.n	5e9c <watchdog_task+0x24>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:210
    } else if (uxBits == 0x3) {
    5eba:	2803      	cmp	r0, #3
    5ebc:	d1e0      	bne.n	5e80 <watchdog_task+0x8>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:211
      fprintf(stderr, "Tasks completed\n");
    5ebe:	6823      	ldr	r3, [r4, #0]
    5ec0:	4806      	ldr	r0, [pc, #24]	; (5edc <watchdog_task+0x64>)
    5ec2:	68d9      	ldr	r1, [r3, #12]
    5ec4:	e7ea      	b.n	5e9c <watchdog_task+0x24>
    5ec6:	bf00      	nop
    5ec8:	10001428 	.word	0x10001428
    5ecc:	100001b0 	.word	0x100001b0
    5ed0:	0000d9aa 	.word	0x0000d9aa
    5ed4:	0000d9e0 	.word	0x0000d9e0
    5ed8:	0000da1d 	.word	0x0000da1d
    5edc:	0000da5a 	.word	0x0000da5a

00005ee0 <main>:
main():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:30
int main(void) {
    5ee0:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:31
  sd_card_Q = xQueueCreate(10, sizeof(unsigned long));
    5ee2:	2200      	movs	r2, #0
    5ee4:	2104      	movs	r1, #4
    5ee6:	200a      	movs	r0, #10
    5ee8:	f7fd fe78 	bl	3bdc <xQueueGenericCreate>
    5eec:	4b17      	ldr	r3, [pc, #92]	; (5f4c <main+0x6c>)
create_producer_task():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:47
  xTaskCreate(producer_task, "Producer", (512U * 8) / sizeof(void *), NULL,
    5eee:	4918      	ldr	r1, [pc, #96]	; (5f50 <main+0x70>)
main():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:31
  sd_card_Q = xQueueCreate(10, sizeof(unsigned long));
    5ef0:	6018      	str	r0, [r3, #0]
create_producer_task():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:47
  xTaskCreate(producer_task, "Producer", (512U * 8) / sizeof(void *), NULL,
    5ef2:	2400      	movs	r4, #0
    5ef4:	2502      	movs	r5, #2
    5ef6:	4623      	mov	r3, r4
    5ef8:	e9cd 5400 	strd	r5, r4, [sp]
    5efc:	f44f 6280 	mov.w	r2, #1024	; 0x400
    5f00:	4814      	ldr	r0, [pc, #80]	; (5f54 <main+0x74>)
    5f02:	f7fe fb5f 	bl	45c4 <xTaskCreate>
create_consumer_task():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:52
  xTaskCreate(consumer_task, "Consumer", (512U * 8) / sizeof(void *), NULL,
    5f06:	4623      	mov	r3, r4
    5f08:	e9cd 5400 	strd	r5, r4, [sp]
    5f0c:	f44f 6280 	mov.w	r2, #1024	; 0x400
    5f10:	4911      	ldr	r1, [pc, #68]	; (5f58 <main+0x78>)
    5f12:	4812      	ldr	r0, [pc, #72]	; (5f5c <main+0x7c>)
    5f14:	f7fe fb56 	bl	45c4 <xTaskCreate>
create_watchdog_task():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:57
  xTaskCreate(watchdog_task, "Watchdog", (512U * 8) / sizeof(void *), NULL,
    5f18:	2303      	movs	r3, #3
    5f1a:	f44f 6280 	mov.w	r2, #1024	; 0x400
    5f1e:	4910      	ldr	r1, [pc, #64]	; (5f60 <main+0x80>)
    5f20:	9300      	str	r3, [sp, #0]
    5f22:	9401      	str	r4, [sp, #4]
    5f24:	4623      	mov	r3, r4
    5f26:	480f      	ldr	r0, [pc, #60]	; (5f64 <main+0x84>)
    5f28:	f7fe fb4c 	bl	45c4 <xTaskCreate>
main():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:35
  acceleration__init();
    5f2c:	f7fa fa68 	bl	400 <acceleration__init>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:36
  Check_In = xEventGroupCreate();
    5f30:	f7fd fc2a 	bl	3788 <xEventGroupCreate>
    5f34:	4b0c      	ldr	r3, [pc, #48]	; (5f68 <main+0x88>)
    5f36:	6018      	str	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:37
  sj2_cli__init();
    5f38:	f7fc fb5c 	bl	25f4 <sj2_cli__init>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:39
  puts("Starting RTOS");
    5f3c:	480b      	ldr	r0, [pc, #44]	; (5f6c <main+0x8c>)
    5f3e:	f001 fd4d 	bl	79dc <puts>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:40
  vTaskStartScheduler(); // This function never returns unless RTOS scheduler
    5f42:	f7fe fbe5 	bl	4710 <vTaskStartScheduler>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:44
}
    5f46:	4620      	mov	r0, r4
    5f48:	b003      	add	sp, #12
    5f4a:	bd30      	pop	{r4, r5, pc}
    5f4c:	1000146c 	.word	0x1000146c
    5f50:	0000d981 	.word	0x0000d981
    5f54:	00005e09 	.word	0x00005e09
    5f58:	0000d98a 	.word	0x0000d98a
    5f5c:	00005fc9 	.word	0x00005fc9
    5f60:	0000d993 	.word	0x0000d993
    5f64:	00005e79 	.word	0x00005e79
    5f68:	10001428 	.word	0x10001428
    5f6c:	0000d99c 	.word	0x0000d99c

00005f70 <write_file_using_fatfs_pi>:
write_file_using_fatfs_pi():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:216
    }
  }
}

void write_file_using_fatfs_pi(void) {
    5f70:	b500      	push	{lr}
    5f72:	f5ad 7d0d 	sub.w	sp, sp, #564	; 0x234
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:219
  const char *filename = "file.txt";
  FIL file; // File handle
  UINT bytes_written = 0;
    5f76:	2300      	movs	r3, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:221
  FRESULT result =
      f_open(&file, filename, (FA_OPEN_APPEND | FA_WRITE | FA_CREATE_ALWAYS));
    5f78:	223a      	movs	r2, #58	; 0x3a
    5f7a:	490f      	ldr	r1, [pc, #60]	; (5fb8 <write_file_using_fatfs_pi+0x48>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:219
  UINT bytes_written = 0;
    5f7c:	9301      	str	r3, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:221
      f_open(&file, filename, (FA_OPEN_APPEND | FA_WRITE | FA_CREATE_ALWAYS));
    5f7e:	a802      	add	r0, sp, #8
    5f80:	f7fb fb04 	bl	158c <f_open>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:223

  if (FR_OK == result) {
    5f84:	b998      	cbnz	r0, 5fae <write_file_using_fatfs_pi+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:226
    // char string[64];
    // sprintf(string, "Value,%i\n", 123);
    if (FR_OK == f_write(&file, string, strlen(string), &bytes_written)) {
    5f86:	480d      	ldr	r0, [pc, #52]	; (5fbc <write_file_using_fatfs_pi+0x4c>)
    5f88:	f001 fe51 	bl	7c2e <strlen>
    5f8c:	ab01      	add	r3, sp, #4
    5f8e:	4602      	mov	r2, r0
    5f90:	490a      	ldr	r1, [pc, #40]	; (5fbc <write_file_using_fatfs_pi+0x4c>)
    5f92:	a802      	add	r0, sp, #8
    5f94:	f7fb fbe0 	bl	1758 <f_write>
    5f98:	b110      	cbz	r0, 5fa0 <write_file_using_fatfs_pi+0x30>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:228
    } else {
      printf("ERROR: Failed to write data to file\n");
    5f9a:	4809      	ldr	r0, [pc, #36]	; (5fc0 <write_file_using_fatfs_pi+0x50>)
    5f9c:	f001 fd1e 	bl	79dc <puts>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:230
    }
    f_close(&file);
    5fa0:	a802      	add	r0, sp, #8
    5fa2:	f7fb fcfb 	bl	199c <f_close>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:234
  } else {
    printf("ERROR: Failed to open: %s\n", filename);
  }
}
    5fa6:	f50d 7d0d 	add.w	sp, sp, #564	; 0x234
    5faa:	f85d fb04 	ldr.w	pc, [sp], #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:232
    printf("ERROR: Failed to open: %s\n", filename);
    5fae:	4902      	ldr	r1, [pc, #8]	; (5fb8 <write_file_using_fatfs_pi+0x48>)
    5fb0:	4804      	ldr	r0, [pc, #16]	; (5fc4 <write_file_using_fatfs_pi+0x54>)
    5fb2:	f001 fc79 	bl	78a8 <iprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:234
}
    5fb6:	e7f6      	b.n	5fa6 <write_file_using_fatfs_pi+0x36>
    5fb8:	0000da6b 	.word	0x0000da6b
    5fbc:	1000142c 	.word	0x1000142c
    5fc0:	0000da74 	.word	0x0000da74
    5fc4:	0000da98 	.word	0x0000da98

00005fc8 <consumer_task>:
consumer_task():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:124
static void consumer_task(void *params) {
    5fc8:	b5f0      	push	{r4, r5, r6, r7, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:161
    if (xQueueReceive(sd_card_Q, &accel_data_avg, portMAX_DELAY)) {
    5fca:	4f19      	ldr	r7, [pc, #100]	; (6030 <consumer_task+0x68>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:164
      fprintf(stderr, "%i: x: %i, y: %i, z: %i\n", time, accel_data_avg.x,
    5fcc:	4e19      	ldr	r6, [pc, #100]	; (6034 <consumer_task+0x6c>)
    5fce:	4c1a      	ldr	r4, [pc, #104]	; (6038 <consumer_task+0x70>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:124
static void consumer_task(void *params) {
    5fd0:	b085      	sub	sp, #20
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:161
    if (xQueueReceive(sd_card_Q, &accel_data_avg, portMAX_DELAY)) {
    5fd2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    5fd6:	a902      	add	r1, sp, #8
    5fd8:	6838      	ldr	r0, [r7, #0]
    5fda:	f7fd ff99 	bl	3f10 <xQueueReceive>
    5fde:	2800      	cmp	r0, #0
    5fe0:	d0f7      	beq.n	5fd2 <consumer_task+0xa>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:163
      int16_t time = xTaskGetTickCount();
    5fe2:	f7fe fbd7 	bl	4794 <xTaskGetTickCount>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:164
      fprintf(stderr, "%i: x: %i, y: %i, z: %i\n", time, accel_data_avg.x,
    5fe6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
    5fea:	9301      	str	r3, [sp, #4]
    5fec:	b205      	sxth	r5, r0
    5fee:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
    5ff2:	6830      	ldr	r0, [r6, #0]
    5ff4:	9300      	str	r3, [sp, #0]
    5ff6:	462a      	mov	r2, r5
    5ff8:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
    5ffc:	68c0      	ldr	r0, [r0, #12]
    5ffe:	4621      	mov	r1, r4
    6000:	f000 fb5e 	bl	66c0 <fiprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:166
      sprintf(string, "%i: x: %i, y: %i, z: %i\n", time, accel_data_avg.x,
    6004:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
    6008:	9301      	str	r3, [sp, #4]
    600a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
    600e:	9300      	str	r3, [sp, #0]
    6010:	4621      	mov	r1, r4
    6012:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
    6016:	4809      	ldr	r0, [pc, #36]	; (603c <consumer_task+0x74>)
    6018:	462a      	mov	r2, r5
    601a:	f001 fdbf 	bl	7b9c <siprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:168
      write_file_using_fatfs_pi();
    601e:	f7ff ffa7 	bl	5f70 <write_file_using_fatfs_pi>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:169
      xEventGroupSetBits(Check_In, 1 << 1);
    6022:	4b07      	ldr	r3, [pc, #28]	; (6040 <consumer_task+0x78>)
    6024:	2102      	movs	r1, #2
    6026:	6818      	ldr	r0, [r3, #0]
    6028:	f7fd fc40 	bl	38ac <xEventGroupSetBits>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:125
  while (1) {
    602c:	e7d1      	b.n	5fd2 <consumer_task+0xa>
    602e:	bf00      	nop
    6030:	1000146c 	.word	0x1000146c
    6034:	100001b0 	.word	0x100001b0
    6038:	0000d968 	.word	0x0000d968
    603c:	1000142c 	.word	0x1000142c
    6040:	10001428 	.word	0x10001428

00006044 <__aeabi_drsub>:
__aeabi_drsub():
    6044:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
    6048:	e002      	b.n	6050 <__adddf3>
    604a:	bf00      	nop

0000604c <__aeabi_dsub>:
__subdf3():
    604c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00006050 <__adddf3>:
__aeabi_dadd():
    6050:	b530      	push	{r4, r5, lr}
    6052:	ea4f 0441 	mov.w	r4, r1, lsl #1
    6056:	ea4f 0543 	mov.w	r5, r3, lsl #1
    605a:	ea94 0f05 	teq	r4, r5
    605e:	bf08      	it	eq
    6060:	ea90 0f02 	teqeq	r0, r2
    6064:	bf1f      	itttt	ne
    6066:	ea54 0c00 	orrsne.w	ip, r4, r0
    606a:	ea55 0c02 	orrsne.w	ip, r5, r2
    606e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
    6072:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
    6076:	f000 80e2 	beq.w	623e <__adddf3+0x1ee>
    607a:	ea4f 5454 	mov.w	r4, r4, lsr #21
    607e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
    6082:	bfb8      	it	lt
    6084:	426d      	neglt	r5, r5
    6086:	dd0c      	ble.n	60a2 <__adddf3+0x52>
    6088:	442c      	add	r4, r5
    608a:	ea80 0202 	eor.w	r2, r0, r2
    608e:	ea81 0303 	eor.w	r3, r1, r3
    6092:	ea82 0000 	eor.w	r0, r2, r0
    6096:	ea83 0101 	eor.w	r1, r3, r1
    609a:	ea80 0202 	eor.w	r2, r0, r2
    609e:	ea81 0303 	eor.w	r3, r1, r3
    60a2:	2d36      	cmp	r5, #54	; 0x36
    60a4:	bf88      	it	hi
    60a6:	bd30      	pophi	{r4, r5, pc}
    60a8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
    60ac:	ea4f 3101 	mov.w	r1, r1, lsl #12
    60b0:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
    60b4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
    60b8:	d002      	beq.n	60c0 <__adddf3+0x70>
    60ba:	4240      	negs	r0, r0
    60bc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    60c0:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
    60c4:	ea4f 3303 	mov.w	r3, r3, lsl #12
    60c8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
    60cc:	d002      	beq.n	60d4 <__adddf3+0x84>
    60ce:	4252      	negs	r2, r2
    60d0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
    60d4:	ea94 0f05 	teq	r4, r5
    60d8:	f000 80a7 	beq.w	622a <__adddf3+0x1da>
    60dc:	f1a4 0401 	sub.w	r4, r4, #1
    60e0:	f1d5 0e20 	rsbs	lr, r5, #32
    60e4:	db0d      	blt.n	6102 <__adddf3+0xb2>
    60e6:	fa02 fc0e 	lsl.w	ip, r2, lr
    60ea:	fa22 f205 	lsr.w	r2, r2, r5
    60ee:	1880      	adds	r0, r0, r2
    60f0:	f141 0100 	adc.w	r1, r1, #0
    60f4:	fa03 f20e 	lsl.w	r2, r3, lr
    60f8:	1880      	adds	r0, r0, r2
    60fa:	fa43 f305 	asr.w	r3, r3, r5
    60fe:	4159      	adcs	r1, r3
    6100:	e00e      	b.n	6120 <__adddf3+0xd0>
    6102:	f1a5 0520 	sub.w	r5, r5, #32
    6106:	f10e 0e20 	add.w	lr, lr, #32
    610a:	2a01      	cmp	r2, #1
    610c:	fa03 fc0e 	lsl.w	ip, r3, lr
    6110:	bf28      	it	cs
    6112:	f04c 0c02 	orrcs.w	ip, ip, #2
    6116:	fa43 f305 	asr.w	r3, r3, r5
    611a:	18c0      	adds	r0, r0, r3
    611c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
    6120:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
    6124:	d507      	bpl.n	6136 <__adddf3+0xe6>
    6126:	f04f 0e00 	mov.w	lr, #0
    612a:	f1dc 0c00 	rsbs	ip, ip, #0
    612e:	eb7e 0000 	sbcs.w	r0, lr, r0
    6132:	eb6e 0101 	sbc.w	r1, lr, r1
    6136:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
    613a:	d31b      	bcc.n	6174 <__adddf3+0x124>
    613c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
    6140:	d30c      	bcc.n	615c <__adddf3+0x10c>
    6142:	0849      	lsrs	r1, r1, #1
    6144:	ea5f 0030 	movs.w	r0, r0, rrx
    6148:	ea4f 0c3c 	mov.w	ip, ip, rrx
    614c:	f104 0401 	add.w	r4, r4, #1
    6150:	ea4f 5244 	mov.w	r2, r4, lsl #21
    6154:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
    6158:	f080 809a 	bcs.w	6290 <__adddf3+0x240>
    615c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
    6160:	bf08      	it	eq
    6162:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
    6166:	f150 0000 	adcs.w	r0, r0, #0
    616a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
    616e:	ea41 0105 	orr.w	r1, r1, r5
    6172:	bd30      	pop	{r4, r5, pc}
    6174:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
    6178:	4140      	adcs	r0, r0
    617a:	eb41 0101 	adc.w	r1, r1, r1
    617e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    6182:	f1a4 0401 	sub.w	r4, r4, #1
    6186:	d1e9      	bne.n	615c <__adddf3+0x10c>
    6188:	f091 0f00 	teq	r1, #0
    618c:	bf04      	itt	eq
    618e:	4601      	moveq	r1, r0
    6190:	2000      	moveq	r0, #0
    6192:	fab1 f381 	clz	r3, r1
    6196:	bf08      	it	eq
    6198:	3320      	addeq	r3, #32
    619a:	f1a3 030b 	sub.w	r3, r3, #11
    619e:	f1b3 0220 	subs.w	r2, r3, #32
    61a2:	da0c      	bge.n	61be <__adddf3+0x16e>
    61a4:	320c      	adds	r2, #12
    61a6:	dd08      	ble.n	61ba <__adddf3+0x16a>
    61a8:	f102 0c14 	add.w	ip, r2, #20
    61ac:	f1c2 020c 	rsb	r2, r2, #12
    61b0:	fa01 f00c 	lsl.w	r0, r1, ip
    61b4:	fa21 f102 	lsr.w	r1, r1, r2
    61b8:	e00c      	b.n	61d4 <__adddf3+0x184>
    61ba:	f102 0214 	add.w	r2, r2, #20
    61be:	bfd8      	it	le
    61c0:	f1c2 0c20 	rsble	ip, r2, #32
    61c4:	fa01 f102 	lsl.w	r1, r1, r2
    61c8:	fa20 fc0c 	lsr.w	ip, r0, ip
    61cc:	bfdc      	itt	le
    61ce:	ea41 010c 	orrle.w	r1, r1, ip
    61d2:	4090      	lslle	r0, r2
    61d4:	1ae4      	subs	r4, r4, r3
    61d6:	bfa2      	ittt	ge
    61d8:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
    61dc:	4329      	orrge	r1, r5
    61de:	bd30      	popge	{r4, r5, pc}
    61e0:	ea6f 0404 	mvn.w	r4, r4
    61e4:	3c1f      	subs	r4, #31
    61e6:	da1c      	bge.n	6222 <__adddf3+0x1d2>
    61e8:	340c      	adds	r4, #12
    61ea:	dc0e      	bgt.n	620a <__adddf3+0x1ba>
    61ec:	f104 0414 	add.w	r4, r4, #20
    61f0:	f1c4 0220 	rsb	r2, r4, #32
    61f4:	fa20 f004 	lsr.w	r0, r0, r4
    61f8:	fa01 f302 	lsl.w	r3, r1, r2
    61fc:	ea40 0003 	orr.w	r0, r0, r3
    6200:	fa21 f304 	lsr.w	r3, r1, r4
    6204:	ea45 0103 	orr.w	r1, r5, r3
    6208:	bd30      	pop	{r4, r5, pc}
    620a:	f1c4 040c 	rsb	r4, r4, #12
    620e:	f1c4 0220 	rsb	r2, r4, #32
    6212:	fa20 f002 	lsr.w	r0, r0, r2
    6216:	fa01 f304 	lsl.w	r3, r1, r4
    621a:	ea40 0003 	orr.w	r0, r0, r3
    621e:	4629      	mov	r1, r5
    6220:	bd30      	pop	{r4, r5, pc}
    6222:	fa21 f004 	lsr.w	r0, r1, r4
    6226:	4629      	mov	r1, r5
    6228:	bd30      	pop	{r4, r5, pc}
    622a:	f094 0f00 	teq	r4, #0
    622e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
    6232:	bf06      	itte	eq
    6234:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
    6238:	3401      	addeq	r4, #1
    623a:	3d01      	subne	r5, #1
    623c:	e74e      	b.n	60dc <__adddf3+0x8c>
    623e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
    6242:	bf18      	it	ne
    6244:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
    6248:	d029      	beq.n	629e <__adddf3+0x24e>
    624a:	ea94 0f05 	teq	r4, r5
    624e:	bf08      	it	eq
    6250:	ea90 0f02 	teqeq	r0, r2
    6254:	d005      	beq.n	6262 <__adddf3+0x212>
    6256:	ea54 0c00 	orrs.w	ip, r4, r0
    625a:	bf04      	itt	eq
    625c:	4619      	moveq	r1, r3
    625e:	4610      	moveq	r0, r2
    6260:	bd30      	pop	{r4, r5, pc}
    6262:	ea91 0f03 	teq	r1, r3
    6266:	bf1e      	ittt	ne
    6268:	2100      	movne	r1, #0
    626a:	2000      	movne	r0, #0
    626c:	bd30      	popne	{r4, r5, pc}
    626e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
    6272:	d105      	bne.n	6280 <__adddf3+0x230>
    6274:	0040      	lsls	r0, r0, #1
    6276:	4149      	adcs	r1, r1
    6278:	bf28      	it	cs
    627a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
    627e:	bd30      	pop	{r4, r5, pc}
    6280:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
    6284:	bf3c      	itt	cc
    6286:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
    628a:	bd30      	popcc	{r4, r5, pc}
    628c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
    6290:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
    6294:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
    6298:	f04f 0000 	mov.w	r0, #0
    629c:	bd30      	pop	{r4, r5, pc}
    629e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
    62a2:	bf1a      	itte	ne
    62a4:	4619      	movne	r1, r3
    62a6:	4610      	movne	r0, r2
    62a8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
    62ac:	bf1c      	itt	ne
    62ae:	460b      	movne	r3, r1
    62b0:	4602      	movne	r2, r0
    62b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
    62b6:	bf06      	itte	eq
    62b8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
    62bc:	ea91 0f03 	teqeq	r1, r3
    62c0:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
    62c4:	bd30      	pop	{r4, r5, pc}
    62c6:	bf00      	nop

000062c8 <__aeabi_ui2d>:
__floatunsidf():
    62c8:	f090 0f00 	teq	r0, #0
    62cc:	bf04      	itt	eq
    62ce:	2100      	moveq	r1, #0
    62d0:	4770      	bxeq	lr
    62d2:	b530      	push	{r4, r5, lr}
    62d4:	f44f 6480 	mov.w	r4, #1024	; 0x400
    62d8:	f104 0432 	add.w	r4, r4, #50	; 0x32
    62dc:	f04f 0500 	mov.w	r5, #0
    62e0:	f04f 0100 	mov.w	r1, #0
    62e4:	e750      	b.n	6188 <__adddf3+0x138>
    62e6:	bf00      	nop

000062e8 <__aeabi_i2d>:
__aeabi_i2d():
    62e8:	f090 0f00 	teq	r0, #0
    62ec:	bf04      	itt	eq
    62ee:	2100      	moveq	r1, #0
    62f0:	4770      	bxeq	lr
    62f2:	b530      	push	{r4, r5, lr}
    62f4:	f44f 6480 	mov.w	r4, #1024	; 0x400
    62f8:	f104 0432 	add.w	r4, r4, #50	; 0x32
    62fc:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
    6300:	bf48      	it	mi
    6302:	4240      	negmi	r0, r0
    6304:	f04f 0100 	mov.w	r1, #0
    6308:	e73e      	b.n	6188 <__adddf3+0x138>
    630a:	bf00      	nop

0000630c <__aeabi_f2d>:
__aeabi_f2d():
    630c:	0042      	lsls	r2, r0, #1
    630e:	ea4f 01e2 	mov.w	r1, r2, asr #3
    6312:	ea4f 0131 	mov.w	r1, r1, rrx
    6316:	ea4f 7002 	mov.w	r0, r2, lsl #28
    631a:	bf1f      	itttt	ne
    631c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
    6320:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
    6324:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
    6328:	4770      	bxne	lr
    632a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
    632e:	bf08      	it	eq
    6330:	4770      	bxeq	lr
    6332:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
    6336:	bf04      	itt	eq
    6338:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
    633c:	4770      	bxeq	lr
    633e:	b530      	push	{r4, r5, lr}
    6340:	f44f 7460 	mov.w	r4, #896	; 0x380
    6344:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
    6348:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
    634c:	e71c      	b.n	6188 <__adddf3+0x138>
    634e:	bf00      	nop

00006350 <__aeabi_ul2d>:
__floatundidf():
    6350:	ea50 0201 	orrs.w	r2, r0, r1
    6354:	bf08      	it	eq
    6356:	4770      	bxeq	lr
    6358:	b530      	push	{r4, r5, lr}
    635a:	f04f 0500 	mov.w	r5, #0
    635e:	e00a      	b.n	6376 <__aeabi_l2d+0x16>

00006360 <__aeabi_l2d>:
__aeabi_l2d():
    6360:	ea50 0201 	orrs.w	r2, r0, r1
    6364:	bf08      	it	eq
    6366:	4770      	bxeq	lr
    6368:	b530      	push	{r4, r5, lr}
    636a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
    636e:	d502      	bpl.n	6376 <__aeabi_l2d+0x16>
    6370:	4240      	negs	r0, r0
    6372:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    6376:	f44f 6480 	mov.w	r4, #1024	; 0x400
    637a:	f104 0432 	add.w	r4, r4, #50	; 0x32
    637e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
    6382:	f43f aed8 	beq.w	6136 <__adddf3+0xe6>
    6386:	f04f 0203 	mov.w	r2, #3
    638a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
    638e:	bf18      	it	ne
    6390:	3203      	addne	r2, #3
    6392:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
    6396:	bf18      	it	ne
    6398:	3203      	addne	r2, #3
    639a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
    639e:	f1c2 0320 	rsb	r3, r2, #32
    63a2:	fa00 fc03 	lsl.w	ip, r0, r3
    63a6:	fa20 f002 	lsr.w	r0, r0, r2
    63aa:	fa01 fe03 	lsl.w	lr, r1, r3
    63ae:	ea40 000e 	orr.w	r0, r0, lr
    63b2:	fa21 f102 	lsr.w	r1, r1, r2
    63b6:	4414      	add	r4, r2
    63b8:	e6bd      	b.n	6136 <__adddf3+0xe6>
    63ba:	bf00      	nop

000063bc <__aeabi_uldivmod>:
__aeabi_uldivmod():
    63bc:	b953      	cbnz	r3, 63d4 <__aeabi_uldivmod+0x18>
    63be:	b94a      	cbnz	r2, 63d4 <__aeabi_uldivmod+0x18>
    63c0:	2900      	cmp	r1, #0
    63c2:	bf08      	it	eq
    63c4:	2800      	cmpeq	r0, #0
    63c6:	bf1c      	itt	ne
    63c8:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
    63cc:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
    63d0:	f000 b974 	b.w	66bc <__aeabi_idiv0>
    63d4:	f1ad 0c08 	sub.w	ip, sp, #8
    63d8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
    63dc:	f000 f806 	bl	63ec <__udivmoddi4>
    63e0:	f8dd e004 	ldr.w	lr, [sp, #4]
    63e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    63e8:	b004      	add	sp, #16
    63ea:	4770      	bx	lr

000063ec <__udivmoddi4>:
__udivmoddi4():
    63ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    63f0:	9e08      	ldr	r6, [sp, #32]
    63f2:	4604      	mov	r4, r0
    63f4:	4688      	mov	r8, r1
    63f6:	2b00      	cmp	r3, #0
    63f8:	f040 8085 	bne.w	6506 <__udivmoddi4+0x11a>
    63fc:	428a      	cmp	r2, r1
    63fe:	4615      	mov	r5, r2
    6400:	d948      	bls.n	6494 <__udivmoddi4+0xa8>
    6402:	fab2 f282 	clz	r2, r2
    6406:	b14a      	cbz	r2, 641c <__udivmoddi4+0x30>
    6408:	f1c2 0720 	rsb	r7, r2, #32
    640c:	fa01 f302 	lsl.w	r3, r1, r2
    6410:	fa20 f707 	lsr.w	r7, r0, r7
    6414:	4095      	lsls	r5, r2
    6416:	ea47 0803 	orr.w	r8, r7, r3
    641a:	4094      	lsls	r4, r2
    641c:	ea4f 4e15 	mov.w	lr, r5, lsr #16
    6420:	0c23      	lsrs	r3, r4, #16
    6422:	fbb8 f7fe 	udiv	r7, r8, lr
    6426:	fa1f fc85 	uxth.w	ip, r5
    642a:	fb0e 8817 	mls	r8, lr, r7, r8
    642e:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
    6432:	fb07 f10c 	mul.w	r1, r7, ip
    6436:	4299      	cmp	r1, r3
    6438:	d909      	bls.n	644e <__udivmoddi4+0x62>
    643a:	18eb      	adds	r3, r5, r3
    643c:	f107 30ff 	add.w	r0, r7, #4294967295	; 0xffffffff
    6440:	f080 80e3 	bcs.w	660a <__udivmoddi4+0x21e>
    6444:	4299      	cmp	r1, r3
    6446:	f240 80e0 	bls.w	660a <__udivmoddi4+0x21e>
    644a:	3f02      	subs	r7, #2
    644c:	442b      	add	r3, r5
    644e:	1a5b      	subs	r3, r3, r1
    6450:	b2a4      	uxth	r4, r4
    6452:	fbb3 f0fe 	udiv	r0, r3, lr
    6456:	fb0e 3310 	mls	r3, lr, r0, r3
    645a:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
    645e:	fb00 fc0c 	mul.w	ip, r0, ip
    6462:	45a4      	cmp	ip, r4
    6464:	d909      	bls.n	647a <__udivmoddi4+0x8e>
    6466:	192c      	adds	r4, r5, r4
    6468:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
    646c:	f080 80cb 	bcs.w	6606 <__udivmoddi4+0x21a>
    6470:	45a4      	cmp	ip, r4
    6472:	f240 80c8 	bls.w	6606 <__udivmoddi4+0x21a>
    6476:	3802      	subs	r0, #2
    6478:	442c      	add	r4, r5
    647a:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
    647e:	eba4 040c 	sub.w	r4, r4, ip
    6482:	2700      	movs	r7, #0
    6484:	b11e      	cbz	r6, 648e <__udivmoddi4+0xa2>
    6486:	40d4      	lsrs	r4, r2
    6488:	2300      	movs	r3, #0
    648a:	e9c6 4300 	strd	r4, r3, [r6]
    648e:	4639      	mov	r1, r7
    6490:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    6494:	2a00      	cmp	r2, #0
    6496:	d053      	beq.n	6540 <__udivmoddi4+0x154>
    6498:	fab2 f282 	clz	r2, r2
    649c:	2a00      	cmp	r2, #0
    649e:	f040 80b6 	bne.w	660e <__udivmoddi4+0x222>
    64a2:	1b49      	subs	r1, r1, r5
    64a4:	ea4f 4e15 	mov.w	lr, r5, lsr #16
    64a8:	fa1f f885 	uxth.w	r8, r5
    64ac:	2701      	movs	r7, #1
    64ae:	fbb1 fcfe 	udiv	ip, r1, lr
    64b2:	0c23      	lsrs	r3, r4, #16
    64b4:	fb0e 111c 	mls	r1, lr, ip, r1
    64b8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
    64bc:	fb08 f10c 	mul.w	r1, r8, ip
    64c0:	4299      	cmp	r1, r3
    64c2:	d907      	bls.n	64d4 <__udivmoddi4+0xe8>
    64c4:	18eb      	adds	r3, r5, r3
    64c6:	f10c 30ff 	add.w	r0, ip, #4294967295	; 0xffffffff
    64ca:	d202      	bcs.n	64d2 <__udivmoddi4+0xe6>
    64cc:	4299      	cmp	r1, r3
    64ce:	f200 80ec 	bhi.w	66aa <__udivmoddi4+0x2be>
    64d2:	4684      	mov	ip, r0
    64d4:	1a59      	subs	r1, r3, r1
    64d6:	b2a3      	uxth	r3, r4
    64d8:	fbb1 f0fe 	udiv	r0, r1, lr
    64dc:	fb0e 1410 	mls	r4, lr, r0, r1
    64e0:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
    64e4:	fb08 f800 	mul.w	r8, r8, r0
    64e8:	45a0      	cmp	r8, r4
    64ea:	d907      	bls.n	64fc <__udivmoddi4+0x110>
    64ec:	192c      	adds	r4, r5, r4
    64ee:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
    64f2:	d202      	bcs.n	64fa <__udivmoddi4+0x10e>
    64f4:	45a0      	cmp	r8, r4
    64f6:	f200 80dc 	bhi.w	66b2 <__udivmoddi4+0x2c6>
    64fa:	4618      	mov	r0, r3
    64fc:	eba4 0408 	sub.w	r4, r4, r8
    6500:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    6504:	e7be      	b.n	6484 <__udivmoddi4+0x98>
    6506:	428b      	cmp	r3, r1
    6508:	d908      	bls.n	651c <__udivmoddi4+0x130>
    650a:	2e00      	cmp	r6, #0
    650c:	d078      	beq.n	6600 <__udivmoddi4+0x214>
    650e:	2700      	movs	r7, #0
    6510:	e9c6 0100 	strd	r0, r1, [r6]
    6514:	4638      	mov	r0, r7
    6516:	4639      	mov	r1, r7
    6518:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    651c:	fab3 f783 	clz	r7, r3
    6520:	b97f      	cbnz	r7, 6542 <__udivmoddi4+0x156>
    6522:	428b      	cmp	r3, r1
    6524:	d302      	bcc.n	652c <__udivmoddi4+0x140>
    6526:	4282      	cmp	r2, r0
    6528:	f200 80bd 	bhi.w	66a6 <__udivmoddi4+0x2ba>
    652c:	1a84      	subs	r4, r0, r2
    652e:	eb61 0303 	sbc.w	r3, r1, r3
    6532:	2001      	movs	r0, #1
    6534:	4698      	mov	r8, r3
    6536:	2e00      	cmp	r6, #0
    6538:	d0a9      	beq.n	648e <__udivmoddi4+0xa2>
    653a:	e9c6 4800 	strd	r4, r8, [r6]
    653e:	e7a6      	b.n	648e <__udivmoddi4+0xa2>
    6540:	deff      	udf	#255	; 0xff
    6542:	f1c7 0520 	rsb	r5, r7, #32
    6546:	40bb      	lsls	r3, r7
    6548:	fa22 fc05 	lsr.w	ip, r2, r5
    654c:	ea4c 0c03 	orr.w	ip, ip, r3
    6550:	fa01 f407 	lsl.w	r4, r1, r7
    6554:	fa20 f805 	lsr.w	r8, r0, r5
    6558:	fa21 f305 	lsr.w	r3, r1, r5
    655c:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
    6560:	ea48 0404 	orr.w	r4, r8, r4
    6564:	fbb3 f9fe 	udiv	r9, r3, lr
    6568:	0c21      	lsrs	r1, r4, #16
    656a:	fb0e 3319 	mls	r3, lr, r9, r3
    656e:	fa1f f88c 	uxth.w	r8, ip
    6572:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
    6576:	fb09 fa08 	mul.w	sl, r9, r8
    657a:	459a      	cmp	sl, r3
    657c:	fa02 f207 	lsl.w	r2, r2, r7
    6580:	fa00 f107 	lsl.w	r1, r0, r7
    6584:	d90b      	bls.n	659e <__udivmoddi4+0x1b2>
    6586:	eb1c 0303 	adds.w	r3, ip, r3
    658a:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
    658e:	f080 8088 	bcs.w	66a2 <__udivmoddi4+0x2b6>
    6592:	459a      	cmp	sl, r3
    6594:	f240 8085 	bls.w	66a2 <__udivmoddi4+0x2b6>
    6598:	f1a9 0902 	sub.w	r9, r9, #2
    659c:	4463      	add	r3, ip
    659e:	eba3 030a 	sub.w	r3, r3, sl
    65a2:	b2a4      	uxth	r4, r4
    65a4:	fbb3 f0fe 	udiv	r0, r3, lr
    65a8:	fb0e 3310 	mls	r3, lr, r0, r3
    65ac:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
    65b0:	fb00 f808 	mul.w	r8, r0, r8
    65b4:	45a0      	cmp	r8, r4
    65b6:	d908      	bls.n	65ca <__udivmoddi4+0x1de>
    65b8:	eb1c 0404 	adds.w	r4, ip, r4
    65bc:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
    65c0:	d26b      	bcs.n	669a <__udivmoddi4+0x2ae>
    65c2:	45a0      	cmp	r8, r4
    65c4:	d969      	bls.n	669a <__udivmoddi4+0x2ae>
    65c6:	3802      	subs	r0, #2
    65c8:	4464      	add	r4, ip
    65ca:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
    65ce:	eba4 0408 	sub.w	r4, r4, r8
    65d2:	fba0 8902 	umull	r8, r9, r0, r2
    65d6:	454c      	cmp	r4, r9
    65d8:	46c6      	mov	lr, r8
    65da:	464b      	mov	r3, r9
    65dc:	d354      	bcc.n	6688 <__udivmoddi4+0x29c>
    65de:	d051      	beq.n	6684 <__udivmoddi4+0x298>
    65e0:	2e00      	cmp	r6, #0
    65e2:	d069      	beq.n	66b8 <__udivmoddi4+0x2cc>
    65e4:	ebb1 020e 	subs.w	r2, r1, lr
    65e8:	eb64 0403 	sbc.w	r4, r4, r3
    65ec:	fa04 f505 	lsl.w	r5, r4, r5
    65f0:	fa22 f307 	lsr.w	r3, r2, r7
    65f4:	40fc      	lsrs	r4, r7
    65f6:	431d      	orrs	r5, r3
    65f8:	e9c6 5400 	strd	r5, r4, [r6]
    65fc:	2700      	movs	r7, #0
    65fe:	e746      	b.n	648e <__udivmoddi4+0xa2>
    6600:	4637      	mov	r7, r6
    6602:	4630      	mov	r0, r6
    6604:	e743      	b.n	648e <__udivmoddi4+0xa2>
    6606:	4618      	mov	r0, r3
    6608:	e737      	b.n	647a <__udivmoddi4+0x8e>
    660a:	4607      	mov	r7, r0
    660c:	e71f      	b.n	644e <__udivmoddi4+0x62>
    660e:	f1c2 0320 	rsb	r3, r2, #32
    6612:	fa20 f703 	lsr.w	r7, r0, r3
    6616:	4095      	lsls	r5, r2
    6618:	fa01 f002 	lsl.w	r0, r1, r2
    661c:	fa21 f303 	lsr.w	r3, r1, r3
    6620:	ea4f 4e15 	mov.w	lr, r5, lsr #16
    6624:	4338      	orrs	r0, r7
    6626:	0c01      	lsrs	r1, r0, #16
    6628:	fbb3 f7fe 	udiv	r7, r3, lr
    662c:	fa1f f885 	uxth.w	r8, r5
    6630:	fb0e 3317 	mls	r3, lr, r7, r3
    6634:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
    6638:	fb07 f308 	mul.w	r3, r7, r8
    663c:	428b      	cmp	r3, r1
    663e:	fa04 f402 	lsl.w	r4, r4, r2
    6642:	d907      	bls.n	6654 <__udivmoddi4+0x268>
    6644:	1869      	adds	r1, r5, r1
    6646:	f107 3cff 	add.w	ip, r7, #4294967295	; 0xffffffff
    664a:	d228      	bcs.n	669e <__udivmoddi4+0x2b2>
    664c:	428b      	cmp	r3, r1
    664e:	d926      	bls.n	669e <__udivmoddi4+0x2b2>
    6650:	3f02      	subs	r7, #2
    6652:	4429      	add	r1, r5
    6654:	1acb      	subs	r3, r1, r3
    6656:	b281      	uxth	r1, r0
    6658:	fbb3 f0fe 	udiv	r0, r3, lr
    665c:	fb0e 3310 	mls	r3, lr, r0, r3
    6660:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
    6664:	fb00 f308 	mul.w	r3, r0, r8
    6668:	428b      	cmp	r3, r1
    666a:	d907      	bls.n	667c <__udivmoddi4+0x290>
    666c:	1869      	adds	r1, r5, r1
    666e:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
    6672:	d210      	bcs.n	6696 <__udivmoddi4+0x2aa>
    6674:	428b      	cmp	r3, r1
    6676:	d90e      	bls.n	6696 <__udivmoddi4+0x2aa>
    6678:	3802      	subs	r0, #2
    667a:	4429      	add	r1, r5
    667c:	1ac9      	subs	r1, r1, r3
    667e:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
    6682:	e714      	b.n	64ae <__udivmoddi4+0xc2>
    6684:	4541      	cmp	r1, r8
    6686:	d2ab      	bcs.n	65e0 <__udivmoddi4+0x1f4>
    6688:	ebb8 0e02 	subs.w	lr, r8, r2
    668c:	eb69 020c 	sbc.w	r2, r9, ip
    6690:	3801      	subs	r0, #1
    6692:	4613      	mov	r3, r2
    6694:	e7a4      	b.n	65e0 <__udivmoddi4+0x1f4>
    6696:	4660      	mov	r0, ip
    6698:	e7f0      	b.n	667c <__udivmoddi4+0x290>
    669a:	4618      	mov	r0, r3
    669c:	e795      	b.n	65ca <__udivmoddi4+0x1de>
    669e:	4667      	mov	r7, ip
    66a0:	e7d8      	b.n	6654 <__udivmoddi4+0x268>
    66a2:	4681      	mov	r9, r0
    66a4:	e77b      	b.n	659e <__udivmoddi4+0x1b2>
    66a6:	4638      	mov	r0, r7
    66a8:	e745      	b.n	6536 <__udivmoddi4+0x14a>
    66aa:	f1ac 0c02 	sub.w	ip, ip, #2
    66ae:	442b      	add	r3, r5
    66b0:	e710      	b.n	64d4 <__udivmoddi4+0xe8>
    66b2:	3802      	subs	r0, #2
    66b4:	442c      	add	r4, r5
    66b6:	e721      	b.n	64fc <__udivmoddi4+0x110>
    66b8:	4637      	mov	r7, r6
    66ba:	e6e8      	b.n	648e <__udivmoddi4+0xa2>

000066bc <__aeabi_idiv0>:
__aeabi_idiv0():
    66bc:	4770      	bx	lr
    66be:	bf00      	nop

000066c0 <fiprintf>:
fiprintf():
    66c0:	b40e      	push	{r1, r2, r3}
    66c2:	b503      	push	{r0, r1, lr}
    66c4:	4601      	mov	r1, r0
    66c6:	ab03      	add	r3, sp, #12
    66c8:	4805      	ldr	r0, [pc, #20]	; (66e0 <fiprintf+0x20>)
    66ca:	f853 2b04 	ldr.w	r2, [r3], #4
    66ce:	6800      	ldr	r0, [r0, #0]
    66d0:	9301      	str	r3, [sp, #4]
    66d2:	f000 f99d 	bl	6a10 <_vfiprintf_r>
    66d6:	b002      	add	sp, #8
    66d8:	f85d eb04 	ldr.w	lr, [sp], #4
    66dc:	b003      	add	sp, #12
    66de:	4770      	bx	lr
    66e0:	100001b0 	.word	0x100001b0

000066e4 <_fputs_r>:
_fputs_r():
    66e4:	b570      	push	{r4, r5, r6, lr}
    66e6:	460e      	mov	r6, r1
    66e8:	4614      	mov	r4, r2
    66ea:	4605      	mov	r5, r0
    66ec:	b118      	cbz	r0, 66f6 <_fputs_r+0x12>
    66ee:	6983      	ldr	r3, [r0, #24]
    66f0:	b90b      	cbnz	r3, 66f6 <_fputs_r+0x12>
    66f2:	f003 fa0f 	bl	9b14 <__sinit>
    66f6:	4b2b      	ldr	r3, [pc, #172]	; (67a4 <_fputs_r+0xc0>)
    66f8:	429c      	cmp	r4, r3
    66fa:	d11e      	bne.n	673a <_fputs_r+0x56>
    66fc:	686c      	ldr	r4, [r5, #4]
    66fe:	6e63      	ldr	r3, [r4, #100]	; 0x64
    6700:	07da      	lsls	r2, r3, #31
    6702:	d405      	bmi.n	6710 <_fputs_r+0x2c>
    6704:	89a3      	ldrh	r3, [r4, #12]
    6706:	059b      	lsls	r3, r3, #22
    6708:	d402      	bmi.n	6710 <_fputs_r+0x2c>
    670a:	6da0      	ldr	r0, [r4, #88]	; 0x58
    670c:	f000 f86b 	bl	67e6 <__retarget_lock_acquire_recursive>
    6710:	89a3      	ldrh	r3, [r4, #12]
    6712:	0718      	lsls	r0, r3, #28
    6714:	d51b      	bpl.n	674e <_fputs_r+0x6a>
    6716:	6923      	ldr	r3, [r4, #16]
    6718:	b1cb      	cbz	r3, 674e <_fputs_r+0x6a>
    671a:	3e01      	subs	r6, #1
    671c:	f816 1f01 	ldrb.w	r1, [r6, #1]!
    6720:	bb39      	cbnz	r1, 6772 <_fputs_r+0x8e>
    6722:	6e65      	ldr	r5, [r4, #100]	; 0x64
    6724:	f015 0501 	ands.w	r5, r5, #1
    6728:	d139      	bne.n	679e <_fputs_r+0xba>
    672a:	89a3      	ldrh	r3, [r4, #12]
    672c:	0599      	lsls	r1, r3, #22
    672e:	d402      	bmi.n	6736 <_fputs_r+0x52>
    6730:	6da0      	ldr	r0, [r4, #88]	; 0x58
    6732:	f000 f859 	bl	67e8 <__retarget_lock_release_recursive>
    6736:	4628      	mov	r0, r5
    6738:	bd70      	pop	{r4, r5, r6, pc}
    673a:	4b1b      	ldr	r3, [pc, #108]	; (67a8 <_fputs_r+0xc4>)
    673c:	429c      	cmp	r4, r3
    673e:	d101      	bne.n	6744 <_fputs_r+0x60>
    6740:	68ac      	ldr	r4, [r5, #8]
    6742:	e7dc      	b.n	66fe <_fputs_r+0x1a>
    6744:	4b19      	ldr	r3, [pc, #100]	; (67ac <_fputs_r+0xc8>)
    6746:	429c      	cmp	r4, r3
    6748:	bf08      	it	eq
    674a:	68ec      	ldreq	r4, [r5, #12]
    674c:	e7d7      	b.n	66fe <_fputs_r+0x1a>
    674e:	4621      	mov	r1, r4
    6750:	4628      	mov	r0, r5
    6752:	f002 fa01 	bl	8b58 <__swsetup_r>
    6756:	2800      	cmp	r0, #0
    6758:	d0df      	beq.n	671a <_fputs_r+0x36>
    675a:	6e63      	ldr	r3, [r4, #100]	; 0x64
    675c:	07da      	lsls	r2, r3, #31
    675e:	d405      	bmi.n	676c <_fputs_r+0x88>
    6760:	89a3      	ldrh	r3, [r4, #12]
    6762:	059b      	lsls	r3, r3, #22
    6764:	d402      	bmi.n	676c <_fputs_r+0x88>
    6766:	6da0      	ldr	r0, [r4, #88]	; 0x58
    6768:	f000 f83e 	bl	67e8 <__retarget_lock_release_recursive>
    676c:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
    6770:	e7e1      	b.n	6736 <_fputs_r+0x52>
    6772:	68a3      	ldr	r3, [r4, #8]
    6774:	3b01      	subs	r3, #1
    6776:	2b00      	cmp	r3, #0
    6778:	60a3      	str	r3, [r4, #8]
    677a:	da04      	bge.n	6786 <_fputs_r+0xa2>
    677c:	69a2      	ldr	r2, [r4, #24]
    677e:	4293      	cmp	r3, r2
    6780:	db06      	blt.n	6790 <_fputs_r+0xac>
    6782:	290a      	cmp	r1, #10
    6784:	d004      	beq.n	6790 <_fputs_r+0xac>
    6786:	6823      	ldr	r3, [r4, #0]
    6788:	1c5a      	adds	r2, r3, #1
    678a:	6022      	str	r2, [r4, #0]
    678c:	7019      	strb	r1, [r3, #0]
    678e:	e7c5      	b.n	671c <_fputs_r+0x38>
    6790:	4622      	mov	r2, r4
    6792:	4628      	mov	r0, r5
    6794:	f002 f98e 	bl	8ab4 <__swbuf_r>
    6798:	3001      	adds	r0, #1
    679a:	d1bf      	bne.n	671c <_fputs_r+0x38>
    679c:	e7dd      	b.n	675a <_fputs_r+0x76>
    679e:	460d      	mov	r5, r1
    67a0:	e7c9      	b.n	6736 <_fputs_r+0x52>
    67a2:	bf00      	nop
    67a4:	0000dc80 	.word	0x0000dc80
    67a8:	0000dca0 	.word	0x0000dca0
    67ac:	0000dc60 	.word	0x0000dc60

000067b0 <fputs>:
fputs():
    67b0:	4b02      	ldr	r3, [pc, #8]	; (67bc <fputs+0xc>)
    67b2:	460a      	mov	r2, r1
    67b4:	4601      	mov	r1, r0
    67b6:	6818      	ldr	r0, [r3, #0]
    67b8:	f7ff bf94 	b.w	66e4 <_fputs_r>
    67bc:	100001b0 	.word	0x100001b0

000067c0 <getchar>:
getchar():
    67c0:	4b07      	ldr	r3, [pc, #28]	; (67e0 <getchar+0x20>)
    67c2:	b510      	push	{r4, lr}
    67c4:	681c      	ldr	r4, [r3, #0]
    67c6:	b124      	cbz	r4, 67d2 <getchar+0x12>
    67c8:	69a3      	ldr	r3, [r4, #24]
    67ca:	b913      	cbnz	r3, 67d2 <getchar+0x12>
    67cc:	4620      	mov	r0, r4
    67ce:	f003 f9a1 	bl	9b14 <__sinit>
    67d2:	6861      	ldr	r1, [r4, #4]
    67d4:	4620      	mov	r0, r4
    67d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    67da:	f003 bd7d 	b.w	a2d8 <_getc_r>
    67de:	bf00      	nop
    67e0:	100001b0 	.word	0x100001b0

000067e4 <__retarget_lock_init_recursive>:
__retarget_lock_init_recursive():
    67e4:	4770      	bx	lr

000067e6 <__retarget_lock_acquire_recursive>:
__retarget_lock_acquire_recursive():
    67e6:	4770      	bx	lr

000067e8 <__retarget_lock_release_recursive>:
__retarget_lock_release_recursive():
    67e8:	4770      	bx	lr
    67ea:	Address 0x00000000000067ea is out of bounds.


000067ec <malloc>:
malloc():
    67ec:	4b02      	ldr	r3, [pc, #8]	; (67f8 <malloc+0xc>)
    67ee:	4601      	mov	r1, r0
    67f0:	6818      	ldr	r0, [r3, #0]
    67f2:	f000 b889 	b.w	6908 <_malloc_r>
    67f6:	bf00      	nop
    67f8:	100001b0 	.word	0x100001b0

000067fc <free>:
free():
    67fc:	4b02      	ldr	r3, [pc, #8]	; (6808 <free+0xc>)
    67fe:	4601      	mov	r1, r0
    6800:	6818      	ldr	r0, [r3, #0]
    6802:	f000 b833 	b.w	686c <_free_r>
    6806:	bf00      	nop
    6808:	100001b0 	.word	0x100001b0

0000680c <memcpy>:
memcpy():
    680c:	440a      	add	r2, r1
    680e:	4291      	cmp	r1, r2
    6810:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
    6814:	d100      	bne.n	6818 <memcpy+0xc>
    6816:	4770      	bx	lr
    6818:	b510      	push	{r4, lr}
    681a:	f811 4b01 	ldrb.w	r4, [r1], #1
    681e:	f803 4f01 	strb.w	r4, [r3, #1]!
    6822:	4291      	cmp	r1, r2
    6824:	d1f9      	bne.n	681a <memcpy+0xe>
    6826:	bd10      	pop	{r4, pc}

00006828 <memmove>:
memmove():
    6828:	4288      	cmp	r0, r1
    682a:	b510      	push	{r4, lr}
    682c:	eb01 0302 	add.w	r3, r1, r2
    6830:	d902      	bls.n	6838 <memmove+0x10>
    6832:	4283      	cmp	r3, r0
    6834:	461c      	mov	r4, r3
    6836:	d807      	bhi.n	6848 <memmove+0x20>
    6838:	1e42      	subs	r2, r0, #1
    683a:	4299      	cmp	r1, r3
    683c:	d008      	beq.n	6850 <memmove+0x28>
    683e:	f811 4b01 	ldrb.w	r4, [r1], #1
    6842:	f802 4f01 	strb.w	r4, [r2, #1]!
    6846:	e7f8      	b.n	683a <memmove+0x12>
    6848:	1883      	adds	r3, r0, r2
    684a:	1a9a      	subs	r2, r3, r2
    684c:	429a      	cmp	r2, r3
    684e:	d100      	bne.n	6852 <memmove+0x2a>
    6850:	bd10      	pop	{r4, pc}
    6852:	f814 1d01 	ldrb.w	r1, [r4, #-1]!
    6856:	f803 1d01 	strb.w	r1, [r3, #-1]!
    685a:	e7f7      	b.n	684c <memmove+0x24>

0000685c <memset>:
memset():
    685c:	4402      	add	r2, r0
    685e:	4603      	mov	r3, r0
    6860:	4293      	cmp	r3, r2
    6862:	d100      	bne.n	6866 <memset+0xa>
    6864:	4770      	bx	lr
    6866:	f803 1b01 	strb.w	r1, [r3], #1
    686a:	e7f9      	b.n	6860 <memset+0x4>

0000686c <_free_r>:
_free_r():
    686c:	b538      	push	{r3, r4, r5, lr}
    686e:	4605      	mov	r5, r0
    6870:	2900      	cmp	r1, #0
    6872:	d045      	beq.n	6900 <_free_r+0x94>
    6874:	f851 3c04 	ldr.w	r3, [r1, #-4]
    6878:	1f0c      	subs	r4, r1, #4
    687a:	2b00      	cmp	r3, #0
    687c:	bfb8      	it	lt
    687e:	18e4      	addlt	r4, r4, r3
    6880:	f003 fe36 	bl	a4f0 <__malloc_lock>
    6884:	4a1f      	ldr	r2, [pc, #124]	; (6904 <_free_r+0x98>)
    6886:	6813      	ldr	r3, [r2, #0]
    6888:	4610      	mov	r0, r2
    688a:	b933      	cbnz	r3, 689a <_free_r+0x2e>
    688c:	6063      	str	r3, [r4, #4]
    688e:	6014      	str	r4, [r2, #0]
    6890:	4628      	mov	r0, r5
    6892:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    6896:	f003 be31 	b.w	a4fc <__malloc_unlock>
    689a:	42a3      	cmp	r3, r4
    689c:	d90c      	bls.n	68b8 <_free_r+0x4c>
    689e:	6821      	ldr	r1, [r4, #0]
    68a0:	1862      	adds	r2, r4, r1
    68a2:	4293      	cmp	r3, r2
    68a4:	bf04      	itt	eq
    68a6:	681a      	ldreq	r2, [r3, #0]
    68a8:	685b      	ldreq	r3, [r3, #4]
    68aa:	6063      	str	r3, [r4, #4]
    68ac:	bf04      	itt	eq
    68ae:	1852      	addeq	r2, r2, r1
    68b0:	6022      	streq	r2, [r4, #0]
    68b2:	6004      	str	r4, [r0, #0]
    68b4:	e7ec      	b.n	6890 <_free_r+0x24>
    68b6:	4613      	mov	r3, r2
    68b8:	685a      	ldr	r2, [r3, #4]
    68ba:	b10a      	cbz	r2, 68c0 <_free_r+0x54>
    68bc:	42a2      	cmp	r2, r4
    68be:	d9fa      	bls.n	68b6 <_free_r+0x4a>
    68c0:	6819      	ldr	r1, [r3, #0]
    68c2:	1858      	adds	r0, r3, r1
    68c4:	42a0      	cmp	r0, r4
    68c6:	d10b      	bne.n	68e0 <_free_r+0x74>
    68c8:	6820      	ldr	r0, [r4, #0]
    68ca:	4401      	add	r1, r0
    68cc:	1858      	adds	r0, r3, r1
    68ce:	4282      	cmp	r2, r0
    68d0:	6019      	str	r1, [r3, #0]
    68d2:	d1dd      	bne.n	6890 <_free_r+0x24>
    68d4:	6810      	ldr	r0, [r2, #0]
    68d6:	6852      	ldr	r2, [r2, #4]
    68d8:	605a      	str	r2, [r3, #4]
    68da:	4401      	add	r1, r0
    68dc:	6019      	str	r1, [r3, #0]
    68de:	e7d7      	b.n	6890 <_free_r+0x24>
    68e0:	d902      	bls.n	68e8 <_free_r+0x7c>
    68e2:	230c      	movs	r3, #12
    68e4:	602b      	str	r3, [r5, #0]
    68e6:	e7d3      	b.n	6890 <_free_r+0x24>
    68e8:	6820      	ldr	r0, [r4, #0]
    68ea:	1821      	adds	r1, r4, r0
    68ec:	428a      	cmp	r2, r1
    68ee:	bf04      	itt	eq
    68f0:	6811      	ldreq	r1, [r2, #0]
    68f2:	6852      	ldreq	r2, [r2, #4]
    68f4:	6062      	str	r2, [r4, #4]
    68f6:	bf04      	itt	eq
    68f8:	1809      	addeq	r1, r1, r0
    68fa:	6021      	streq	r1, [r4, #0]
    68fc:	605c      	str	r4, [r3, #4]
    68fe:	e7c7      	b.n	6890 <_free_r+0x24>
    6900:	bd38      	pop	{r3, r4, r5, pc}
    6902:	bf00      	nop
    6904:	10001420 	.word	0x10001420

00006908 <_malloc_r>:
_malloc_r():
    6908:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    690a:	1ccd      	adds	r5, r1, #3
    690c:	f025 0503 	bic.w	r5, r5, #3
    6910:	3508      	adds	r5, #8
    6912:	2d0c      	cmp	r5, #12
    6914:	bf38      	it	cc
    6916:	250c      	movcc	r5, #12
    6918:	2d00      	cmp	r5, #0
    691a:	4606      	mov	r6, r0
    691c:	db01      	blt.n	6922 <_malloc_r+0x1a>
    691e:	42a9      	cmp	r1, r5
    6920:	d903      	bls.n	692a <_malloc_r+0x22>
    6922:	230c      	movs	r3, #12
    6924:	6033      	str	r3, [r6, #0]
    6926:	2000      	movs	r0, #0
    6928:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    692a:	f003 fde1 	bl	a4f0 <__malloc_lock>
    692e:	4921      	ldr	r1, [pc, #132]	; (69b4 <_malloc_r+0xac>)
    6930:	680a      	ldr	r2, [r1, #0]
    6932:	4614      	mov	r4, r2
    6934:	b99c      	cbnz	r4, 695e <_malloc_r+0x56>
    6936:	4f20      	ldr	r7, [pc, #128]	; (69b8 <_malloc_r+0xb0>)
    6938:	683b      	ldr	r3, [r7, #0]
    693a:	b923      	cbnz	r3, 6946 <_malloc_r+0x3e>
    693c:	4621      	mov	r1, r4
    693e:	4630      	mov	r0, r6
    6940:	f001 f854 	bl	79ec <_sbrk_r>
    6944:	6038      	str	r0, [r7, #0]
    6946:	4629      	mov	r1, r5
    6948:	4630      	mov	r0, r6
    694a:	f001 f84f 	bl	79ec <_sbrk_r>
    694e:	1c43      	adds	r3, r0, #1
    6950:	d123      	bne.n	699a <_malloc_r+0x92>
    6952:	230c      	movs	r3, #12
    6954:	6033      	str	r3, [r6, #0]
    6956:	4630      	mov	r0, r6
    6958:	f003 fdd0 	bl	a4fc <__malloc_unlock>
    695c:	e7e3      	b.n	6926 <_malloc_r+0x1e>
    695e:	6823      	ldr	r3, [r4, #0]
    6960:	1b5b      	subs	r3, r3, r5
    6962:	d417      	bmi.n	6994 <_malloc_r+0x8c>
    6964:	2b0b      	cmp	r3, #11
    6966:	d903      	bls.n	6970 <_malloc_r+0x68>
    6968:	6023      	str	r3, [r4, #0]
    696a:	441c      	add	r4, r3
    696c:	6025      	str	r5, [r4, #0]
    696e:	e004      	b.n	697a <_malloc_r+0x72>
    6970:	6863      	ldr	r3, [r4, #4]
    6972:	42a2      	cmp	r2, r4
    6974:	bf0c      	ite	eq
    6976:	600b      	streq	r3, [r1, #0]
    6978:	6053      	strne	r3, [r2, #4]
    697a:	4630      	mov	r0, r6
    697c:	f003 fdbe 	bl	a4fc <__malloc_unlock>
    6980:	f104 000b 	add.w	r0, r4, #11
    6984:	1d23      	adds	r3, r4, #4
    6986:	f020 0007 	bic.w	r0, r0, #7
    698a:	1ac2      	subs	r2, r0, r3
    698c:	d0cc      	beq.n	6928 <_malloc_r+0x20>
    698e:	1a1b      	subs	r3, r3, r0
    6990:	50a3      	str	r3, [r4, r2]
    6992:	e7c9      	b.n	6928 <_malloc_r+0x20>
    6994:	4622      	mov	r2, r4
    6996:	6864      	ldr	r4, [r4, #4]
    6998:	e7cc      	b.n	6934 <_malloc_r+0x2c>
    699a:	1cc4      	adds	r4, r0, #3
    699c:	f024 0403 	bic.w	r4, r4, #3
    69a0:	42a0      	cmp	r0, r4
    69a2:	d0e3      	beq.n	696c <_malloc_r+0x64>
    69a4:	1a21      	subs	r1, r4, r0
    69a6:	4630      	mov	r0, r6
    69a8:	f001 f820 	bl	79ec <_sbrk_r>
    69ac:	3001      	adds	r0, #1
    69ae:	d1dd      	bne.n	696c <_malloc_r+0x64>
    69b0:	e7cf      	b.n	6952 <_malloc_r+0x4a>
    69b2:	bf00      	nop
    69b4:	10001420 	.word	0x10001420
    69b8:	10001424 	.word	0x10001424

000069bc <__sfputc_r>:
__sfputc_r():
    69bc:	6893      	ldr	r3, [r2, #8]
    69be:	3b01      	subs	r3, #1
    69c0:	2b00      	cmp	r3, #0
    69c2:	b410      	push	{r4}
    69c4:	6093      	str	r3, [r2, #8]
    69c6:	da08      	bge.n	69da <__sfputc_r+0x1e>
    69c8:	6994      	ldr	r4, [r2, #24]
    69ca:	42a3      	cmp	r3, r4
    69cc:	db01      	blt.n	69d2 <__sfputc_r+0x16>
    69ce:	290a      	cmp	r1, #10
    69d0:	d103      	bne.n	69da <__sfputc_r+0x1e>
    69d2:	f85d 4b04 	ldr.w	r4, [sp], #4
    69d6:	f002 b86d 	b.w	8ab4 <__swbuf_r>
    69da:	6813      	ldr	r3, [r2, #0]
    69dc:	1c58      	adds	r0, r3, #1
    69de:	6010      	str	r0, [r2, #0]
    69e0:	7019      	strb	r1, [r3, #0]
    69e2:	4608      	mov	r0, r1
    69e4:	f85d 4b04 	ldr.w	r4, [sp], #4
    69e8:	4770      	bx	lr

000069ea <__sfputs_r>:
__sfputs_r():
    69ea:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    69ec:	4606      	mov	r6, r0
    69ee:	460f      	mov	r7, r1
    69f0:	4614      	mov	r4, r2
    69f2:	18d5      	adds	r5, r2, r3
    69f4:	42ac      	cmp	r4, r5
    69f6:	d101      	bne.n	69fc <__sfputs_r+0x12>
    69f8:	2000      	movs	r0, #0
    69fa:	e007      	b.n	6a0c <__sfputs_r+0x22>
    69fc:	463a      	mov	r2, r7
    69fe:	f814 1b01 	ldrb.w	r1, [r4], #1
    6a02:	4630      	mov	r0, r6
    6a04:	f7ff ffda 	bl	69bc <__sfputc_r>
    6a08:	1c43      	adds	r3, r0, #1
    6a0a:	d1f3      	bne.n	69f4 <__sfputs_r+0xa>
    6a0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    6a0e:	Address 0x0000000000006a0e is out of bounds.


00006a10 <_vfiprintf_r>:
_vfprintf_r():
    6a10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6a14:	460d      	mov	r5, r1
    6a16:	b09d      	sub	sp, #116	; 0x74
    6a18:	4614      	mov	r4, r2
    6a1a:	461e      	mov	r6, r3
    6a1c:	4607      	mov	r7, r0
    6a1e:	b118      	cbz	r0, 6a28 <_vfiprintf_r+0x18>
    6a20:	6983      	ldr	r3, [r0, #24]
    6a22:	b90b      	cbnz	r3, 6a28 <_vfiprintf_r+0x18>
    6a24:	f003 f876 	bl	9b14 <__sinit>
    6a28:	4b85      	ldr	r3, [pc, #532]	; (6c40 <_vfiprintf_r+0x230>)
    6a2a:	429d      	cmp	r5, r3
    6a2c:	d11b      	bne.n	6a66 <_vfiprintf_r+0x56>
    6a2e:	687d      	ldr	r5, [r7, #4]
    6a30:	6e6b      	ldr	r3, [r5, #100]	; 0x64
    6a32:	07d9      	lsls	r1, r3, #31
    6a34:	d405      	bmi.n	6a42 <_vfiprintf_r+0x32>
    6a36:	89ab      	ldrh	r3, [r5, #12]
    6a38:	059a      	lsls	r2, r3, #22
    6a3a:	d402      	bmi.n	6a42 <_vfiprintf_r+0x32>
    6a3c:	6da8      	ldr	r0, [r5, #88]	; 0x58
    6a3e:	f7ff fed2 	bl	67e6 <__retarget_lock_acquire_recursive>
    6a42:	89ab      	ldrh	r3, [r5, #12]
    6a44:	071b      	lsls	r3, r3, #28
    6a46:	d501      	bpl.n	6a4c <_vfiprintf_r+0x3c>
    6a48:	692b      	ldr	r3, [r5, #16]
    6a4a:	b9eb      	cbnz	r3, 6a88 <_vfiprintf_r+0x78>
    6a4c:	4629      	mov	r1, r5
    6a4e:	4638      	mov	r0, r7
    6a50:	f002 f882 	bl	8b58 <__swsetup_r>
    6a54:	b1c0      	cbz	r0, 6a88 <_vfiprintf_r+0x78>
    6a56:	6e6b      	ldr	r3, [r5, #100]	; 0x64
    6a58:	07d8      	lsls	r0, r3, #31
    6a5a:	d50e      	bpl.n	6a7a <_vfiprintf_r+0x6a>
    6a5c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    6a60:	b01d      	add	sp, #116	; 0x74
    6a62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6a66:	4b77      	ldr	r3, [pc, #476]	; (6c44 <_vfiprintf_r+0x234>)
    6a68:	429d      	cmp	r5, r3
    6a6a:	d101      	bne.n	6a70 <_vfiprintf_r+0x60>
    6a6c:	68bd      	ldr	r5, [r7, #8]
    6a6e:	e7df      	b.n	6a30 <_vfiprintf_r+0x20>
    6a70:	4b75      	ldr	r3, [pc, #468]	; (6c48 <_vfiprintf_r+0x238>)
    6a72:	429d      	cmp	r5, r3
    6a74:	bf08      	it	eq
    6a76:	68fd      	ldreq	r5, [r7, #12]
    6a78:	e7da      	b.n	6a30 <_vfiprintf_r+0x20>
    6a7a:	89ab      	ldrh	r3, [r5, #12]
    6a7c:	0599      	lsls	r1, r3, #22
    6a7e:	d4ed      	bmi.n	6a5c <_vfiprintf_r+0x4c>
    6a80:	6da8      	ldr	r0, [r5, #88]	; 0x58
    6a82:	f7ff feb1 	bl	67e8 <__retarget_lock_release_recursive>
    6a86:	e7e9      	b.n	6a5c <_vfiprintf_r+0x4c>
    6a88:	2300      	movs	r3, #0
    6a8a:	9309      	str	r3, [sp, #36]	; 0x24
    6a8c:	2320      	movs	r3, #32
    6a8e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
    6a92:	f8df 91b8 	ldr.w	r9, [pc, #440]	; 6c4c <_vfiprintf_r+0x23c>
    6a96:	9603      	str	r6, [sp, #12]
    6a98:	2330      	movs	r3, #48	; 0x30
    6a9a:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
    6a9e:	f04f 0a01 	mov.w	sl, #1
    6aa2:	4623      	mov	r3, r4
    6aa4:	461e      	mov	r6, r3
    6aa6:	f813 2b01 	ldrb.w	r2, [r3], #1
    6aaa:	b10a      	cbz	r2, 6ab0 <_vfiprintf_r+0xa0>
    6aac:	2a25      	cmp	r2, #37	; 0x25
    6aae:	d1f9      	bne.n	6aa4 <_vfiprintf_r+0x94>
    6ab0:	ebb6 0b04 	subs.w	fp, r6, r4
    6ab4:	d00b      	beq.n	6ace <_vfiprintf_r+0xbe>
    6ab6:	465b      	mov	r3, fp
    6ab8:	4622      	mov	r2, r4
    6aba:	4629      	mov	r1, r5
    6abc:	4638      	mov	r0, r7
    6abe:	f7ff ff94 	bl	69ea <__sfputs_r>
    6ac2:	3001      	adds	r0, #1
    6ac4:	f000 80a3 	beq.w	6c0e <_vfiprintf_r+0x1fe>
    6ac8:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6aca:	445b      	add	r3, fp
    6acc:	9309      	str	r3, [sp, #36]	; 0x24
    6ace:	7833      	ldrb	r3, [r6, #0]
    6ad0:	2b00      	cmp	r3, #0
    6ad2:	f000 809c 	beq.w	6c0e <_vfiprintf_r+0x1fe>
    6ad6:	2300      	movs	r3, #0
    6ad8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    6adc:	e9cd 2305 	strd	r2, r3, [sp, #20]
    6ae0:	3601      	adds	r6, #1
    6ae2:	9304      	str	r3, [sp, #16]
    6ae4:	9307      	str	r3, [sp, #28]
    6ae6:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
    6aea:	931a      	str	r3, [sp, #104]	; 0x68
    6aec:	4634      	mov	r4, r6
    6aee:	2205      	movs	r2, #5
    6af0:	f814 1b01 	ldrb.w	r1, [r4], #1
    6af4:	4855      	ldr	r0, [pc, #340]	; (6c4c <_vfiprintf_r+0x23c>)
    6af6:	f003 fcab 	bl	a450 <memchr>
    6afa:	9b04      	ldr	r3, [sp, #16]
    6afc:	b9c0      	cbnz	r0, 6b30 <_vfiprintf_r+0x120>
    6afe:	06da      	lsls	r2, r3, #27
    6b00:	bf44      	itt	mi
    6b02:	2220      	movmi	r2, #32
    6b04:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    6b08:	0718      	lsls	r0, r3, #28
    6b0a:	bf44      	itt	mi
    6b0c:	222b      	movmi	r2, #43	; 0x2b
    6b0e:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    6b12:	7832      	ldrb	r2, [r6, #0]
    6b14:	2a2a      	cmp	r2, #42	; 0x2a
    6b16:	d013      	beq.n	6b40 <_vfiprintf_r+0x130>
    6b18:	9a07      	ldr	r2, [sp, #28]
    6b1a:	4634      	mov	r4, r6
    6b1c:	2000      	movs	r0, #0
    6b1e:	260a      	movs	r6, #10
    6b20:	4621      	mov	r1, r4
    6b22:	f811 3b01 	ldrb.w	r3, [r1], #1
    6b26:	3b30      	subs	r3, #48	; 0x30
    6b28:	2b09      	cmp	r3, #9
    6b2a:	d94b      	bls.n	6bc4 <_vfiprintf_r+0x1b4>
    6b2c:	b970      	cbnz	r0, 6b4c <_vfiprintf_r+0x13c>
    6b2e:	e014      	b.n	6b5a <_vfiprintf_r+0x14a>
    6b30:	eba0 0009 	sub.w	r0, r0, r9
    6b34:	fa0a f000 	lsl.w	r0, sl, r0
    6b38:	4318      	orrs	r0, r3
    6b3a:	9004      	str	r0, [sp, #16]
    6b3c:	4626      	mov	r6, r4
    6b3e:	e7d5      	b.n	6aec <_vfiprintf_r+0xdc>
    6b40:	9a03      	ldr	r2, [sp, #12]
    6b42:	1d11      	adds	r1, r2, #4
    6b44:	6812      	ldr	r2, [r2, #0]
    6b46:	9103      	str	r1, [sp, #12]
    6b48:	2a00      	cmp	r2, #0
    6b4a:	db01      	blt.n	6b50 <_vfiprintf_r+0x140>
    6b4c:	9207      	str	r2, [sp, #28]
    6b4e:	e004      	b.n	6b5a <_vfiprintf_r+0x14a>
    6b50:	4252      	negs	r2, r2
    6b52:	f043 0302 	orr.w	r3, r3, #2
    6b56:	9207      	str	r2, [sp, #28]
    6b58:	9304      	str	r3, [sp, #16]
    6b5a:	7823      	ldrb	r3, [r4, #0]
    6b5c:	2b2e      	cmp	r3, #46	; 0x2e
    6b5e:	d10c      	bne.n	6b7a <_vfiprintf_r+0x16a>
    6b60:	7863      	ldrb	r3, [r4, #1]
    6b62:	2b2a      	cmp	r3, #42	; 0x2a
    6b64:	d133      	bne.n	6bce <_vfiprintf_r+0x1be>
    6b66:	9b03      	ldr	r3, [sp, #12]
    6b68:	1d1a      	adds	r2, r3, #4
    6b6a:	681b      	ldr	r3, [r3, #0]
    6b6c:	9203      	str	r2, [sp, #12]
    6b6e:	2b00      	cmp	r3, #0
    6b70:	bfb8      	it	lt
    6b72:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
    6b76:	3402      	adds	r4, #2
    6b78:	9305      	str	r3, [sp, #20]
    6b7a:	4e35      	ldr	r6, [pc, #212]	; (6c50 <_vfiprintf_r+0x240>)
    6b7c:	7821      	ldrb	r1, [r4, #0]
    6b7e:	2203      	movs	r2, #3
    6b80:	4630      	mov	r0, r6
    6b82:	f003 fc65 	bl	a450 <memchr>
    6b86:	b138      	cbz	r0, 6b98 <_vfiprintf_r+0x188>
    6b88:	2340      	movs	r3, #64	; 0x40
    6b8a:	1b80      	subs	r0, r0, r6
    6b8c:	fa03 f000 	lsl.w	r0, r3, r0
    6b90:	9b04      	ldr	r3, [sp, #16]
    6b92:	4303      	orrs	r3, r0
    6b94:	3401      	adds	r4, #1
    6b96:	9304      	str	r3, [sp, #16]
    6b98:	f814 1b01 	ldrb.w	r1, [r4], #1
    6b9c:	482d      	ldr	r0, [pc, #180]	; (6c54 <_vfiprintf_r+0x244>)
    6b9e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
    6ba2:	2206      	movs	r2, #6
    6ba4:	f003 fc54 	bl	a450 <memchr>
    6ba8:	2800      	cmp	r0, #0
    6baa:	d03f      	beq.n	6c2c <_vfiprintf_r+0x21c>
    6bac:	4b2a      	ldr	r3, [pc, #168]	; (6c58 <_vfiprintf_r+0x248>)
    6bae:	bb13      	cbnz	r3, 6bf6 <_vfiprintf_r+0x1e6>
    6bb0:	9b03      	ldr	r3, [sp, #12]
    6bb2:	3307      	adds	r3, #7
    6bb4:	f023 0307 	bic.w	r3, r3, #7
    6bb8:	3308      	adds	r3, #8
    6bba:	9303      	str	r3, [sp, #12]
    6bbc:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6bbe:	4443      	add	r3, r8
    6bc0:	9309      	str	r3, [sp, #36]	; 0x24
    6bc2:	e76e      	b.n	6aa2 <_vfiprintf_r+0x92>
    6bc4:	fb06 3202 	mla	r2, r6, r2, r3
    6bc8:	2001      	movs	r0, #1
    6bca:	460c      	mov	r4, r1
    6bcc:	e7a8      	b.n	6b20 <_vfiprintf_r+0x110>
    6bce:	2300      	movs	r3, #0
    6bd0:	3401      	adds	r4, #1
    6bd2:	9305      	str	r3, [sp, #20]
    6bd4:	4619      	mov	r1, r3
    6bd6:	260a      	movs	r6, #10
    6bd8:	4620      	mov	r0, r4
    6bda:	f810 2b01 	ldrb.w	r2, [r0], #1
    6bde:	3a30      	subs	r2, #48	; 0x30
    6be0:	2a09      	cmp	r2, #9
    6be2:	d903      	bls.n	6bec <_vfiprintf_r+0x1dc>
    6be4:	2b00      	cmp	r3, #0
    6be6:	d0c8      	beq.n	6b7a <_vfiprintf_r+0x16a>
    6be8:	9105      	str	r1, [sp, #20]
    6bea:	e7c6      	b.n	6b7a <_vfiprintf_r+0x16a>
    6bec:	fb06 2101 	mla	r1, r6, r1, r2
    6bf0:	2301      	movs	r3, #1
    6bf2:	4604      	mov	r4, r0
    6bf4:	e7f0      	b.n	6bd8 <_vfiprintf_r+0x1c8>
    6bf6:	ab03      	add	r3, sp, #12
    6bf8:	9300      	str	r3, [sp, #0]
    6bfa:	462a      	mov	r2, r5
    6bfc:	4b17      	ldr	r3, [pc, #92]	; (6c5c <_vfiprintf_r+0x24c>)
    6bfe:	a904      	add	r1, sp, #16
    6c00:	4638      	mov	r0, r7
    6c02:	f000 f8bd 	bl	6d80 <_printf_float>
    6c06:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
    6c0a:	4680      	mov	r8, r0
    6c0c:	d1d6      	bne.n	6bbc <_vfiprintf_r+0x1ac>
    6c0e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
    6c10:	07d9      	lsls	r1, r3, #31
    6c12:	d405      	bmi.n	6c20 <_vfiprintf_r+0x210>
    6c14:	89ab      	ldrh	r3, [r5, #12]
    6c16:	059a      	lsls	r2, r3, #22
    6c18:	d402      	bmi.n	6c20 <_vfiprintf_r+0x210>
    6c1a:	6da8      	ldr	r0, [r5, #88]	; 0x58
    6c1c:	f7ff fde4 	bl	67e8 <__retarget_lock_release_recursive>
    6c20:	89ab      	ldrh	r3, [r5, #12]
    6c22:	065b      	lsls	r3, r3, #25
    6c24:	f53f af1a 	bmi.w	6a5c <_vfiprintf_r+0x4c>
    6c28:	9809      	ldr	r0, [sp, #36]	; 0x24
    6c2a:	e719      	b.n	6a60 <_vfiprintf_r+0x50>
    6c2c:	ab03      	add	r3, sp, #12
    6c2e:	9300      	str	r3, [sp, #0]
    6c30:	462a      	mov	r2, r5
    6c32:	4b0a      	ldr	r3, [pc, #40]	; (6c5c <_vfiprintf_r+0x24c>)
    6c34:	a904      	add	r1, sp, #16
    6c36:	4638      	mov	r0, r7
    6c38:	f000 fb42 	bl	72c0 <_printf_i>
    6c3c:	e7e3      	b.n	6c06 <_vfiprintf_r+0x1f6>
    6c3e:	bf00      	nop
    6c40:	0000dc80 	.word	0x0000dc80
    6c44:	0000dca0 	.word	0x0000dca0
    6c48:	0000dc60 	.word	0x0000dc60
    6c4c:	0000dbb8 	.word	0x0000dbb8
    6c50:	0000dbbe 	.word	0x0000dbbe
    6c54:	0000dbc2 	.word	0x0000dbc2
    6c58:	00006d81 	.word	0x00006d81
    6c5c:	000069eb 	.word	0x000069eb

00006c60 <__cvt>:
__cvt():
    6c60:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
    6c64:	ec55 4b10 	vmov	r4, r5, d0
    6c68:	2d00      	cmp	r5, #0
    6c6a:	460e      	mov	r6, r1
    6c6c:	4691      	mov	r9, r2
    6c6e:	4619      	mov	r1, r3
    6c70:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
    6c74:	f04f 0200 	mov.w	r2, #0
    6c78:	da03      	bge.n	6c82 <__cvt+0x22>
    6c7a:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
    6c7e:	461d      	mov	r5, r3
    6c80:	222d      	movs	r2, #45	; 0x2d
    6c82:	9f0d      	ldr	r7, [sp, #52]	; 0x34
    6c84:	700a      	strb	r2, [r1, #0]
    6c86:	f027 0720 	bic.w	r7, r7, #32
    6c8a:	2f46      	cmp	r7, #70	; 0x46
    6c8c:	d004      	beq.n	6c98 <__cvt+0x38>
    6c8e:	2f45      	cmp	r7, #69	; 0x45
    6c90:	d100      	bne.n	6c94 <__cvt+0x34>
    6c92:	3601      	adds	r6, #1
    6c94:	2102      	movs	r1, #2
    6c96:	e000      	b.n	6c9a <__cvt+0x3a>
    6c98:	2103      	movs	r1, #3
    6c9a:	ab03      	add	r3, sp, #12
    6c9c:	9301      	str	r3, [sp, #4]
    6c9e:	ab02      	add	r3, sp, #8
    6ca0:	9300      	str	r3, [sp, #0]
    6ca2:	4632      	mov	r2, r6
    6ca4:	4653      	mov	r3, sl
    6ca6:	ec45 4b10 	vmov	d0, r4, r5
    6caa:	f002 f84d 	bl	8d48 <_dtoa_r>
    6cae:	2f47      	cmp	r7, #71	; 0x47
    6cb0:	4680      	mov	r8, r0
    6cb2:	d102      	bne.n	6cba <__cvt+0x5a>
    6cb4:	f019 0f01 	tst.w	r9, #1
    6cb8:	d022      	beq.n	6d00 <__cvt+0xa0>
    6cba:	2f46      	cmp	r7, #70	; 0x46
    6cbc:	eb08 0906 	add.w	r9, r8, r6
    6cc0:	d111      	bne.n	6ce6 <__cvt+0x86>
    6cc2:	f898 3000 	ldrb.w	r3, [r8]
    6cc6:	2b30      	cmp	r3, #48	; 0x30
    6cc8:	d10a      	bne.n	6ce0 <__cvt+0x80>
    6cca:	2200      	movs	r2, #0
    6ccc:	2300      	movs	r3, #0
    6cce:	4620      	mov	r0, r4
    6cd0:	4629      	mov	r1, r5
    6cd2:	f005 f9ab 	bl	c02c <__aeabi_dcmpeq>
    6cd6:	b918      	cbnz	r0, 6ce0 <__cvt+0x80>
    6cd8:	f1c6 0601 	rsb	r6, r6, #1
    6cdc:	f8ca 6000 	str.w	r6, [sl]
    6ce0:	f8da 3000 	ldr.w	r3, [sl]
    6ce4:	4499      	add	r9, r3
    6ce6:	2200      	movs	r2, #0
    6ce8:	2300      	movs	r3, #0
    6cea:	4620      	mov	r0, r4
    6cec:	4629      	mov	r1, r5
    6cee:	f005 f99d 	bl	c02c <__aeabi_dcmpeq>
    6cf2:	b108      	cbz	r0, 6cf8 <__cvt+0x98>
    6cf4:	f8cd 900c 	str.w	r9, [sp, #12]
    6cf8:	2230      	movs	r2, #48	; 0x30
    6cfa:	9b03      	ldr	r3, [sp, #12]
    6cfc:	454b      	cmp	r3, r9
    6cfe:	d308      	bcc.n	6d12 <__cvt+0xb2>
    6d00:	9b03      	ldr	r3, [sp, #12]
    6d02:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    6d04:	eba3 0308 	sub.w	r3, r3, r8
    6d08:	4640      	mov	r0, r8
    6d0a:	6013      	str	r3, [r2, #0]
    6d0c:	b004      	add	sp, #16
    6d0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    6d12:	1c59      	adds	r1, r3, #1
    6d14:	9103      	str	r1, [sp, #12]
    6d16:	701a      	strb	r2, [r3, #0]
    6d18:	e7ef      	b.n	6cfa <__cvt+0x9a>

00006d1a <__exponent>:
__exponent():
    6d1a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    6d1c:	2900      	cmp	r1, #0
    6d1e:	bfba      	itte	lt
    6d20:	4249      	neglt	r1, r1
    6d22:	232d      	movlt	r3, #45	; 0x2d
    6d24:	232b      	movge	r3, #43	; 0x2b
    6d26:	2909      	cmp	r1, #9
    6d28:	7002      	strb	r2, [r0, #0]
    6d2a:	7043      	strb	r3, [r0, #1]
    6d2c:	dd21      	ble.n	6d72 <__exponent+0x58>
    6d2e:	f10d 0307 	add.w	r3, sp, #7
    6d32:	461f      	mov	r7, r3
    6d34:	260a      	movs	r6, #10
    6d36:	fb91 f2f6 	sdiv	r2, r1, r6
    6d3a:	fb06 1412 	mls	r4, r6, r2, r1
    6d3e:	3430      	adds	r4, #48	; 0x30
    6d40:	2963      	cmp	r1, #99	; 0x63
    6d42:	f103 35ff 	add.w	r5, r3, #4294967295	; 0xffffffff
    6d46:	f803 4c01 	strb.w	r4, [r3, #-1]
    6d4a:	dc0a      	bgt.n	6d62 <__exponent+0x48>
    6d4c:	3230      	adds	r2, #48	; 0x30
    6d4e:	f805 2c01 	strb.w	r2, [r5, #-1]
    6d52:	3b02      	subs	r3, #2
    6d54:	1c82      	adds	r2, r0, #2
    6d56:	42bb      	cmp	r3, r7
    6d58:	4614      	mov	r4, r2
    6d5a:	d305      	bcc.n	6d68 <__exponent+0x4e>
    6d5c:	1a20      	subs	r0, r4, r0
    6d5e:	b003      	add	sp, #12
    6d60:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6d62:	462b      	mov	r3, r5
    6d64:	4611      	mov	r1, r2
    6d66:	e7e6      	b.n	6d36 <__exponent+0x1c>
    6d68:	f813 1b01 	ldrb.w	r1, [r3], #1
    6d6c:	f802 1b01 	strb.w	r1, [r2], #1
    6d70:	e7f1      	b.n	6d56 <__exponent+0x3c>
    6d72:	2330      	movs	r3, #48	; 0x30
    6d74:	4419      	add	r1, r3
    6d76:	7083      	strb	r3, [r0, #2]
    6d78:	1d04      	adds	r4, r0, #4
    6d7a:	70c1      	strb	r1, [r0, #3]
    6d7c:	e7ee      	b.n	6d5c <__exponent+0x42>
    6d7e:	Address 0x0000000000006d7e is out of bounds.


00006d80 <_printf_float>:
_printf_float():
    6d80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6d84:	b08d      	sub	sp, #52	; 0x34
    6d86:	460c      	mov	r4, r1
    6d88:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
    6d8c:	4616      	mov	r6, r2
    6d8e:	461f      	mov	r7, r3
    6d90:	4605      	mov	r5, r0
    6d92:	f003 fae1 	bl	a358 <_localeconv_r>
    6d96:	6803      	ldr	r3, [r0, #0]
    6d98:	9306      	str	r3, [sp, #24]
    6d9a:	4618      	mov	r0, r3
    6d9c:	f000 ff47 	bl	7c2e <strlen>
    6da0:	2300      	movs	r3, #0
    6da2:	930a      	str	r3, [sp, #40]	; 0x28
    6da4:	f8d8 3000 	ldr.w	r3, [r8]
    6da8:	9007      	str	r0, [sp, #28]
    6daa:	3307      	adds	r3, #7
    6dac:	f023 0307 	bic.w	r3, r3, #7
    6db0:	f103 0208 	add.w	r2, r3, #8
    6db4:	f894 a018 	ldrb.w	sl, [r4, #24]
    6db8:	f8d4 b000 	ldr.w	fp, [r4]
    6dbc:	f8c8 2000 	str.w	r2, [r8]
    6dc0:	e9d3 2300 	ldrd	r2, r3, [r3]
    6dc4:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
    6dc8:	ed94 7b12 	vldr	d7, [r4, #72]	; 0x48
    6dcc:	ed8d 7b04 	vstr	d7, [sp, #16]
    6dd0:	e9dd 8304 	ldrd	r8, r3, [sp, #16]
    6dd4:	f023 4900 	bic.w	r9, r3, #2147483648	; 0x80000000
    6dd8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    6ddc:	4ba6      	ldr	r3, [pc, #664]	; (7078 <_printf_float+0x2f8>)
    6dde:	4640      	mov	r0, r8
    6de0:	4649      	mov	r1, r9
    6de2:	f005 f955 	bl	c090 <__aeabi_dcmpun>
    6de6:	bb70      	cbnz	r0, 6e46 <_printf_float+0xc6>
    6de8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    6dec:	4ba2      	ldr	r3, [pc, #648]	; (7078 <_printf_float+0x2f8>)
    6dee:	4640      	mov	r0, r8
    6df0:	4649      	mov	r1, r9
    6df2:	f005 f92f 	bl	c054 <__aeabi_dcmple>
    6df6:	bb30      	cbnz	r0, 6e46 <_printf_float+0xc6>
    6df8:	2200      	movs	r2, #0
    6dfa:	2300      	movs	r3, #0
    6dfc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    6e00:	f005 f91e 	bl	c040 <__aeabi_dcmplt>
    6e04:	b110      	cbz	r0, 6e0c <_printf_float+0x8c>
    6e06:	232d      	movs	r3, #45	; 0x2d
    6e08:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    6e0c:	4a9b      	ldr	r2, [pc, #620]	; (707c <_printf_float+0x2fc>)
    6e0e:	4b9c      	ldr	r3, [pc, #624]	; (7080 <_printf_float+0x300>)
    6e10:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
    6e14:	bf94      	ite	ls
    6e16:	4690      	movls	r8, r2
    6e18:	4698      	movhi	r8, r3
    6e1a:	2303      	movs	r3, #3
    6e1c:	f02b 0204 	bic.w	r2, fp, #4
    6e20:	6123      	str	r3, [r4, #16]
    6e22:	6022      	str	r2, [r4, #0]
    6e24:	f04f 0900 	mov.w	r9, #0
    6e28:	9700      	str	r7, [sp, #0]
    6e2a:	4633      	mov	r3, r6
    6e2c:	aa0b      	add	r2, sp, #44	; 0x2c
    6e2e:	4621      	mov	r1, r4
    6e30:	4628      	mov	r0, r5
    6e32:	f000 f9cf 	bl	71d4 <_printf_common>
    6e36:	3001      	adds	r0, #1
    6e38:	f040 808c 	bne.w	6f54 <_printf_float+0x1d4>
    6e3c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    6e40:	b00d      	add	sp, #52	; 0x34
    6e42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6e46:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    6e4a:	4610      	mov	r0, r2
    6e4c:	4619      	mov	r1, r3
    6e4e:	f005 f91f 	bl	c090 <__aeabi_dcmpun>
    6e52:	b140      	cbz	r0, 6e66 <_printf_float+0xe6>
    6e54:	9b05      	ldr	r3, [sp, #20]
    6e56:	4a8b      	ldr	r2, [pc, #556]	; (7084 <_printf_float+0x304>)
    6e58:	2b00      	cmp	r3, #0
    6e5a:	bfbc      	itt	lt
    6e5c:	232d      	movlt	r3, #45	; 0x2d
    6e5e:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
    6e62:	4b89      	ldr	r3, [pc, #548]	; (7088 <_printf_float+0x308>)
    6e64:	e7d4      	b.n	6e10 <_printf_float+0x90>
    6e66:	6863      	ldr	r3, [r4, #4]
    6e68:	1c5a      	adds	r2, r3, #1
    6e6a:	f00a 09df 	and.w	r9, sl, #223	; 0xdf
    6e6e:	d13e      	bne.n	6eee <_printf_float+0x16e>
    6e70:	2306      	movs	r3, #6
    6e72:	6063      	str	r3, [r4, #4]
    6e74:	2300      	movs	r3, #0
    6e76:	9303      	str	r3, [sp, #12]
    6e78:	ab0a      	add	r3, sp, #40	; 0x28
    6e7a:	f44b 6280 	orr.w	r2, fp, #1024	; 0x400
    6e7e:	e9cd a301 	strd	sl, r3, [sp, #4]
    6e82:	ab09      	add	r3, sp, #36	; 0x24
    6e84:	9300      	str	r3, [sp, #0]
    6e86:	6861      	ldr	r1, [r4, #4]
    6e88:	6022      	str	r2, [r4, #0]
    6e8a:	f10d 0323 	add.w	r3, sp, #35	; 0x23
    6e8e:	ed9d 0b04 	vldr	d0, [sp, #16]
    6e92:	4628      	mov	r0, r5
    6e94:	f7ff fee4 	bl	6c60 <__cvt>
    6e98:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
    6e9c:	4680      	mov	r8, r0
    6e9e:	9909      	ldr	r1, [sp, #36]	; 0x24
    6ea0:	d108      	bne.n	6eb4 <_printf_float+0x134>
    6ea2:	1cc8      	adds	r0, r1, #3
    6ea4:	db02      	blt.n	6eac <_printf_float+0x12c>
    6ea6:	6863      	ldr	r3, [r4, #4]
    6ea8:	4299      	cmp	r1, r3
    6eaa:	dd41      	ble.n	6f30 <_printf_float+0x1b0>
    6eac:	f1aa 0a02 	sub.w	sl, sl, #2
    6eb0:	fa5f fa8a 	uxtb.w	sl, sl
    6eb4:	f1ba 0f65 	cmp.w	sl, #101	; 0x65
    6eb8:	d820      	bhi.n	6efc <_printf_float+0x17c>
    6eba:	3901      	subs	r1, #1
    6ebc:	4652      	mov	r2, sl
    6ebe:	f104 0050 	add.w	r0, r4, #80	; 0x50
    6ec2:	9109      	str	r1, [sp, #36]	; 0x24
    6ec4:	f7ff ff29 	bl	6d1a <__exponent>
    6ec8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6eca:	1813      	adds	r3, r2, r0
    6ecc:	2a01      	cmp	r2, #1
    6ece:	4681      	mov	r9, r0
    6ed0:	6123      	str	r3, [r4, #16]
    6ed2:	dc02      	bgt.n	6eda <_printf_float+0x15a>
    6ed4:	6822      	ldr	r2, [r4, #0]
    6ed6:	07d2      	lsls	r2, r2, #31
    6ed8:	d501      	bpl.n	6ede <_printf_float+0x15e>
    6eda:	3301      	adds	r3, #1
    6edc:	6123      	str	r3, [r4, #16]
    6ede:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
    6ee2:	2b00      	cmp	r3, #0
    6ee4:	d0a0      	beq.n	6e28 <_printf_float+0xa8>
    6ee6:	232d      	movs	r3, #45	; 0x2d
    6ee8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    6eec:	e79c      	b.n	6e28 <_printf_float+0xa8>
    6eee:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
    6ef2:	d1bf      	bne.n	6e74 <_printf_float+0xf4>
    6ef4:	2b00      	cmp	r3, #0
    6ef6:	d1bd      	bne.n	6e74 <_printf_float+0xf4>
    6ef8:	2301      	movs	r3, #1
    6efa:	e7ba      	b.n	6e72 <_printf_float+0xf2>
    6efc:	f1ba 0f66 	cmp.w	sl, #102	; 0x66
    6f00:	d118      	bne.n	6f34 <_printf_float+0x1b4>
    6f02:	2900      	cmp	r1, #0
    6f04:	6863      	ldr	r3, [r4, #4]
    6f06:	dd0b      	ble.n	6f20 <_printf_float+0x1a0>
    6f08:	6121      	str	r1, [r4, #16]
    6f0a:	b913      	cbnz	r3, 6f12 <_printf_float+0x192>
    6f0c:	6822      	ldr	r2, [r4, #0]
    6f0e:	07d0      	lsls	r0, r2, #31
    6f10:	d502      	bpl.n	6f18 <_printf_float+0x198>
    6f12:	3301      	adds	r3, #1
    6f14:	440b      	add	r3, r1
    6f16:	6123      	str	r3, [r4, #16]
    6f18:	65a1      	str	r1, [r4, #88]	; 0x58
    6f1a:	f04f 0900 	mov.w	r9, #0
    6f1e:	e7de      	b.n	6ede <_printf_float+0x15e>
    6f20:	b913      	cbnz	r3, 6f28 <_printf_float+0x1a8>
    6f22:	6822      	ldr	r2, [r4, #0]
    6f24:	07d2      	lsls	r2, r2, #31
    6f26:	d501      	bpl.n	6f2c <_printf_float+0x1ac>
    6f28:	3302      	adds	r3, #2
    6f2a:	e7f4      	b.n	6f16 <_printf_float+0x196>
    6f2c:	2301      	movs	r3, #1
    6f2e:	e7f2      	b.n	6f16 <_printf_float+0x196>
    6f30:	f04f 0a67 	mov.w	sl, #103	; 0x67
    6f34:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6f36:	4299      	cmp	r1, r3
    6f38:	db05      	blt.n	6f46 <_printf_float+0x1c6>
    6f3a:	6823      	ldr	r3, [r4, #0]
    6f3c:	6121      	str	r1, [r4, #16]
    6f3e:	07d8      	lsls	r0, r3, #31
    6f40:	d5ea      	bpl.n	6f18 <_printf_float+0x198>
    6f42:	1c4b      	adds	r3, r1, #1
    6f44:	e7e7      	b.n	6f16 <_printf_float+0x196>
    6f46:	2900      	cmp	r1, #0
    6f48:	bfd4      	ite	le
    6f4a:	f1c1 0202 	rsble	r2, r1, #2
    6f4e:	2201      	movgt	r2, #1
    6f50:	4413      	add	r3, r2
    6f52:	e7e0      	b.n	6f16 <_printf_float+0x196>
    6f54:	6823      	ldr	r3, [r4, #0]
    6f56:	055a      	lsls	r2, r3, #21
    6f58:	d407      	bmi.n	6f6a <_printf_float+0x1ea>
    6f5a:	6923      	ldr	r3, [r4, #16]
    6f5c:	4642      	mov	r2, r8
    6f5e:	4631      	mov	r1, r6
    6f60:	4628      	mov	r0, r5
    6f62:	47b8      	blx	r7
    6f64:	3001      	adds	r0, #1
    6f66:	d12b      	bne.n	6fc0 <_printf_float+0x240>
    6f68:	e768      	b.n	6e3c <_printf_float+0xbc>
    6f6a:	f1ba 0f65 	cmp.w	sl, #101	; 0x65
    6f6e:	f240 80dc 	bls.w	712a <_printf_float+0x3aa>
    6f72:	2200      	movs	r2, #0
    6f74:	2300      	movs	r3, #0
    6f76:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
    6f7a:	f005 f857 	bl	c02c <__aeabi_dcmpeq>
    6f7e:	2800      	cmp	r0, #0
    6f80:	d033      	beq.n	6fea <_printf_float+0x26a>
    6f82:	2301      	movs	r3, #1
    6f84:	4a41      	ldr	r2, [pc, #260]	; (708c <_printf_float+0x30c>)
    6f86:	4631      	mov	r1, r6
    6f88:	4628      	mov	r0, r5
    6f8a:	47b8      	blx	r7
    6f8c:	3001      	adds	r0, #1
    6f8e:	f43f af55 	beq.w	6e3c <_printf_float+0xbc>
    6f92:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    6f96:	429a      	cmp	r2, r3
    6f98:	db02      	blt.n	6fa0 <_printf_float+0x220>
    6f9a:	6823      	ldr	r3, [r4, #0]
    6f9c:	07d8      	lsls	r0, r3, #31
    6f9e:	d50f      	bpl.n	6fc0 <_printf_float+0x240>
    6fa0:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    6fa4:	4631      	mov	r1, r6
    6fa6:	4628      	mov	r0, r5
    6fa8:	47b8      	blx	r7
    6faa:	3001      	adds	r0, #1
    6fac:	f43f af46 	beq.w	6e3c <_printf_float+0xbc>
    6fb0:	f04f 0800 	mov.w	r8, #0
    6fb4:	f104 091a 	add.w	r9, r4, #26
    6fb8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6fba:	3b01      	subs	r3, #1
    6fbc:	4543      	cmp	r3, r8
    6fbe:	dc09      	bgt.n	6fd4 <_printf_float+0x254>
    6fc0:	6823      	ldr	r3, [r4, #0]
    6fc2:	079b      	lsls	r3, r3, #30
    6fc4:	f100 8101 	bmi.w	71ca <_printf_float+0x44a>
    6fc8:	68e0      	ldr	r0, [r4, #12]
    6fca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    6fcc:	4298      	cmp	r0, r3
    6fce:	bfb8      	it	lt
    6fd0:	4618      	movlt	r0, r3
    6fd2:	e735      	b.n	6e40 <_printf_float+0xc0>
    6fd4:	2301      	movs	r3, #1
    6fd6:	464a      	mov	r2, r9
    6fd8:	4631      	mov	r1, r6
    6fda:	4628      	mov	r0, r5
    6fdc:	47b8      	blx	r7
    6fde:	3001      	adds	r0, #1
    6fe0:	f43f af2c 	beq.w	6e3c <_printf_float+0xbc>
    6fe4:	f108 0801 	add.w	r8, r8, #1
    6fe8:	e7e6      	b.n	6fb8 <_printf_float+0x238>
    6fea:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6fec:	2b00      	cmp	r3, #0
    6fee:	dc2b      	bgt.n	7048 <_printf_float+0x2c8>
    6ff0:	2301      	movs	r3, #1
    6ff2:	4a26      	ldr	r2, [pc, #152]	; (708c <_printf_float+0x30c>)
    6ff4:	4631      	mov	r1, r6
    6ff6:	4628      	mov	r0, r5
    6ff8:	47b8      	blx	r7
    6ffa:	3001      	adds	r0, #1
    6ffc:	f43f af1e 	beq.w	6e3c <_printf_float+0xbc>
    7000:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    7004:	4313      	orrs	r3, r2
    7006:	d102      	bne.n	700e <_printf_float+0x28e>
    7008:	6823      	ldr	r3, [r4, #0]
    700a:	07d9      	lsls	r1, r3, #31
    700c:	d5d8      	bpl.n	6fc0 <_printf_float+0x240>
    700e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    7012:	4631      	mov	r1, r6
    7014:	4628      	mov	r0, r5
    7016:	47b8      	blx	r7
    7018:	3001      	adds	r0, #1
    701a:	f43f af0f 	beq.w	6e3c <_printf_float+0xbc>
    701e:	f04f 0900 	mov.w	r9, #0
    7022:	f104 0a1a 	add.w	sl, r4, #26
    7026:	9b09      	ldr	r3, [sp, #36]	; 0x24
    7028:	425b      	negs	r3, r3
    702a:	454b      	cmp	r3, r9
    702c:	dc01      	bgt.n	7032 <_printf_float+0x2b2>
    702e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    7030:	e794      	b.n	6f5c <_printf_float+0x1dc>
    7032:	2301      	movs	r3, #1
    7034:	4652      	mov	r2, sl
    7036:	4631      	mov	r1, r6
    7038:	4628      	mov	r0, r5
    703a:	47b8      	blx	r7
    703c:	3001      	adds	r0, #1
    703e:	f43f aefd 	beq.w	6e3c <_printf_float+0xbc>
    7042:	f109 0901 	add.w	r9, r9, #1
    7046:	e7ee      	b.n	7026 <_printf_float+0x2a6>
    7048:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    704a:	6da3      	ldr	r3, [r4, #88]	; 0x58
    704c:	429a      	cmp	r2, r3
    704e:	bfa8      	it	ge
    7050:	461a      	movge	r2, r3
    7052:	2a00      	cmp	r2, #0
    7054:	4691      	mov	r9, r2
    7056:	dd07      	ble.n	7068 <_printf_float+0x2e8>
    7058:	4613      	mov	r3, r2
    705a:	4631      	mov	r1, r6
    705c:	4642      	mov	r2, r8
    705e:	4628      	mov	r0, r5
    7060:	47b8      	blx	r7
    7062:	3001      	adds	r0, #1
    7064:	f43f aeea 	beq.w	6e3c <_printf_float+0xbc>
    7068:	f104 031a 	add.w	r3, r4, #26
    706c:	f04f 0b00 	mov.w	fp, #0
    7070:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
    7074:	9304      	str	r3, [sp, #16]
    7076:	e015      	b.n	70a4 <_printf_float+0x324>
    7078:	7fefffff 	.word	0x7fefffff
    707c:	0000dbc9 	.word	0x0000dbc9
    7080:	0000dbcd 	.word	0x0000dbcd
    7084:	0000dbd1 	.word	0x0000dbd1
    7088:	0000dbd5 	.word	0x0000dbd5
    708c:	0000d3f7 	.word	0x0000d3f7
    7090:	2301      	movs	r3, #1
    7092:	9a04      	ldr	r2, [sp, #16]
    7094:	4631      	mov	r1, r6
    7096:	4628      	mov	r0, r5
    7098:	47b8      	blx	r7
    709a:	3001      	adds	r0, #1
    709c:	f43f aece 	beq.w	6e3c <_printf_float+0xbc>
    70a0:	f10b 0b01 	add.w	fp, fp, #1
    70a4:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
    70a8:	ebaa 0309 	sub.w	r3, sl, r9
    70ac:	455b      	cmp	r3, fp
    70ae:	dcef      	bgt.n	7090 <_printf_float+0x310>
    70b0:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    70b4:	429a      	cmp	r2, r3
    70b6:	db1b      	blt.n	70f0 <_printf_float+0x370>
    70b8:	6823      	ldr	r3, [r4, #0]
    70ba:	07da      	lsls	r2, r3, #31
    70bc:	d418      	bmi.n	70f0 <_printf_float+0x370>
    70be:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    70c2:	4592      	cmp	sl, r2
    70c4:	db1c      	blt.n	7100 <_printf_float+0x380>
    70c6:	eba3 090a 	sub.w	r9, r3, sl
    70ca:	f1b9 0f00 	cmp.w	r9, #0
    70ce:	dd08      	ble.n	70e2 <_printf_float+0x362>
    70d0:	464b      	mov	r3, r9
    70d2:	eb08 020a 	add.w	r2, r8, sl
    70d6:	4631      	mov	r1, r6
    70d8:	4628      	mov	r0, r5
    70da:	47b8      	blx	r7
    70dc:	3001      	adds	r0, #1
    70de:	f43f aead 	beq.w	6e3c <_printf_float+0xbc>
    70e2:	f04f 0800 	mov.w	r8, #0
    70e6:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
    70ea:	f104 0a1a 	add.w	sl, r4, #26
    70ee:	e014      	b.n	711a <_printf_float+0x39a>
    70f0:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    70f4:	4631      	mov	r1, r6
    70f6:	4628      	mov	r0, r5
    70f8:	47b8      	blx	r7
    70fa:	3001      	adds	r0, #1
    70fc:	d1df      	bne.n	70be <_printf_float+0x33e>
    70fe:	e69d      	b.n	6e3c <_printf_float+0xbc>
    7100:	eba3 0902 	sub.w	r9, r3, r2
    7104:	e7e1      	b.n	70ca <_printf_float+0x34a>
    7106:	2301      	movs	r3, #1
    7108:	4652      	mov	r2, sl
    710a:	4631      	mov	r1, r6
    710c:	4628      	mov	r0, r5
    710e:	47b8      	blx	r7
    7110:	3001      	adds	r0, #1
    7112:	f43f ae93 	beq.w	6e3c <_printf_float+0xbc>
    7116:	f108 0801 	add.w	r8, r8, #1
    711a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    711e:	1a9b      	subs	r3, r3, r2
    7120:	eba3 0309 	sub.w	r3, r3, r9
    7124:	4543      	cmp	r3, r8
    7126:	dcee      	bgt.n	7106 <_printf_float+0x386>
    7128:	e74a      	b.n	6fc0 <_printf_float+0x240>
    712a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    712c:	2a01      	cmp	r2, #1
    712e:	dc01      	bgt.n	7134 <_printf_float+0x3b4>
    7130:	07db      	lsls	r3, r3, #31
    7132:	d537      	bpl.n	71a4 <_printf_float+0x424>
    7134:	2301      	movs	r3, #1
    7136:	4642      	mov	r2, r8
    7138:	4631      	mov	r1, r6
    713a:	4628      	mov	r0, r5
    713c:	47b8      	blx	r7
    713e:	3001      	adds	r0, #1
    7140:	f43f ae7c 	beq.w	6e3c <_printf_float+0xbc>
    7144:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    7148:	4631      	mov	r1, r6
    714a:	4628      	mov	r0, r5
    714c:	47b8      	blx	r7
    714e:	3001      	adds	r0, #1
    7150:	f43f ae74 	beq.w	6e3c <_printf_float+0xbc>
    7154:	2200      	movs	r2, #0
    7156:	2300      	movs	r3, #0
    7158:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
    715c:	f004 ff66 	bl	c02c <__aeabi_dcmpeq>
    7160:	b9d8      	cbnz	r0, 719a <_printf_float+0x41a>
    7162:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    7164:	f108 0201 	add.w	r2, r8, #1
    7168:	3b01      	subs	r3, #1
    716a:	4631      	mov	r1, r6
    716c:	4628      	mov	r0, r5
    716e:	47b8      	blx	r7
    7170:	3001      	adds	r0, #1
    7172:	d10e      	bne.n	7192 <_printf_float+0x412>
    7174:	e662      	b.n	6e3c <_printf_float+0xbc>
    7176:	2301      	movs	r3, #1
    7178:	4652      	mov	r2, sl
    717a:	4631      	mov	r1, r6
    717c:	4628      	mov	r0, r5
    717e:	47b8      	blx	r7
    7180:	3001      	adds	r0, #1
    7182:	f43f ae5b 	beq.w	6e3c <_printf_float+0xbc>
    7186:	f108 0801 	add.w	r8, r8, #1
    718a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    718c:	3b01      	subs	r3, #1
    718e:	4543      	cmp	r3, r8
    7190:	dcf1      	bgt.n	7176 <_printf_float+0x3f6>
    7192:	464b      	mov	r3, r9
    7194:	f104 0250 	add.w	r2, r4, #80	; 0x50
    7198:	e6e1      	b.n	6f5e <_printf_float+0x1de>
    719a:	f04f 0800 	mov.w	r8, #0
    719e:	f104 0a1a 	add.w	sl, r4, #26
    71a2:	e7f2      	b.n	718a <_printf_float+0x40a>
    71a4:	2301      	movs	r3, #1
    71a6:	4642      	mov	r2, r8
    71a8:	e7df      	b.n	716a <_printf_float+0x3ea>
    71aa:	2301      	movs	r3, #1
    71ac:	464a      	mov	r2, r9
    71ae:	4631      	mov	r1, r6
    71b0:	4628      	mov	r0, r5
    71b2:	47b8      	blx	r7
    71b4:	3001      	adds	r0, #1
    71b6:	f43f ae41 	beq.w	6e3c <_printf_float+0xbc>
    71ba:	f108 0801 	add.w	r8, r8, #1
    71be:	68e3      	ldr	r3, [r4, #12]
    71c0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    71c2:	1a9b      	subs	r3, r3, r2
    71c4:	4543      	cmp	r3, r8
    71c6:	dcf0      	bgt.n	71aa <_printf_float+0x42a>
    71c8:	e6fe      	b.n	6fc8 <_printf_float+0x248>
    71ca:	f04f 0800 	mov.w	r8, #0
    71ce:	f104 0919 	add.w	r9, r4, #25
    71d2:	e7f4      	b.n	71be <_printf_float+0x43e>

000071d4 <_printf_common>:
_printf_common():
    71d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    71d8:	4691      	mov	r9, r2
    71da:	461f      	mov	r7, r3
    71dc:	688a      	ldr	r2, [r1, #8]
    71de:	690b      	ldr	r3, [r1, #16]
    71e0:	f8dd 8020 	ldr.w	r8, [sp, #32]
    71e4:	4293      	cmp	r3, r2
    71e6:	bfb8      	it	lt
    71e8:	4613      	movlt	r3, r2
    71ea:	f8c9 3000 	str.w	r3, [r9]
    71ee:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
    71f2:	4606      	mov	r6, r0
    71f4:	460c      	mov	r4, r1
    71f6:	b112      	cbz	r2, 71fe <_printf_common+0x2a>
    71f8:	3301      	adds	r3, #1
    71fa:	f8c9 3000 	str.w	r3, [r9]
    71fe:	6823      	ldr	r3, [r4, #0]
    7200:	0699      	lsls	r1, r3, #26
    7202:	bf42      	ittt	mi
    7204:	f8d9 3000 	ldrmi.w	r3, [r9]
    7208:	3302      	addmi	r3, #2
    720a:	f8c9 3000 	strmi.w	r3, [r9]
    720e:	6825      	ldr	r5, [r4, #0]
    7210:	f015 0506 	ands.w	r5, r5, #6
    7214:	d107      	bne.n	7226 <_printf_common+0x52>
    7216:	f104 0a19 	add.w	sl, r4, #25
    721a:	68e3      	ldr	r3, [r4, #12]
    721c:	f8d9 2000 	ldr.w	r2, [r9]
    7220:	1a9b      	subs	r3, r3, r2
    7222:	42ab      	cmp	r3, r5
    7224:	dc28      	bgt.n	7278 <_printf_common+0xa4>
    7226:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
    722a:	6822      	ldr	r2, [r4, #0]
    722c:	3300      	adds	r3, #0
    722e:	bf18      	it	ne
    7230:	2301      	movne	r3, #1
    7232:	0692      	lsls	r2, r2, #26
    7234:	d42d      	bmi.n	7292 <_printf_common+0xbe>
    7236:	f104 0243 	add.w	r2, r4, #67	; 0x43
    723a:	4639      	mov	r1, r7
    723c:	4630      	mov	r0, r6
    723e:	47c0      	blx	r8
    7240:	3001      	adds	r0, #1
    7242:	d020      	beq.n	7286 <_printf_common+0xb2>
    7244:	6823      	ldr	r3, [r4, #0]
    7246:	68e5      	ldr	r5, [r4, #12]
    7248:	f8d9 2000 	ldr.w	r2, [r9]
    724c:	f003 0306 	and.w	r3, r3, #6
    7250:	2b04      	cmp	r3, #4
    7252:	bf08      	it	eq
    7254:	1aad      	subeq	r5, r5, r2
    7256:	68a3      	ldr	r3, [r4, #8]
    7258:	6922      	ldr	r2, [r4, #16]
    725a:	bf0c      	ite	eq
    725c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
    7260:	2500      	movne	r5, #0
    7262:	4293      	cmp	r3, r2
    7264:	bfc4      	itt	gt
    7266:	1a9b      	subgt	r3, r3, r2
    7268:	18ed      	addgt	r5, r5, r3
    726a:	f04f 0900 	mov.w	r9, #0
    726e:	341a      	adds	r4, #26
    7270:	454d      	cmp	r5, r9
    7272:	d11a      	bne.n	72aa <_printf_common+0xd6>
    7274:	2000      	movs	r0, #0
    7276:	e008      	b.n	728a <_printf_common+0xb6>
    7278:	2301      	movs	r3, #1
    727a:	4652      	mov	r2, sl
    727c:	4639      	mov	r1, r7
    727e:	4630      	mov	r0, r6
    7280:	47c0      	blx	r8
    7282:	3001      	adds	r0, #1
    7284:	d103      	bne.n	728e <_printf_common+0xba>
    7286:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    728a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    728e:	3501      	adds	r5, #1
    7290:	e7c3      	b.n	721a <_printf_common+0x46>
    7292:	18e1      	adds	r1, r4, r3
    7294:	1c5a      	adds	r2, r3, #1
    7296:	2030      	movs	r0, #48	; 0x30
    7298:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
    729c:	4422      	add	r2, r4
    729e:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
    72a2:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
    72a6:	3302      	adds	r3, #2
    72a8:	e7c5      	b.n	7236 <_printf_common+0x62>
    72aa:	2301      	movs	r3, #1
    72ac:	4622      	mov	r2, r4
    72ae:	4639      	mov	r1, r7
    72b0:	4630      	mov	r0, r6
    72b2:	47c0      	blx	r8
    72b4:	3001      	adds	r0, #1
    72b6:	d0e6      	beq.n	7286 <_printf_common+0xb2>
    72b8:	f109 0901 	add.w	r9, r9, #1
    72bc:	e7d8      	b.n	7270 <_printf_common+0x9c>
    72be:	Address 0x00000000000072be is out of bounds.


000072c0 <_printf_i>:
_printf_i():
    72c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    72c4:	4606      	mov	r6, r0
    72c6:	460c      	mov	r4, r1
    72c8:	f101 0043 	add.w	r0, r1, #67	; 0x43
    72cc:	7e09      	ldrb	r1, [r1, #24]
    72ce:	b085      	sub	sp, #20
    72d0:	296e      	cmp	r1, #110	; 0x6e
    72d2:	4698      	mov	r8, r3
    72d4:	4617      	mov	r7, r2
    72d6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    72d8:	f000 80ba 	beq.w	7450 <_printf_i+0x190>
    72dc:	d824      	bhi.n	7328 <_printf_i+0x68>
    72de:	2963      	cmp	r1, #99	; 0x63
    72e0:	d039      	beq.n	7356 <_printf_i+0x96>
    72e2:	d80a      	bhi.n	72fa <_printf_i+0x3a>
    72e4:	2900      	cmp	r1, #0
    72e6:	f000 80c3 	beq.w	7470 <_printf_i+0x1b0>
    72ea:	2958      	cmp	r1, #88	; 0x58
    72ec:	f000 8091 	beq.w	7412 <_printf_i+0x152>
    72f0:	f104 0542 	add.w	r5, r4, #66	; 0x42
    72f4:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
    72f8:	e035      	b.n	7366 <_printf_i+0xa6>
    72fa:	2964      	cmp	r1, #100	; 0x64
    72fc:	d001      	beq.n	7302 <_printf_i+0x42>
    72fe:	2969      	cmp	r1, #105	; 0x69
    7300:	d1f6      	bne.n	72f0 <_printf_i+0x30>
    7302:	6825      	ldr	r5, [r4, #0]
    7304:	681a      	ldr	r2, [r3, #0]
    7306:	f015 0f80 	tst.w	r5, #128	; 0x80
    730a:	f102 0104 	add.w	r1, r2, #4
    730e:	d02c      	beq.n	736a <_printf_i+0xaa>
    7310:	6812      	ldr	r2, [r2, #0]
    7312:	6019      	str	r1, [r3, #0]
    7314:	2a00      	cmp	r2, #0
    7316:	da03      	bge.n	7320 <_printf_i+0x60>
    7318:	232d      	movs	r3, #45	; 0x2d
    731a:	4252      	negs	r2, r2
    731c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    7320:	f8df c1bc 	ldr.w	ip, [pc, #444]	; 74e0 <_printf_i+0x220>
    7324:	230a      	movs	r3, #10
    7326:	e03f      	b.n	73a8 <_printf_i+0xe8>
    7328:	2973      	cmp	r1, #115	; 0x73
    732a:	f000 80a5 	beq.w	7478 <_printf_i+0x1b8>
    732e:	d808      	bhi.n	7342 <_printf_i+0x82>
    7330:	296f      	cmp	r1, #111	; 0x6f
    7332:	d021      	beq.n	7378 <_printf_i+0xb8>
    7334:	2970      	cmp	r1, #112	; 0x70
    7336:	d1db      	bne.n	72f0 <_printf_i+0x30>
    7338:	6822      	ldr	r2, [r4, #0]
    733a:	f042 0220 	orr.w	r2, r2, #32
    733e:	6022      	str	r2, [r4, #0]
    7340:	e003      	b.n	734a <_printf_i+0x8a>
    7342:	2975      	cmp	r1, #117	; 0x75
    7344:	d018      	beq.n	7378 <_printf_i+0xb8>
    7346:	2978      	cmp	r1, #120	; 0x78
    7348:	d1d2      	bne.n	72f0 <_printf_i+0x30>
    734a:	2278      	movs	r2, #120	; 0x78
    734c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
    7350:	f8df c190 	ldr.w	ip, [pc, #400]	; 74e4 <_printf_i+0x224>
    7354:	e061      	b.n	741a <_printf_i+0x15a>
    7356:	681a      	ldr	r2, [r3, #0]
    7358:	1d11      	adds	r1, r2, #4
    735a:	6019      	str	r1, [r3, #0]
    735c:	6813      	ldr	r3, [r2, #0]
    735e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    7362:	f104 0542 	add.w	r5, r4, #66	; 0x42
    7366:	2301      	movs	r3, #1
    7368:	e093      	b.n	7492 <_printf_i+0x1d2>
    736a:	6812      	ldr	r2, [r2, #0]
    736c:	6019      	str	r1, [r3, #0]
    736e:	f015 0f40 	tst.w	r5, #64	; 0x40
    7372:	bf18      	it	ne
    7374:	b212      	sxthne	r2, r2
    7376:	e7cd      	b.n	7314 <_printf_i+0x54>
    7378:	f8d4 c000 	ldr.w	ip, [r4]
    737c:	681a      	ldr	r2, [r3, #0]
    737e:	f01c 0f80 	tst.w	ip, #128	; 0x80
    7382:	f102 0504 	add.w	r5, r2, #4
    7386:	601d      	str	r5, [r3, #0]
    7388:	d001      	beq.n	738e <_printf_i+0xce>
    738a:	6812      	ldr	r2, [r2, #0]
    738c:	e003      	b.n	7396 <_printf_i+0xd6>
    738e:	f01c 0f40 	tst.w	ip, #64	; 0x40
    7392:	d0fa      	beq.n	738a <_printf_i+0xca>
    7394:	8812      	ldrh	r2, [r2, #0]
    7396:	f8df c148 	ldr.w	ip, [pc, #328]	; 74e0 <_printf_i+0x220>
    739a:	296f      	cmp	r1, #111	; 0x6f
    739c:	bf0c      	ite	eq
    739e:	2308      	moveq	r3, #8
    73a0:	230a      	movne	r3, #10
    73a2:	2100      	movs	r1, #0
    73a4:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
    73a8:	6865      	ldr	r5, [r4, #4]
    73aa:	60a5      	str	r5, [r4, #8]
    73ac:	2d00      	cmp	r5, #0
    73ae:	bfa2      	ittt	ge
    73b0:	6821      	ldrge	r1, [r4, #0]
    73b2:	f021 0104 	bicge.w	r1, r1, #4
    73b6:	6021      	strge	r1, [r4, #0]
    73b8:	b90a      	cbnz	r2, 73be <_printf_i+0xfe>
    73ba:	2d00      	cmp	r5, #0
    73bc:	d046      	beq.n	744c <_printf_i+0x18c>
    73be:	4605      	mov	r5, r0
    73c0:	fbb2 f1f3 	udiv	r1, r2, r3
    73c4:	fb03 2e11 	mls	lr, r3, r1, r2
    73c8:	4293      	cmp	r3, r2
    73ca:	f81c e00e 	ldrb.w	lr, [ip, lr]
    73ce:	f805 ed01 	strb.w	lr, [r5, #-1]!
    73d2:	d939      	bls.n	7448 <_printf_i+0x188>
    73d4:	2b08      	cmp	r3, #8
    73d6:	d10b      	bne.n	73f0 <_printf_i+0x130>
    73d8:	6823      	ldr	r3, [r4, #0]
    73da:	07da      	lsls	r2, r3, #31
    73dc:	d508      	bpl.n	73f0 <_printf_i+0x130>
    73de:	6923      	ldr	r3, [r4, #16]
    73e0:	6862      	ldr	r2, [r4, #4]
    73e2:	429a      	cmp	r2, r3
    73e4:	bfde      	ittt	le
    73e6:	2330      	movle	r3, #48	; 0x30
    73e8:	f805 3c01 	strble.w	r3, [r5, #-1]
    73ec:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
    73f0:	1b40      	subs	r0, r0, r5
    73f2:	6120      	str	r0, [r4, #16]
    73f4:	f8cd 8000 	str.w	r8, [sp]
    73f8:	463b      	mov	r3, r7
    73fa:	aa03      	add	r2, sp, #12
    73fc:	4621      	mov	r1, r4
    73fe:	4630      	mov	r0, r6
    7400:	f7ff fee8 	bl	71d4 <_printf_common>
    7404:	3001      	adds	r0, #1
    7406:	d149      	bne.n	749c <_printf_i+0x1dc>
    7408:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    740c:	b005      	add	sp, #20
    740e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    7412:	f8df c0cc 	ldr.w	ip, [pc, #204]	; 74e0 <_printf_i+0x220>
    7416:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
    741a:	681d      	ldr	r5, [r3, #0]
    741c:	6821      	ldr	r1, [r4, #0]
    741e:	f855 2b04 	ldr.w	r2, [r5], #4
    7422:	601d      	str	r5, [r3, #0]
    7424:	060d      	lsls	r5, r1, #24
    7426:	d50b      	bpl.n	7440 <_printf_i+0x180>
    7428:	07cd      	lsls	r5, r1, #31
    742a:	bf44      	itt	mi
    742c:	f041 0120 	orrmi.w	r1, r1, #32
    7430:	6021      	strmi	r1, [r4, #0]
    7432:	b91a      	cbnz	r2, 743c <_printf_i+0x17c>
    7434:	6823      	ldr	r3, [r4, #0]
    7436:	f023 0320 	bic.w	r3, r3, #32
    743a:	6023      	str	r3, [r4, #0]
    743c:	2310      	movs	r3, #16
    743e:	e7b0      	b.n	73a2 <_printf_i+0xe2>
    7440:	064b      	lsls	r3, r1, #25
    7442:	bf48      	it	mi
    7444:	b292      	uxthmi	r2, r2
    7446:	e7ef      	b.n	7428 <_printf_i+0x168>
    7448:	460a      	mov	r2, r1
    744a:	e7b9      	b.n	73c0 <_printf_i+0x100>
    744c:	4605      	mov	r5, r0
    744e:	e7c1      	b.n	73d4 <_printf_i+0x114>
    7450:	681a      	ldr	r2, [r3, #0]
    7452:	f8d4 c000 	ldr.w	ip, [r4]
    7456:	6961      	ldr	r1, [r4, #20]
    7458:	1d15      	adds	r5, r2, #4
    745a:	601d      	str	r5, [r3, #0]
    745c:	f01c 0f80 	tst.w	ip, #128	; 0x80
    7460:	6813      	ldr	r3, [r2, #0]
    7462:	d001      	beq.n	7468 <_printf_i+0x1a8>
    7464:	6019      	str	r1, [r3, #0]
    7466:	e003      	b.n	7470 <_printf_i+0x1b0>
    7468:	f01c 0f40 	tst.w	ip, #64	; 0x40
    746c:	d0fa      	beq.n	7464 <_printf_i+0x1a4>
    746e:	8019      	strh	r1, [r3, #0]
    7470:	2300      	movs	r3, #0
    7472:	6123      	str	r3, [r4, #16]
    7474:	4605      	mov	r5, r0
    7476:	e7bd      	b.n	73f4 <_printf_i+0x134>
    7478:	681a      	ldr	r2, [r3, #0]
    747a:	1d11      	adds	r1, r2, #4
    747c:	6019      	str	r1, [r3, #0]
    747e:	6815      	ldr	r5, [r2, #0]
    7480:	6862      	ldr	r2, [r4, #4]
    7482:	2100      	movs	r1, #0
    7484:	4628      	mov	r0, r5
    7486:	f002 ffe3 	bl	a450 <memchr>
    748a:	b108      	cbz	r0, 7490 <_printf_i+0x1d0>
    748c:	1b40      	subs	r0, r0, r5
    748e:	6060      	str	r0, [r4, #4]
    7490:	6863      	ldr	r3, [r4, #4]
    7492:	6123      	str	r3, [r4, #16]
    7494:	2300      	movs	r3, #0
    7496:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    749a:	e7ab      	b.n	73f4 <_printf_i+0x134>
    749c:	6923      	ldr	r3, [r4, #16]
    749e:	462a      	mov	r2, r5
    74a0:	4639      	mov	r1, r7
    74a2:	4630      	mov	r0, r6
    74a4:	47c0      	blx	r8
    74a6:	3001      	adds	r0, #1
    74a8:	d0ae      	beq.n	7408 <_printf_i+0x148>
    74aa:	6823      	ldr	r3, [r4, #0]
    74ac:	079b      	lsls	r3, r3, #30
    74ae:	d413      	bmi.n	74d8 <_printf_i+0x218>
    74b0:	68e0      	ldr	r0, [r4, #12]
    74b2:	9b03      	ldr	r3, [sp, #12]
    74b4:	4298      	cmp	r0, r3
    74b6:	bfb8      	it	lt
    74b8:	4618      	movlt	r0, r3
    74ba:	e7a7      	b.n	740c <_printf_i+0x14c>
    74bc:	2301      	movs	r3, #1
    74be:	464a      	mov	r2, r9
    74c0:	4639      	mov	r1, r7
    74c2:	4630      	mov	r0, r6
    74c4:	47c0      	blx	r8
    74c6:	3001      	adds	r0, #1
    74c8:	d09e      	beq.n	7408 <_printf_i+0x148>
    74ca:	3501      	adds	r5, #1
    74cc:	68e3      	ldr	r3, [r4, #12]
    74ce:	9a03      	ldr	r2, [sp, #12]
    74d0:	1a9b      	subs	r3, r3, r2
    74d2:	42ab      	cmp	r3, r5
    74d4:	dcf2      	bgt.n	74bc <_printf_i+0x1fc>
    74d6:	e7eb      	b.n	74b0 <_printf_i+0x1f0>
    74d8:	2500      	movs	r5, #0
    74da:	f104 0919 	add.w	r9, r4, #25
    74de:	e7f5      	b.n	74cc <_printf_i+0x20c>
    74e0:	0000dbd9 	.word	0x0000dbd9
    74e4:	0000dbea 	.word	0x0000dbea

000074e8 <_scanf_float>:
_scanf_float():
    74e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    74ec:	b087      	sub	sp, #28
    74ee:	4617      	mov	r7, r2
    74f0:	9303      	str	r3, [sp, #12]
    74f2:	688b      	ldr	r3, [r1, #8]
    74f4:	1e5a      	subs	r2, r3, #1
    74f6:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
    74fa:	bf83      	ittte	hi
    74fc:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
    7500:	195b      	addhi	r3, r3, r5
    7502:	9302      	strhi	r3, [sp, #8]
    7504:	2300      	movls	r3, #0
    7506:	bf86      	itte	hi
    7508:	f240 135d 	movwhi	r3, #349	; 0x15d
    750c:	608b      	strhi	r3, [r1, #8]
    750e:	9302      	strls	r3, [sp, #8]
    7510:	680b      	ldr	r3, [r1, #0]
    7512:	468b      	mov	fp, r1
    7514:	2500      	movs	r5, #0
    7516:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
    751a:	f84b 3b1c 	str.w	r3, [fp], #28
    751e:	e9cd 5504 	strd	r5, r5, [sp, #16]
    7522:	4681      	mov	r9, r0
    7524:	460c      	mov	r4, r1
    7526:	465e      	mov	r6, fp
    7528:	46aa      	mov	sl, r5
    752a:	46a8      	mov	r8, r5
    752c:	9501      	str	r5, [sp, #4]
    752e:	68a2      	ldr	r2, [r4, #8]
    7530:	b182      	cbz	r2, 7554 <_scanf_float+0x6c>
    7532:	683b      	ldr	r3, [r7, #0]
    7534:	781b      	ldrb	r3, [r3, #0]
    7536:	2b49      	cmp	r3, #73	; 0x49
    7538:	d075      	beq.n	7626 <_scanf_float+0x13e>
    753a:	d84f      	bhi.n	75dc <_scanf_float+0xf4>
    753c:	2b39      	cmp	r3, #57	; 0x39
    753e:	d841      	bhi.n	75c4 <_scanf_float+0xdc>
    7540:	2b31      	cmp	r3, #49	; 0x31
    7542:	f080 8087 	bcs.w	7654 <_scanf_float+0x16c>
    7546:	2b2d      	cmp	r3, #45	; 0x2d
    7548:	f000 808f 	beq.w	766a <_scanf_float+0x182>
    754c:	d817      	bhi.n	757e <_scanf_float+0x96>
    754e:	2b2b      	cmp	r3, #43	; 0x2b
    7550:	f000 808b 	beq.w	766a <_scanf_float+0x182>
    7554:	f1b8 0f00 	cmp.w	r8, #0
    7558:	d003      	beq.n	7562 <_scanf_float+0x7a>
    755a:	6823      	ldr	r3, [r4, #0]
    755c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
    7560:	6023      	str	r3, [r4, #0]
    7562:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
    7566:	f1ba 0f01 	cmp.w	sl, #1
    756a:	f200 80dd 	bhi.w	7728 <_scanf_float+0x240>
    756e:	455e      	cmp	r6, fp
    7570:	f200 80cf 	bhi.w	7712 <_scanf_float+0x22a>
    7574:	2501      	movs	r5, #1
    7576:	4628      	mov	r0, r5
    7578:	b007      	add	sp, #28
    757a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    757e:	2b2e      	cmp	r3, #46	; 0x2e
    7580:	f000 8093 	beq.w	76aa <_scanf_float+0x1c2>
    7584:	2b30      	cmp	r3, #48	; 0x30
    7586:	d1e5      	bne.n	7554 <_scanf_float+0x6c>
    7588:	6821      	ldr	r1, [r4, #0]
    758a:	05c8      	lsls	r0, r1, #23
    758c:	d562      	bpl.n	7654 <_scanf_float+0x16c>
    758e:	9b02      	ldr	r3, [sp, #8]
    7590:	f021 0180 	bic.w	r1, r1, #128	; 0x80
    7594:	6021      	str	r1, [r4, #0]
    7596:	f108 0801 	add.w	r8, r8, #1
    759a:	b11b      	cbz	r3, 75a4 <_scanf_float+0xbc>
    759c:	3b01      	subs	r3, #1
    759e:	3201      	adds	r2, #1
    75a0:	9302      	str	r3, [sp, #8]
    75a2:	60a2      	str	r2, [r4, #8]
    75a4:	68a3      	ldr	r3, [r4, #8]
    75a6:	3b01      	subs	r3, #1
    75a8:	60a3      	str	r3, [r4, #8]
    75aa:	6923      	ldr	r3, [r4, #16]
    75ac:	3301      	adds	r3, #1
    75ae:	6123      	str	r3, [r4, #16]
    75b0:	687b      	ldr	r3, [r7, #4]
    75b2:	3b01      	subs	r3, #1
    75b4:	2b00      	cmp	r3, #0
    75b6:	607b      	str	r3, [r7, #4]
    75b8:	f340 80a2 	ble.w	7700 <_scanf_float+0x218>
    75bc:	683b      	ldr	r3, [r7, #0]
    75be:	3301      	adds	r3, #1
    75c0:	603b      	str	r3, [r7, #0]
    75c2:	e7b4      	b.n	752e <_scanf_float+0x46>
    75c4:	2b45      	cmp	r3, #69	; 0x45
    75c6:	d07a      	beq.n	76be <_scanf_float+0x1d6>
    75c8:	2b46      	cmp	r3, #70	; 0x46
    75ca:	d064      	beq.n	7696 <_scanf_float+0x1ae>
    75cc:	2b41      	cmp	r3, #65	; 0x41
    75ce:	d1c1      	bne.n	7554 <_scanf_float+0x6c>
    75d0:	f1ba 0f01 	cmp.w	sl, #1
    75d4:	d1be      	bne.n	7554 <_scanf_float+0x6c>
    75d6:	f04f 0a02 	mov.w	sl, #2
    75da:	e043      	b.n	7664 <_scanf_float+0x17c>
    75dc:	2b65      	cmp	r3, #101	; 0x65
    75de:	d06e      	beq.n	76be <_scanf_float+0x1d6>
    75e0:	d81a      	bhi.n	7618 <_scanf_float+0x130>
    75e2:	2b54      	cmp	r3, #84	; 0x54
    75e4:	d05c      	beq.n	76a0 <_scanf_float+0x1b8>
    75e6:	d813      	bhi.n	7610 <_scanf_float+0x128>
    75e8:	2b4e      	cmp	r3, #78	; 0x4e
    75ea:	d1b3      	bne.n	7554 <_scanf_float+0x6c>
    75ec:	f1ba 0f00 	cmp.w	sl, #0
    75f0:	d142      	bne.n	7678 <_scanf_float+0x190>
    75f2:	f1b8 0f00 	cmp.w	r8, #0
    75f6:	d142      	bne.n	767e <_scanf_float+0x196>
    75f8:	6822      	ldr	r2, [r4, #0]
    75fa:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
    75fe:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
    7602:	d13c      	bne.n	767e <_scanf_float+0x196>
    7604:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
    7608:	6022      	str	r2, [r4, #0]
    760a:	f04f 0a01 	mov.w	sl, #1
    760e:	e029      	b.n	7664 <_scanf_float+0x17c>
    7610:	2b59      	cmp	r3, #89	; 0x59
    7612:	d01b      	beq.n	764c <_scanf_float+0x164>
    7614:	2b61      	cmp	r3, #97	; 0x61
    7616:	e7da      	b.n	75ce <_scanf_float+0xe6>
    7618:	2b6e      	cmp	r3, #110	; 0x6e
    761a:	d0e7      	beq.n	75ec <_scanf_float+0x104>
    761c:	d812      	bhi.n	7644 <_scanf_float+0x15c>
    761e:	2b66      	cmp	r3, #102	; 0x66
    7620:	d039      	beq.n	7696 <_scanf_float+0x1ae>
    7622:	2b69      	cmp	r3, #105	; 0x69
    7624:	d196      	bne.n	7554 <_scanf_float+0x6c>
    7626:	bb95      	cbnz	r5, 768e <_scanf_float+0x1a6>
    7628:	f1b8 0f00 	cmp.w	r8, #0
    762c:	d195      	bne.n	755a <_scanf_float+0x72>
    762e:	6822      	ldr	r2, [r4, #0]
    7630:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
    7634:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
    7638:	d193      	bne.n	7562 <_scanf_float+0x7a>
    763a:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
    763e:	6022      	str	r2, [r4, #0]
    7640:	2501      	movs	r5, #1
    7642:	e00f      	b.n	7664 <_scanf_float+0x17c>
    7644:	2b74      	cmp	r3, #116	; 0x74
    7646:	d02b      	beq.n	76a0 <_scanf_float+0x1b8>
    7648:	2b79      	cmp	r3, #121	; 0x79
    764a:	d183      	bne.n	7554 <_scanf_float+0x6c>
    764c:	2d07      	cmp	r5, #7
    764e:	d181      	bne.n	7554 <_scanf_float+0x6c>
    7650:	2508      	movs	r5, #8
    7652:	e007      	b.n	7664 <_scanf_float+0x17c>
    7654:	eb1a 0f05 	cmn.w	sl, r5
    7658:	f47f af7c 	bne.w	7554 <_scanf_float+0x6c>
    765c:	6822      	ldr	r2, [r4, #0]
    765e:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
    7662:	6022      	str	r2, [r4, #0]
    7664:	f806 3b01 	strb.w	r3, [r6], #1
    7668:	e79c      	b.n	75a4 <_scanf_float+0xbc>
    766a:	6822      	ldr	r2, [r4, #0]
    766c:	0610      	lsls	r0, r2, #24
    766e:	f57f af71 	bpl.w	7554 <_scanf_float+0x6c>
    7672:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    7676:	e7f4      	b.n	7662 <_scanf_float+0x17a>
    7678:	f1ba 0f02 	cmp.w	sl, #2
    767c:	d03d      	beq.n	76fa <_scanf_float+0x212>
    767e:	2d01      	cmp	r5, #1
    7680:	d002      	beq.n	7688 <_scanf_float+0x1a0>
    7682:	2d04      	cmp	r5, #4
    7684:	f47f af66 	bne.w	7554 <_scanf_float+0x6c>
    7688:	3501      	adds	r5, #1
    768a:	b2ed      	uxtb	r5, r5
    768c:	e7ea      	b.n	7664 <_scanf_float+0x17c>
    768e:	2d03      	cmp	r5, #3
    7690:	d0fa      	beq.n	7688 <_scanf_float+0x1a0>
    7692:	2d05      	cmp	r5, #5
    7694:	e7f6      	b.n	7684 <_scanf_float+0x19c>
    7696:	2d02      	cmp	r5, #2
    7698:	f47f af5c 	bne.w	7554 <_scanf_float+0x6c>
    769c:	2503      	movs	r5, #3
    769e:	e7e1      	b.n	7664 <_scanf_float+0x17c>
    76a0:	2d06      	cmp	r5, #6
    76a2:	f47f af57 	bne.w	7554 <_scanf_float+0x6c>
    76a6:	2507      	movs	r5, #7
    76a8:	e7dc      	b.n	7664 <_scanf_float+0x17c>
    76aa:	6822      	ldr	r2, [r4, #0]
    76ac:	0591      	lsls	r1, r2, #22
    76ae:	f57f af51 	bpl.w	7554 <_scanf_float+0x6c>
    76b2:	f422 7220 	bic.w	r2, r2, #640	; 0x280
    76b6:	6022      	str	r2, [r4, #0]
    76b8:	f8cd 8004 	str.w	r8, [sp, #4]
    76bc:	e7d2      	b.n	7664 <_scanf_float+0x17c>
    76be:	6822      	ldr	r2, [r4, #0]
    76c0:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
    76c4:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
    76c8:	d006      	beq.n	76d8 <_scanf_float+0x1f0>
    76ca:	0550      	lsls	r0, r2, #21
    76cc:	f57f af42 	bpl.w	7554 <_scanf_float+0x6c>
    76d0:	f1b8 0f00 	cmp.w	r8, #0
    76d4:	f43f af45 	beq.w	7562 <_scanf_float+0x7a>
    76d8:	0591      	lsls	r1, r2, #22
    76da:	bf58      	it	pl
    76dc:	9901      	ldrpl	r1, [sp, #4]
    76de:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
    76e2:	bf58      	it	pl
    76e4:	eba8 0101 	subpl.w	r1, r8, r1
    76e8:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
    76ec:	bf58      	it	pl
    76ee:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
    76f2:	6022      	str	r2, [r4, #0]
    76f4:	f04f 0800 	mov.w	r8, #0
    76f8:	e7b4      	b.n	7664 <_scanf_float+0x17c>
    76fa:	f04f 0a03 	mov.w	sl, #3
    76fe:	e7b1      	b.n	7664 <_scanf_float+0x17c>
    7700:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
    7704:	4639      	mov	r1, r7
    7706:	4648      	mov	r0, r9
    7708:	4798      	blx	r3
    770a:	2800      	cmp	r0, #0
    770c:	f43f af0f 	beq.w	752e <_scanf_float+0x46>
    7710:	e720      	b.n	7554 <_scanf_float+0x6c>
    7712:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    7716:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
    771a:	463a      	mov	r2, r7
    771c:	4648      	mov	r0, r9
    771e:	4798      	blx	r3
    7720:	6923      	ldr	r3, [r4, #16]
    7722:	3b01      	subs	r3, #1
    7724:	6123      	str	r3, [r4, #16]
    7726:	e722      	b.n	756e <_scanf_float+0x86>
    7728:	1e6b      	subs	r3, r5, #1
    772a:	2b06      	cmp	r3, #6
    772c:	d825      	bhi.n	777a <_scanf_float+0x292>
    772e:	2d02      	cmp	r5, #2
    7730:	d836      	bhi.n	77a0 <_scanf_float+0x2b8>
    7732:	455e      	cmp	r6, fp
    7734:	f67f af1e 	bls.w	7574 <_scanf_float+0x8c>
    7738:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    773c:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
    7740:	463a      	mov	r2, r7
    7742:	4648      	mov	r0, r9
    7744:	4798      	blx	r3
    7746:	6923      	ldr	r3, [r4, #16]
    7748:	3b01      	subs	r3, #1
    774a:	6123      	str	r3, [r4, #16]
    774c:	e7f1      	b.n	7732 <_scanf_float+0x24a>
    774e:	9802      	ldr	r0, [sp, #8]
    7750:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    7754:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
    7758:	9002      	str	r0, [sp, #8]
    775a:	463a      	mov	r2, r7
    775c:	4648      	mov	r0, r9
    775e:	4798      	blx	r3
    7760:	6923      	ldr	r3, [r4, #16]
    7762:	3b01      	subs	r3, #1
    7764:	6123      	str	r3, [r4, #16]
    7766:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
    776a:	fa5f fa8a 	uxtb.w	sl, sl
    776e:	f1ba 0f02 	cmp.w	sl, #2
    7772:	d1ec      	bne.n	774e <_scanf_float+0x266>
    7774:	3d03      	subs	r5, #3
    7776:	b2ed      	uxtb	r5, r5
    7778:	1b76      	subs	r6, r6, r5
    777a:	6823      	ldr	r3, [r4, #0]
    777c:	05da      	lsls	r2, r3, #23
    777e:	d52f      	bpl.n	77e0 <_scanf_float+0x2f8>
    7780:	055b      	lsls	r3, r3, #21
    7782:	d510      	bpl.n	77a6 <_scanf_float+0x2be>
    7784:	455e      	cmp	r6, fp
    7786:	f67f aef5 	bls.w	7574 <_scanf_float+0x8c>
    778a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    778e:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
    7792:	463a      	mov	r2, r7
    7794:	4648      	mov	r0, r9
    7796:	4798      	blx	r3
    7798:	6923      	ldr	r3, [r4, #16]
    779a:	3b01      	subs	r3, #1
    779c:	6123      	str	r3, [r4, #16]
    779e:	e7f1      	b.n	7784 <_scanf_float+0x29c>
    77a0:	46aa      	mov	sl, r5
    77a2:	9602      	str	r6, [sp, #8]
    77a4:	e7df      	b.n	7766 <_scanf_float+0x27e>
    77a6:	f816 1c01 	ldrb.w	r1, [r6, #-1]
    77aa:	6923      	ldr	r3, [r4, #16]
    77ac:	2965      	cmp	r1, #101	; 0x65
    77ae:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
    77b2:	f106 35ff 	add.w	r5, r6, #4294967295	; 0xffffffff
    77b6:	6123      	str	r3, [r4, #16]
    77b8:	d00c      	beq.n	77d4 <_scanf_float+0x2ec>
    77ba:	2945      	cmp	r1, #69	; 0x45
    77bc:	d00a      	beq.n	77d4 <_scanf_float+0x2ec>
    77be:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    77c2:	463a      	mov	r2, r7
    77c4:	4648      	mov	r0, r9
    77c6:	4798      	blx	r3
    77c8:	6923      	ldr	r3, [r4, #16]
    77ca:	f816 1c02 	ldrb.w	r1, [r6, #-2]
    77ce:	3b01      	subs	r3, #1
    77d0:	1eb5      	subs	r5, r6, #2
    77d2:	6123      	str	r3, [r4, #16]
    77d4:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    77d8:	463a      	mov	r2, r7
    77da:	4648      	mov	r0, r9
    77dc:	4798      	blx	r3
    77de:	462e      	mov	r6, r5
    77e0:	6825      	ldr	r5, [r4, #0]
    77e2:	f015 0510 	ands.w	r5, r5, #16
    77e6:	d158      	bne.n	789a <_scanf_float+0x3b2>
    77e8:	7035      	strb	r5, [r6, #0]
    77ea:	6823      	ldr	r3, [r4, #0]
    77ec:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
    77f0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
    77f4:	d11c      	bne.n	7830 <_scanf_float+0x348>
    77f6:	9b01      	ldr	r3, [sp, #4]
    77f8:	4543      	cmp	r3, r8
    77fa:	eba3 0208 	sub.w	r2, r3, r8
    77fe:	d124      	bne.n	784a <_scanf_float+0x362>
    7800:	2200      	movs	r2, #0
    7802:	4659      	mov	r1, fp
    7804:	4648      	mov	r0, r9
    7806:	f001 f863 	bl	88d0 <_strtod_r>
    780a:	9b03      	ldr	r3, [sp, #12]
    780c:	6821      	ldr	r1, [r4, #0]
    780e:	681b      	ldr	r3, [r3, #0]
    7810:	f011 0f02 	tst.w	r1, #2
    7814:	ec57 6b10 	vmov	r6, r7, d0
    7818:	f103 0204 	add.w	r2, r3, #4
    781c:	d020      	beq.n	7860 <_scanf_float+0x378>
    781e:	9903      	ldr	r1, [sp, #12]
    7820:	600a      	str	r2, [r1, #0]
    7822:	681b      	ldr	r3, [r3, #0]
    7824:	e9c3 6700 	strd	r6, r7, [r3]
    7828:	68e3      	ldr	r3, [r4, #12]
    782a:	3301      	adds	r3, #1
    782c:	60e3      	str	r3, [r4, #12]
    782e:	e6a2      	b.n	7576 <_scanf_float+0x8e>
    7830:	9b04      	ldr	r3, [sp, #16]
    7832:	2b00      	cmp	r3, #0
    7834:	d0e4      	beq.n	7800 <_scanf_float+0x318>
    7836:	9905      	ldr	r1, [sp, #20]
    7838:	230a      	movs	r3, #10
    783a:	462a      	mov	r2, r5
    783c:	3101      	adds	r1, #1
    783e:	4648      	mov	r0, r9
    7840:	f001 f8c4 	bl	89cc <_strtol_r>
    7844:	9b04      	ldr	r3, [sp, #16]
    7846:	9e05      	ldr	r6, [sp, #20]
    7848:	1ac2      	subs	r2, r0, r3
    784a:	f204 136f 	addw	r3, r4, #367	; 0x16f
    784e:	429e      	cmp	r6, r3
    7850:	bf28      	it	cs
    7852:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
    7856:	4912      	ldr	r1, [pc, #72]	; (78a0 <_scanf_float+0x3b8>)
    7858:	4630      	mov	r0, r6
    785a:	f000 f99f 	bl	7b9c <siprintf>
    785e:	e7cf      	b.n	7800 <_scanf_float+0x318>
    7860:	f011 0f04 	tst.w	r1, #4
    7864:	9903      	ldr	r1, [sp, #12]
    7866:	600a      	str	r2, [r1, #0]
    7868:	d1db      	bne.n	7822 <_scanf_float+0x33a>
    786a:	f8d3 8000 	ldr.w	r8, [r3]
    786e:	ee10 2a10 	vmov	r2, s0
    7872:	463b      	mov	r3, r7
    7874:	ee10 0a10 	vmov	r0, s0
    7878:	4639      	mov	r1, r7
    787a:	f004 fc09 	bl	c090 <__aeabi_dcmpun>
    787e:	b128      	cbz	r0, 788c <_scanf_float+0x3a4>
    7880:	4808      	ldr	r0, [pc, #32]	; (78a4 <_scanf_float+0x3bc>)
    7882:	f000 f985 	bl	7b90 <nanf>
    7886:	ed88 0a00 	vstr	s0, [r8]
    788a:	e7cd      	b.n	7828 <_scanf_float+0x340>
    788c:	4630      	mov	r0, r6
    788e:	4639      	mov	r1, r7
    7890:	f004 fc5c 	bl	c14c <__aeabi_d2f>
    7894:	f8c8 0000 	str.w	r0, [r8]
    7898:	e7c6      	b.n	7828 <_scanf_float+0x340>
    789a:	2500      	movs	r5, #0
    789c:	e66b      	b.n	7576 <_scanf_float+0x8e>
    789e:	bf00      	nop
    78a0:	0000dbfb 	.word	0x0000dbfb
    78a4:	0000cae9 	.word	0x0000cae9

000078a8 <iprintf>:
iprintf():
    78a8:	b40f      	push	{r0, r1, r2, r3}
    78aa:	4b0a      	ldr	r3, [pc, #40]	; (78d4 <iprintf+0x2c>)
    78ac:	b513      	push	{r0, r1, r4, lr}
    78ae:	681c      	ldr	r4, [r3, #0]
    78b0:	b124      	cbz	r4, 78bc <iprintf+0x14>
    78b2:	69a3      	ldr	r3, [r4, #24]
    78b4:	b913      	cbnz	r3, 78bc <iprintf+0x14>
    78b6:	4620      	mov	r0, r4
    78b8:	f002 f92c 	bl	9b14 <__sinit>
    78bc:	ab05      	add	r3, sp, #20
    78be:	9a04      	ldr	r2, [sp, #16]
    78c0:	68a1      	ldr	r1, [r4, #8]
    78c2:	9301      	str	r3, [sp, #4]
    78c4:	4620      	mov	r0, r4
    78c6:	f7ff f8a3 	bl	6a10 <_vfiprintf_r>
    78ca:	b002      	add	sp, #8
    78cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    78d0:	b004      	add	sp, #16
    78d2:	4770      	bx	lr
    78d4:	100001b0 	.word	0x100001b0

000078d8 <putchar>:
putchar():
    78d8:	b538      	push	{r3, r4, r5, lr}
    78da:	4b08      	ldr	r3, [pc, #32]	; (78fc <putchar+0x24>)
    78dc:	681c      	ldr	r4, [r3, #0]
    78de:	4605      	mov	r5, r0
    78e0:	b124      	cbz	r4, 78ec <putchar+0x14>
    78e2:	69a3      	ldr	r3, [r4, #24]
    78e4:	b913      	cbnz	r3, 78ec <putchar+0x14>
    78e6:	4620      	mov	r0, r4
    78e8:	f002 f914 	bl	9b14 <__sinit>
    78ec:	68a2      	ldr	r2, [r4, #8]
    78ee:	4629      	mov	r1, r5
    78f0:	4620      	mov	r0, r4
    78f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    78f6:	f003 be75 	b.w	b5e4 <_putc_r>
    78fa:	bf00      	nop
    78fc:	100001b0 	.word	0x100001b0

00007900 <_puts_r>:
_puts_r():
    7900:	b570      	push	{r4, r5, r6, lr}
    7902:	460e      	mov	r6, r1
    7904:	4605      	mov	r5, r0
    7906:	b118      	cbz	r0, 7910 <_puts_r+0x10>
    7908:	6983      	ldr	r3, [r0, #24]
    790a:	b90b      	cbnz	r3, 7910 <_puts_r+0x10>
    790c:	f002 f902 	bl	9b14 <__sinit>
    7910:	69ab      	ldr	r3, [r5, #24]
    7912:	68ac      	ldr	r4, [r5, #8]
    7914:	b913      	cbnz	r3, 791c <_puts_r+0x1c>
    7916:	4628      	mov	r0, r5
    7918:	f002 f8fc 	bl	9b14 <__sinit>
    791c:	4b2c      	ldr	r3, [pc, #176]	; (79d0 <_puts_r+0xd0>)
    791e:	429c      	cmp	r4, r3
    7920:	d120      	bne.n	7964 <_puts_r+0x64>
    7922:	686c      	ldr	r4, [r5, #4]
    7924:	6e63      	ldr	r3, [r4, #100]	; 0x64
    7926:	07db      	lsls	r3, r3, #31
    7928:	d405      	bmi.n	7936 <_puts_r+0x36>
    792a:	89a3      	ldrh	r3, [r4, #12]
    792c:	0598      	lsls	r0, r3, #22
    792e:	d402      	bmi.n	7936 <_puts_r+0x36>
    7930:	6da0      	ldr	r0, [r4, #88]	; 0x58
    7932:	f7fe ff58 	bl	67e6 <__retarget_lock_acquire_recursive>
    7936:	89a3      	ldrh	r3, [r4, #12]
    7938:	0719      	lsls	r1, r3, #28
    793a:	d51d      	bpl.n	7978 <_puts_r+0x78>
    793c:	6923      	ldr	r3, [r4, #16]
    793e:	b1db      	cbz	r3, 7978 <_puts_r+0x78>
    7940:	3e01      	subs	r6, #1
    7942:	68a3      	ldr	r3, [r4, #8]
    7944:	f816 1f01 	ldrb.w	r1, [r6, #1]!
    7948:	3b01      	subs	r3, #1
    794a:	60a3      	str	r3, [r4, #8]
    794c:	bb39      	cbnz	r1, 799e <_puts_r+0x9e>
    794e:	2b00      	cmp	r3, #0
    7950:	da38      	bge.n	79c4 <_puts_r+0xc4>
    7952:	4622      	mov	r2, r4
    7954:	210a      	movs	r1, #10
    7956:	4628      	mov	r0, r5
    7958:	f001 f8ac 	bl	8ab4 <__swbuf_r>
    795c:	3001      	adds	r0, #1
    795e:	d011      	beq.n	7984 <_puts_r+0x84>
    7960:	250a      	movs	r5, #10
    7962:	e011      	b.n	7988 <_puts_r+0x88>
    7964:	4b1b      	ldr	r3, [pc, #108]	; (79d4 <_puts_r+0xd4>)
    7966:	429c      	cmp	r4, r3
    7968:	d101      	bne.n	796e <_puts_r+0x6e>
    796a:	68ac      	ldr	r4, [r5, #8]
    796c:	e7da      	b.n	7924 <_puts_r+0x24>
    796e:	4b1a      	ldr	r3, [pc, #104]	; (79d8 <_puts_r+0xd8>)
    7970:	429c      	cmp	r4, r3
    7972:	bf08      	it	eq
    7974:	68ec      	ldreq	r4, [r5, #12]
    7976:	e7d5      	b.n	7924 <_puts_r+0x24>
    7978:	4621      	mov	r1, r4
    797a:	4628      	mov	r0, r5
    797c:	f001 f8ec 	bl	8b58 <__swsetup_r>
    7980:	2800      	cmp	r0, #0
    7982:	d0dd      	beq.n	7940 <_puts_r+0x40>
    7984:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
    7988:	6e63      	ldr	r3, [r4, #100]	; 0x64
    798a:	07da      	lsls	r2, r3, #31
    798c:	d405      	bmi.n	799a <_puts_r+0x9a>
    798e:	89a3      	ldrh	r3, [r4, #12]
    7990:	059b      	lsls	r3, r3, #22
    7992:	d402      	bmi.n	799a <_puts_r+0x9a>
    7994:	6da0      	ldr	r0, [r4, #88]	; 0x58
    7996:	f7fe ff27 	bl	67e8 <__retarget_lock_release_recursive>
    799a:	4628      	mov	r0, r5
    799c:	bd70      	pop	{r4, r5, r6, pc}
    799e:	2b00      	cmp	r3, #0
    79a0:	da04      	bge.n	79ac <_puts_r+0xac>
    79a2:	69a2      	ldr	r2, [r4, #24]
    79a4:	429a      	cmp	r2, r3
    79a6:	dc06      	bgt.n	79b6 <_puts_r+0xb6>
    79a8:	290a      	cmp	r1, #10
    79aa:	d004      	beq.n	79b6 <_puts_r+0xb6>
    79ac:	6823      	ldr	r3, [r4, #0]
    79ae:	1c5a      	adds	r2, r3, #1
    79b0:	6022      	str	r2, [r4, #0]
    79b2:	7019      	strb	r1, [r3, #0]
    79b4:	e7c5      	b.n	7942 <_puts_r+0x42>
    79b6:	4622      	mov	r2, r4
    79b8:	4628      	mov	r0, r5
    79ba:	f001 f87b 	bl	8ab4 <__swbuf_r>
    79be:	3001      	adds	r0, #1
    79c0:	d1bf      	bne.n	7942 <_puts_r+0x42>
    79c2:	e7df      	b.n	7984 <_puts_r+0x84>
    79c4:	6823      	ldr	r3, [r4, #0]
    79c6:	250a      	movs	r5, #10
    79c8:	1c5a      	adds	r2, r3, #1
    79ca:	6022      	str	r2, [r4, #0]
    79cc:	701d      	strb	r5, [r3, #0]
    79ce:	e7db      	b.n	7988 <_puts_r+0x88>
    79d0:	0000dc80 	.word	0x0000dc80
    79d4:	0000dca0 	.word	0x0000dca0
    79d8:	0000dc60 	.word	0x0000dc60

000079dc <puts>:
puts():
    79dc:	4b02      	ldr	r3, [pc, #8]	; (79e8 <puts+0xc>)
    79de:	4601      	mov	r1, r0
    79e0:	6818      	ldr	r0, [r3, #0]
    79e2:	f7ff bf8d 	b.w	7900 <_puts_r>
    79e6:	bf00      	nop
    79e8:	100001b0 	.word	0x100001b0

000079ec <_sbrk_r>:
_sbrk_r():
    79ec:	b538      	push	{r3, r4, r5, lr}
    79ee:	4c06      	ldr	r4, [pc, #24]	; (7a08 <_sbrk_r+0x1c>)
    79f0:	2300      	movs	r3, #0
    79f2:	4605      	mov	r5, r0
    79f4:	4608      	mov	r0, r1
    79f6:	6023      	str	r3, [r4, #0]
    79f8:	f7f8 fca4 	bl	344 <_sbrk>
    79fc:	1c43      	adds	r3, r0, #1
    79fe:	d102      	bne.n	7a06 <_sbrk_r+0x1a>
    7a00:	6823      	ldr	r3, [r4, #0]
    7a02:	b103      	cbz	r3, 7a06 <_sbrk_r+0x1a>
    7a04:	602b      	str	r3, [r5, #0]
    7a06:	bd38      	pop	{r3, r4, r5, pc}
    7a08:	1000147c 	.word	0x1000147c

00007a0c <setvbuf>:
setvbuf():
    7a0c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    7a10:	461e      	mov	r6, r3
    7a12:	4b5b      	ldr	r3, [pc, #364]	; (7b80 <setvbuf+0x174>)
    7a14:	681d      	ldr	r5, [r3, #0]
    7a16:	4604      	mov	r4, r0
    7a18:	460f      	mov	r7, r1
    7a1a:	4690      	mov	r8, r2
    7a1c:	b125      	cbz	r5, 7a28 <setvbuf+0x1c>
    7a1e:	69ab      	ldr	r3, [r5, #24]
    7a20:	b913      	cbnz	r3, 7a28 <setvbuf+0x1c>
    7a22:	4628      	mov	r0, r5
    7a24:	f002 f876 	bl	9b14 <__sinit>
    7a28:	4b56      	ldr	r3, [pc, #344]	; (7b84 <setvbuf+0x178>)
    7a2a:	429c      	cmp	r4, r3
    7a2c:	d166      	bne.n	7afc <setvbuf+0xf0>
    7a2e:	686c      	ldr	r4, [r5, #4]
    7a30:	f1b8 0f02 	cmp.w	r8, #2
    7a34:	d006      	beq.n	7a44 <setvbuf+0x38>
    7a36:	f1b8 0f01 	cmp.w	r8, #1
    7a3a:	f200 809d 	bhi.w	7b78 <setvbuf+0x16c>
    7a3e:	2e00      	cmp	r6, #0
    7a40:	f2c0 809a 	blt.w	7b78 <setvbuf+0x16c>
    7a44:	6e63      	ldr	r3, [r4, #100]	; 0x64
    7a46:	07da      	lsls	r2, r3, #31
    7a48:	d405      	bmi.n	7a56 <setvbuf+0x4a>
    7a4a:	89a3      	ldrh	r3, [r4, #12]
    7a4c:	059b      	lsls	r3, r3, #22
    7a4e:	d402      	bmi.n	7a56 <setvbuf+0x4a>
    7a50:	6da0      	ldr	r0, [r4, #88]	; 0x58
    7a52:	f7fe fec8 	bl	67e6 <__retarget_lock_acquire_recursive>
    7a56:	4621      	mov	r1, r4
    7a58:	4628      	mov	r0, r5
    7a5a:	f001 ffb5 	bl	99c8 <_fflush_r>
    7a5e:	6b61      	ldr	r1, [r4, #52]	; 0x34
    7a60:	b141      	cbz	r1, 7a74 <setvbuf+0x68>
    7a62:	f104 0344 	add.w	r3, r4, #68	; 0x44
    7a66:	4299      	cmp	r1, r3
    7a68:	d002      	beq.n	7a70 <setvbuf+0x64>
    7a6a:	4628      	mov	r0, r5
    7a6c:	f7fe fefe 	bl	686c <_free_r>
    7a70:	2300      	movs	r3, #0
    7a72:	6363      	str	r3, [r4, #52]	; 0x34
    7a74:	2300      	movs	r3, #0
    7a76:	61a3      	str	r3, [r4, #24]
    7a78:	6063      	str	r3, [r4, #4]
    7a7a:	89a3      	ldrh	r3, [r4, #12]
    7a7c:	0618      	lsls	r0, r3, #24
    7a7e:	d503      	bpl.n	7a88 <setvbuf+0x7c>
    7a80:	6921      	ldr	r1, [r4, #16]
    7a82:	4628      	mov	r0, r5
    7a84:	f7fe fef2 	bl	686c <_free_r>
    7a88:	89a3      	ldrh	r3, [r4, #12]
    7a8a:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
    7a8e:	f023 0303 	bic.w	r3, r3, #3
    7a92:	f1b8 0f02 	cmp.w	r8, #2
    7a96:	81a3      	strh	r3, [r4, #12]
    7a98:	d06a      	beq.n	7b70 <setvbuf+0x164>
    7a9a:	ab01      	add	r3, sp, #4
    7a9c:	466a      	mov	r2, sp
    7a9e:	4621      	mov	r1, r4
    7aa0:	4628      	mov	r0, r5
    7aa2:	f002 fc5d 	bl	a360 <__swhatbuf_r>
    7aa6:	89a3      	ldrh	r3, [r4, #12]
    7aa8:	4318      	orrs	r0, r3
    7aaa:	81a0      	strh	r0, [r4, #12]
    7aac:	2e00      	cmp	r6, #0
    7aae:	d12f      	bne.n	7b10 <setvbuf+0x104>
    7ab0:	9e00      	ldr	r6, [sp, #0]
    7ab2:	4630      	mov	r0, r6
    7ab4:	f7fe fe9a 	bl	67ec <malloc>
    7ab8:	4607      	mov	r7, r0
    7aba:	2800      	cmp	r0, #0
    7abc:	d153      	bne.n	7b66 <setvbuf+0x15a>
    7abe:	f8dd 9000 	ldr.w	r9, [sp]
    7ac2:	45b1      	cmp	r9, r6
    7ac4:	d148      	bne.n	7b58 <setvbuf+0x14c>
    7ac6:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
    7aca:	2200      	movs	r2, #0
    7acc:	60a2      	str	r2, [r4, #8]
    7ace:	f104 0247 	add.w	r2, r4, #71	; 0x47
    7ad2:	6022      	str	r2, [r4, #0]
    7ad4:	6122      	str	r2, [r4, #16]
    7ad6:	2201      	movs	r2, #1
    7ad8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    7adc:	6162      	str	r2, [r4, #20]
    7ade:	6e62      	ldr	r2, [r4, #100]	; 0x64
    7ae0:	f043 0302 	orr.w	r3, r3, #2
    7ae4:	07d1      	lsls	r1, r2, #31
    7ae6:	81a3      	strh	r3, [r4, #12]
    7ae8:	d404      	bmi.n	7af4 <setvbuf+0xe8>
    7aea:	059b      	lsls	r3, r3, #22
    7aec:	d402      	bmi.n	7af4 <setvbuf+0xe8>
    7aee:	6da0      	ldr	r0, [r4, #88]	; 0x58
    7af0:	f7fe fe7a 	bl	67e8 <__retarget_lock_release_recursive>
    7af4:	4628      	mov	r0, r5
    7af6:	b003      	add	sp, #12
    7af8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    7afc:	4b22      	ldr	r3, [pc, #136]	; (7b88 <setvbuf+0x17c>)
    7afe:	429c      	cmp	r4, r3
    7b00:	d101      	bne.n	7b06 <setvbuf+0xfa>
    7b02:	68ac      	ldr	r4, [r5, #8]
    7b04:	e794      	b.n	7a30 <setvbuf+0x24>
    7b06:	4b21      	ldr	r3, [pc, #132]	; (7b8c <setvbuf+0x180>)
    7b08:	429c      	cmp	r4, r3
    7b0a:	bf08      	it	eq
    7b0c:	68ec      	ldreq	r4, [r5, #12]
    7b0e:	e78f      	b.n	7a30 <setvbuf+0x24>
    7b10:	2f00      	cmp	r7, #0
    7b12:	d0ce      	beq.n	7ab2 <setvbuf+0xa6>
    7b14:	69ab      	ldr	r3, [r5, #24]
    7b16:	b913      	cbnz	r3, 7b1e <setvbuf+0x112>
    7b18:	4628      	mov	r0, r5
    7b1a:	f001 fffb 	bl	9b14 <__sinit>
    7b1e:	f1b8 0f01 	cmp.w	r8, #1
    7b22:	bf08      	it	eq
    7b24:	89a3      	ldrheq	r3, [r4, #12]
    7b26:	6027      	str	r7, [r4, #0]
    7b28:	bf04      	itt	eq
    7b2a:	f043 0301 	orreq.w	r3, r3, #1
    7b2e:	81a3      	strheq	r3, [r4, #12]
    7b30:	89a3      	ldrh	r3, [r4, #12]
    7b32:	f013 0208 	ands.w	r2, r3, #8
    7b36:	e9c4 7604 	strd	r7, r6, [r4, #16]
    7b3a:	d01b      	beq.n	7b74 <setvbuf+0x168>
    7b3c:	07da      	lsls	r2, r3, #31
    7b3e:	bf41      	itttt	mi
    7b40:	2200      	movmi	r2, #0
    7b42:	4276      	negmi	r6, r6
    7b44:	60a2      	strmi	r2, [r4, #8]
    7b46:	61a6      	strmi	r6, [r4, #24]
    7b48:	bf58      	it	pl
    7b4a:	60a6      	strpl	r6, [r4, #8]
    7b4c:	6e65      	ldr	r5, [r4, #100]	; 0x64
    7b4e:	f015 0501 	ands.w	r5, r5, #1
    7b52:	d0ca      	beq.n	7aea <setvbuf+0xde>
    7b54:	2500      	movs	r5, #0
    7b56:	e7cd      	b.n	7af4 <setvbuf+0xe8>
    7b58:	4648      	mov	r0, r9
    7b5a:	f7fe fe47 	bl	67ec <malloc>
    7b5e:	4607      	mov	r7, r0
    7b60:	2800      	cmp	r0, #0
    7b62:	d0b0      	beq.n	7ac6 <setvbuf+0xba>
    7b64:	464e      	mov	r6, r9
    7b66:	89a3      	ldrh	r3, [r4, #12]
    7b68:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    7b6c:	81a3      	strh	r3, [r4, #12]
    7b6e:	e7d1      	b.n	7b14 <setvbuf+0x108>
    7b70:	2500      	movs	r5, #0
    7b72:	e7aa      	b.n	7aca <setvbuf+0xbe>
    7b74:	60a2      	str	r2, [r4, #8]
    7b76:	e7e9      	b.n	7b4c <setvbuf+0x140>
    7b78:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
    7b7c:	e7ba      	b.n	7af4 <setvbuf+0xe8>
    7b7e:	bf00      	nop
    7b80:	100001b0 	.word	0x100001b0
    7b84:	0000dc80 	.word	0x0000dc80
    7b88:	0000dca0 	.word	0x0000dca0
    7b8c:	0000dc60 	.word	0x0000dc60

00007b90 <nanf>:
nanf():
    7b90:	ed9f 0a01 	vldr	s0, [pc, #4]	; 7b98 <nanf+0x8>
    7b94:	4770      	bx	lr
    7b96:	bf00      	nop
    7b98:	7fc00000 	.word	0x7fc00000

00007b9c <siprintf>:
siprintf():
    7b9c:	b40e      	push	{r1, r2, r3}
    7b9e:	b500      	push	{lr}
    7ba0:	b09c      	sub	sp, #112	; 0x70
    7ba2:	ab1d      	add	r3, sp, #116	; 0x74
    7ba4:	9002      	str	r0, [sp, #8]
    7ba6:	9006      	str	r0, [sp, #24]
    7ba8:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
    7bac:	4809      	ldr	r0, [pc, #36]	; (7bd4 <siprintf+0x38>)
    7bae:	9107      	str	r1, [sp, #28]
    7bb0:	9104      	str	r1, [sp, #16]
    7bb2:	4909      	ldr	r1, [pc, #36]	; (7bd8 <siprintf+0x3c>)
    7bb4:	f853 2b04 	ldr.w	r2, [r3], #4
    7bb8:	9105      	str	r1, [sp, #20]
    7bba:	6800      	ldr	r0, [r0, #0]
    7bbc:	9301      	str	r3, [sp, #4]
    7bbe:	a902      	add	r1, sp, #8
    7bc0:	f003 f92a 	bl	ae18 <_svfiprintf_r>
    7bc4:	9b02      	ldr	r3, [sp, #8]
    7bc6:	2200      	movs	r2, #0
    7bc8:	701a      	strb	r2, [r3, #0]
    7bca:	b01c      	add	sp, #112	; 0x70
    7bcc:	f85d eb04 	ldr.w	lr, [sp], #4
    7bd0:	b003      	add	sp, #12
    7bd2:	4770      	bx	lr
    7bd4:	100001b0 	.word	0x100001b0
    7bd8:	ffff0208 	.word	0xffff0208

00007bdc <strcasecmp>:
strcasecmp():
    7bdc:	b570      	push	{r4, r5, r6, lr}
    7bde:	4d0c      	ldr	r5, [pc, #48]	; (7c10 <strcasecmp+0x34>)
    7be0:	462e      	mov	r6, r5
    7be2:	f810 3b01 	ldrb.w	r3, [r0], #1
    7be6:	5d5a      	ldrb	r2, [r3, r5]
    7be8:	f002 0203 	and.w	r2, r2, #3
    7bec:	2a01      	cmp	r2, #1
    7bee:	f811 2b01 	ldrb.w	r2, [r1], #1
    7bf2:	5cb4      	ldrb	r4, [r6, r2]
    7bf4:	f004 0403 	and.w	r4, r4, #3
    7bf8:	bf08      	it	eq
    7bfa:	3320      	addeq	r3, #32
    7bfc:	2c01      	cmp	r4, #1
    7bfe:	bf08      	it	eq
    7c00:	3220      	addeq	r2, #32
    7c02:	1a9b      	subs	r3, r3, r2
    7c04:	d101      	bne.n	7c0a <strcasecmp+0x2e>
    7c06:	2a00      	cmp	r2, #0
    7c08:	d1eb      	bne.n	7be2 <strcasecmp+0x6>
    7c0a:	4618      	mov	r0, r3
    7c0c:	bd70      	pop	{r4, r5, r6, pc}
    7c0e:	bf00      	nop
    7c10:	0000dab4 	.word	0x0000dab4

00007c14 <strchr>:
strchr():
    7c14:	b2c9      	uxtb	r1, r1
    7c16:	4603      	mov	r3, r0
    7c18:	f810 2b01 	ldrb.w	r2, [r0], #1
    7c1c:	b11a      	cbz	r2, 7c26 <strchr+0x12>
    7c1e:	428a      	cmp	r2, r1
    7c20:	d1f9      	bne.n	7c16 <strchr+0x2>
    7c22:	4618      	mov	r0, r3
    7c24:	4770      	bx	lr
    7c26:	2900      	cmp	r1, #0
    7c28:	bf18      	it	ne
    7c2a:	2300      	movne	r3, #0
    7c2c:	e7f9      	b.n	7c22 <strchr+0xe>

00007c2e <strlen>:
strlen():
    7c2e:	4603      	mov	r3, r0
    7c30:	f813 2b01 	ldrb.w	r2, [r3], #1
    7c34:	2a00      	cmp	r2, #0
    7c36:	d1fb      	bne.n	7c30 <strlen+0x2>
    7c38:	1a18      	subs	r0, r3, r0
    7c3a:	3801      	subs	r0, #1
    7c3c:	4770      	bx	lr
    7c3e:	Address 0x0000000000007c3e is out of bounds.


00007c40 <strncasecmp>:
strncasecmp():
    7c40:	b570      	push	{r4, r5, r6, lr}
    7c42:	4e0f      	ldr	r6, [pc, #60]	; (7c80 <strncasecmp+0x40>)
    7c44:	440a      	add	r2, r1
    7c46:	428a      	cmp	r2, r1
    7c48:	d101      	bne.n	7c4e <strncasecmp+0xe>
    7c4a:	2300      	movs	r3, #0
    7c4c:	e013      	b.n	7c76 <strncasecmp+0x36>
    7c4e:	f810 4b01 	ldrb.w	r4, [r0], #1
    7c52:	5da3      	ldrb	r3, [r4, r6]
    7c54:	f003 0303 	and.w	r3, r3, #3
    7c58:	2b01      	cmp	r3, #1
    7c5a:	f811 3b01 	ldrb.w	r3, [r1], #1
    7c5e:	5cf5      	ldrb	r5, [r6, r3]
    7c60:	f005 0503 	and.w	r5, r5, #3
    7c64:	bf08      	it	eq
    7c66:	3420      	addeq	r4, #32
    7c68:	2d01      	cmp	r5, #1
    7c6a:	bf08      	it	eq
    7c6c:	3320      	addeq	r3, #32
    7c6e:	1ae4      	subs	r4, r4, r3
    7c70:	d103      	bne.n	7c7a <strncasecmp+0x3a>
    7c72:	2b00      	cmp	r3, #0
    7c74:	d1e7      	bne.n	7c46 <strncasecmp+0x6>
    7c76:	4618      	mov	r0, r3
    7c78:	bd70      	pop	{r4, r5, r6, pc}
    7c7a:	4623      	mov	r3, r4
    7c7c:	e7fb      	b.n	7c76 <strncasecmp+0x36>
    7c7e:	bf00      	nop
    7c80:	0000dab4 	.word	0x0000dab4

00007c84 <strncmp>:
strncmp():
    7c84:	b510      	push	{r4, lr}
    7c86:	b16a      	cbz	r2, 7ca4 <strncmp+0x20>
    7c88:	3901      	subs	r1, #1
    7c8a:	1884      	adds	r4, r0, r2
    7c8c:	f810 3b01 	ldrb.w	r3, [r0], #1
    7c90:	f811 2f01 	ldrb.w	r2, [r1, #1]!
    7c94:	4293      	cmp	r3, r2
    7c96:	d103      	bne.n	7ca0 <strncmp+0x1c>
    7c98:	42a0      	cmp	r0, r4
    7c9a:	d001      	beq.n	7ca0 <strncmp+0x1c>
    7c9c:	2b00      	cmp	r3, #0
    7c9e:	d1f5      	bne.n	7c8c <strncmp+0x8>
    7ca0:	1a98      	subs	r0, r3, r2
    7ca2:	bd10      	pop	{r4, pc}
    7ca4:	4610      	mov	r0, r2
    7ca6:	e7fc      	b.n	7ca2 <strncmp+0x1e>

00007ca8 <strncpy>:
strncpy():
    7ca8:	b510      	push	{r4, lr}
    7caa:	3901      	subs	r1, #1
    7cac:	4603      	mov	r3, r0
    7cae:	b132      	cbz	r2, 7cbe <strncpy+0x16>
    7cb0:	f811 4f01 	ldrb.w	r4, [r1, #1]!
    7cb4:	f803 4b01 	strb.w	r4, [r3], #1
    7cb8:	3a01      	subs	r2, #1
    7cba:	2c00      	cmp	r4, #0
    7cbc:	d1f7      	bne.n	7cae <strncpy+0x6>
    7cbe:	441a      	add	r2, r3
    7cc0:	2100      	movs	r1, #0
    7cc2:	4293      	cmp	r3, r2
    7cc4:	d100      	bne.n	7cc8 <strncpy+0x20>
    7cc6:	bd10      	pop	{r4, pc}
    7cc8:	f803 1b01 	strb.w	r1, [r3], #1
    7ccc:	e7f9      	b.n	7cc2 <strncpy+0x1a>

00007cce <strstr>:
strstr():
    7cce:	b5f0      	push	{r4, r5, r6, r7, lr}
    7cd0:	780c      	ldrb	r4, [r1, #0]
    7cd2:	b164      	cbz	r4, 7cee <strstr+0x20>
    7cd4:	4603      	mov	r3, r0
    7cd6:	781a      	ldrb	r2, [r3, #0]
    7cd8:	4618      	mov	r0, r3
    7cda:	1c5e      	adds	r6, r3, #1
    7cdc:	b90a      	cbnz	r2, 7ce2 <strstr+0x14>
    7cde:	4610      	mov	r0, r2
    7ce0:	e005      	b.n	7cee <strstr+0x20>
    7ce2:	4294      	cmp	r4, r2
    7ce4:	d108      	bne.n	7cf8 <strstr+0x2a>
    7ce6:	460d      	mov	r5, r1
    7ce8:	f815 2f01 	ldrb.w	r2, [r5, #1]!
    7cec:	b902      	cbnz	r2, 7cf0 <strstr+0x22>
    7cee:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7cf0:	f813 7f01 	ldrb.w	r7, [r3, #1]!
    7cf4:	4297      	cmp	r7, r2
    7cf6:	d0f7      	beq.n	7ce8 <strstr+0x1a>
    7cf8:	4633      	mov	r3, r6
    7cfa:	e7ec      	b.n	7cd6 <strstr+0x8>

00007cfc <sulp>:
sulp():
    7cfc:	b570      	push	{r4, r5, r6, lr}
    7cfe:	4604      	mov	r4, r0
    7d00:	460d      	mov	r5, r1
    7d02:	ec45 4b10 	vmov	d0, r4, r5
    7d06:	4616      	mov	r6, r2
    7d08:	f002 fec4 	bl	aa94 <__ulp>
    7d0c:	ec51 0b10 	vmov	r0, r1, d0
    7d10:	b17e      	cbz	r6, 7d32 <sulp+0x36>
    7d12:	f3c5 530a 	ubfx	r3, r5, #20, #11
    7d16:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
    7d1a:	2b00      	cmp	r3, #0
    7d1c:	dd09      	ble.n	7d32 <sulp+0x36>
    7d1e:	051b      	lsls	r3, r3, #20
    7d20:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
    7d24:	2400      	movs	r4, #0
    7d26:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
    7d2a:	4622      	mov	r2, r4
    7d2c:	462b      	mov	r3, r5
    7d2e:	f003 ff15 	bl	bb5c <__aeabi_dmul>
    7d32:	bd70      	pop	{r4, r5, r6, pc}
    7d34:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff

00007d38 <_strtod_l>:
_strtod_l():
    7d38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7d3c:	b0a1      	sub	sp, #132	; 0x84
    7d3e:	461f      	mov	r7, r3
    7d40:	2300      	movs	r3, #0
    7d42:	931c      	str	r3, [sp, #112]	; 0x70
    7d44:	4b9b      	ldr	r3, [pc, #620]	; (7fb4 <_strtod_l+0x27c>)
    7d46:	9004      	str	r0, [sp, #16]
    7d48:	681b      	ldr	r3, [r3, #0]
    7d4a:	9217      	str	r2, [sp, #92]	; 0x5c
    7d4c:	4618      	mov	r0, r3
    7d4e:	460e      	mov	r6, r1
    7d50:	9305      	str	r3, [sp, #20]
    7d52:	f7ff ff6c 	bl	7c2e <strlen>
    7d56:	f04f 0a00 	mov.w	sl, #0
    7d5a:	4604      	mov	r4, r0
    7d5c:	f04f 0b00 	mov.w	fp, #0
    7d60:	961b      	str	r6, [sp, #108]	; 0x6c
    7d62:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    7d64:	7813      	ldrb	r3, [r2, #0]
    7d66:	2b0d      	cmp	r3, #13
    7d68:	d832      	bhi.n	7dd0 <_strtod_l+0x98>
    7d6a:	2b09      	cmp	r3, #9
    7d6c:	d236      	bcs.n	7ddc <_strtod_l+0xa4>
    7d6e:	2b00      	cmp	r3, #0
    7d70:	d03e      	beq.n	7df0 <_strtod_l+0xb8>
    7d72:	2300      	movs	r3, #0
    7d74:	930c      	str	r3, [sp, #48]	; 0x30
    7d76:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
    7d78:	782b      	ldrb	r3, [r5, #0]
    7d7a:	2b30      	cmp	r3, #48	; 0x30
    7d7c:	f040 80a9 	bne.w	7ed2 <_strtod_l+0x19a>
    7d80:	786b      	ldrb	r3, [r5, #1]
    7d82:	2b58      	cmp	r3, #88	; 0x58
    7d84:	d001      	beq.n	7d8a <_strtod_l+0x52>
    7d86:	2b78      	cmp	r3, #120	; 0x78
    7d88:	d167      	bne.n	7e5a <_strtod_l+0x122>
    7d8a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    7d8c:	9301      	str	r3, [sp, #4]
    7d8e:	ab1c      	add	r3, sp, #112	; 0x70
    7d90:	9300      	str	r3, [sp, #0]
    7d92:	9702      	str	r7, [sp, #8]
    7d94:	ab1d      	add	r3, sp, #116	; 0x74
    7d96:	4a88      	ldr	r2, [pc, #544]	; (7fb8 <_strtod_l+0x280>)
    7d98:	9804      	ldr	r0, [sp, #16]
    7d9a:	a91b      	add	r1, sp, #108	; 0x6c
    7d9c:	f001 ffc2 	bl	9d24 <__gethex>
    7da0:	f010 0407 	ands.w	r4, r0, #7
    7da4:	4606      	mov	r6, r0
    7da6:	d005      	beq.n	7db4 <_strtod_l+0x7c>
    7da8:	2c06      	cmp	r4, #6
    7daa:	d12b      	bne.n	7e04 <_strtod_l+0xcc>
    7dac:	3501      	adds	r5, #1
    7dae:	2300      	movs	r3, #0
    7db0:	951b      	str	r5, [sp, #108]	; 0x6c
    7db2:	930c      	str	r3, [sp, #48]	; 0x30
    7db4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    7db6:	2b00      	cmp	r3, #0
    7db8:	f040 8576 	bne.w	88a8 <_strtod_l+0xb70>
    7dbc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    7dbe:	b1e3      	cbz	r3, 7dfa <_strtod_l+0xc2>
    7dc0:	4652      	mov	r2, sl
    7dc2:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
    7dc6:	ec43 2b10 	vmov	d0, r2, r3
    7dca:	b021      	add	sp, #132	; 0x84
    7dcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7dd0:	2b2b      	cmp	r3, #43	; 0x2b
    7dd2:	d006      	beq.n	7de2 <_strtod_l+0xaa>
    7dd4:	2b2d      	cmp	r3, #45	; 0x2d
    7dd6:	d013      	beq.n	7e00 <_strtod_l+0xc8>
    7dd8:	2b20      	cmp	r3, #32
    7dda:	d1ca      	bne.n	7d72 <_strtod_l+0x3a>
    7ddc:	3201      	adds	r2, #1
    7dde:	921b      	str	r2, [sp, #108]	; 0x6c
    7de0:	e7bf      	b.n	7d62 <_strtod_l+0x2a>
    7de2:	2300      	movs	r3, #0
    7de4:	930c      	str	r3, [sp, #48]	; 0x30
    7de6:	1c53      	adds	r3, r2, #1
    7de8:	931b      	str	r3, [sp, #108]	; 0x6c
    7dea:	7853      	ldrb	r3, [r2, #1]
    7dec:	2b00      	cmp	r3, #0
    7dee:	d1c2      	bne.n	7d76 <_strtod_l+0x3e>
    7df0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    7df2:	961b      	str	r6, [sp, #108]	; 0x6c
    7df4:	2b00      	cmp	r3, #0
    7df6:	f040 8555 	bne.w	88a4 <_strtod_l+0xb6c>
    7dfa:	4652      	mov	r2, sl
    7dfc:	465b      	mov	r3, fp
    7dfe:	e7e2      	b.n	7dc6 <_strtod_l+0x8e>
    7e00:	2301      	movs	r3, #1
    7e02:	e7ef      	b.n	7de4 <_strtod_l+0xac>
    7e04:	9a1c      	ldr	r2, [sp, #112]	; 0x70
    7e06:	b13a      	cbz	r2, 7e18 <_strtod_l+0xe0>
    7e08:	2135      	movs	r1, #53	; 0x35
    7e0a:	a81e      	add	r0, sp, #120	; 0x78
    7e0c:	f002 ff39 	bl	ac82 <__copybits>
    7e10:	991c      	ldr	r1, [sp, #112]	; 0x70
    7e12:	9804      	ldr	r0, [sp, #16]
    7e14:	f002 fbac 	bl	a570 <_Bfree>
    7e18:	3c01      	subs	r4, #1
    7e1a:	2c04      	cmp	r4, #4
    7e1c:	d806      	bhi.n	7e2c <_strtod_l+0xf4>
    7e1e:	e8df f004 	tbb	[pc, r4]
    7e22:	030a      	.short	0x030a
    7e24:	1714      	.short	0x1714
    7e26:	0a          	.byte	0x0a
    7e27:	00          	.byte	0x00
    7e28:	e9dd ab1e 	ldrd	sl, fp, [sp, #120]	; 0x78
    7e2c:	0731      	lsls	r1, r6, #28
    7e2e:	d5c1      	bpl.n	7db4 <_strtod_l+0x7c>
    7e30:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
    7e34:	e7be      	b.n	7db4 <_strtod_l+0x7c>
    7e36:	e9dd a31e 	ldrd	sl, r3, [sp, #120]	; 0x78
    7e3a:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    7e3c:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
    7e40:	f202 4233 	addw	r2, r2, #1075	; 0x433
    7e44:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
    7e48:	e7f0      	b.n	7e2c <_strtod_l+0xf4>
    7e4a:	f8df b170 	ldr.w	fp, [pc, #368]	; 7fbc <_strtod_l+0x284>
    7e4e:	e7ed      	b.n	7e2c <_strtod_l+0xf4>
    7e50:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
    7e54:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
    7e58:	e7e8      	b.n	7e2c <_strtod_l+0xf4>
    7e5a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    7e5c:	1c5a      	adds	r2, r3, #1
    7e5e:	921b      	str	r2, [sp, #108]	; 0x6c
    7e60:	785b      	ldrb	r3, [r3, #1]
    7e62:	2b30      	cmp	r3, #48	; 0x30
    7e64:	d0f9      	beq.n	7e5a <_strtod_l+0x122>
    7e66:	2b00      	cmp	r3, #0
    7e68:	d0a4      	beq.n	7db4 <_strtod_l+0x7c>
    7e6a:	2301      	movs	r3, #1
    7e6c:	f04f 0900 	mov.w	r9, #0
    7e70:	9306      	str	r3, [sp, #24]
    7e72:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    7e74:	9309      	str	r3, [sp, #36]	; 0x24
    7e76:	f8cd 901c 	str.w	r9, [sp, #28]
    7e7a:	46c8      	mov	r8, r9
    7e7c:	220a      	movs	r2, #10
    7e7e:	981b      	ldr	r0, [sp, #108]	; 0x6c
    7e80:	7805      	ldrb	r5, [r0, #0]
    7e82:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
    7e86:	b2d9      	uxtb	r1, r3
    7e88:	2909      	cmp	r1, #9
    7e8a:	d924      	bls.n	7ed6 <_strtod_l+0x19e>
    7e8c:	4622      	mov	r2, r4
    7e8e:	9905      	ldr	r1, [sp, #20]
    7e90:	f7ff fef8 	bl	7c84 <strncmp>
    7e94:	b378      	cbz	r0, 7ef6 <_strtod_l+0x1be>
    7e96:	2000      	movs	r0, #0
    7e98:	462b      	mov	r3, r5
    7e9a:	4644      	mov	r4, r8
    7e9c:	9005      	str	r0, [sp, #20]
    7e9e:	4602      	mov	r2, r0
    7ea0:	2b65      	cmp	r3, #101	; 0x65
    7ea2:	d001      	beq.n	7ea8 <_strtod_l+0x170>
    7ea4:	2b45      	cmp	r3, #69	; 0x45
    7ea6:	d112      	bne.n	7ece <_strtod_l+0x196>
    7ea8:	b91c      	cbnz	r4, 7eb2 <_strtod_l+0x17a>
    7eaa:	9b06      	ldr	r3, [sp, #24]
    7eac:	4303      	orrs	r3, r0
    7eae:	d09f      	beq.n	7df0 <_strtod_l+0xb8>
    7eb0:	2400      	movs	r4, #0
    7eb2:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
    7eb4:	1c73      	adds	r3, r6, #1
    7eb6:	931b      	str	r3, [sp, #108]	; 0x6c
    7eb8:	7873      	ldrb	r3, [r6, #1]
    7eba:	2b2b      	cmp	r3, #43	; 0x2b
    7ebc:	d072      	beq.n	7fa4 <_strtod_l+0x26c>
    7ebe:	2b2d      	cmp	r3, #45	; 0x2d
    7ec0:	d075      	beq.n	7fae <_strtod_l+0x276>
    7ec2:	2700      	movs	r7, #0
    7ec4:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
    7ec8:	2909      	cmp	r1, #9
    7eca:	d97d      	bls.n	7fc8 <_strtod_l+0x290>
    7ecc:	961b      	str	r6, [sp, #108]	; 0x6c
    7ece:	2500      	movs	r5, #0
    7ed0:	e09a      	b.n	8008 <_strtod_l+0x2d0>
    7ed2:	2300      	movs	r3, #0
    7ed4:	e7ca      	b.n	7e6c <_strtod_l+0x134>
    7ed6:	f1b8 0f08 	cmp.w	r8, #8
    7eda:	bfd8      	it	le
    7edc:	9907      	ldrle	r1, [sp, #28]
    7ede:	f100 0001 	add.w	r0, r0, #1
    7ee2:	bfda      	itte	le
    7ee4:	fb02 3301 	mlale	r3, r2, r1, r3
    7ee8:	9307      	strle	r3, [sp, #28]
    7eea:	fb02 3909 	mlagt	r9, r2, r9, r3
    7eee:	f108 0801 	add.w	r8, r8, #1
    7ef2:	901b      	str	r0, [sp, #108]	; 0x6c
    7ef4:	e7c3      	b.n	7e7e <_strtod_l+0x146>
    7ef6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    7ef8:	191a      	adds	r2, r3, r4
    7efa:	921b      	str	r2, [sp, #108]	; 0x6c
    7efc:	5d1b      	ldrb	r3, [r3, r4]
    7efe:	f1b8 0f00 	cmp.w	r8, #0
    7f02:	d036      	beq.n	7f72 <_strtod_l+0x23a>
    7f04:	9005      	str	r0, [sp, #20]
    7f06:	4644      	mov	r4, r8
    7f08:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
    7f0c:	2a09      	cmp	r2, #9
    7f0e:	d912      	bls.n	7f36 <_strtod_l+0x1fe>
    7f10:	2201      	movs	r2, #1
    7f12:	e7c5      	b.n	7ea0 <_strtod_l+0x168>
    7f14:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    7f16:	1c5a      	adds	r2, r3, #1
    7f18:	921b      	str	r2, [sp, #108]	; 0x6c
    7f1a:	785b      	ldrb	r3, [r3, #1]
    7f1c:	3001      	adds	r0, #1
    7f1e:	2b30      	cmp	r3, #48	; 0x30
    7f20:	d0f8      	beq.n	7f14 <_strtod_l+0x1dc>
    7f22:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
    7f26:	2a08      	cmp	r2, #8
    7f28:	f200 84c3 	bhi.w	88b2 <_strtod_l+0xb7a>
    7f2c:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    7f2e:	9005      	str	r0, [sp, #20]
    7f30:	2000      	movs	r0, #0
    7f32:	9209      	str	r2, [sp, #36]	; 0x24
    7f34:	4604      	mov	r4, r0
    7f36:	3b30      	subs	r3, #48	; 0x30
    7f38:	f100 0201 	add.w	r2, r0, #1
    7f3c:	d013      	beq.n	7f66 <_strtod_l+0x22e>
    7f3e:	9905      	ldr	r1, [sp, #20]
    7f40:	4411      	add	r1, r2
    7f42:	9105      	str	r1, [sp, #20]
    7f44:	4622      	mov	r2, r4
    7f46:	1905      	adds	r5, r0, r4
    7f48:	210a      	movs	r1, #10
    7f4a:	42aa      	cmp	r2, r5
    7f4c:	d113      	bne.n	7f76 <_strtod_l+0x23e>
    7f4e:	1822      	adds	r2, r4, r0
    7f50:	2a08      	cmp	r2, #8
    7f52:	f104 0401 	add.w	r4, r4, #1
    7f56:	4404      	add	r4, r0
    7f58:	dc1a      	bgt.n	7f90 <_strtod_l+0x258>
    7f5a:	9907      	ldr	r1, [sp, #28]
    7f5c:	220a      	movs	r2, #10
    7f5e:	fb02 3301 	mla	r3, r2, r1, r3
    7f62:	9307      	str	r3, [sp, #28]
    7f64:	2200      	movs	r2, #0
    7f66:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    7f68:	1c59      	adds	r1, r3, #1
    7f6a:	911b      	str	r1, [sp, #108]	; 0x6c
    7f6c:	785b      	ldrb	r3, [r3, #1]
    7f6e:	4610      	mov	r0, r2
    7f70:	e7ca      	b.n	7f08 <_strtod_l+0x1d0>
    7f72:	4640      	mov	r0, r8
    7f74:	e7d3      	b.n	7f1e <_strtod_l+0x1e6>
    7f76:	2a08      	cmp	r2, #8
    7f78:	dc04      	bgt.n	7f84 <_strtod_l+0x24c>
    7f7a:	9f07      	ldr	r7, [sp, #28]
    7f7c:	434f      	muls	r7, r1
    7f7e:	9707      	str	r7, [sp, #28]
    7f80:	3201      	adds	r2, #1
    7f82:	e7e2      	b.n	7f4a <_strtod_l+0x212>
    7f84:	1c57      	adds	r7, r2, #1
    7f86:	2f10      	cmp	r7, #16
    7f88:	bfd8      	it	le
    7f8a:	fb01 f909 	mulle.w	r9, r1, r9
    7f8e:	e7f7      	b.n	7f80 <_strtod_l+0x248>
    7f90:	2c10      	cmp	r4, #16
    7f92:	bfdc      	itt	le
    7f94:	220a      	movle	r2, #10
    7f96:	fb02 3909 	mlale	r9, r2, r9, r3
    7f9a:	e7e3      	b.n	7f64 <_strtod_l+0x22c>
    7f9c:	2300      	movs	r3, #0
    7f9e:	9305      	str	r3, [sp, #20]
    7fa0:	2201      	movs	r2, #1
    7fa2:	e782      	b.n	7eaa <_strtod_l+0x172>
    7fa4:	2700      	movs	r7, #0
    7fa6:	1cb3      	adds	r3, r6, #2
    7fa8:	931b      	str	r3, [sp, #108]	; 0x6c
    7faa:	78b3      	ldrb	r3, [r6, #2]
    7fac:	e78a      	b.n	7ec4 <_strtod_l+0x18c>
    7fae:	2701      	movs	r7, #1
    7fb0:	e7f9      	b.n	7fa6 <_strtod_l+0x26e>
    7fb2:	bf00      	nop
    7fb4:	0000dcc0 	.word	0x0000dcc0
    7fb8:	0000dc00 	.word	0x0000dc00
    7fbc:	7ff00000 	.word	0x7ff00000
    7fc0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    7fc2:	1c59      	adds	r1, r3, #1
    7fc4:	911b      	str	r1, [sp, #108]	; 0x6c
    7fc6:	785b      	ldrb	r3, [r3, #1]
    7fc8:	2b30      	cmp	r3, #48	; 0x30
    7fca:	d0f9      	beq.n	7fc0 <_strtod_l+0x288>
    7fcc:	f1a3 0131 	sub.w	r1, r3, #49	; 0x31
    7fd0:	2908      	cmp	r1, #8
    7fd2:	f63f af7c 	bhi.w	7ece <_strtod_l+0x196>
    7fd6:	f1a3 0c30 	sub.w	ip, r3, #48	; 0x30
    7fda:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    7fdc:	9308      	str	r3, [sp, #32]
    7fde:	f04f 0e0a 	mov.w	lr, #10
    7fe2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    7fe4:	1c59      	adds	r1, r3, #1
    7fe6:	911b      	str	r1, [sp, #108]	; 0x6c
    7fe8:	785b      	ldrb	r3, [r3, #1]
    7fea:	f1a3 0530 	sub.w	r5, r3, #48	; 0x30
    7fee:	2d09      	cmp	r5, #9
    7ff0:	d92e      	bls.n	8050 <_strtod_l+0x318>
    7ff2:	9d08      	ldr	r5, [sp, #32]
    7ff4:	1b49      	subs	r1, r1, r5
    7ff6:	2908      	cmp	r1, #8
    7ff8:	f644 651f 	movw	r5, #19999	; 0x4e1f
    7ffc:	dc02      	bgt.n	8004 <_strtod_l+0x2cc>
    7ffe:	4565      	cmp	r5, ip
    8000:	bfa8      	it	ge
    8002:	4665      	movge	r5, ip
    8004:	b107      	cbz	r7, 8008 <_strtod_l+0x2d0>
    8006:	426d      	negs	r5, r5
    8008:	2c00      	cmp	r4, #0
    800a:	d14b      	bne.n	80a4 <_strtod_l+0x36c>
    800c:	9906      	ldr	r1, [sp, #24]
    800e:	4301      	orrs	r1, r0
    8010:	f47f aed0 	bne.w	7db4 <_strtod_l+0x7c>
    8014:	2a00      	cmp	r2, #0
    8016:	f47f aeeb 	bne.w	7df0 <_strtod_l+0xb8>
    801a:	2b4e      	cmp	r3, #78	; 0x4e
    801c:	d022      	beq.n	8064 <_strtod_l+0x32c>
    801e:	dc1c      	bgt.n	805a <_strtod_l+0x322>
    8020:	2b49      	cmp	r3, #73	; 0x49
    8022:	f47f aee5 	bne.w	7df0 <_strtod_l+0xb8>
    8026:	499a      	ldr	r1, [pc, #616]	; (8290 <_strtod_l+0x558>)
    8028:	a81b      	add	r0, sp, #108	; 0x6c
    802a:	f002 f8b1 	bl	a190 <__match>
    802e:	2800      	cmp	r0, #0
    8030:	f43f aede 	beq.w	7df0 <_strtod_l+0xb8>
    8034:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    8036:	4997      	ldr	r1, [pc, #604]	; (8294 <_strtod_l+0x55c>)
    8038:	3b01      	subs	r3, #1
    803a:	a81b      	add	r0, sp, #108	; 0x6c
    803c:	931b      	str	r3, [sp, #108]	; 0x6c
    803e:	f002 f8a7 	bl	a190 <__match>
    8042:	b910      	cbnz	r0, 804a <_strtod_l+0x312>
    8044:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    8046:	3301      	adds	r3, #1
    8048:	931b      	str	r3, [sp, #108]	; 0x6c
    804a:	f8df b260 	ldr.w	fp, [pc, #608]	; 82ac <_strtod_l+0x574>
    804e:	e6b1      	b.n	7db4 <_strtod_l+0x7c>
    8050:	fb0e 3c0c 	mla	ip, lr, ip, r3
    8054:	f1ac 0c30 	sub.w	ip, ip, #48	; 0x30
    8058:	e7c3      	b.n	7fe2 <_strtod_l+0x2aa>
    805a:	2b69      	cmp	r3, #105	; 0x69
    805c:	d0e3      	beq.n	8026 <_strtod_l+0x2ee>
    805e:	2b6e      	cmp	r3, #110	; 0x6e
    8060:	f47f aec6 	bne.w	7df0 <_strtod_l+0xb8>
    8064:	498c      	ldr	r1, [pc, #560]	; (8298 <_strtod_l+0x560>)
    8066:	a81b      	add	r0, sp, #108	; 0x6c
    8068:	f002 f892 	bl	a190 <__match>
    806c:	2800      	cmp	r0, #0
    806e:	f43f aebf 	beq.w	7df0 <_strtod_l+0xb8>
    8072:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    8074:	781b      	ldrb	r3, [r3, #0]
    8076:	2b28      	cmp	r3, #40	; 0x28
    8078:	d10e      	bne.n	8098 <_strtod_l+0x360>
    807a:	aa1e      	add	r2, sp, #120	; 0x78
    807c:	4987      	ldr	r1, [pc, #540]	; (829c <_strtod_l+0x564>)
    807e:	a81b      	add	r0, sp, #108	; 0x6c
    8080:	f002 f89a 	bl	a1b8 <__hexnan>
    8084:	2805      	cmp	r0, #5
    8086:	d107      	bne.n	8098 <_strtod_l+0x360>
    8088:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    808a:	f8dd a078 	ldr.w	sl, [sp, #120]	; 0x78
    808e:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
    8092:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
    8096:	e68d      	b.n	7db4 <_strtod_l+0x7c>
    8098:	4881      	ldr	r0, [pc, #516]	; (82a0 <_strtod_l+0x568>)
    809a:	f003 fb19 	bl	b6d0 <nan>
    809e:	ec5b ab10 	vmov	sl, fp, d0
    80a2:	e687      	b.n	7db4 <_strtod_l+0x7c>
    80a4:	9b05      	ldr	r3, [sp, #20]
    80a6:	9807      	ldr	r0, [sp, #28]
    80a8:	1aeb      	subs	r3, r5, r3
    80aa:	f1b8 0f00 	cmp.w	r8, #0
    80ae:	bf08      	it	eq
    80b0:	46a0      	moveq	r8, r4
    80b2:	2c10      	cmp	r4, #16
    80b4:	9308      	str	r3, [sp, #32]
    80b6:	4626      	mov	r6, r4
    80b8:	bfa8      	it	ge
    80ba:	2610      	movge	r6, #16
    80bc:	f7fe f904 	bl	62c8 <__aeabi_ui2d>
    80c0:	2c09      	cmp	r4, #9
    80c2:	4682      	mov	sl, r0
    80c4:	468b      	mov	fp, r1
    80c6:	dd13      	ble.n	80f0 <_strtod_l+0x3b8>
    80c8:	4b76      	ldr	r3, [pc, #472]	; (82a4 <_strtod_l+0x56c>)
    80ca:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
    80ce:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
    80d2:	f003 fd43 	bl	bb5c <__aeabi_dmul>
    80d6:	4682      	mov	sl, r0
    80d8:	4648      	mov	r0, r9
    80da:	468b      	mov	fp, r1
    80dc:	f7fe f8f4 	bl	62c8 <__aeabi_ui2d>
    80e0:	4602      	mov	r2, r0
    80e2:	460b      	mov	r3, r1
    80e4:	4650      	mov	r0, sl
    80e6:	4659      	mov	r1, fp
    80e8:	f7fd ffb2 	bl	6050 <__adddf3>
    80ec:	4682      	mov	sl, r0
    80ee:	468b      	mov	fp, r1
    80f0:	2c0f      	cmp	r4, #15
    80f2:	dc38      	bgt.n	8166 <_strtod_l+0x42e>
    80f4:	9b08      	ldr	r3, [sp, #32]
    80f6:	2b00      	cmp	r3, #0
    80f8:	f43f ae5c 	beq.w	7db4 <_strtod_l+0x7c>
    80fc:	dd24      	ble.n	8148 <_strtod_l+0x410>
    80fe:	2b16      	cmp	r3, #22
    8100:	dc0b      	bgt.n	811a <_strtod_l+0x3e2>
    8102:	4c68      	ldr	r4, [pc, #416]	; (82a4 <_strtod_l+0x56c>)
    8104:	eb04 04c3 	add.w	r4, r4, r3, lsl #3
    8108:	e9d4 0100 	ldrd	r0, r1, [r4]
    810c:	4652      	mov	r2, sl
    810e:	465b      	mov	r3, fp
    8110:	f003 fd24 	bl	bb5c <__aeabi_dmul>
    8114:	4682      	mov	sl, r0
    8116:	468b      	mov	fp, r1
    8118:	e64c      	b.n	7db4 <_strtod_l+0x7c>
    811a:	9a08      	ldr	r2, [sp, #32]
    811c:	f1c4 0325 	rsb	r3, r4, #37	; 0x25
    8120:	4293      	cmp	r3, r2
    8122:	db20      	blt.n	8166 <_strtod_l+0x42e>
    8124:	4d5f      	ldr	r5, [pc, #380]	; (82a4 <_strtod_l+0x56c>)
    8126:	f1c4 040f 	rsb	r4, r4, #15
    812a:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
    812e:	4652      	mov	r2, sl
    8130:	465b      	mov	r3, fp
    8132:	e9d1 0100 	ldrd	r0, r1, [r1]
    8136:	f003 fd11 	bl	bb5c <__aeabi_dmul>
    813a:	9b08      	ldr	r3, [sp, #32]
    813c:	1b1c      	subs	r4, r3, r4
    813e:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
    8142:	e9d5 2300 	ldrd	r2, r3, [r5]
    8146:	e7e3      	b.n	8110 <_strtod_l+0x3d8>
    8148:	9b08      	ldr	r3, [sp, #32]
    814a:	3316      	adds	r3, #22
    814c:	db0b      	blt.n	8166 <_strtod_l+0x42e>
    814e:	9b05      	ldr	r3, [sp, #20]
    8150:	4a54      	ldr	r2, [pc, #336]	; (82a4 <_strtod_l+0x56c>)
    8152:	1b5d      	subs	r5, r3, r5
    8154:	eb02 05c5 	add.w	r5, r2, r5, lsl #3
    8158:	e9d5 2300 	ldrd	r2, r3, [r5]
    815c:	4650      	mov	r0, sl
    815e:	4659      	mov	r1, fp
    8160:	f003 fe26 	bl	bdb0 <__aeabi_ddiv>
    8164:	e7d6      	b.n	8114 <_strtod_l+0x3dc>
    8166:	9b08      	ldr	r3, [sp, #32]
    8168:	1ba6      	subs	r6, r4, r6
    816a:	441e      	add	r6, r3
    816c:	2e00      	cmp	r6, #0
    816e:	dd6e      	ble.n	824e <_strtod_l+0x516>
    8170:	f016 030f 	ands.w	r3, r6, #15
    8174:	d00a      	beq.n	818c <_strtod_l+0x454>
    8176:	494b      	ldr	r1, [pc, #300]	; (82a4 <_strtod_l+0x56c>)
    8178:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
    817c:	4652      	mov	r2, sl
    817e:	465b      	mov	r3, fp
    8180:	e9d1 0100 	ldrd	r0, r1, [r1]
    8184:	f003 fcea 	bl	bb5c <__aeabi_dmul>
    8188:	4682      	mov	sl, r0
    818a:	468b      	mov	fp, r1
    818c:	f036 060f 	bics.w	r6, r6, #15
    8190:	d04e      	beq.n	8230 <_strtod_l+0x4f8>
    8192:	f5b6 7f9a 	cmp.w	r6, #308	; 0x134
    8196:	dd23      	ble.n	81e0 <_strtod_l+0x4a8>
    8198:	2400      	movs	r4, #0
    819a:	9405      	str	r4, [sp, #20]
    819c:	9409      	str	r4, [sp, #36]	; 0x24
    819e:	9407      	str	r4, [sp, #28]
    81a0:	9a04      	ldr	r2, [sp, #16]
    81a2:	f8df b108 	ldr.w	fp, [pc, #264]	; 82ac <_strtod_l+0x574>
    81a6:	2322      	movs	r3, #34	; 0x22
    81a8:	6013      	str	r3, [r2, #0]
    81aa:	f04f 0a00 	mov.w	sl, #0
    81ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
    81b0:	2b00      	cmp	r3, #0
    81b2:	f43f adff 	beq.w	7db4 <_strtod_l+0x7c>
    81b6:	991c      	ldr	r1, [sp, #112]	; 0x70
    81b8:	9804      	ldr	r0, [sp, #16]
    81ba:	f002 f9d9 	bl	a570 <_Bfree>
    81be:	9907      	ldr	r1, [sp, #28]
    81c0:	9804      	ldr	r0, [sp, #16]
    81c2:	f002 f9d5 	bl	a570 <_Bfree>
    81c6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    81ca:	f002 f9d1 	bl	a570 <_Bfree>
    81ce:	9909      	ldr	r1, [sp, #36]	; 0x24
    81d0:	9804      	ldr	r0, [sp, #16]
    81d2:	f002 f9cd 	bl	a570 <_Bfree>
    81d6:	4621      	mov	r1, r4
    81d8:	9804      	ldr	r0, [sp, #16]
    81da:	f002 f9c9 	bl	a570 <_Bfree>
    81de:	e5e9      	b.n	7db4 <_strtod_l+0x7c>
    81e0:	2300      	movs	r3, #0
    81e2:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 82a8 <_strtod_l+0x570>
    81e6:	1136      	asrs	r6, r6, #4
    81e8:	4650      	mov	r0, sl
    81ea:	4659      	mov	r1, fp
    81ec:	461f      	mov	r7, r3
    81ee:	2e01      	cmp	r6, #1
    81f0:	dc21      	bgt.n	8236 <_strtod_l+0x4fe>
    81f2:	b10b      	cbz	r3, 81f8 <_strtod_l+0x4c0>
    81f4:	4682      	mov	sl, r0
    81f6:	468b      	mov	fp, r1
    81f8:	4b2b      	ldr	r3, [pc, #172]	; (82a8 <_strtod_l+0x570>)
    81fa:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
    81fe:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
    8202:	4652      	mov	r2, sl
    8204:	465b      	mov	r3, fp
    8206:	e9d7 0100 	ldrd	r0, r1, [r7]
    820a:	f003 fca7 	bl	bb5c <__aeabi_dmul>
    820e:	4b27      	ldr	r3, [pc, #156]	; (82ac <_strtod_l+0x574>)
    8210:	460a      	mov	r2, r1
    8212:	400b      	ands	r3, r1
    8214:	4926      	ldr	r1, [pc, #152]	; (82b0 <_strtod_l+0x578>)
    8216:	428b      	cmp	r3, r1
    8218:	4682      	mov	sl, r0
    821a:	d8bd      	bhi.n	8198 <_strtod_l+0x460>
    821c:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
    8220:	428b      	cmp	r3, r1
    8222:	bf86      	itte	hi
    8224:	f8df b08c 	ldrhi.w	fp, [pc, #140]	; 82b4 <_strtod_l+0x57c>
    8228:	f04f 3aff 	movhi.w	sl, #4294967295	; 0xffffffff
    822c:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
    8230:	2300      	movs	r3, #0
    8232:	9306      	str	r3, [sp, #24]
    8234:	e079      	b.n	832a <_strtod_l+0x5f2>
    8236:	07f2      	lsls	r2, r6, #31
    8238:	d506      	bpl.n	8248 <_strtod_l+0x510>
    823a:	eb09 03c7 	add.w	r3, r9, r7, lsl #3
    823e:	e9d3 2300 	ldrd	r2, r3, [r3]
    8242:	f003 fc8b 	bl	bb5c <__aeabi_dmul>
    8246:	2301      	movs	r3, #1
    8248:	3701      	adds	r7, #1
    824a:	1076      	asrs	r6, r6, #1
    824c:	e7cf      	b.n	81ee <_strtod_l+0x4b6>
    824e:	d0ef      	beq.n	8230 <_strtod_l+0x4f8>
    8250:	4276      	negs	r6, r6
    8252:	f016 020f 	ands.w	r2, r6, #15
    8256:	d00a      	beq.n	826e <_strtod_l+0x536>
    8258:	4b12      	ldr	r3, [pc, #72]	; (82a4 <_strtod_l+0x56c>)
    825a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
    825e:	4650      	mov	r0, sl
    8260:	4659      	mov	r1, fp
    8262:	e9d3 2300 	ldrd	r2, r3, [r3]
    8266:	f003 fda3 	bl	bdb0 <__aeabi_ddiv>
    826a:	4682      	mov	sl, r0
    826c:	468b      	mov	fp, r1
    826e:	1136      	asrs	r6, r6, #4
    8270:	d0de      	beq.n	8230 <_strtod_l+0x4f8>
    8272:	2e1f      	cmp	r6, #31
    8274:	dd20      	ble.n	82b8 <_strtod_l+0x580>
    8276:	2400      	movs	r4, #0
    8278:	9405      	str	r4, [sp, #20]
    827a:	9409      	str	r4, [sp, #36]	; 0x24
    827c:	9407      	str	r4, [sp, #28]
    827e:	9a04      	ldr	r2, [sp, #16]
    8280:	2322      	movs	r3, #34	; 0x22
    8282:	f04f 0a00 	mov.w	sl, #0
    8286:	f04f 0b00 	mov.w	fp, #0
    828a:	6013      	str	r3, [r2, #0]
    828c:	e78f      	b.n	81ae <_strtod_l+0x476>
    828e:	bf00      	nop
    8290:	0000dbce 	.word	0x0000dbce
    8294:	0000dc53 	.word	0x0000dc53
    8298:	0000dbd6 	.word	0x0000dbd6
    829c:	0000dc14 	.word	0x0000dc14
    82a0:	0000cae9 	.word	0x0000cae9
    82a4:	0000dd00 	.word	0x0000dd00
    82a8:	0000dcd8 	.word	0x0000dcd8
    82ac:	7ff00000 	.word	0x7ff00000
    82b0:	7ca00000 	.word	0x7ca00000
    82b4:	7fefffff 	.word	0x7fefffff
    82b8:	f016 0310 	ands.w	r3, r6, #16
    82bc:	bf18      	it	ne
    82be:	236a      	movne	r3, #106	; 0x6a
    82c0:	4fae      	ldr	r7, [pc, #696]	; (857c <_strtod_l+0x844>)
    82c2:	9306      	str	r3, [sp, #24]
    82c4:	4650      	mov	r0, sl
    82c6:	4659      	mov	r1, fp
    82c8:	2300      	movs	r3, #0
    82ca:	07f2      	lsls	r2, r6, #31
    82cc:	d504      	bpl.n	82d8 <_strtod_l+0x5a0>
    82ce:	e9d7 2300 	ldrd	r2, r3, [r7]
    82d2:	f003 fc43 	bl	bb5c <__aeabi_dmul>
    82d6:	2301      	movs	r3, #1
    82d8:	1076      	asrs	r6, r6, #1
    82da:	f107 0708 	add.w	r7, r7, #8
    82de:	d1f4      	bne.n	82ca <_strtod_l+0x592>
    82e0:	b10b      	cbz	r3, 82e6 <_strtod_l+0x5ae>
    82e2:	4682      	mov	sl, r0
    82e4:	468b      	mov	fp, r1
    82e6:	9b06      	ldr	r3, [sp, #24]
    82e8:	b1bb      	cbz	r3, 831a <_strtod_l+0x5e2>
    82ea:	f3cb 530a 	ubfx	r3, fp, #20, #11
    82ee:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
    82f2:	2b00      	cmp	r3, #0
    82f4:	4659      	mov	r1, fp
    82f6:	dd10      	ble.n	831a <_strtod_l+0x5e2>
    82f8:	2b1f      	cmp	r3, #31
    82fa:	f340 8129 	ble.w	8550 <_strtod_l+0x818>
    82fe:	2b34      	cmp	r3, #52	; 0x34
    8300:	bfde      	ittt	le
    8302:	3b20      	suble	r3, #32
    8304:	f04f 32ff 	movle.w	r2, #4294967295	; 0xffffffff
    8308:	fa02 f303 	lslle.w	r3, r2, r3
    830c:	f04f 0a00 	mov.w	sl, #0
    8310:	bfcc      	ite	gt
    8312:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
    8316:	ea03 0b01 	andle.w	fp, r3, r1
    831a:	2200      	movs	r2, #0
    831c:	2300      	movs	r3, #0
    831e:	4650      	mov	r0, sl
    8320:	4659      	mov	r1, fp
    8322:	f003 fe83 	bl	c02c <__aeabi_dcmpeq>
    8326:	2800      	cmp	r0, #0
    8328:	d1a5      	bne.n	8276 <_strtod_l+0x53e>
    832a:	9b07      	ldr	r3, [sp, #28]
    832c:	9300      	str	r3, [sp, #0]
    832e:	4642      	mov	r2, r8
    8330:	4623      	mov	r3, r4
    8332:	9909      	ldr	r1, [sp, #36]	; 0x24
    8334:	9804      	ldr	r0, [sp, #16]
    8336:	f002 f96d 	bl	a614 <__s2b>
    833a:	9009      	str	r0, [sp, #36]	; 0x24
    833c:	2800      	cmp	r0, #0
    833e:	f43f af2b 	beq.w	8198 <_strtod_l+0x460>
    8342:	9b05      	ldr	r3, [sp, #20]
    8344:	1b5d      	subs	r5, r3, r5
    8346:	9b08      	ldr	r3, [sp, #32]
    8348:	2b00      	cmp	r3, #0
    834a:	bfb4      	ite	lt
    834c:	462b      	movlt	r3, r5
    834e:	2300      	movge	r3, #0
    8350:	930e      	str	r3, [sp, #56]	; 0x38
    8352:	9b08      	ldr	r3, [sp, #32]
    8354:	2400      	movs	r4, #0
    8356:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
    835a:	9316      	str	r3, [sp, #88]	; 0x58
    835c:	9405      	str	r4, [sp, #20]
    835e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    8360:	9804      	ldr	r0, [sp, #16]
    8362:	6859      	ldr	r1, [r3, #4]
    8364:	f002 f8d0 	bl	a508 <_Balloc>
    8368:	9007      	str	r0, [sp, #28]
    836a:	2800      	cmp	r0, #0
    836c:	f43f af18 	beq.w	81a0 <_strtod_l+0x468>
    8370:	9b09      	ldr	r3, [sp, #36]	; 0x24
    8372:	691a      	ldr	r2, [r3, #16]
    8374:	3202      	adds	r2, #2
    8376:	f103 010c 	add.w	r1, r3, #12
    837a:	0092      	lsls	r2, r2, #2
    837c:	300c      	adds	r0, #12
    837e:	f7fe fa45 	bl	680c <memcpy>
    8382:	aa1e      	add	r2, sp, #120	; 0x78
    8384:	a91d      	add	r1, sp, #116	; 0x74
    8386:	ec4b ab10 	vmov	d0, sl, fp
    838a:	9804      	ldr	r0, [sp, #16]
    838c:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
    8390:	f002 fbf6 	bl	ab80 <__d2b>
    8394:	901c      	str	r0, [sp, #112]	; 0x70
    8396:	2800      	cmp	r0, #0
    8398:	f43f af02 	beq.w	81a0 <_strtod_l+0x468>
    839c:	2101      	movs	r1, #1
    839e:	9804      	ldr	r0, [sp, #16]
    83a0:	f002 f9c6 	bl	a730 <__i2b>
    83a4:	9005      	str	r0, [sp, #20]
    83a6:	4603      	mov	r3, r0
    83a8:	2800      	cmp	r0, #0
    83aa:	f43f aef9 	beq.w	81a0 <_strtod_l+0x468>
    83ae:	9e1d      	ldr	r6, [sp, #116]	; 0x74
    83b0:	9a1e      	ldr	r2, [sp, #120]	; 0x78
    83b2:	2e00      	cmp	r6, #0
    83b4:	bfab      	itete	ge
    83b6:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
    83b8:	9b16      	ldrlt	r3, [sp, #88]	; 0x58
    83ba:	9d16      	ldrge	r5, [sp, #88]	; 0x58
    83bc:	9f0e      	ldrlt	r7, [sp, #56]	; 0x38
    83be:	bfac      	ite	ge
    83c0:	18f7      	addge	r7, r6, r3
    83c2:	1b9d      	sublt	r5, r3, r6
    83c4:	9b06      	ldr	r3, [sp, #24]
    83c6:	1af6      	subs	r6, r6, r3
    83c8:	4416      	add	r6, r2
    83ca:	4b6d      	ldr	r3, [pc, #436]	; (8580 <_strtod_l+0x848>)
    83cc:	3e01      	subs	r6, #1
    83ce:	429e      	cmp	r6, r3
    83d0:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
    83d4:	f280 80c3 	bge.w	855e <_strtod_l+0x826>
    83d8:	1b9b      	subs	r3, r3, r6
    83da:	2b1f      	cmp	r3, #31
    83dc:	bfc2      	ittt	gt
    83de:	f1c6 467f 	rsbgt	r6, r6, #4278190080	; 0xff000000
    83e2:	f506 067f 	addgt.w	r6, r6, #16711680	; 0xff0000
    83e6:	f506 467b 	addgt.w	r6, r6, #64256	; 0xfb00
    83ea:	f04f 0801 	mov.w	r8, #1
    83ee:	bfc8      	it	gt
    83f0:	36e2      	addgt	r6, #226	; 0xe2
    83f2:	eba2 0203 	sub.w	r2, r2, r3
    83f6:	bfda      	itte	le
    83f8:	fa08 f803 	lslle.w	r8, r8, r3
    83fc:	2600      	movle	r6, #0
    83fe:	fa08 f606 	lslgt.w	r6, r8, r6
    8402:	eb07 0902 	add.w	r9, r7, r2
    8406:	9b06      	ldr	r3, [sp, #24]
    8408:	454f      	cmp	r7, r9
    840a:	4415      	add	r5, r2
    840c:	441d      	add	r5, r3
    840e:	463b      	mov	r3, r7
    8410:	bfa8      	it	ge
    8412:	464b      	movge	r3, r9
    8414:	42ab      	cmp	r3, r5
    8416:	bfa8      	it	ge
    8418:	462b      	movge	r3, r5
    841a:	2b00      	cmp	r3, #0
    841c:	bfc2      	ittt	gt
    841e:	eba9 0903 	subgt.w	r9, r9, r3
    8422:	1aed      	subgt	r5, r5, r3
    8424:	1aff      	subgt	r7, r7, r3
    8426:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    8428:	2b00      	cmp	r3, #0
    842a:	dd17      	ble.n	845c <_strtod_l+0x724>
    842c:	461a      	mov	r2, r3
    842e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    8432:	f002 fa17 	bl	a864 <__pow5mult>
    8436:	9005      	str	r0, [sp, #20]
    8438:	2800      	cmp	r0, #0
    843a:	f43f aeb1 	beq.w	81a0 <_strtod_l+0x468>
    843e:	4601      	mov	r1, r0
    8440:	9a1c      	ldr	r2, [sp, #112]	; 0x70
    8442:	9804      	ldr	r0, [sp, #16]
    8444:	f002 f97d 	bl	a742 <__multiply>
    8448:	900d      	str	r0, [sp, #52]	; 0x34
    844a:	2800      	cmp	r0, #0
    844c:	f43f aea8 	beq.w	81a0 <_strtod_l+0x468>
    8450:	991c      	ldr	r1, [sp, #112]	; 0x70
    8452:	9804      	ldr	r0, [sp, #16]
    8454:	f002 f88c 	bl	a570 <_Bfree>
    8458:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    845a:	931c      	str	r3, [sp, #112]	; 0x70
    845c:	f1b9 0f00 	cmp.w	r9, #0
    8460:	f300 8081 	bgt.w	8566 <_strtod_l+0x82e>
    8464:	9b08      	ldr	r3, [sp, #32]
    8466:	2b00      	cmp	r3, #0
    8468:	dd08      	ble.n	847c <_strtod_l+0x744>
    846a:	9a16      	ldr	r2, [sp, #88]	; 0x58
    846c:	9907      	ldr	r1, [sp, #28]
    846e:	9804      	ldr	r0, [sp, #16]
    8470:	f002 f9f8 	bl	a864 <__pow5mult>
    8474:	9007      	str	r0, [sp, #28]
    8476:	2800      	cmp	r0, #0
    8478:	f43f ae92 	beq.w	81a0 <_strtod_l+0x468>
    847c:	2d00      	cmp	r5, #0
    847e:	dd08      	ble.n	8492 <_strtod_l+0x75a>
    8480:	462a      	mov	r2, r5
    8482:	9907      	ldr	r1, [sp, #28]
    8484:	9804      	ldr	r0, [sp, #16]
    8486:	f002 fa3b 	bl	a900 <__lshift>
    848a:	9007      	str	r0, [sp, #28]
    848c:	2800      	cmp	r0, #0
    848e:	f43f ae87 	beq.w	81a0 <_strtod_l+0x468>
    8492:	2f00      	cmp	r7, #0
    8494:	dd08      	ble.n	84a8 <_strtod_l+0x770>
    8496:	463a      	mov	r2, r7
    8498:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    849c:	f002 fa30 	bl	a900 <__lshift>
    84a0:	9005      	str	r0, [sp, #20]
    84a2:	2800      	cmp	r0, #0
    84a4:	f43f ae7c 	beq.w	81a0 <_strtod_l+0x468>
    84a8:	9a07      	ldr	r2, [sp, #28]
    84aa:	991c      	ldr	r1, [sp, #112]	; 0x70
    84ac:	9804      	ldr	r0, [sp, #16]
    84ae:	f002 fa94 	bl	a9da <__mdiff>
    84b2:	4604      	mov	r4, r0
    84b4:	2800      	cmp	r0, #0
    84b6:	f43f ae73 	beq.w	81a0 <_strtod_l+0x468>
    84ba:	68c3      	ldr	r3, [r0, #12]
    84bc:	930d      	str	r3, [sp, #52]	; 0x34
    84be:	2300      	movs	r3, #0
    84c0:	60c3      	str	r3, [r0, #12]
    84c2:	9905      	ldr	r1, [sp, #20]
    84c4:	f002 fa6f 	bl	a9a6 <__mcmp>
    84c8:	2800      	cmp	r0, #0
    84ca:	da5f      	bge.n	858c <_strtod_l+0x854>
    84cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    84ce:	ea53 030a 	orrs.w	r3, r3, sl
    84d2:	f040 8081 	bne.w	85d8 <_strtod_l+0x8a0>
    84d6:	f3cb 0313 	ubfx	r3, fp, #0, #20
    84da:	2b00      	cmp	r3, #0
    84dc:	d17c      	bne.n	85d8 <_strtod_l+0x8a0>
    84de:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
    84e2:	0d1b      	lsrs	r3, r3, #20
    84e4:	051b      	lsls	r3, r3, #20
    84e6:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
    84ea:	d975      	bls.n	85d8 <_strtod_l+0x8a0>
    84ec:	6963      	ldr	r3, [r4, #20]
    84ee:	b913      	cbnz	r3, 84f6 <_strtod_l+0x7be>
    84f0:	6923      	ldr	r3, [r4, #16]
    84f2:	2b01      	cmp	r3, #1
    84f4:	dd70      	ble.n	85d8 <_strtod_l+0x8a0>
    84f6:	4621      	mov	r1, r4
    84f8:	2201      	movs	r2, #1
    84fa:	9804      	ldr	r0, [sp, #16]
    84fc:	f002 fa00 	bl	a900 <__lshift>
    8500:	9905      	ldr	r1, [sp, #20]
    8502:	4604      	mov	r4, r0
    8504:	f002 fa4f 	bl	a9a6 <__mcmp>
    8508:	2800      	cmp	r0, #0
    850a:	dd65      	ble.n	85d8 <_strtod_l+0x8a0>
    850c:	9906      	ldr	r1, [sp, #24]
    850e:	4a1d      	ldr	r2, [pc, #116]	; (8584 <_strtod_l+0x84c>)
    8510:	465b      	mov	r3, fp
    8512:	2900      	cmp	r1, #0
    8514:	d07f      	beq.n	8616 <_strtod_l+0x8de>
    8516:	ea02 010b 	and.w	r1, r2, fp
    851a:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
    851e:	dc7a      	bgt.n	8616 <_strtod_l+0x8de>
    8520:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
    8524:	f77f aeab 	ble.w	827e <_strtod_l+0x546>
    8528:	4a17      	ldr	r2, [pc, #92]	; (8588 <_strtod_l+0x850>)
    852a:	2300      	movs	r3, #0
    852c:	e9cd 3214 	strd	r3, r2, [sp, #80]	; 0x50
    8530:	4650      	mov	r0, sl
    8532:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
    8536:	4659      	mov	r1, fp
    8538:	f003 fb10 	bl	bb5c <__aeabi_dmul>
    853c:	460b      	mov	r3, r1
    853e:	4303      	orrs	r3, r0
    8540:	bf04      	itt	eq
    8542:	9a04      	ldreq	r2, [sp, #16]
    8544:	2322      	moveq	r3, #34	; 0x22
    8546:	4682      	mov	sl, r0
    8548:	468b      	mov	fp, r1
    854a:	bf08      	it	eq
    854c:	6013      	streq	r3, [r2, #0]
    854e:	e632      	b.n	81b6 <_strtod_l+0x47e>
    8550:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    8554:	fa02 f303 	lsl.w	r3, r2, r3
    8558:	ea03 0a0a 	and.w	sl, r3, sl
    855c:	e6dd      	b.n	831a <_strtod_l+0x5e2>
    855e:	2600      	movs	r6, #0
    8560:	f04f 0801 	mov.w	r8, #1
    8564:	e74d      	b.n	8402 <_strtod_l+0x6ca>
    8566:	464a      	mov	r2, r9
    8568:	991c      	ldr	r1, [sp, #112]	; 0x70
    856a:	9804      	ldr	r0, [sp, #16]
    856c:	f002 f9c8 	bl	a900 <__lshift>
    8570:	901c      	str	r0, [sp, #112]	; 0x70
    8572:	2800      	cmp	r0, #0
    8574:	f47f af76 	bne.w	8464 <_strtod_l+0x72c>
    8578:	e612      	b.n	81a0 <_strtod_l+0x468>
    857a:	bf00      	nop
    857c:	0000dc28 	.word	0x0000dc28
    8580:	fffffc02 	.word	0xfffffc02
    8584:	7ff00000 	.word	0x7ff00000
    8588:	39500000 	.word	0x39500000
    858c:	465d      	mov	r5, fp
    858e:	d160      	bne.n	8652 <_strtod_l+0x91a>
    8590:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    8592:	f3cb 0313 	ubfx	r3, fp, #0, #20
    8596:	b342      	cbz	r2, 85ea <_strtod_l+0x8b2>
    8598:	4ab7      	ldr	r2, [pc, #732]	; (8878 <_strtod_l+0xb40>)
    859a:	4293      	cmp	r3, r2
    859c:	d128      	bne.n	85f0 <_strtod_l+0x8b8>
    859e:	9b06      	ldr	r3, [sp, #24]
    85a0:	4650      	mov	r0, sl
    85a2:	b1eb      	cbz	r3, 85e0 <_strtod_l+0x8a8>
    85a4:	4ab5      	ldr	r2, [pc, #724]	; (887c <_strtod_l+0xb44>)
    85a6:	402a      	ands	r2, r5
    85a8:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
    85ac:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
    85b0:	d819      	bhi.n	85e6 <_strtod_l+0x8ae>
    85b2:	0d12      	lsrs	r2, r2, #20
    85b4:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
    85b8:	fa01 f303 	lsl.w	r3, r1, r3
    85bc:	4298      	cmp	r0, r3
    85be:	d117      	bne.n	85f0 <_strtod_l+0x8b8>
    85c0:	4baf      	ldr	r3, [pc, #700]	; (8880 <_strtod_l+0xb48>)
    85c2:	429d      	cmp	r5, r3
    85c4:	d102      	bne.n	85cc <_strtod_l+0x894>
    85c6:	3001      	adds	r0, #1
    85c8:	f43f adea 	beq.w	81a0 <_strtod_l+0x468>
    85cc:	4bab      	ldr	r3, [pc, #684]	; (887c <_strtod_l+0xb44>)
    85ce:	402b      	ands	r3, r5
    85d0:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
    85d4:	f04f 0a00 	mov.w	sl, #0
    85d8:	9b06      	ldr	r3, [sp, #24]
    85da:	2b00      	cmp	r3, #0
    85dc:	d1a4      	bne.n	8528 <_strtod_l+0x7f0>
    85de:	e5ea      	b.n	81b6 <_strtod_l+0x47e>
    85e0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    85e4:	e7ea      	b.n	85bc <_strtod_l+0x884>
    85e6:	460b      	mov	r3, r1
    85e8:	e7e8      	b.n	85bc <_strtod_l+0x884>
    85ea:	ea53 030a 	orrs.w	r3, r3, sl
    85ee:	d08d      	beq.n	850c <_strtod_l+0x7d4>
    85f0:	b1de      	cbz	r6, 862a <_strtod_l+0x8f2>
    85f2:	422e      	tst	r6, r5
    85f4:	d0f0      	beq.n	85d8 <_strtod_l+0x8a0>
    85f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    85f8:	9a06      	ldr	r2, [sp, #24]
    85fa:	4650      	mov	r0, sl
    85fc:	4659      	mov	r1, fp
    85fe:	b1bb      	cbz	r3, 8630 <_strtod_l+0x8f8>
    8600:	f7ff fb7c 	bl	7cfc <sulp>
    8604:	4602      	mov	r2, r0
    8606:	460b      	mov	r3, r1
    8608:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    860c:	f7fd fd20 	bl	6050 <__adddf3>
    8610:	4682      	mov	sl, r0
    8612:	468b      	mov	fp, r1
    8614:	e7e0      	b.n	85d8 <_strtod_l+0x8a0>
    8616:	4013      	ands	r3, r2
    8618:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
    861c:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
    8620:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
    8624:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
    8628:	e7d6      	b.n	85d8 <_strtod_l+0x8a0>
    862a:	ea18 0f0a 	tst.w	r8, sl
    862e:	e7e1      	b.n	85f4 <_strtod_l+0x8bc>
    8630:	f7ff fb64 	bl	7cfc <sulp>
    8634:	4602      	mov	r2, r0
    8636:	460b      	mov	r3, r1
    8638:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    863c:	f7fd fd06 	bl	604c <__aeabi_dsub>
    8640:	2200      	movs	r2, #0
    8642:	2300      	movs	r3, #0
    8644:	4682      	mov	sl, r0
    8646:	468b      	mov	fp, r1
    8648:	f003 fcf0 	bl	c02c <__aeabi_dcmpeq>
    864c:	2800      	cmp	r0, #0
    864e:	d0c3      	beq.n	85d8 <_strtod_l+0x8a0>
    8650:	e615      	b.n	827e <_strtod_l+0x546>
    8652:	9905      	ldr	r1, [sp, #20]
    8654:	4620      	mov	r0, r4
    8656:	f002 fae1 	bl	ac1c <__ratio>
    865a:	ec57 6b10 	vmov	r6, r7, d0
    865e:	2200      	movs	r2, #0
    8660:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    8664:	ee10 0a10 	vmov	r0, s0
    8668:	4639      	mov	r1, r7
    866a:	f003 fcf3 	bl	c054 <__aeabi_dcmple>
    866e:	2800      	cmp	r0, #0
    8670:	d073      	beq.n	875a <_strtod_l+0xa22>
    8672:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    8674:	2b00      	cmp	r3, #0
    8676:	d046      	beq.n	8706 <_strtod_l+0x9ce>
    8678:	f8df 9208 	ldr.w	r9, [pc, #520]	; 8884 <_strtod_l+0xb4c>
    867c:	f04f 0800 	mov.w	r8, #0
    8680:	4f80      	ldr	r7, [pc, #512]	; (8884 <_strtod_l+0xb4c>)
    8682:	2600      	movs	r6, #0
    8684:	4b7d      	ldr	r3, [pc, #500]	; (887c <_strtod_l+0xb44>)
    8686:	402b      	ands	r3, r5
    8688:	930f      	str	r3, [sp, #60]	; 0x3c
    868a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    868c:	4b7e      	ldr	r3, [pc, #504]	; (8888 <_strtod_l+0xb50>)
    868e:	429a      	cmp	r2, r3
    8690:	f040 80ab 	bne.w	87ea <_strtod_l+0xab2>
    8694:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
    8698:	f1a5 7b54 	sub.w	fp, r5, #55574528	; 0x3500000
    869c:	ec4b ab10 	vmov	d0, sl, fp
    86a0:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
    86a4:	f002 f9f6 	bl	aa94 <__ulp>
    86a8:	4640      	mov	r0, r8
    86aa:	ec53 2b10 	vmov	r2, r3, d0
    86ae:	4649      	mov	r1, r9
    86b0:	f003 fa54 	bl	bb5c <__aeabi_dmul>
    86b4:	4652      	mov	r2, sl
    86b6:	465b      	mov	r3, fp
    86b8:	f7fd fcca 	bl	6050 <__adddf3>
    86bc:	460b      	mov	r3, r1
    86be:	496f      	ldr	r1, [pc, #444]	; (887c <_strtod_l+0xb44>)
    86c0:	4a72      	ldr	r2, [pc, #456]	; (888c <_strtod_l+0xb54>)
    86c2:	4019      	ands	r1, r3
    86c4:	4291      	cmp	r1, r2
    86c6:	4682      	mov	sl, r0
    86c8:	d95b      	bls.n	8782 <_strtod_l+0xa4a>
    86ca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    86cc:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
    86d0:	4293      	cmp	r3, r2
    86d2:	d103      	bne.n	86dc <_strtod_l+0x9a4>
    86d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    86d6:	3301      	adds	r3, #1
    86d8:	f43f ad62 	beq.w	81a0 <_strtod_l+0x468>
    86dc:	f8df b1a0 	ldr.w	fp, [pc, #416]	; 8880 <_strtod_l+0xb48>
    86e0:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
    86e4:	991c      	ldr	r1, [sp, #112]	; 0x70
    86e6:	9804      	ldr	r0, [sp, #16]
    86e8:	f001 ff42 	bl	a570 <_Bfree>
    86ec:	9907      	ldr	r1, [sp, #28]
    86ee:	9804      	ldr	r0, [sp, #16]
    86f0:	f001 ff3e 	bl	a570 <_Bfree>
    86f4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    86f8:	f001 ff3a 	bl	a570 <_Bfree>
    86fc:	4621      	mov	r1, r4
    86fe:	9804      	ldr	r0, [sp, #16]
    8700:	f001 ff36 	bl	a570 <_Bfree>
    8704:	e62b      	b.n	835e <_strtod_l+0x626>
    8706:	f1ba 0f00 	cmp.w	sl, #0
    870a:	d118      	bne.n	873e <_strtod_l+0xa06>
    870c:	f3cb 0313 	ubfx	r3, fp, #0, #20
    8710:	b9db      	cbnz	r3, 874a <_strtod_l+0xa12>
    8712:	2200      	movs	r2, #0
    8714:	4b5b      	ldr	r3, [pc, #364]	; (8884 <_strtod_l+0xb4c>)
    8716:	4630      	mov	r0, r6
    8718:	4639      	mov	r1, r7
    871a:	f003 fc91 	bl	c040 <__aeabi_dcmplt>
    871e:	b9c8      	cbnz	r0, 8754 <_strtod_l+0xa1c>
    8720:	4630      	mov	r0, r6
    8722:	4639      	mov	r1, r7
    8724:	2200      	movs	r2, #0
    8726:	4b5a      	ldr	r3, [pc, #360]	; (8890 <_strtod_l+0xb58>)
    8728:	f003 fa18 	bl	bb5c <__aeabi_dmul>
    872c:	4606      	mov	r6, r0
    872e:	460f      	mov	r7, r1
    8730:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
    8734:	9618      	str	r6, [sp, #96]	; 0x60
    8736:	9319      	str	r3, [sp, #100]	; 0x64
    8738:	e9dd 8918 	ldrd	r8, r9, [sp, #96]	; 0x60
    873c:	e7a2      	b.n	8684 <_strtod_l+0x94c>
    873e:	f1ba 0f01 	cmp.w	sl, #1
    8742:	d102      	bne.n	874a <_strtod_l+0xa12>
    8744:	2d00      	cmp	r5, #0
    8746:	f43f ad9a 	beq.w	827e <_strtod_l+0x546>
    874a:	f04f 0800 	mov.w	r8, #0
    874e:	f8df 9144 	ldr.w	r9, [pc, #324]	; 8894 <_strtod_l+0xb5c>
    8752:	e795      	b.n	8680 <_strtod_l+0x948>
    8754:	2600      	movs	r6, #0
    8756:	4f4e      	ldr	r7, [pc, #312]	; (8890 <_strtod_l+0xb58>)
    8758:	e7ea      	b.n	8730 <_strtod_l+0x9f8>
    875a:	4b4d      	ldr	r3, [pc, #308]	; (8890 <_strtod_l+0xb58>)
    875c:	4630      	mov	r0, r6
    875e:	4639      	mov	r1, r7
    8760:	2200      	movs	r2, #0
    8762:	f003 f9fb 	bl	bb5c <__aeabi_dmul>
    8766:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    8768:	4606      	mov	r6, r0
    876a:	460f      	mov	r7, r1
    876c:	b933      	cbnz	r3, 877c <_strtod_l+0xa44>
    876e:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
    8772:	9010      	str	r0, [sp, #64]	; 0x40
    8774:	9311      	str	r3, [sp, #68]	; 0x44
    8776:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	; 0x40
    877a:	e783      	b.n	8684 <_strtod_l+0x94c>
    877c:	e9cd 6710 	strd	r6, r7, [sp, #64]	; 0x40
    8780:	e7f9      	b.n	8776 <_strtod_l+0xa3e>
    8782:	f103 7b54 	add.w	fp, r3, #55574528	; 0x3500000
    8786:	9b06      	ldr	r3, [sp, #24]
    8788:	2b00      	cmp	r3, #0
    878a:	d1ab      	bne.n	86e4 <_strtod_l+0x9ac>
    878c:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
    8790:	0d1b      	lsrs	r3, r3, #20
    8792:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    8794:	051b      	lsls	r3, r3, #20
    8796:	429a      	cmp	r2, r3
    8798:	d1a4      	bne.n	86e4 <_strtod_l+0x9ac>
    879a:	4630      	mov	r0, r6
    879c:	4639      	mov	r1, r7
    879e:	f003 fd25 	bl	c1ec <__aeabi_d2lz>
    87a2:	f7fd fddd 	bl	6360 <__aeabi_l2d>
    87a6:	4602      	mov	r2, r0
    87a8:	460b      	mov	r3, r1
    87aa:	4630      	mov	r0, r6
    87ac:	4639      	mov	r1, r7
    87ae:	f7fd fc4d 	bl	604c <__aeabi_dsub>
    87b2:	f3cb 0313 	ubfx	r3, fp, #0, #20
    87b6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    87b8:	ea43 030a 	orr.w	r3, r3, sl
    87bc:	4313      	orrs	r3, r2
    87be:	4606      	mov	r6, r0
    87c0:	460f      	mov	r7, r1
    87c2:	d069      	beq.n	8898 <_strtod_l+0xb60>
    87c4:	a326      	add	r3, pc, #152	; (adr r3, 8860 <_strtod_l+0xb28>)
    87c6:	e9d3 2300 	ldrd	r2, r3, [r3]
    87ca:	f003 fc39 	bl	c040 <__aeabi_dcmplt>
    87ce:	2800      	cmp	r0, #0
    87d0:	f47f acf1 	bne.w	81b6 <_strtod_l+0x47e>
    87d4:	a324      	add	r3, pc, #144	; (adr r3, 8868 <_strtod_l+0xb30>)
    87d6:	e9d3 2300 	ldrd	r2, r3, [r3]
    87da:	4630      	mov	r0, r6
    87dc:	4639      	mov	r1, r7
    87de:	f003 fc4d 	bl	c07c <__aeabi_dcmpgt>
    87e2:	2800      	cmp	r0, #0
    87e4:	f43f af7e 	beq.w	86e4 <_strtod_l+0x9ac>
    87e8:	e4e5      	b.n	81b6 <_strtod_l+0x47e>
    87ea:	9b06      	ldr	r3, [sp, #24]
    87ec:	b31b      	cbz	r3, 8836 <_strtod_l+0xafe>
    87ee:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    87f0:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
    87f4:	d81f      	bhi.n	8836 <_strtod_l+0xafe>
    87f6:	a31e      	add	r3, pc, #120	; (adr r3, 8870 <_strtod_l+0xb38>)
    87f8:	e9d3 2300 	ldrd	r2, r3, [r3]
    87fc:	4630      	mov	r0, r6
    87fe:	4639      	mov	r1, r7
    8800:	f003 fc28 	bl	c054 <__aeabi_dcmple>
    8804:	b190      	cbz	r0, 882c <_strtod_l+0xaf4>
    8806:	4639      	mov	r1, r7
    8808:	4630      	mov	r0, r6
    880a:	f003 fc7f 	bl	c10c <__aeabi_d2uiz>
    880e:	2800      	cmp	r0, #0
    8810:	bf08      	it	eq
    8812:	2001      	moveq	r0, #1
    8814:	f7fd fd58 	bl	62c8 <__aeabi_ui2d>
    8818:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    881a:	4606      	mov	r6, r0
    881c:	460f      	mov	r7, r1
    881e:	b9db      	cbnz	r3, 8858 <_strtod_l+0xb20>
    8820:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
    8824:	9012      	str	r0, [sp, #72]	; 0x48
    8826:	9313      	str	r3, [sp, #76]	; 0x4c
    8828:	e9dd 8912 	ldrd	r8, r9, [sp, #72]	; 0x48
    882c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    882e:	f109 63d6 	add.w	r3, r9, #112197632	; 0x6b00000
    8832:	eba3 0902 	sub.w	r9, r3, r2
    8836:	ed9d 0b0a 	vldr	d0, [sp, #40]	; 0x28
    883a:	f002 f92b 	bl	aa94 <__ulp>
    883e:	4640      	mov	r0, r8
    8840:	ec53 2b10 	vmov	r2, r3, d0
    8844:	4649      	mov	r1, r9
    8846:	f003 f989 	bl	bb5c <__aeabi_dmul>
    884a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
    884e:	f7fd fbff 	bl	6050 <__adddf3>
    8852:	4682      	mov	sl, r0
    8854:	468b      	mov	fp, r1
    8856:	e796      	b.n	8786 <_strtod_l+0xa4e>
    8858:	e9cd 6712 	strd	r6, r7, [sp, #72]	; 0x48
    885c:	e7e4      	b.n	8828 <_strtod_l+0xaf0>
    885e:	bf00      	nop
    8860:	94a03595 	.word	0x94a03595
    8864:	3fdfffff 	.word	0x3fdfffff
    8868:	35afe535 	.word	0x35afe535
    886c:	3fe00000 	.word	0x3fe00000
    8870:	ffc00000 	.word	0xffc00000
    8874:	41dfffff 	.word	0x41dfffff
    8878:	000fffff 	.word	0x000fffff
    887c:	7ff00000 	.word	0x7ff00000
    8880:	7fefffff 	.word	0x7fefffff
    8884:	3ff00000 	.word	0x3ff00000
    8888:	7fe00000 	.word	0x7fe00000
    888c:	7c9fffff 	.word	0x7c9fffff
    8890:	3fe00000 	.word	0x3fe00000
    8894:	bff00000 	.word	0xbff00000
    8898:	a30b      	add	r3, pc, #44	; (adr r3, 88c8 <_strtod_l+0xb90>)
    889a:	e9d3 2300 	ldrd	r2, r3, [r3]
    889e:	f003 fbcf 	bl	c040 <__aeabi_dcmplt>
    88a2:	e79e      	b.n	87e2 <_strtod_l+0xaaa>
    88a4:	2300      	movs	r3, #0
    88a6:	930c      	str	r3, [sp, #48]	; 0x30
    88a8:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    88aa:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    88ac:	6013      	str	r3, [r2, #0]
    88ae:	f7ff ba85 	b.w	7dbc <_strtod_l+0x84>
    88b2:	2b65      	cmp	r3, #101	; 0x65
    88b4:	f43f ab72 	beq.w	7f9c <_strtod_l+0x264>
    88b8:	2b45      	cmp	r3, #69	; 0x45
    88ba:	f43f ab6f 	beq.w	7f9c <_strtod_l+0x264>
    88be:	2201      	movs	r2, #1
    88c0:	f7ff bba4 	b.w	800c <_strtod_l+0x2d4>
    88c4:	f3af 8000 	nop.w
    88c8:	94a03595 	.word	0x94a03595
    88cc:	3fcfffff 	.word	0x3fcfffff

000088d0 <_strtod_r>:
_strtod_r():
    88d0:	4b01      	ldr	r3, [pc, #4]	; (88d8 <_strtod_r+0x8>)
    88d2:	f7ff ba31 	b.w	7d38 <_strtod_l>
    88d6:	bf00      	nop
    88d8:	10000218 	.word	0x10000218

000088dc <_strtol_l.isra.0>:
_strtol_l.isra.0():
    88dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    88e0:	4f39      	ldr	r7, [pc, #228]	; (89c8 <_strtol_l.isra.0+0xec>)
    88e2:	4686      	mov	lr, r0
    88e4:	4608      	mov	r0, r1
    88e6:	4605      	mov	r5, r0
    88e8:	f815 4b01 	ldrb.w	r4, [r5], #1
    88ec:	5de6      	ldrb	r6, [r4, r7]
    88ee:	f016 0608 	ands.w	r6, r6, #8
    88f2:	d134      	bne.n	895e <_strtol_l.isra.0+0x82>
    88f4:	2c2d      	cmp	r4, #45	; 0x2d
    88f6:	d134      	bne.n	8962 <_strtol_l.isra.0+0x86>
    88f8:	782c      	ldrb	r4, [r5, #0]
    88fa:	f04f 0801 	mov.w	r8, #1
    88fe:	1c85      	adds	r5, r0, #2
    8900:	2b00      	cmp	r3, #0
    8902:	d05c      	beq.n	89be <_strtol_l.isra.0+0xe2>
    8904:	2b10      	cmp	r3, #16
    8906:	d109      	bne.n	891c <_strtol_l.isra.0+0x40>
    8908:	2c30      	cmp	r4, #48	; 0x30
    890a:	d107      	bne.n	891c <_strtol_l.isra.0+0x40>
    890c:	7828      	ldrb	r0, [r5, #0]
    890e:	f000 00df 	and.w	r0, r0, #223	; 0xdf
    8912:	2858      	cmp	r0, #88	; 0x58
    8914:	d14e      	bne.n	89b4 <_strtol_l.isra.0+0xd8>
    8916:	786c      	ldrb	r4, [r5, #1]
    8918:	2310      	movs	r3, #16
    891a:	3502      	adds	r5, #2
    891c:	f1b8 0f00 	cmp.w	r8, #0
    8920:	bf14      	ite	ne
    8922:	f04f 4c00 	movne.w	ip, #2147483648	; 0x80000000
    8926:	f06f 4c00 	mvneq.w	ip, #2147483648	; 0x80000000
    892a:	2700      	movs	r7, #0
    892c:	fbbc f9f3 	udiv	r9, ip, r3
    8930:	4638      	mov	r0, r7
    8932:	fb03 ca19 	mls	sl, r3, r9, ip
    8936:	f1a4 0630 	sub.w	r6, r4, #48	; 0x30
    893a:	2e09      	cmp	r6, #9
    893c:	d818      	bhi.n	8970 <_strtol_l.isra.0+0x94>
    893e:	4634      	mov	r4, r6
    8940:	42a3      	cmp	r3, r4
    8942:	dd24      	ble.n	898e <_strtol_l.isra.0+0xb2>
    8944:	1c7e      	adds	r6, r7, #1
    8946:	d007      	beq.n	8958 <_strtol_l.isra.0+0x7c>
    8948:	4581      	cmp	r9, r0
    894a:	d31d      	bcc.n	8988 <_strtol_l.isra.0+0xac>
    894c:	d101      	bne.n	8952 <_strtol_l.isra.0+0x76>
    894e:	45a2      	cmp	sl, r4
    8950:	db1a      	blt.n	8988 <_strtol_l.isra.0+0xac>
    8952:	fb00 4003 	mla	r0, r0, r3, r4
    8956:	2701      	movs	r7, #1
    8958:	f815 4b01 	ldrb.w	r4, [r5], #1
    895c:	e7eb      	b.n	8936 <_strtol_l.isra.0+0x5a>
    895e:	4628      	mov	r0, r5
    8960:	e7c1      	b.n	88e6 <_strtol_l.isra.0+0xa>
    8962:	2c2b      	cmp	r4, #43	; 0x2b
    8964:	bf08      	it	eq
    8966:	782c      	ldrbeq	r4, [r5, #0]
    8968:	46b0      	mov	r8, r6
    896a:	bf08      	it	eq
    896c:	1c85      	addeq	r5, r0, #2
    896e:	e7c7      	b.n	8900 <_strtol_l.isra.0+0x24>
    8970:	f1a4 0641 	sub.w	r6, r4, #65	; 0x41
    8974:	2e19      	cmp	r6, #25
    8976:	d801      	bhi.n	897c <_strtol_l.isra.0+0xa0>
    8978:	3c37      	subs	r4, #55	; 0x37
    897a:	e7e1      	b.n	8940 <_strtol_l.isra.0+0x64>
    897c:	f1a4 0661 	sub.w	r6, r4, #97	; 0x61
    8980:	2e19      	cmp	r6, #25
    8982:	d804      	bhi.n	898e <_strtol_l.isra.0+0xb2>
    8984:	3c57      	subs	r4, #87	; 0x57
    8986:	e7db      	b.n	8940 <_strtol_l.isra.0+0x64>
    8988:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
    898c:	e7e4      	b.n	8958 <_strtol_l.isra.0+0x7c>
    898e:	1c7b      	adds	r3, r7, #1
    8990:	d106      	bne.n	89a0 <_strtol_l.isra.0+0xc4>
    8992:	2322      	movs	r3, #34	; 0x22
    8994:	f8ce 3000 	str.w	r3, [lr]
    8998:	4660      	mov	r0, ip
    899a:	b942      	cbnz	r2, 89ae <_strtol_l.isra.0+0xd2>
    899c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    89a0:	f1b8 0f00 	cmp.w	r8, #0
    89a4:	d000      	beq.n	89a8 <_strtol_l.isra.0+0xcc>
    89a6:	4240      	negs	r0, r0
    89a8:	2a00      	cmp	r2, #0
    89aa:	d0f7      	beq.n	899c <_strtol_l.isra.0+0xc0>
    89ac:	b107      	cbz	r7, 89b0 <_strtol_l.isra.0+0xd4>
    89ae:	1e69      	subs	r1, r5, #1
    89b0:	6011      	str	r1, [r2, #0]
    89b2:	e7f3      	b.n	899c <_strtol_l.isra.0+0xc0>
    89b4:	2430      	movs	r4, #48	; 0x30
    89b6:	2b00      	cmp	r3, #0
    89b8:	d1b0      	bne.n	891c <_strtol_l.isra.0+0x40>
    89ba:	2308      	movs	r3, #8
    89bc:	e7ae      	b.n	891c <_strtol_l.isra.0+0x40>
    89be:	2c30      	cmp	r4, #48	; 0x30
    89c0:	d0a4      	beq.n	890c <_strtol_l.isra.0+0x30>
    89c2:	230a      	movs	r3, #10
    89c4:	e7aa      	b.n	891c <_strtol_l.isra.0+0x40>
    89c6:	bf00      	nop
    89c8:	0000dab4 	.word	0x0000dab4

000089cc <_strtol_r>:
_strtol_r():
    89cc:	f7ff bf86 	b.w	88dc <_strtol_l.isra.0>

000089d0 <strtol>:
strtol():
    89d0:	4613      	mov	r3, r2
    89d2:	460a      	mov	r2, r1
    89d4:	4601      	mov	r1, r0
    89d6:	4802      	ldr	r0, [pc, #8]	; (89e0 <strtol+0x10>)
    89d8:	6800      	ldr	r0, [r0, #0]
    89da:	f7ff bf7f 	b.w	88dc <_strtol_l.isra.0>
    89de:	bf00      	nop
    89e0:	100001b0 	.word	0x100001b0

000089e4 <_vsniprintf_r>:
_vsniprintf_r():
    89e4:	b530      	push	{r4, r5, lr}
    89e6:	1e14      	subs	r4, r2, #0
    89e8:	4605      	mov	r5, r0
    89ea:	b09b      	sub	sp, #108	; 0x6c
    89ec:	4618      	mov	r0, r3
    89ee:	da05      	bge.n	89fc <_vsniprintf_r+0x18>
    89f0:	238b      	movs	r3, #139	; 0x8b
    89f2:	602b      	str	r3, [r5, #0]
    89f4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    89f8:	b01b      	add	sp, #108	; 0x6c
    89fa:	bd30      	pop	{r4, r5, pc}
    89fc:	f44f 7302 	mov.w	r3, #520	; 0x208
    8a00:	f8ad 300c 	strh.w	r3, [sp, #12]
    8a04:	bf14      	ite	ne
    8a06:	f104 33ff 	addne.w	r3, r4, #4294967295	; 0xffffffff
    8a0a:	4623      	moveq	r3, r4
    8a0c:	9302      	str	r3, [sp, #8]
    8a0e:	9305      	str	r3, [sp, #20]
    8a10:	f64f 73ff 	movw	r3, #65535	; 0xffff
    8a14:	9100      	str	r1, [sp, #0]
    8a16:	9104      	str	r1, [sp, #16]
    8a18:	f8ad 300e 	strh.w	r3, [sp, #14]
    8a1c:	4602      	mov	r2, r0
    8a1e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
    8a20:	4669      	mov	r1, sp
    8a22:	4628      	mov	r0, r5
    8a24:	f002 f9f8 	bl	ae18 <_svfiprintf_r>
    8a28:	1c43      	adds	r3, r0, #1
    8a2a:	bfbc      	itt	lt
    8a2c:	238b      	movlt	r3, #139	; 0x8b
    8a2e:	602b      	strlt	r3, [r5, #0]
    8a30:	2c00      	cmp	r4, #0
    8a32:	d0e1      	beq.n	89f8 <_vsniprintf_r+0x14>
    8a34:	9b00      	ldr	r3, [sp, #0]
    8a36:	2200      	movs	r2, #0
    8a38:	701a      	strb	r2, [r3, #0]
    8a3a:	e7dd      	b.n	89f8 <_vsniprintf_r+0x14>

00008a3c <vsniprintf>:
vsniprintf():
    8a3c:	b507      	push	{r0, r1, r2, lr}
    8a3e:	9300      	str	r3, [sp, #0]
    8a40:	4613      	mov	r3, r2
    8a42:	460a      	mov	r2, r1
    8a44:	4601      	mov	r1, r0
    8a46:	4803      	ldr	r0, [pc, #12]	; (8a54 <vsniprintf+0x18>)
    8a48:	6800      	ldr	r0, [r0, #0]
    8a4a:	f7ff ffcb 	bl	89e4 <_vsniprintf_r>
    8a4e:	b003      	add	sp, #12
    8a50:	f85d fb04 	ldr.w	pc, [sp], #4
    8a54:	100001b0 	.word	0x100001b0

00008a58 <_vsiscanf_r>:
_vsscanf_r():
    8a58:	b570      	push	{r4, r5, r6, lr}
    8a5a:	b09a      	sub	sp, #104	; 0x68
    8a5c:	4604      	mov	r4, r0
    8a5e:	461e      	mov	r6, r3
    8a60:	4608      	mov	r0, r1
    8a62:	f44f 7301 	mov.w	r3, #516	; 0x204
    8a66:	4615      	mov	r5, r2
    8a68:	f8ad 300c 	strh.w	r3, [sp, #12]
    8a6c:	9100      	str	r1, [sp, #0]
    8a6e:	9104      	str	r1, [sp, #16]
    8a70:	f7ff f8dd 	bl	7c2e <strlen>
    8a74:	4b09      	ldr	r3, [pc, #36]	; (8a9c <_vsiscanf_r+0x44>)
    8a76:	9309      	str	r3, [sp, #36]	; 0x24
    8a78:	2100      	movs	r1, #0
    8a7a:	f64f 73ff 	movw	r3, #65535	; 0xffff
    8a7e:	9001      	str	r0, [sp, #4]
    8a80:	9005      	str	r0, [sp, #20]
    8a82:	910d      	str	r1, [sp, #52]	; 0x34
    8a84:	9112      	str	r1, [sp, #72]	; 0x48
    8a86:	f8ad 300e 	strh.w	r3, [sp, #14]
    8a8a:	462a      	mov	r2, r5
    8a8c:	4633      	mov	r3, r6
    8a8e:	4669      	mov	r1, sp
    8a90:	4620      	mov	r0, r4
    8a92:	f002 fb13 	bl	b0bc <__ssvfiscanf_r>
    8a96:	b01a      	add	sp, #104	; 0x68
    8a98:	bd70      	pop	{r4, r5, r6, pc}
    8a9a:	bf00      	nop
    8a9c:	0000b767 	.word	0x0000b767

00008aa0 <vsiscanf>:
vsiscanf():
    8aa0:	4613      	mov	r3, r2
    8aa2:	460a      	mov	r2, r1
    8aa4:	4601      	mov	r1, r0
    8aa6:	4802      	ldr	r0, [pc, #8]	; (8ab0 <vsiscanf+0x10>)
    8aa8:	6800      	ldr	r0, [r0, #0]
    8aaa:	f7ff bfd5 	b.w	8a58 <_vsiscanf_r>
    8aae:	bf00      	nop
    8ab0:	100001b0 	.word	0x100001b0

00008ab4 <__swbuf_r>:
__swbuf_r():
    8ab4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    8ab6:	460e      	mov	r6, r1
    8ab8:	4614      	mov	r4, r2
    8aba:	4605      	mov	r5, r0
    8abc:	b118      	cbz	r0, 8ac6 <__swbuf_r+0x12>
    8abe:	6983      	ldr	r3, [r0, #24]
    8ac0:	b90b      	cbnz	r3, 8ac6 <__swbuf_r+0x12>
    8ac2:	f001 f827 	bl	9b14 <__sinit>
    8ac6:	4b21      	ldr	r3, [pc, #132]	; (8b4c <__swbuf_r+0x98>)
    8ac8:	429c      	cmp	r4, r3
    8aca:	d12b      	bne.n	8b24 <__swbuf_r+0x70>
    8acc:	686c      	ldr	r4, [r5, #4]
    8ace:	69a3      	ldr	r3, [r4, #24]
    8ad0:	60a3      	str	r3, [r4, #8]
    8ad2:	89a3      	ldrh	r3, [r4, #12]
    8ad4:	071a      	lsls	r2, r3, #28
    8ad6:	d52f      	bpl.n	8b38 <__swbuf_r+0x84>
    8ad8:	6923      	ldr	r3, [r4, #16]
    8ada:	b36b      	cbz	r3, 8b38 <__swbuf_r+0x84>
    8adc:	6923      	ldr	r3, [r4, #16]
    8ade:	6820      	ldr	r0, [r4, #0]
    8ae0:	1ac0      	subs	r0, r0, r3
    8ae2:	6963      	ldr	r3, [r4, #20]
    8ae4:	b2f6      	uxtb	r6, r6
    8ae6:	4283      	cmp	r3, r0
    8ae8:	4637      	mov	r7, r6
    8aea:	dc04      	bgt.n	8af6 <__swbuf_r+0x42>
    8aec:	4621      	mov	r1, r4
    8aee:	4628      	mov	r0, r5
    8af0:	f000 ff6a 	bl	99c8 <_fflush_r>
    8af4:	bb30      	cbnz	r0, 8b44 <__swbuf_r+0x90>
    8af6:	68a3      	ldr	r3, [r4, #8]
    8af8:	3b01      	subs	r3, #1
    8afa:	60a3      	str	r3, [r4, #8]
    8afc:	6823      	ldr	r3, [r4, #0]
    8afe:	1c5a      	adds	r2, r3, #1
    8b00:	6022      	str	r2, [r4, #0]
    8b02:	701e      	strb	r6, [r3, #0]
    8b04:	6963      	ldr	r3, [r4, #20]
    8b06:	3001      	adds	r0, #1
    8b08:	4283      	cmp	r3, r0
    8b0a:	d004      	beq.n	8b16 <__swbuf_r+0x62>
    8b0c:	89a3      	ldrh	r3, [r4, #12]
    8b0e:	07db      	lsls	r3, r3, #31
    8b10:	d506      	bpl.n	8b20 <__swbuf_r+0x6c>
    8b12:	2e0a      	cmp	r6, #10
    8b14:	d104      	bne.n	8b20 <__swbuf_r+0x6c>
    8b16:	4621      	mov	r1, r4
    8b18:	4628      	mov	r0, r5
    8b1a:	f000 ff55 	bl	99c8 <_fflush_r>
    8b1e:	b988      	cbnz	r0, 8b44 <__swbuf_r+0x90>
    8b20:	4638      	mov	r0, r7
    8b22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    8b24:	4b0a      	ldr	r3, [pc, #40]	; (8b50 <__swbuf_r+0x9c>)
    8b26:	429c      	cmp	r4, r3
    8b28:	d101      	bne.n	8b2e <__swbuf_r+0x7a>
    8b2a:	68ac      	ldr	r4, [r5, #8]
    8b2c:	e7cf      	b.n	8ace <__swbuf_r+0x1a>
    8b2e:	4b09      	ldr	r3, [pc, #36]	; (8b54 <__swbuf_r+0xa0>)
    8b30:	429c      	cmp	r4, r3
    8b32:	bf08      	it	eq
    8b34:	68ec      	ldreq	r4, [r5, #12]
    8b36:	e7ca      	b.n	8ace <__swbuf_r+0x1a>
    8b38:	4621      	mov	r1, r4
    8b3a:	4628      	mov	r0, r5
    8b3c:	f000 f80c 	bl	8b58 <__swsetup_r>
    8b40:	2800      	cmp	r0, #0
    8b42:	d0cb      	beq.n	8adc <__swbuf_r+0x28>
    8b44:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
    8b48:	e7ea      	b.n	8b20 <__swbuf_r+0x6c>
    8b4a:	bf00      	nop
    8b4c:	0000dc80 	.word	0x0000dc80
    8b50:	0000dca0 	.word	0x0000dca0
    8b54:	0000dc60 	.word	0x0000dc60

00008b58 <__swsetup_r>:
__swsetup_r():
    8b58:	4b32      	ldr	r3, [pc, #200]	; (8c24 <__swsetup_r+0xcc>)
    8b5a:	b570      	push	{r4, r5, r6, lr}
    8b5c:	681d      	ldr	r5, [r3, #0]
    8b5e:	4606      	mov	r6, r0
    8b60:	460c      	mov	r4, r1
    8b62:	b125      	cbz	r5, 8b6e <__swsetup_r+0x16>
    8b64:	69ab      	ldr	r3, [r5, #24]
    8b66:	b913      	cbnz	r3, 8b6e <__swsetup_r+0x16>
    8b68:	4628      	mov	r0, r5
    8b6a:	f000 ffd3 	bl	9b14 <__sinit>
    8b6e:	4b2e      	ldr	r3, [pc, #184]	; (8c28 <__swsetup_r+0xd0>)
    8b70:	429c      	cmp	r4, r3
    8b72:	d10f      	bne.n	8b94 <__swsetup_r+0x3c>
    8b74:	686c      	ldr	r4, [r5, #4]
    8b76:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    8b7a:	b29a      	uxth	r2, r3
    8b7c:	0715      	lsls	r5, r2, #28
    8b7e:	d42c      	bmi.n	8bda <__swsetup_r+0x82>
    8b80:	06d0      	lsls	r0, r2, #27
    8b82:	d411      	bmi.n	8ba8 <__swsetup_r+0x50>
    8b84:	2209      	movs	r2, #9
    8b86:	6032      	str	r2, [r6, #0]
    8b88:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    8b8c:	81a3      	strh	r3, [r4, #12]
    8b8e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    8b92:	e03e      	b.n	8c12 <__swsetup_r+0xba>
    8b94:	4b25      	ldr	r3, [pc, #148]	; (8c2c <__swsetup_r+0xd4>)
    8b96:	429c      	cmp	r4, r3
    8b98:	d101      	bne.n	8b9e <__swsetup_r+0x46>
    8b9a:	68ac      	ldr	r4, [r5, #8]
    8b9c:	e7eb      	b.n	8b76 <__swsetup_r+0x1e>
    8b9e:	4b24      	ldr	r3, [pc, #144]	; (8c30 <__swsetup_r+0xd8>)
    8ba0:	429c      	cmp	r4, r3
    8ba2:	bf08      	it	eq
    8ba4:	68ec      	ldreq	r4, [r5, #12]
    8ba6:	e7e6      	b.n	8b76 <__swsetup_r+0x1e>
    8ba8:	0751      	lsls	r1, r2, #29
    8baa:	d512      	bpl.n	8bd2 <__swsetup_r+0x7a>
    8bac:	6b61      	ldr	r1, [r4, #52]	; 0x34
    8bae:	b141      	cbz	r1, 8bc2 <__swsetup_r+0x6a>
    8bb0:	f104 0344 	add.w	r3, r4, #68	; 0x44
    8bb4:	4299      	cmp	r1, r3
    8bb6:	d002      	beq.n	8bbe <__swsetup_r+0x66>
    8bb8:	4630      	mov	r0, r6
    8bba:	f7fd fe57 	bl	686c <_free_r>
    8bbe:	2300      	movs	r3, #0
    8bc0:	6363      	str	r3, [r4, #52]	; 0x34
    8bc2:	89a3      	ldrh	r3, [r4, #12]
    8bc4:	f023 0324 	bic.w	r3, r3, #36	; 0x24
    8bc8:	81a3      	strh	r3, [r4, #12]
    8bca:	2300      	movs	r3, #0
    8bcc:	6063      	str	r3, [r4, #4]
    8bce:	6923      	ldr	r3, [r4, #16]
    8bd0:	6023      	str	r3, [r4, #0]
    8bd2:	89a3      	ldrh	r3, [r4, #12]
    8bd4:	f043 0308 	orr.w	r3, r3, #8
    8bd8:	81a3      	strh	r3, [r4, #12]
    8bda:	6923      	ldr	r3, [r4, #16]
    8bdc:	b94b      	cbnz	r3, 8bf2 <__swsetup_r+0x9a>
    8bde:	89a3      	ldrh	r3, [r4, #12]
    8be0:	f403 7320 	and.w	r3, r3, #640	; 0x280
    8be4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
    8be8:	d003      	beq.n	8bf2 <__swsetup_r+0x9a>
    8bea:	4621      	mov	r1, r4
    8bec:	4630      	mov	r0, r6
    8bee:	f001 fbdb 	bl	a3a8 <__smakebuf_r>
    8bf2:	89a2      	ldrh	r2, [r4, #12]
    8bf4:	f012 0301 	ands.w	r3, r2, #1
    8bf8:	d00c      	beq.n	8c14 <__swsetup_r+0xbc>
    8bfa:	2300      	movs	r3, #0
    8bfc:	60a3      	str	r3, [r4, #8]
    8bfe:	6963      	ldr	r3, [r4, #20]
    8c00:	425b      	negs	r3, r3
    8c02:	61a3      	str	r3, [r4, #24]
    8c04:	6923      	ldr	r3, [r4, #16]
    8c06:	b953      	cbnz	r3, 8c1e <__swsetup_r+0xc6>
    8c08:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    8c0c:	f013 0080 	ands.w	r0, r3, #128	; 0x80
    8c10:	d1ba      	bne.n	8b88 <__swsetup_r+0x30>
    8c12:	bd70      	pop	{r4, r5, r6, pc}
    8c14:	0792      	lsls	r2, r2, #30
    8c16:	bf58      	it	pl
    8c18:	6963      	ldrpl	r3, [r4, #20]
    8c1a:	60a3      	str	r3, [r4, #8]
    8c1c:	e7f2      	b.n	8c04 <__swsetup_r+0xac>
    8c1e:	2000      	movs	r0, #0
    8c20:	e7f7      	b.n	8c12 <__swsetup_r+0xba>
    8c22:	bf00      	nop
    8c24:	100001b0 	.word	0x100001b0
    8c28:	0000dc80 	.word	0x0000dc80
    8c2c:	0000dca0 	.word	0x0000dca0
    8c30:	0000dc60 	.word	0x0000dc60

00008c34 <quorem>:
quorem():
    8c34:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8c38:	6903      	ldr	r3, [r0, #16]
    8c3a:	690c      	ldr	r4, [r1, #16]
    8c3c:	42a3      	cmp	r3, r4
    8c3e:	4680      	mov	r8, r0
    8c40:	db7f      	blt.n	8d42 <quorem+0x10e>
    8c42:	3c01      	subs	r4, #1
    8c44:	f101 0714 	add.w	r7, r1, #20
    8c48:	00a0      	lsls	r0, r4, #2
    8c4a:	f108 0514 	add.w	r5, r8, #20
    8c4e:	182b      	adds	r3, r5, r0
    8c50:	9301      	str	r3, [sp, #4]
    8c52:	f857 3024 	ldr.w	r3, [r7, r4, lsl #2]
    8c56:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
    8c5a:	3301      	adds	r3, #1
    8c5c:	429a      	cmp	r2, r3
    8c5e:	eb07 0900 	add.w	r9, r7, r0
    8c62:	fbb2 f6f3 	udiv	r6, r2, r3
    8c66:	d331      	bcc.n	8ccc <quorem+0x98>
    8c68:	f04f 0a00 	mov.w	sl, #0
    8c6c:	46bc      	mov	ip, r7
    8c6e:	46ae      	mov	lr, r5
    8c70:	46d3      	mov	fp, sl
    8c72:	f85c 2b04 	ldr.w	r2, [ip], #4
    8c76:	b293      	uxth	r3, r2
    8c78:	fb06 a303 	mla	r3, r6, r3, sl
    8c7c:	ea4f 4a13 	mov.w	sl, r3, lsr #16
    8c80:	b29b      	uxth	r3, r3
    8c82:	ebab 0303 	sub.w	r3, fp, r3
    8c86:	0c12      	lsrs	r2, r2, #16
    8c88:	f8de b000 	ldr.w	fp, [lr]
    8c8c:	fb06 a202 	mla	r2, r6, r2, sl
    8c90:	fa13 f38b 	uxtah	r3, r3, fp
    8c94:	ea4f 4a12 	mov.w	sl, r2, lsr #16
    8c98:	fa1f fb82 	uxth.w	fp, r2
    8c9c:	f8de 2000 	ldr.w	r2, [lr]
    8ca0:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
    8ca4:	eb02 4223 	add.w	r2, r2, r3, asr #16
    8ca8:	b29b      	uxth	r3, r3
    8caa:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
    8cae:	45e1      	cmp	r9, ip
    8cb0:	ea4f 4b22 	mov.w	fp, r2, asr #16
    8cb4:	f84e 3b04 	str.w	r3, [lr], #4
    8cb8:	d2db      	bcs.n	8c72 <quorem+0x3e>
    8cba:	582b      	ldr	r3, [r5, r0]
    8cbc:	b933      	cbnz	r3, 8ccc <quorem+0x98>
    8cbe:	9b01      	ldr	r3, [sp, #4]
    8cc0:	3b04      	subs	r3, #4
    8cc2:	429d      	cmp	r5, r3
    8cc4:	461a      	mov	r2, r3
    8cc6:	d330      	bcc.n	8d2a <quorem+0xf6>
    8cc8:	f8c8 4010 	str.w	r4, [r8, #16]
    8ccc:	4640      	mov	r0, r8
    8cce:	f001 fe6a 	bl	a9a6 <__mcmp>
    8cd2:	2800      	cmp	r0, #0
    8cd4:	db25      	blt.n	8d22 <quorem+0xee>
    8cd6:	3601      	adds	r6, #1
    8cd8:	4628      	mov	r0, r5
    8cda:	f04f 0c00 	mov.w	ip, #0
    8cde:	f857 2b04 	ldr.w	r2, [r7], #4
    8ce2:	f8d0 e000 	ldr.w	lr, [r0]
    8ce6:	b293      	uxth	r3, r2
    8ce8:	ebac 0303 	sub.w	r3, ip, r3
    8cec:	0c12      	lsrs	r2, r2, #16
    8cee:	fa13 f38e 	uxtah	r3, r3, lr
    8cf2:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
    8cf6:	eb02 4223 	add.w	r2, r2, r3, asr #16
    8cfa:	b29b      	uxth	r3, r3
    8cfc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
    8d00:	45b9      	cmp	r9, r7
    8d02:	ea4f 4c22 	mov.w	ip, r2, asr #16
    8d06:	f840 3b04 	str.w	r3, [r0], #4
    8d0a:	d2e8      	bcs.n	8cde <quorem+0xaa>
    8d0c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
    8d10:	eb05 0384 	add.w	r3, r5, r4, lsl #2
    8d14:	b92a      	cbnz	r2, 8d22 <quorem+0xee>
    8d16:	3b04      	subs	r3, #4
    8d18:	429d      	cmp	r5, r3
    8d1a:	461a      	mov	r2, r3
    8d1c:	d30b      	bcc.n	8d36 <quorem+0x102>
    8d1e:	f8c8 4010 	str.w	r4, [r8, #16]
    8d22:	4630      	mov	r0, r6
    8d24:	b003      	add	sp, #12
    8d26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8d2a:	6812      	ldr	r2, [r2, #0]
    8d2c:	3b04      	subs	r3, #4
    8d2e:	2a00      	cmp	r2, #0
    8d30:	d1ca      	bne.n	8cc8 <quorem+0x94>
    8d32:	3c01      	subs	r4, #1
    8d34:	e7c5      	b.n	8cc2 <quorem+0x8e>
    8d36:	6812      	ldr	r2, [r2, #0]
    8d38:	3b04      	subs	r3, #4
    8d3a:	2a00      	cmp	r2, #0
    8d3c:	d1ef      	bne.n	8d1e <quorem+0xea>
    8d3e:	3c01      	subs	r4, #1
    8d40:	e7ea      	b.n	8d18 <quorem+0xe4>
    8d42:	2000      	movs	r0, #0
    8d44:	e7ee      	b.n	8d24 <quorem+0xf0>
    8d46:	Address 0x0000000000008d46 is out of bounds.


00008d48 <_dtoa_r>:
_dtoa_r():
    8d48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8d4c:	ec55 4b10 	vmov	r4, r5, d0
    8d50:	b099      	sub	sp, #100	; 0x64
    8d52:	6a47      	ldr	r7, [r0, #36]	; 0x24
    8d54:	9108      	str	r1, [sp, #32]
    8d56:	4683      	mov	fp, r0
    8d58:	920d      	str	r2, [sp, #52]	; 0x34
    8d5a:	9314      	str	r3, [sp, #80]	; 0x50
    8d5c:	9e22      	ldr	r6, [sp, #136]	; 0x88
    8d5e:	e9cd 4500 	strd	r4, r5, [sp]
    8d62:	b947      	cbnz	r7, 8d76 <_dtoa_r+0x2e>
    8d64:	2010      	movs	r0, #16
    8d66:	f7fd fd41 	bl	67ec <malloc>
    8d6a:	e9c0 7701 	strd	r7, r7, [r0, #4]
    8d6e:	f8cb 0024 	str.w	r0, [fp, #36]	; 0x24
    8d72:	6007      	str	r7, [r0, #0]
    8d74:	60c7      	str	r7, [r0, #12]
    8d76:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
    8d7a:	6819      	ldr	r1, [r3, #0]
    8d7c:	b159      	cbz	r1, 8d96 <_dtoa_r+0x4e>
    8d7e:	685a      	ldr	r2, [r3, #4]
    8d80:	604a      	str	r2, [r1, #4]
    8d82:	2301      	movs	r3, #1
    8d84:	4093      	lsls	r3, r2
    8d86:	608b      	str	r3, [r1, #8]
    8d88:	4658      	mov	r0, fp
    8d8a:	f001 fbf1 	bl	a570 <_Bfree>
    8d8e:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
    8d92:	2200      	movs	r2, #0
    8d94:	601a      	str	r2, [r3, #0]
    8d96:	1e2b      	subs	r3, r5, #0
    8d98:	bfb9      	ittee	lt
    8d9a:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
    8d9e:	9301      	strlt	r3, [sp, #4]
    8da0:	2300      	movge	r3, #0
    8da2:	6033      	strge	r3, [r6, #0]
    8da4:	9c01      	ldr	r4, [sp, #4]
    8da6:	4bb2      	ldr	r3, [pc, #712]	; (9070 <_dtoa_r+0x328>)
    8da8:	bfbc      	itt	lt
    8daa:	2201      	movlt	r2, #1
    8dac:	6032      	strlt	r2, [r6, #0]
    8dae:	43a3      	bics	r3, r4
    8db0:	d11a      	bne.n	8de8 <_dtoa_r+0xa0>
    8db2:	9a14      	ldr	r2, [sp, #80]	; 0x50
    8db4:	f242 730f 	movw	r3, #9999	; 0x270f
    8db8:	6013      	str	r3, [r2, #0]
    8dba:	9a00      	ldr	r2, [sp, #0]
    8dbc:	f3c4 0313 	ubfx	r3, r4, #0, #20
    8dc0:	4313      	orrs	r3, r2
    8dc2:	f000 8552 	beq.w	986a <_dtoa_r+0xb22>
    8dc6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    8dc8:	b953      	cbnz	r3, 8de0 <_dtoa_r+0x98>
    8dca:	4baa      	ldr	r3, [pc, #680]	; (9074 <_dtoa_r+0x32c>)
    8dcc:	e023      	b.n	8e16 <_dtoa_r+0xce>
    8dce:	4baa      	ldr	r3, [pc, #680]	; (9078 <_dtoa_r+0x330>)
    8dd0:	9303      	str	r3, [sp, #12]
    8dd2:	3308      	adds	r3, #8
    8dd4:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    8dd6:	6013      	str	r3, [r2, #0]
    8dd8:	9803      	ldr	r0, [sp, #12]
    8dda:	b019      	add	sp, #100	; 0x64
    8ddc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8de0:	4ba4      	ldr	r3, [pc, #656]	; (9074 <_dtoa_r+0x32c>)
    8de2:	9303      	str	r3, [sp, #12]
    8de4:	3303      	adds	r3, #3
    8de6:	e7f5      	b.n	8dd4 <_dtoa_r+0x8c>
    8de8:	ed9d 7b00 	vldr	d7, [sp]
    8dec:	2200      	movs	r2, #0
    8dee:	2300      	movs	r3, #0
    8df0:	ec51 0b17 	vmov	r0, r1, d7
    8df4:	ed8d 7b0e 	vstr	d7, [sp, #56]	; 0x38
    8df8:	f003 f918 	bl	c02c <__aeabi_dcmpeq>
    8dfc:	4607      	mov	r7, r0
    8dfe:	b160      	cbz	r0, 8e1a <_dtoa_r+0xd2>
    8e00:	9a14      	ldr	r2, [sp, #80]	; 0x50
    8e02:	2301      	movs	r3, #1
    8e04:	6013      	str	r3, [r2, #0]
    8e06:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    8e08:	2b00      	cmp	r3, #0
    8e0a:	f000 852b 	beq.w	9864 <_dtoa_r+0xb1c>
    8e0e:	4b9b      	ldr	r3, [pc, #620]	; (907c <_dtoa_r+0x334>)
    8e10:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    8e12:	6013      	str	r3, [r2, #0]
    8e14:	3b01      	subs	r3, #1
    8e16:	9303      	str	r3, [sp, #12]
    8e18:	e7de      	b.n	8dd8 <_dtoa_r+0x90>
    8e1a:	aa16      	add	r2, sp, #88	; 0x58
    8e1c:	a917      	add	r1, sp, #92	; 0x5c
    8e1e:	ed9d 0b0e 	vldr	d0, [sp, #56]	; 0x38
    8e22:	4658      	mov	r0, fp
    8e24:	f001 feac 	bl	ab80 <__d2b>
    8e28:	f3c4 560a 	ubfx	r6, r4, #20, #11
    8e2c:	4680      	mov	r8, r0
    8e2e:	2e00      	cmp	r6, #0
    8e30:	d07f      	beq.n	8f32 <_dtoa_r+0x1ea>
    8e32:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    8e34:	9715      	str	r7, [sp, #84]	; 0x54
    8e36:	f3c3 0313 	ubfx	r3, r3, #0, #20
    8e3a:	e9dd 450e 	ldrd	r4, r5, [sp, #56]	; 0x38
    8e3e:	f043 557f 	orr.w	r5, r3, #1069547520	; 0x3fc00000
    8e42:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
    8e46:	f2a6 36ff 	subw	r6, r6, #1023	; 0x3ff
    8e4a:	2200      	movs	r2, #0
    8e4c:	4b8c      	ldr	r3, [pc, #560]	; (9080 <_dtoa_r+0x338>)
    8e4e:	4620      	mov	r0, r4
    8e50:	4629      	mov	r1, r5
    8e52:	f7fd f8fb 	bl	604c <__aeabi_dsub>
    8e56:	a380      	add	r3, pc, #512	; (adr r3, 9058 <_dtoa_r+0x310>)
    8e58:	e9d3 2300 	ldrd	r2, r3, [r3]
    8e5c:	f002 fe7e 	bl	bb5c <__aeabi_dmul>
    8e60:	a37f      	add	r3, pc, #508	; (adr r3, 9060 <_dtoa_r+0x318>)
    8e62:	e9d3 2300 	ldrd	r2, r3, [r3]
    8e66:	f7fd f8f3 	bl	6050 <__adddf3>
    8e6a:	4604      	mov	r4, r0
    8e6c:	4630      	mov	r0, r6
    8e6e:	460d      	mov	r5, r1
    8e70:	f7fd fa3a 	bl	62e8 <__aeabi_i2d>
    8e74:	a37c      	add	r3, pc, #496	; (adr r3, 9068 <_dtoa_r+0x320>)
    8e76:	e9d3 2300 	ldrd	r2, r3, [r3]
    8e7a:	f002 fe6f 	bl	bb5c <__aeabi_dmul>
    8e7e:	4602      	mov	r2, r0
    8e80:	460b      	mov	r3, r1
    8e82:	4620      	mov	r0, r4
    8e84:	4629      	mov	r1, r5
    8e86:	f7fd f8e3 	bl	6050 <__adddf3>
    8e8a:	4604      	mov	r4, r0
    8e8c:	460d      	mov	r5, r1
    8e8e:	f003 f915 	bl	c0bc <__aeabi_d2iz>
    8e92:	2200      	movs	r2, #0
    8e94:	4682      	mov	sl, r0
    8e96:	2300      	movs	r3, #0
    8e98:	4620      	mov	r0, r4
    8e9a:	4629      	mov	r1, r5
    8e9c:	f003 f8d0 	bl	c040 <__aeabi_dcmplt>
    8ea0:	b148      	cbz	r0, 8eb6 <_dtoa_r+0x16e>
    8ea2:	4650      	mov	r0, sl
    8ea4:	f7fd fa20 	bl	62e8 <__aeabi_i2d>
    8ea8:	4622      	mov	r2, r4
    8eaa:	462b      	mov	r3, r5
    8eac:	f003 f8be 	bl	c02c <__aeabi_dcmpeq>
    8eb0:	b908      	cbnz	r0, 8eb6 <_dtoa_r+0x16e>
    8eb2:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
    8eb6:	f1ba 0f16 	cmp.w	sl, #22
    8eba:	d859      	bhi.n	8f70 <_dtoa_r+0x228>
    8ebc:	4b71      	ldr	r3, [pc, #452]	; (9084 <_dtoa_r+0x33c>)
    8ebe:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
    8ec2:	e9d3 2300 	ldrd	r2, r3, [r3]
    8ec6:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
    8eca:	f003 f8b9 	bl	c040 <__aeabi_dcmplt>
    8ece:	2800      	cmp	r0, #0
    8ed0:	d050      	beq.n	8f74 <_dtoa_r+0x22c>
    8ed2:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
    8ed6:	2300      	movs	r3, #0
    8ed8:	9311      	str	r3, [sp, #68]	; 0x44
    8eda:	9b16      	ldr	r3, [sp, #88]	; 0x58
    8edc:	1b9e      	subs	r6, r3, r6
    8ede:	1e73      	subs	r3, r6, #1
    8ee0:	9307      	str	r3, [sp, #28]
    8ee2:	bf45      	ittet	mi
    8ee4:	f1c6 0301 	rsbmi	r3, r6, #1
    8ee8:	9306      	strmi	r3, [sp, #24]
    8eea:	2300      	movpl	r3, #0
    8eec:	2300      	movmi	r3, #0
    8eee:	bf4c      	ite	mi
    8ef0:	9307      	strmi	r3, [sp, #28]
    8ef2:	9306      	strpl	r3, [sp, #24]
    8ef4:	f1ba 0f00 	cmp.w	sl, #0
    8ef8:	db3e      	blt.n	8f78 <_dtoa_r+0x230>
    8efa:	9b07      	ldr	r3, [sp, #28]
    8efc:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
    8f00:	4453      	add	r3, sl
    8f02:	9307      	str	r3, [sp, #28]
    8f04:	2300      	movs	r3, #0
    8f06:	9309      	str	r3, [sp, #36]	; 0x24
    8f08:	9b08      	ldr	r3, [sp, #32]
    8f0a:	2b09      	cmp	r3, #9
    8f0c:	f200 808f 	bhi.w	902e <_dtoa_r+0x2e6>
    8f10:	2b05      	cmp	r3, #5
    8f12:	bfc4      	itt	gt
    8f14:	3b04      	subgt	r3, #4
    8f16:	9308      	strgt	r3, [sp, #32]
    8f18:	9b08      	ldr	r3, [sp, #32]
    8f1a:	f1a3 0302 	sub.w	r3, r3, #2
    8f1e:	bfcc      	ite	gt
    8f20:	2400      	movgt	r4, #0
    8f22:	2401      	movle	r4, #1
    8f24:	2b03      	cmp	r3, #3
    8f26:	f200 808d 	bhi.w	9044 <_dtoa_r+0x2fc>
    8f2a:	e8df f003 	tbb	[pc, r3]
    8f2e:	3c2f      	.short	0x3c2f
    8f30:	7e3a      	.short	0x7e3a
    8f32:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	; 0x58
    8f36:	441e      	add	r6, r3
    8f38:	f206 4032 	addw	r0, r6, #1074	; 0x432
    8f3c:	2820      	cmp	r0, #32
    8f3e:	dd11      	ble.n	8f64 <_dtoa_r+0x21c>
    8f40:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
    8f44:	9b00      	ldr	r3, [sp, #0]
    8f46:	4084      	lsls	r4, r0
    8f48:	f206 4012 	addw	r0, r6, #1042	; 0x412
    8f4c:	fa23 f000 	lsr.w	r0, r3, r0
    8f50:	4320      	orrs	r0, r4
    8f52:	f7fd f9b9 	bl	62c8 <__aeabi_ui2d>
    8f56:	2301      	movs	r3, #1
    8f58:	4604      	mov	r4, r0
    8f5a:	f1a1 75f8 	sub.w	r5, r1, #32505856	; 0x1f00000
    8f5e:	3e01      	subs	r6, #1
    8f60:	9315      	str	r3, [sp, #84]	; 0x54
    8f62:	e772      	b.n	8e4a <_dtoa_r+0x102>
    8f64:	9b00      	ldr	r3, [sp, #0]
    8f66:	f1c0 0020 	rsb	r0, r0, #32
    8f6a:	fa03 f000 	lsl.w	r0, r3, r0
    8f6e:	e7f0      	b.n	8f52 <_dtoa_r+0x20a>
    8f70:	2301      	movs	r3, #1
    8f72:	e7b1      	b.n	8ed8 <_dtoa_r+0x190>
    8f74:	9011      	str	r0, [sp, #68]	; 0x44
    8f76:	e7b0      	b.n	8eda <_dtoa_r+0x192>
    8f78:	9b06      	ldr	r3, [sp, #24]
    8f7a:	eba3 030a 	sub.w	r3, r3, sl
    8f7e:	9306      	str	r3, [sp, #24]
    8f80:	f1ca 0300 	rsb	r3, sl, #0
    8f84:	9309      	str	r3, [sp, #36]	; 0x24
    8f86:	2300      	movs	r3, #0
    8f88:	9310      	str	r3, [sp, #64]	; 0x40
    8f8a:	e7bd      	b.n	8f08 <_dtoa_r+0x1c0>
    8f8c:	2300      	movs	r3, #0
    8f8e:	930c      	str	r3, [sp, #48]	; 0x30
    8f90:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    8f92:	2b00      	cmp	r3, #0
    8f94:	dc59      	bgt.n	904a <_dtoa_r+0x302>
    8f96:	2301      	movs	r3, #1
    8f98:	9304      	str	r3, [sp, #16]
    8f9a:	4699      	mov	r9, r3
    8f9c:	461a      	mov	r2, r3
    8f9e:	920d      	str	r2, [sp, #52]	; 0x34
    8fa0:	e00c      	b.n	8fbc <_dtoa_r+0x274>
    8fa2:	2301      	movs	r3, #1
    8fa4:	e7f3      	b.n	8f8e <_dtoa_r+0x246>
    8fa6:	2300      	movs	r3, #0
    8fa8:	930c      	str	r3, [sp, #48]	; 0x30
    8faa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    8fac:	4453      	add	r3, sl
    8fae:	f103 0901 	add.w	r9, r3, #1
    8fb2:	9304      	str	r3, [sp, #16]
    8fb4:	464b      	mov	r3, r9
    8fb6:	2b01      	cmp	r3, #1
    8fb8:	bfb8      	it	lt
    8fba:	2301      	movlt	r3, #1
    8fbc:	f8db 5024 	ldr.w	r5, [fp, #36]	; 0x24
    8fc0:	2200      	movs	r2, #0
    8fc2:	606a      	str	r2, [r5, #4]
    8fc4:	2204      	movs	r2, #4
    8fc6:	f102 0014 	add.w	r0, r2, #20
    8fca:	4298      	cmp	r0, r3
    8fcc:	6869      	ldr	r1, [r5, #4]
    8fce:	d95d      	bls.n	908c <_dtoa_r+0x344>
    8fd0:	4658      	mov	r0, fp
    8fd2:	f001 fa99 	bl	a508 <_Balloc>
    8fd6:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
    8fda:	6028      	str	r0, [r5, #0]
    8fdc:	681b      	ldr	r3, [r3, #0]
    8fde:	9303      	str	r3, [sp, #12]
    8fe0:	f1b9 0f0e 	cmp.w	r9, #14
    8fe4:	f200 80d7 	bhi.w	9196 <_dtoa_r+0x44e>
    8fe8:	2c00      	cmp	r4, #0
    8fea:	f000 80d4 	beq.w	9196 <_dtoa_r+0x44e>
    8fee:	f1ba 0f00 	cmp.w	sl, #0
    8ff2:	dd69      	ble.n	90c8 <_dtoa_r+0x380>
    8ff4:	4a23      	ldr	r2, [pc, #140]	; (9084 <_dtoa_r+0x33c>)
    8ff6:	f00a 030f 	and.w	r3, sl, #15
    8ffa:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
    8ffe:	ed93 7b00 	vldr	d7, [r3]
    9002:	ea4f 142a 	mov.w	r4, sl, asr #4
    9006:	06e2      	lsls	r2, r4, #27
    9008:	ed8d 7b0a 	vstr	d7, [sp, #40]	; 0x28
    900c:	d55a      	bpl.n	90c4 <_dtoa_r+0x37c>
    900e:	4b1e      	ldr	r3, [pc, #120]	; (9088 <_dtoa_r+0x340>)
    9010:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
    9014:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
    9018:	f002 feca 	bl	bdb0 <__aeabi_ddiv>
    901c:	e9cd 0100 	strd	r0, r1, [sp]
    9020:	f004 040f 	and.w	r4, r4, #15
    9024:	2603      	movs	r6, #3
    9026:	4d18      	ldr	r5, [pc, #96]	; (9088 <_dtoa_r+0x340>)
    9028:	e041      	b.n	90ae <_dtoa_r+0x366>
    902a:	2301      	movs	r3, #1
    902c:	e7bc      	b.n	8fa8 <_dtoa_r+0x260>
    902e:	2401      	movs	r4, #1
    9030:	2300      	movs	r3, #0
    9032:	9308      	str	r3, [sp, #32]
    9034:	940c      	str	r4, [sp, #48]	; 0x30
    9036:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    903a:	9304      	str	r3, [sp, #16]
    903c:	4699      	mov	r9, r3
    903e:	2200      	movs	r2, #0
    9040:	2312      	movs	r3, #18
    9042:	e7ac      	b.n	8f9e <_dtoa_r+0x256>
    9044:	2301      	movs	r3, #1
    9046:	930c      	str	r3, [sp, #48]	; 0x30
    9048:	e7f5      	b.n	9036 <_dtoa_r+0x2ee>
    904a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    904c:	9304      	str	r3, [sp, #16]
    904e:	4699      	mov	r9, r3
    9050:	e7b4      	b.n	8fbc <_dtoa_r+0x274>
    9052:	bf00      	nop
    9054:	f3af 8000 	nop.w
    9058:	636f4361 	.word	0x636f4361
    905c:	3fd287a7 	.word	0x3fd287a7
    9060:	8b60c8b3 	.word	0x8b60c8b3
    9064:	3fc68a28 	.word	0x3fc68a28
    9068:	509f79fb 	.word	0x509f79fb
    906c:	3fd34413 	.word	0x3fd34413
    9070:	7ff00000 	.word	0x7ff00000
    9074:	0000dc59 	.word	0x0000dc59
    9078:	0000dc50 	.word	0x0000dc50
    907c:	0000d3f8 	.word	0x0000d3f8
    9080:	3ff80000 	.word	0x3ff80000
    9084:	0000dd00 	.word	0x0000dd00
    9088:	0000dcd8 	.word	0x0000dcd8
    908c:	3101      	adds	r1, #1
    908e:	6069      	str	r1, [r5, #4]
    9090:	0052      	lsls	r2, r2, #1
    9092:	e798      	b.n	8fc6 <_dtoa_r+0x27e>
    9094:	07e3      	lsls	r3, r4, #31
    9096:	d508      	bpl.n	90aa <_dtoa_r+0x362>
    9098:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    909c:	e9d5 2300 	ldrd	r2, r3, [r5]
    90a0:	f002 fd5c 	bl	bb5c <__aeabi_dmul>
    90a4:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
    90a8:	3601      	adds	r6, #1
    90aa:	1064      	asrs	r4, r4, #1
    90ac:	3508      	adds	r5, #8
    90ae:	2c00      	cmp	r4, #0
    90b0:	d1f0      	bne.n	9094 <_dtoa_r+0x34c>
    90b2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
    90b6:	e9dd 0100 	ldrd	r0, r1, [sp]
    90ba:	f002 fe79 	bl	bdb0 <__aeabi_ddiv>
    90be:	e9cd 0100 	strd	r0, r1, [sp]
    90c2:	e01a      	b.n	90fa <_dtoa_r+0x3b2>
    90c4:	2602      	movs	r6, #2
    90c6:	e7ae      	b.n	9026 <_dtoa_r+0x2de>
    90c8:	f000 809f 	beq.w	920a <_dtoa_r+0x4c2>
    90cc:	f1ca 0400 	rsb	r4, sl, #0
    90d0:	4b9f      	ldr	r3, [pc, #636]	; (9350 <_dtoa_r+0x608>)
    90d2:	4da0      	ldr	r5, [pc, #640]	; (9354 <_dtoa_r+0x60c>)
    90d4:	f004 020f 	and.w	r2, r4, #15
    90d8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
    90dc:	e9d3 2300 	ldrd	r2, r3, [r3]
    90e0:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
    90e4:	f002 fd3a 	bl	bb5c <__aeabi_dmul>
    90e8:	e9cd 0100 	strd	r0, r1, [sp]
    90ec:	1124      	asrs	r4, r4, #4
    90ee:	2300      	movs	r3, #0
    90f0:	2602      	movs	r6, #2
    90f2:	2c00      	cmp	r4, #0
    90f4:	d17e      	bne.n	91f4 <_dtoa_r+0x4ac>
    90f6:	2b00      	cmp	r3, #0
    90f8:	d1e1      	bne.n	90be <_dtoa_r+0x376>
    90fa:	9b11      	ldr	r3, [sp, #68]	; 0x44
    90fc:	2b00      	cmp	r3, #0
    90fe:	f000 8086 	beq.w	920e <_dtoa_r+0x4c6>
    9102:	e9dd 4500 	ldrd	r4, r5, [sp]
    9106:	2200      	movs	r2, #0
    9108:	4b93      	ldr	r3, [pc, #588]	; (9358 <_dtoa_r+0x610>)
    910a:	4620      	mov	r0, r4
    910c:	4629      	mov	r1, r5
    910e:	f002 ff97 	bl	c040 <__aeabi_dcmplt>
    9112:	2800      	cmp	r0, #0
    9114:	d07b      	beq.n	920e <_dtoa_r+0x4c6>
    9116:	f1b9 0f00 	cmp.w	r9, #0
    911a:	d078      	beq.n	920e <_dtoa_r+0x4c6>
    911c:	9b04      	ldr	r3, [sp, #16]
    911e:	2b00      	cmp	r3, #0
    9120:	dd35      	ble.n	918e <_dtoa_r+0x446>
    9122:	f10a 33ff 	add.w	r3, sl, #4294967295	; 0xffffffff
    9126:	930a      	str	r3, [sp, #40]	; 0x28
    9128:	4620      	mov	r0, r4
    912a:	2200      	movs	r2, #0
    912c:	4b8b      	ldr	r3, [pc, #556]	; (935c <_dtoa_r+0x614>)
    912e:	4629      	mov	r1, r5
    9130:	f002 fd14 	bl	bb5c <__aeabi_dmul>
    9134:	e9cd 0100 	strd	r0, r1, [sp]
    9138:	9c04      	ldr	r4, [sp, #16]
    913a:	3601      	adds	r6, #1
    913c:	4630      	mov	r0, r6
    913e:	f7fd f8d3 	bl	62e8 <__aeabi_i2d>
    9142:	e9dd 2300 	ldrd	r2, r3, [sp]
    9146:	f002 fd09 	bl	bb5c <__aeabi_dmul>
    914a:	2200      	movs	r2, #0
    914c:	4b84      	ldr	r3, [pc, #528]	; (9360 <_dtoa_r+0x618>)
    914e:	f7fc ff7f 	bl	6050 <__adddf3>
    9152:	4606      	mov	r6, r0
    9154:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
    9158:	2c00      	cmp	r4, #0
    915a:	d15c      	bne.n	9216 <_dtoa_r+0x4ce>
    915c:	2200      	movs	r2, #0
    915e:	4b81      	ldr	r3, [pc, #516]	; (9364 <_dtoa_r+0x61c>)
    9160:	e9dd 0100 	ldrd	r0, r1, [sp]
    9164:	f7fc ff72 	bl	604c <__aeabi_dsub>
    9168:	4632      	mov	r2, r6
    916a:	463b      	mov	r3, r7
    916c:	e9cd 0100 	strd	r0, r1, [sp]
    9170:	f002 ff84 	bl	c07c <__aeabi_dcmpgt>
    9174:	2800      	cmp	r0, #0
    9176:	f040 828c 	bne.w	9692 <_dtoa_r+0x94a>
    917a:	4632      	mov	r2, r6
    917c:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
    9180:	e9dd 0100 	ldrd	r0, r1, [sp]
    9184:	f002 ff5c 	bl	c040 <__aeabi_dcmplt>
    9188:	2800      	cmp	r0, #0
    918a:	f040 8280 	bne.w	968e <_dtoa_r+0x946>
    918e:	e9dd 340e 	ldrd	r3, r4, [sp, #56]	; 0x38
    9192:	e9cd 3400 	strd	r3, r4, [sp]
    9196:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    9198:	2b00      	cmp	r3, #0
    919a:	f2c0 814f 	blt.w	943c <_dtoa_r+0x6f4>
    919e:	f1ba 0f0e 	cmp.w	sl, #14
    91a2:	f300 814b 	bgt.w	943c <_dtoa_r+0x6f4>
    91a6:	4b6a      	ldr	r3, [pc, #424]	; (9350 <_dtoa_r+0x608>)
    91a8:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
    91ac:	ed93 7b00 	vldr	d7, [r3]
    91b0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    91b2:	2b00      	cmp	r3, #0
    91b4:	ed8d 7b04 	vstr	d7, [sp, #16]
    91b8:	f280 80d8 	bge.w	936c <_dtoa_r+0x624>
    91bc:	f1b9 0f00 	cmp.w	r9, #0
    91c0:	f300 80d4 	bgt.w	936c <_dtoa_r+0x624>
    91c4:	f040 8262 	bne.w	968c <_dtoa_r+0x944>
    91c8:	2200      	movs	r2, #0
    91ca:	4b66      	ldr	r3, [pc, #408]	; (9364 <_dtoa_r+0x61c>)
    91cc:	ec51 0b17 	vmov	r0, r1, d7
    91d0:	f002 fcc4 	bl	bb5c <__aeabi_dmul>
    91d4:	e9dd 2300 	ldrd	r2, r3, [sp]
    91d8:	f002 ff46 	bl	c068 <__aeabi_dcmpge>
    91dc:	464c      	mov	r4, r9
    91de:	464e      	mov	r6, r9
    91e0:	2800      	cmp	r0, #0
    91e2:	f040 823b 	bne.w	965c <_dtoa_r+0x914>
    91e6:	9d03      	ldr	r5, [sp, #12]
    91e8:	2331      	movs	r3, #49	; 0x31
    91ea:	f805 3b01 	strb.w	r3, [r5], #1
    91ee:	f10a 0a01 	add.w	sl, sl, #1
    91f2:	e237      	b.n	9664 <_dtoa_r+0x91c>
    91f4:	07e7      	lsls	r7, r4, #31
    91f6:	d505      	bpl.n	9204 <_dtoa_r+0x4bc>
    91f8:	e9d5 2300 	ldrd	r2, r3, [r5]
    91fc:	f002 fcae 	bl	bb5c <__aeabi_dmul>
    9200:	3601      	adds	r6, #1
    9202:	2301      	movs	r3, #1
    9204:	1064      	asrs	r4, r4, #1
    9206:	3508      	adds	r5, #8
    9208:	e773      	b.n	90f2 <_dtoa_r+0x3aa>
    920a:	2602      	movs	r6, #2
    920c:	e775      	b.n	90fa <_dtoa_r+0x3b2>
    920e:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
    9212:	464c      	mov	r4, r9
    9214:	e792      	b.n	913c <_dtoa_r+0x3f4>
    9216:	4b4e      	ldr	r3, [pc, #312]	; (9350 <_dtoa_r+0x608>)
    9218:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
    921c:	e953 0102 	ldrd	r0, r1, [r3, #-8]
    9220:	9b03      	ldr	r3, [sp, #12]
    9222:	441c      	add	r4, r3
    9224:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    9226:	2b00      	cmp	r3, #0
    9228:	d046      	beq.n	92b8 <_dtoa_r+0x570>
    922a:	4602      	mov	r2, r0
    922c:	460b      	mov	r3, r1
    922e:	2000      	movs	r0, #0
    9230:	494d      	ldr	r1, [pc, #308]	; (9368 <_dtoa_r+0x620>)
    9232:	f002 fdbd 	bl	bdb0 <__aeabi_ddiv>
    9236:	4632      	mov	r2, r6
    9238:	463b      	mov	r3, r7
    923a:	f7fc ff07 	bl	604c <__aeabi_dsub>
    923e:	9d03      	ldr	r5, [sp, #12]
    9240:	4606      	mov	r6, r0
    9242:	460f      	mov	r7, r1
    9244:	e9dd 0100 	ldrd	r0, r1, [sp]
    9248:	f002 ff38 	bl	c0bc <__aeabi_d2iz>
    924c:	9012      	str	r0, [sp, #72]	; 0x48
    924e:	f7fd f84b 	bl	62e8 <__aeabi_i2d>
    9252:	4602      	mov	r2, r0
    9254:	460b      	mov	r3, r1
    9256:	e9dd 0100 	ldrd	r0, r1, [sp]
    925a:	f7fc fef7 	bl	604c <__aeabi_dsub>
    925e:	9b12      	ldr	r3, [sp, #72]	; 0x48
    9260:	3330      	adds	r3, #48	; 0x30
    9262:	f805 3b01 	strb.w	r3, [r5], #1
    9266:	4632      	mov	r2, r6
    9268:	463b      	mov	r3, r7
    926a:	e9cd 0100 	strd	r0, r1, [sp]
    926e:	f002 fee7 	bl	c040 <__aeabi_dcmplt>
    9272:	2800      	cmp	r0, #0
    9274:	d160      	bne.n	9338 <_dtoa_r+0x5f0>
    9276:	e9dd 2300 	ldrd	r2, r3, [sp]
    927a:	2000      	movs	r0, #0
    927c:	4936      	ldr	r1, [pc, #216]	; (9358 <_dtoa_r+0x610>)
    927e:	f7fc fee5 	bl	604c <__aeabi_dsub>
    9282:	4632      	mov	r2, r6
    9284:	463b      	mov	r3, r7
    9286:	f002 fedb 	bl	c040 <__aeabi_dcmplt>
    928a:	2800      	cmp	r0, #0
    928c:	f040 80b4 	bne.w	93f8 <_dtoa_r+0x6b0>
    9290:	42a5      	cmp	r5, r4
    9292:	f43f af7c 	beq.w	918e <_dtoa_r+0x446>
    9296:	2200      	movs	r2, #0
    9298:	4b30      	ldr	r3, [pc, #192]	; (935c <_dtoa_r+0x614>)
    929a:	4630      	mov	r0, r6
    929c:	4639      	mov	r1, r7
    929e:	f002 fc5d 	bl	bb5c <__aeabi_dmul>
    92a2:	2200      	movs	r2, #0
    92a4:	4606      	mov	r6, r0
    92a6:	460f      	mov	r7, r1
    92a8:	4b2c      	ldr	r3, [pc, #176]	; (935c <_dtoa_r+0x614>)
    92aa:	e9dd 0100 	ldrd	r0, r1, [sp]
    92ae:	f002 fc55 	bl	bb5c <__aeabi_dmul>
    92b2:	e9cd 0100 	strd	r0, r1, [sp]
    92b6:	e7c5      	b.n	9244 <_dtoa_r+0x4fc>
    92b8:	4632      	mov	r2, r6
    92ba:	463b      	mov	r3, r7
    92bc:	f002 fc4e 	bl	bb5c <__aeabi_dmul>
    92c0:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
    92c4:	9e03      	ldr	r6, [sp, #12]
    92c6:	4625      	mov	r5, r4
    92c8:	e9dd 0100 	ldrd	r0, r1, [sp]
    92cc:	f002 fef6 	bl	c0bc <__aeabi_d2iz>
    92d0:	4607      	mov	r7, r0
    92d2:	f7fd f809 	bl	62e8 <__aeabi_i2d>
    92d6:	3730      	adds	r7, #48	; 0x30
    92d8:	4602      	mov	r2, r0
    92da:	460b      	mov	r3, r1
    92dc:	e9dd 0100 	ldrd	r0, r1, [sp]
    92e0:	f7fc feb4 	bl	604c <__aeabi_dsub>
    92e4:	f806 7b01 	strb.w	r7, [r6], #1
    92e8:	42a6      	cmp	r6, r4
    92ea:	e9cd 0100 	strd	r0, r1, [sp]
    92ee:	f04f 0200 	mov.w	r2, #0
    92f2:	d126      	bne.n	9342 <_dtoa_r+0x5fa>
    92f4:	4b1c      	ldr	r3, [pc, #112]	; (9368 <_dtoa_r+0x620>)
    92f6:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
    92fa:	f7fc fea9 	bl	6050 <__adddf3>
    92fe:	4602      	mov	r2, r0
    9300:	460b      	mov	r3, r1
    9302:	e9dd 0100 	ldrd	r0, r1, [sp]
    9306:	f002 feb9 	bl	c07c <__aeabi_dcmpgt>
    930a:	2800      	cmp	r0, #0
    930c:	d174      	bne.n	93f8 <_dtoa_r+0x6b0>
    930e:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
    9312:	2000      	movs	r0, #0
    9314:	4914      	ldr	r1, [pc, #80]	; (9368 <_dtoa_r+0x620>)
    9316:	f7fc fe99 	bl	604c <__aeabi_dsub>
    931a:	4602      	mov	r2, r0
    931c:	460b      	mov	r3, r1
    931e:	e9dd 0100 	ldrd	r0, r1, [sp]
    9322:	f002 fe8d 	bl	c040 <__aeabi_dcmplt>
    9326:	2800      	cmp	r0, #0
    9328:	f43f af31 	beq.w	918e <_dtoa_r+0x446>
    932c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
    9330:	2b30      	cmp	r3, #48	; 0x30
    9332:	f105 32ff 	add.w	r2, r5, #4294967295	; 0xffffffff
    9336:	d002      	beq.n	933e <_dtoa_r+0x5f6>
    9338:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
    933c:	e04a      	b.n	93d4 <_dtoa_r+0x68c>
    933e:	4615      	mov	r5, r2
    9340:	e7f4      	b.n	932c <_dtoa_r+0x5e4>
    9342:	4b06      	ldr	r3, [pc, #24]	; (935c <_dtoa_r+0x614>)
    9344:	f002 fc0a 	bl	bb5c <__aeabi_dmul>
    9348:	e9cd 0100 	strd	r0, r1, [sp]
    934c:	e7bc      	b.n	92c8 <_dtoa_r+0x580>
    934e:	bf00      	nop
    9350:	0000dd00 	.word	0x0000dd00
    9354:	0000dcd8 	.word	0x0000dcd8
    9358:	3ff00000 	.word	0x3ff00000
    935c:	40240000 	.word	0x40240000
    9360:	401c0000 	.word	0x401c0000
    9364:	40140000 	.word	0x40140000
    9368:	3fe00000 	.word	0x3fe00000
    936c:	e9dd 6700 	ldrd	r6, r7, [sp]
    9370:	9d03      	ldr	r5, [sp, #12]
    9372:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    9376:	4630      	mov	r0, r6
    9378:	4639      	mov	r1, r7
    937a:	f002 fd19 	bl	bdb0 <__aeabi_ddiv>
    937e:	f002 fe9d 	bl	c0bc <__aeabi_d2iz>
    9382:	4604      	mov	r4, r0
    9384:	f7fc ffb0 	bl	62e8 <__aeabi_i2d>
    9388:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    938c:	f002 fbe6 	bl	bb5c <__aeabi_dmul>
    9390:	4602      	mov	r2, r0
    9392:	460b      	mov	r3, r1
    9394:	4630      	mov	r0, r6
    9396:	4639      	mov	r1, r7
    9398:	f104 0630 	add.w	r6, r4, #48	; 0x30
    939c:	f7fc fe56 	bl	604c <__aeabi_dsub>
    93a0:	f805 6b01 	strb.w	r6, [r5], #1
    93a4:	9e03      	ldr	r6, [sp, #12]
    93a6:	1bae      	subs	r6, r5, r6
    93a8:	45b1      	cmp	r9, r6
    93aa:	4602      	mov	r2, r0
    93ac:	460b      	mov	r3, r1
    93ae:	d138      	bne.n	9422 <_dtoa_r+0x6da>
    93b0:	f7fc fe4e 	bl	6050 <__adddf3>
    93b4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    93b8:	4606      	mov	r6, r0
    93ba:	460f      	mov	r7, r1
    93bc:	f002 fe5e 	bl	c07c <__aeabi_dcmpgt>
    93c0:	b9c0      	cbnz	r0, 93f4 <_dtoa_r+0x6ac>
    93c2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    93c6:	4630      	mov	r0, r6
    93c8:	4639      	mov	r1, r7
    93ca:	f002 fe2f 	bl	c02c <__aeabi_dcmpeq>
    93ce:	b108      	cbz	r0, 93d4 <_dtoa_r+0x68c>
    93d0:	07e1      	lsls	r1, r4, #31
    93d2:	d40f      	bmi.n	93f4 <_dtoa_r+0x6ac>
    93d4:	4641      	mov	r1, r8
    93d6:	4658      	mov	r0, fp
    93d8:	f001 f8ca 	bl	a570 <_Bfree>
    93dc:	2300      	movs	r3, #0
    93de:	9a14      	ldr	r2, [sp, #80]	; 0x50
    93e0:	702b      	strb	r3, [r5, #0]
    93e2:	f10a 0301 	add.w	r3, sl, #1
    93e6:	6013      	str	r3, [r2, #0]
    93e8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    93ea:	2b00      	cmp	r3, #0
    93ec:	f43f acf4 	beq.w	8dd8 <_dtoa_r+0x90>
    93f0:	601d      	str	r5, [r3, #0]
    93f2:	e4f1      	b.n	8dd8 <_dtoa_r+0x90>
    93f4:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
    93f8:	f815 2c01 	ldrb.w	r2, [r5, #-1]
    93fc:	2a39      	cmp	r2, #57	; 0x39
    93fe:	f105 33ff 	add.w	r3, r5, #4294967295	; 0xffffffff
    9402:	d108      	bne.n	9416 <_dtoa_r+0x6ce>
    9404:	9a03      	ldr	r2, [sp, #12]
    9406:	429a      	cmp	r2, r3
    9408:	d109      	bne.n	941e <_dtoa_r+0x6d6>
    940a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    940c:	9903      	ldr	r1, [sp, #12]
    940e:	3201      	adds	r2, #1
    9410:	920a      	str	r2, [sp, #40]	; 0x28
    9412:	2230      	movs	r2, #48	; 0x30
    9414:	700a      	strb	r2, [r1, #0]
    9416:	781a      	ldrb	r2, [r3, #0]
    9418:	3201      	adds	r2, #1
    941a:	701a      	strb	r2, [r3, #0]
    941c:	e78c      	b.n	9338 <_dtoa_r+0x5f0>
    941e:	461d      	mov	r5, r3
    9420:	e7ea      	b.n	93f8 <_dtoa_r+0x6b0>
    9422:	2200      	movs	r2, #0
    9424:	4b9d      	ldr	r3, [pc, #628]	; (969c <_dtoa_r+0x954>)
    9426:	f002 fb99 	bl	bb5c <__aeabi_dmul>
    942a:	2200      	movs	r2, #0
    942c:	2300      	movs	r3, #0
    942e:	4606      	mov	r6, r0
    9430:	460f      	mov	r7, r1
    9432:	f002 fdfb 	bl	c02c <__aeabi_dcmpeq>
    9436:	2800      	cmp	r0, #0
    9438:	d09b      	beq.n	9372 <_dtoa_r+0x62a>
    943a:	e7cb      	b.n	93d4 <_dtoa_r+0x68c>
    943c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    943e:	2a00      	cmp	r2, #0
    9440:	f000 80cb 	beq.w	95da <_dtoa_r+0x892>
    9444:	9a08      	ldr	r2, [sp, #32]
    9446:	2a01      	cmp	r2, #1
    9448:	f300 80ae 	bgt.w	95a8 <_dtoa_r+0x860>
    944c:	9a15      	ldr	r2, [sp, #84]	; 0x54
    944e:	2a00      	cmp	r2, #0
    9450:	f000 80a6 	beq.w	95a0 <_dtoa_r+0x858>
    9454:	f203 4333 	addw	r3, r3, #1075	; 0x433
    9458:	9c09      	ldr	r4, [sp, #36]	; 0x24
    945a:	9d06      	ldr	r5, [sp, #24]
    945c:	9a06      	ldr	r2, [sp, #24]
    945e:	441a      	add	r2, r3
    9460:	9206      	str	r2, [sp, #24]
    9462:	9a07      	ldr	r2, [sp, #28]
    9464:	2101      	movs	r1, #1
    9466:	441a      	add	r2, r3
    9468:	4658      	mov	r0, fp
    946a:	9207      	str	r2, [sp, #28]
    946c:	f001 f960 	bl	a730 <__i2b>
    9470:	4606      	mov	r6, r0
    9472:	2d00      	cmp	r5, #0
    9474:	dd0c      	ble.n	9490 <_dtoa_r+0x748>
    9476:	9b07      	ldr	r3, [sp, #28]
    9478:	2b00      	cmp	r3, #0
    947a:	dd09      	ble.n	9490 <_dtoa_r+0x748>
    947c:	42ab      	cmp	r3, r5
    947e:	9a06      	ldr	r2, [sp, #24]
    9480:	bfa8      	it	ge
    9482:	462b      	movge	r3, r5
    9484:	1ad2      	subs	r2, r2, r3
    9486:	9206      	str	r2, [sp, #24]
    9488:	9a07      	ldr	r2, [sp, #28]
    948a:	1aed      	subs	r5, r5, r3
    948c:	1ad3      	subs	r3, r2, r3
    948e:	9307      	str	r3, [sp, #28]
    9490:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9492:	b1f3      	cbz	r3, 94d2 <_dtoa_r+0x78a>
    9494:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    9496:	2b00      	cmp	r3, #0
    9498:	f000 80a3 	beq.w	95e2 <_dtoa_r+0x89a>
    949c:	2c00      	cmp	r4, #0
    949e:	dd10      	ble.n	94c2 <_dtoa_r+0x77a>
    94a0:	4631      	mov	r1, r6
    94a2:	4622      	mov	r2, r4
    94a4:	4658      	mov	r0, fp
    94a6:	f001 f9dd 	bl	a864 <__pow5mult>
    94aa:	4642      	mov	r2, r8
    94ac:	4601      	mov	r1, r0
    94ae:	4606      	mov	r6, r0
    94b0:	4658      	mov	r0, fp
    94b2:	f001 f946 	bl	a742 <__multiply>
    94b6:	4641      	mov	r1, r8
    94b8:	4607      	mov	r7, r0
    94ba:	4658      	mov	r0, fp
    94bc:	f001 f858 	bl	a570 <_Bfree>
    94c0:	46b8      	mov	r8, r7
    94c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
    94c4:	1b1a      	subs	r2, r3, r4
    94c6:	d004      	beq.n	94d2 <_dtoa_r+0x78a>
    94c8:	4641      	mov	r1, r8
    94ca:	4658      	mov	r0, fp
    94cc:	f001 f9ca 	bl	a864 <__pow5mult>
    94d0:	4680      	mov	r8, r0
    94d2:	2101      	movs	r1, #1
    94d4:	4658      	mov	r0, fp
    94d6:	f001 f92b 	bl	a730 <__i2b>
    94da:	9b10      	ldr	r3, [sp, #64]	; 0x40
    94dc:	2b00      	cmp	r3, #0
    94de:	4604      	mov	r4, r0
    94e0:	f340 8081 	ble.w	95e6 <_dtoa_r+0x89e>
    94e4:	461a      	mov	r2, r3
    94e6:	4601      	mov	r1, r0
    94e8:	4658      	mov	r0, fp
    94ea:	f001 f9bb 	bl	a864 <__pow5mult>
    94ee:	9b08      	ldr	r3, [sp, #32]
    94f0:	2b01      	cmp	r3, #1
    94f2:	4604      	mov	r4, r0
    94f4:	dd7a      	ble.n	95ec <_dtoa_r+0x8a4>
    94f6:	2700      	movs	r7, #0
    94f8:	6923      	ldr	r3, [r4, #16]
    94fa:	eb04 0383 	add.w	r3, r4, r3, lsl #2
    94fe:	6918      	ldr	r0, [r3, #16]
    9500:	f001 f8c6 	bl	a690 <__hi0bits>
    9504:	f1c0 0020 	rsb	r0, r0, #32
    9508:	9b07      	ldr	r3, [sp, #28]
    950a:	4418      	add	r0, r3
    950c:	f010 001f 	ands.w	r0, r0, #31
    9510:	f000 808b 	beq.w	962a <_dtoa_r+0x8e2>
    9514:	f1c0 0320 	rsb	r3, r0, #32
    9518:	2b04      	cmp	r3, #4
    951a:	f340 8084 	ble.w	9626 <_dtoa_r+0x8de>
    951e:	f1c0 001c 	rsb	r0, r0, #28
    9522:	9b06      	ldr	r3, [sp, #24]
    9524:	4403      	add	r3, r0
    9526:	9306      	str	r3, [sp, #24]
    9528:	9b07      	ldr	r3, [sp, #28]
    952a:	4403      	add	r3, r0
    952c:	4405      	add	r5, r0
    952e:	9307      	str	r3, [sp, #28]
    9530:	9b06      	ldr	r3, [sp, #24]
    9532:	2b00      	cmp	r3, #0
    9534:	dd05      	ble.n	9542 <_dtoa_r+0x7fa>
    9536:	4641      	mov	r1, r8
    9538:	461a      	mov	r2, r3
    953a:	4658      	mov	r0, fp
    953c:	f001 f9e0 	bl	a900 <__lshift>
    9540:	4680      	mov	r8, r0
    9542:	9b07      	ldr	r3, [sp, #28]
    9544:	2b00      	cmp	r3, #0
    9546:	dd05      	ble.n	9554 <_dtoa_r+0x80c>
    9548:	4621      	mov	r1, r4
    954a:	461a      	mov	r2, r3
    954c:	4658      	mov	r0, fp
    954e:	f001 f9d7 	bl	a900 <__lshift>
    9552:	4604      	mov	r4, r0
    9554:	9b11      	ldr	r3, [sp, #68]	; 0x44
    9556:	2b00      	cmp	r3, #0
    9558:	d069      	beq.n	962e <_dtoa_r+0x8e6>
    955a:	4621      	mov	r1, r4
    955c:	4640      	mov	r0, r8
    955e:	f001 fa22 	bl	a9a6 <__mcmp>
    9562:	2800      	cmp	r0, #0
    9564:	da63      	bge.n	962e <_dtoa_r+0x8e6>
    9566:	2300      	movs	r3, #0
    9568:	4641      	mov	r1, r8
    956a:	220a      	movs	r2, #10
    956c:	4658      	mov	r0, fp
    956e:	f001 f816 	bl	a59e <__multadd>
    9572:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    9574:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
    9578:	4680      	mov	r8, r0
    957a:	2b00      	cmp	r3, #0
    957c:	f000 817c 	beq.w	9878 <_dtoa_r+0xb30>
    9580:	2300      	movs	r3, #0
    9582:	4631      	mov	r1, r6
    9584:	220a      	movs	r2, #10
    9586:	4658      	mov	r0, fp
    9588:	f001 f809 	bl	a59e <__multadd>
    958c:	9b04      	ldr	r3, [sp, #16]
    958e:	2b00      	cmp	r3, #0
    9590:	4606      	mov	r6, r0
    9592:	f300 808b 	bgt.w	96ac <_dtoa_r+0x964>
    9596:	9b08      	ldr	r3, [sp, #32]
    9598:	2b02      	cmp	r3, #2
    959a:	f340 8087 	ble.w	96ac <_dtoa_r+0x964>
    959e:	e04e      	b.n	963e <_dtoa_r+0x8f6>
    95a0:	9b16      	ldr	r3, [sp, #88]	; 0x58
    95a2:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
    95a6:	e757      	b.n	9458 <_dtoa_r+0x710>
    95a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
    95aa:	f109 34ff 	add.w	r4, r9, #4294967295	; 0xffffffff
    95ae:	42a3      	cmp	r3, r4
    95b0:	bfbf      	itttt	lt
    95b2:	9b09      	ldrlt	r3, [sp, #36]	; 0x24
    95b4:	9409      	strlt	r4, [sp, #36]	; 0x24
    95b6:	1ae2      	sublt	r2, r4, r3
    95b8:	9b10      	ldrlt	r3, [sp, #64]	; 0x40
    95ba:	bfbb      	ittet	lt
    95bc:	189b      	addlt	r3, r3, r2
    95be:	9310      	strlt	r3, [sp, #64]	; 0x40
    95c0:	1b1c      	subge	r4, r3, r4
    95c2:	2400      	movlt	r4, #0
    95c4:	f1b9 0f00 	cmp.w	r9, #0
    95c8:	bfb5      	itete	lt
    95ca:	9b06      	ldrlt	r3, [sp, #24]
    95cc:	9d06      	ldrge	r5, [sp, #24]
    95ce:	eba3 0509 	sublt.w	r5, r3, r9
    95d2:	464b      	movge	r3, r9
    95d4:	bfb8      	it	lt
    95d6:	2300      	movlt	r3, #0
    95d8:	e740      	b.n	945c <_dtoa_r+0x714>
    95da:	9c09      	ldr	r4, [sp, #36]	; 0x24
    95dc:	9d06      	ldr	r5, [sp, #24]
    95de:	9e0c      	ldr	r6, [sp, #48]	; 0x30
    95e0:	e747      	b.n	9472 <_dtoa_r+0x72a>
    95e2:	9a09      	ldr	r2, [sp, #36]	; 0x24
    95e4:	e770      	b.n	94c8 <_dtoa_r+0x780>
    95e6:	9b08      	ldr	r3, [sp, #32]
    95e8:	2b01      	cmp	r3, #1
    95ea:	dc18      	bgt.n	961e <_dtoa_r+0x8d6>
    95ec:	9b00      	ldr	r3, [sp, #0]
    95ee:	b9b3      	cbnz	r3, 961e <_dtoa_r+0x8d6>
    95f0:	9b01      	ldr	r3, [sp, #4]
    95f2:	f3c3 0313 	ubfx	r3, r3, #0, #20
    95f6:	b9a3      	cbnz	r3, 9622 <_dtoa_r+0x8da>
    95f8:	9b01      	ldr	r3, [sp, #4]
    95fa:	f023 4700 	bic.w	r7, r3, #2147483648	; 0x80000000
    95fe:	0d3f      	lsrs	r7, r7, #20
    9600:	053f      	lsls	r7, r7, #20
    9602:	b137      	cbz	r7, 9612 <_dtoa_r+0x8ca>
    9604:	9b06      	ldr	r3, [sp, #24]
    9606:	3301      	adds	r3, #1
    9608:	9306      	str	r3, [sp, #24]
    960a:	9b07      	ldr	r3, [sp, #28]
    960c:	3301      	adds	r3, #1
    960e:	9307      	str	r3, [sp, #28]
    9610:	2701      	movs	r7, #1
    9612:	9b10      	ldr	r3, [sp, #64]	; 0x40
    9614:	2b00      	cmp	r3, #0
    9616:	f47f af6f 	bne.w	94f8 <_dtoa_r+0x7b0>
    961a:	2001      	movs	r0, #1
    961c:	e774      	b.n	9508 <_dtoa_r+0x7c0>
    961e:	2700      	movs	r7, #0
    9620:	e7f7      	b.n	9612 <_dtoa_r+0x8ca>
    9622:	9f00      	ldr	r7, [sp, #0]
    9624:	e7f5      	b.n	9612 <_dtoa_r+0x8ca>
    9626:	d083      	beq.n	9530 <_dtoa_r+0x7e8>
    9628:	4618      	mov	r0, r3
    962a:	301c      	adds	r0, #28
    962c:	e779      	b.n	9522 <_dtoa_r+0x7da>
    962e:	f1b9 0f00 	cmp.w	r9, #0
    9632:	dc35      	bgt.n	96a0 <_dtoa_r+0x958>
    9634:	9b08      	ldr	r3, [sp, #32]
    9636:	2b02      	cmp	r3, #2
    9638:	dd32      	ble.n	96a0 <_dtoa_r+0x958>
    963a:	f8cd 9010 	str.w	r9, [sp, #16]
    963e:	9b04      	ldr	r3, [sp, #16]
    9640:	b963      	cbnz	r3, 965c <_dtoa_r+0x914>
    9642:	4621      	mov	r1, r4
    9644:	2205      	movs	r2, #5
    9646:	4658      	mov	r0, fp
    9648:	f000 ffa9 	bl	a59e <__multadd>
    964c:	4601      	mov	r1, r0
    964e:	4604      	mov	r4, r0
    9650:	4640      	mov	r0, r8
    9652:	f001 f9a8 	bl	a9a6 <__mcmp>
    9656:	2800      	cmp	r0, #0
    9658:	f73f adc5 	bgt.w	91e6 <_dtoa_r+0x49e>
    965c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    965e:	9d03      	ldr	r5, [sp, #12]
    9660:	ea6f 0a03 	mvn.w	sl, r3
    9664:	2700      	movs	r7, #0
    9666:	4621      	mov	r1, r4
    9668:	4658      	mov	r0, fp
    966a:	f000 ff81 	bl	a570 <_Bfree>
    966e:	2e00      	cmp	r6, #0
    9670:	f43f aeb0 	beq.w	93d4 <_dtoa_r+0x68c>
    9674:	b12f      	cbz	r7, 9682 <_dtoa_r+0x93a>
    9676:	42b7      	cmp	r7, r6
    9678:	d003      	beq.n	9682 <_dtoa_r+0x93a>
    967a:	4639      	mov	r1, r7
    967c:	4658      	mov	r0, fp
    967e:	f000 ff77 	bl	a570 <_Bfree>
    9682:	4631      	mov	r1, r6
    9684:	4658      	mov	r0, fp
    9686:	f000 ff73 	bl	a570 <_Bfree>
    968a:	e6a3      	b.n	93d4 <_dtoa_r+0x68c>
    968c:	2400      	movs	r4, #0
    968e:	4626      	mov	r6, r4
    9690:	e7e4      	b.n	965c <_dtoa_r+0x914>
    9692:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
    9696:	4626      	mov	r6, r4
    9698:	e5a5      	b.n	91e6 <_dtoa_r+0x49e>
    969a:	bf00      	nop
    969c:	40240000 	.word	0x40240000
    96a0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    96a2:	f8cd 9010 	str.w	r9, [sp, #16]
    96a6:	2b00      	cmp	r3, #0
    96a8:	f000 80ed 	beq.w	9886 <_dtoa_r+0xb3e>
    96ac:	2d00      	cmp	r5, #0
    96ae:	dd05      	ble.n	96bc <_dtoa_r+0x974>
    96b0:	4631      	mov	r1, r6
    96b2:	462a      	mov	r2, r5
    96b4:	4658      	mov	r0, fp
    96b6:	f001 f923 	bl	a900 <__lshift>
    96ba:	4606      	mov	r6, r0
    96bc:	2f00      	cmp	r7, #0
    96be:	d056      	beq.n	976e <_dtoa_r+0xa26>
    96c0:	6871      	ldr	r1, [r6, #4]
    96c2:	4658      	mov	r0, fp
    96c4:	f000 ff20 	bl	a508 <_Balloc>
    96c8:	6932      	ldr	r2, [r6, #16]
    96ca:	3202      	adds	r2, #2
    96cc:	4605      	mov	r5, r0
    96ce:	0092      	lsls	r2, r2, #2
    96d0:	f106 010c 	add.w	r1, r6, #12
    96d4:	300c      	adds	r0, #12
    96d6:	f7fd f899 	bl	680c <memcpy>
    96da:	2201      	movs	r2, #1
    96dc:	4629      	mov	r1, r5
    96de:	4658      	mov	r0, fp
    96e0:	f001 f90e 	bl	a900 <__lshift>
    96e4:	9b03      	ldr	r3, [sp, #12]
    96e6:	f103 0901 	add.w	r9, r3, #1
    96ea:	e9dd 2303 	ldrd	r2, r3, [sp, #12]
    96ee:	4413      	add	r3, r2
    96f0:	9309      	str	r3, [sp, #36]	; 0x24
    96f2:	9b00      	ldr	r3, [sp, #0]
    96f4:	f003 0301 	and.w	r3, r3, #1
    96f8:	4637      	mov	r7, r6
    96fa:	9307      	str	r3, [sp, #28]
    96fc:	4606      	mov	r6, r0
    96fe:	f109 33ff 	add.w	r3, r9, #4294967295	; 0xffffffff
    9702:	4621      	mov	r1, r4
    9704:	4640      	mov	r0, r8
    9706:	9300      	str	r3, [sp, #0]
    9708:	f7ff fa94 	bl	8c34 <quorem>
    970c:	4603      	mov	r3, r0
    970e:	3330      	adds	r3, #48	; 0x30
    9710:	9004      	str	r0, [sp, #16]
    9712:	4639      	mov	r1, r7
    9714:	4640      	mov	r0, r8
    9716:	930a      	str	r3, [sp, #40]	; 0x28
    9718:	f001 f945 	bl	a9a6 <__mcmp>
    971c:	4632      	mov	r2, r6
    971e:	9006      	str	r0, [sp, #24]
    9720:	4621      	mov	r1, r4
    9722:	4658      	mov	r0, fp
    9724:	f001 f959 	bl	a9da <__mdiff>
    9728:	68c2      	ldr	r2, [r0, #12]
    972a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    972c:	4605      	mov	r5, r0
    972e:	bb02      	cbnz	r2, 9772 <_dtoa_r+0xa2a>
    9730:	4601      	mov	r1, r0
    9732:	4640      	mov	r0, r8
    9734:	f001 f937 	bl	a9a6 <__mcmp>
    9738:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    973a:	4602      	mov	r2, r0
    973c:	4629      	mov	r1, r5
    973e:	4658      	mov	r0, fp
    9740:	920c      	str	r2, [sp, #48]	; 0x30
    9742:	930a      	str	r3, [sp, #40]	; 0x28
    9744:	f000 ff14 	bl	a570 <_Bfree>
    9748:	9b08      	ldr	r3, [sp, #32]
    974a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    974c:	ea43 0102 	orr.w	r1, r3, r2
    9750:	9b07      	ldr	r3, [sp, #28]
    9752:	430b      	orrs	r3, r1
    9754:	464d      	mov	r5, r9
    9756:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    9758:	d10d      	bne.n	9776 <_dtoa_r+0xa2e>
    975a:	2b39      	cmp	r3, #57	; 0x39
    975c:	d027      	beq.n	97ae <_dtoa_r+0xa66>
    975e:	9a06      	ldr	r2, [sp, #24]
    9760:	2a00      	cmp	r2, #0
    9762:	dd01      	ble.n	9768 <_dtoa_r+0xa20>
    9764:	9b04      	ldr	r3, [sp, #16]
    9766:	3331      	adds	r3, #49	; 0x31
    9768:	9a00      	ldr	r2, [sp, #0]
    976a:	7013      	strb	r3, [r2, #0]
    976c:	e77b      	b.n	9666 <_dtoa_r+0x91e>
    976e:	4630      	mov	r0, r6
    9770:	e7b8      	b.n	96e4 <_dtoa_r+0x99c>
    9772:	2201      	movs	r2, #1
    9774:	e7e2      	b.n	973c <_dtoa_r+0x9f4>
    9776:	9906      	ldr	r1, [sp, #24]
    9778:	2900      	cmp	r1, #0
    977a:	db04      	blt.n	9786 <_dtoa_r+0xa3e>
    977c:	9808      	ldr	r0, [sp, #32]
    977e:	4301      	orrs	r1, r0
    9780:	9807      	ldr	r0, [sp, #28]
    9782:	4301      	orrs	r1, r0
    9784:	d11e      	bne.n	97c4 <_dtoa_r+0xa7c>
    9786:	2a00      	cmp	r2, #0
    9788:	ddee      	ble.n	9768 <_dtoa_r+0xa20>
    978a:	4641      	mov	r1, r8
    978c:	2201      	movs	r2, #1
    978e:	4658      	mov	r0, fp
    9790:	9306      	str	r3, [sp, #24]
    9792:	f001 f8b5 	bl	a900 <__lshift>
    9796:	4621      	mov	r1, r4
    9798:	4680      	mov	r8, r0
    979a:	f001 f904 	bl	a9a6 <__mcmp>
    979e:	2800      	cmp	r0, #0
    97a0:	9b06      	ldr	r3, [sp, #24]
    97a2:	dc02      	bgt.n	97aa <_dtoa_r+0xa62>
    97a4:	d1e0      	bne.n	9768 <_dtoa_r+0xa20>
    97a6:	07da      	lsls	r2, r3, #31
    97a8:	d5de      	bpl.n	9768 <_dtoa_r+0xa20>
    97aa:	2b39      	cmp	r3, #57	; 0x39
    97ac:	d1da      	bne.n	9764 <_dtoa_r+0xa1c>
    97ae:	9a00      	ldr	r2, [sp, #0]
    97b0:	2339      	movs	r3, #57	; 0x39
    97b2:	7013      	strb	r3, [r2, #0]
    97b4:	f815 3c01 	ldrb.w	r3, [r5, #-1]
    97b8:	2b39      	cmp	r3, #57	; 0x39
    97ba:	f105 32ff 	add.w	r2, r5, #4294967295	; 0xffffffff
    97be:	d047      	beq.n	9850 <_dtoa_r+0xb08>
    97c0:	3301      	adds	r3, #1
    97c2:	e7d2      	b.n	976a <_dtoa_r+0xa22>
    97c4:	2a00      	cmp	r2, #0
    97c6:	dd03      	ble.n	97d0 <_dtoa_r+0xa88>
    97c8:	2b39      	cmp	r3, #57	; 0x39
    97ca:	d0f0      	beq.n	97ae <_dtoa_r+0xa66>
    97cc:	3301      	adds	r3, #1
    97ce:	e7cb      	b.n	9768 <_dtoa_r+0xa20>
    97d0:	9a09      	ldr	r2, [sp, #36]	; 0x24
    97d2:	f809 3c01 	strb.w	r3, [r9, #-1]
    97d6:	4591      	cmp	r9, r2
    97d8:	d021      	beq.n	981e <_dtoa_r+0xad6>
    97da:	4641      	mov	r1, r8
    97dc:	2300      	movs	r3, #0
    97de:	220a      	movs	r2, #10
    97e0:	4658      	mov	r0, fp
    97e2:	f000 fedc 	bl	a59e <__multadd>
    97e6:	42b7      	cmp	r7, r6
    97e8:	4680      	mov	r8, r0
    97ea:	f04f 0300 	mov.w	r3, #0
    97ee:	f04f 020a 	mov.w	r2, #10
    97f2:	4639      	mov	r1, r7
    97f4:	4658      	mov	r0, fp
    97f6:	d106      	bne.n	9806 <_dtoa_r+0xabe>
    97f8:	f000 fed1 	bl	a59e <__multadd>
    97fc:	4607      	mov	r7, r0
    97fe:	4606      	mov	r6, r0
    9800:	f109 0901 	add.w	r9, r9, #1
    9804:	e77b      	b.n	96fe <_dtoa_r+0x9b6>
    9806:	f000 feca 	bl	a59e <__multadd>
    980a:	4631      	mov	r1, r6
    980c:	4607      	mov	r7, r0
    980e:	2300      	movs	r3, #0
    9810:	220a      	movs	r2, #10
    9812:	4658      	mov	r0, fp
    9814:	f000 fec3 	bl	a59e <__multadd>
    9818:	4606      	mov	r6, r0
    981a:	e7f1      	b.n	9800 <_dtoa_r+0xab8>
    981c:	2700      	movs	r7, #0
    981e:	4641      	mov	r1, r8
    9820:	2201      	movs	r2, #1
    9822:	4658      	mov	r0, fp
    9824:	9300      	str	r3, [sp, #0]
    9826:	f001 f86b 	bl	a900 <__lshift>
    982a:	4621      	mov	r1, r4
    982c:	4680      	mov	r8, r0
    982e:	f001 f8ba 	bl	a9a6 <__mcmp>
    9832:	2800      	cmp	r0, #0
    9834:	dcbe      	bgt.n	97b4 <_dtoa_r+0xa6c>
    9836:	d102      	bne.n	983e <_dtoa_r+0xaf6>
    9838:	9b00      	ldr	r3, [sp, #0]
    983a:	07db      	lsls	r3, r3, #31
    983c:	d4ba      	bmi.n	97b4 <_dtoa_r+0xa6c>
    983e:	f815 3c01 	ldrb.w	r3, [r5, #-1]
    9842:	2b30      	cmp	r3, #48	; 0x30
    9844:	f105 32ff 	add.w	r2, r5, #4294967295	; 0xffffffff
    9848:	f47f af0d 	bne.w	9666 <_dtoa_r+0x91e>
    984c:	4615      	mov	r5, r2
    984e:	e7f6      	b.n	983e <_dtoa_r+0xaf6>
    9850:	9b03      	ldr	r3, [sp, #12]
    9852:	4293      	cmp	r3, r2
    9854:	d104      	bne.n	9860 <_dtoa_r+0xb18>
    9856:	f10a 0a01 	add.w	sl, sl, #1
    985a:	2331      	movs	r3, #49	; 0x31
    985c:	9a03      	ldr	r2, [sp, #12]
    985e:	e784      	b.n	976a <_dtoa_r+0xa22>
    9860:	4615      	mov	r5, r2
    9862:	e7a7      	b.n	97b4 <_dtoa_r+0xa6c>
    9864:	4b13      	ldr	r3, [pc, #76]	; (98b4 <_dtoa_r+0xb6c>)
    9866:	f7ff bad6 	b.w	8e16 <_dtoa_r+0xce>
    986a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    986c:	2b00      	cmp	r3, #0
    986e:	f47f aaae 	bne.w	8dce <_dtoa_r+0x86>
    9872:	4b11      	ldr	r3, [pc, #68]	; (98b8 <_dtoa_r+0xb70>)
    9874:	f7ff bacf 	b.w	8e16 <_dtoa_r+0xce>
    9878:	9b04      	ldr	r3, [sp, #16]
    987a:	2b00      	cmp	r3, #0
    987c:	dc03      	bgt.n	9886 <_dtoa_r+0xb3e>
    987e:	9b08      	ldr	r3, [sp, #32]
    9880:	2b02      	cmp	r3, #2
    9882:	f73f aedc 	bgt.w	963e <_dtoa_r+0x8f6>
    9886:	9d03      	ldr	r5, [sp, #12]
    9888:	4621      	mov	r1, r4
    988a:	4640      	mov	r0, r8
    988c:	f7ff f9d2 	bl	8c34 <quorem>
    9890:	f100 0330 	add.w	r3, r0, #48	; 0x30
    9894:	f805 3b01 	strb.w	r3, [r5], #1
    9898:	9a03      	ldr	r2, [sp, #12]
    989a:	9904      	ldr	r1, [sp, #16]
    989c:	1aaa      	subs	r2, r5, r2
    989e:	4291      	cmp	r1, r2
    98a0:	ddbc      	ble.n	981c <_dtoa_r+0xad4>
    98a2:	4641      	mov	r1, r8
    98a4:	2300      	movs	r3, #0
    98a6:	220a      	movs	r2, #10
    98a8:	4658      	mov	r0, fp
    98aa:	f000 fe78 	bl	a59e <__multadd>
    98ae:	4680      	mov	r8, r0
    98b0:	e7ea      	b.n	9888 <_dtoa_r+0xb40>
    98b2:	bf00      	nop
    98b4:	0000d3f7 	.word	0x0000d3f7
    98b8:	0000dc50 	.word	0x0000dc50

000098bc <__sflush_r>:
__sflush_r():
    98bc:	898a      	ldrh	r2, [r1, #12]
    98be:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    98c2:	4605      	mov	r5, r0
    98c4:	0710      	lsls	r0, r2, #28
    98c6:	460c      	mov	r4, r1
    98c8:	d458      	bmi.n	997c <__sflush_r+0xc0>
    98ca:	684b      	ldr	r3, [r1, #4]
    98cc:	2b00      	cmp	r3, #0
    98ce:	dc05      	bgt.n	98dc <__sflush_r+0x20>
    98d0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
    98d2:	2b00      	cmp	r3, #0
    98d4:	dc02      	bgt.n	98dc <__sflush_r+0x20>
    98d6:	2000      	movs	r0, #0
    98d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    98dc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
    98de:	2e00      	cmp	r6, #0
    98e0:	d0f9      	beq.n	98d6 <__sflush_r+0x1a>
    98e2:	2300      	movs	r3, #0
    98e4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
    98e8:	682f      	ldr	r7, [r5, #0]
    98ea:	602b      	str	r3, [r5, #0]
    98ec:	d032      	beq.n	9954 <__sflush_r+0x98>
    98ee:	6d60      	ldr	r0, [r4, #84]	; 0x54
    98f0:	89a3      	ldrh	r3, [r4, #12]
    98f2:	075a      	lsls	r2, r3, #29
    98f4:	d505      	bpl.n	9902 <__sflush_r+0x46>
    98f6:	6863      	ldr	r3, [r4, #4]
    98f8:	1ac0      	subs	r0, r0, r3
    98fa:	6b63      	ldr	r3, [r4, #52]	; 0x34
    98fc:	b10b      	cbz	r3, 9902 <__sflush_r+0x46>
    98fe:	6c23      	ldr	r3, [r4, #64]	; 0x40
    9900:	1ac0      	subs	r0, r0, r3
    9902:	2300      	movs	r3, #0
    9904:	4602      	mov	r2, r0
    9906:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
    9908:	6a21      	ldr	r1, [r4, #32]
    990a:	4628      	mov	r0, r5
    990c:	47b0      	blx	r6
    990e:	1c43      	adds	r3, r0, #1
    9910:	89a3      	ldrh	r3, [r4, #12]
    9912:	d106      	bne.n	9922 <__sflush_r+0x66>
    9914:	6829      	ldr	r1, [r5, #0]
    9916:	291d      	cmp	r1, #29
    9918:	d82c      	bhi.n	9974 <__sflush_r+0xb8>
    991a:	4a2a      	ldr	r2, [pc, #168]	; (99c4 <__sflush_r+0x108>)
    991c:	40ca      	lsrs	r2, r1
    991e:	07d6      	lsls	r6, r2, #31
    9920:	d528      	bpl.n	9974 <__sflush_r+0xb8>
    9922:	2200      	movs	r2, #0
    9924:	6062      	str	r2, [r4, #4]
    9926:	04d9      	lsls	r1, r3, #19
    9928:	6922      	ldr	r2, [r4, #16]
    992a:	6022      	str	r2, [r4, #0]
    992c:	d504      	bpl.n	9938 <__sflush_r+0x7c>
    992e:	1c42      	adds	r2, r0, #1
    9930:	d101      	bne.n	9936 <__sflush_r+0x7a>
    9932:	682b      	ldr	r3, [r5, #0]
    9934:	b903      	cbnz	r3, 9938 <__sflush_r+0x7c>
    9936:	6560      	str	r0, [r4, #84]	; 0x54
    9938:	6b61      	ldr	r1, [r4, #52]	; 0x34
    993a:	602f      	str	r7, [r5, #0]
    993c:	2900      	cmp	r1, #0
    993e:	d0ca      	beq.n	98d6 <__sflush_r+0x1a>
    9940:	f104 0344 	add.w	r3, r4, #68	; 0x44
    9944:	4299      	cmp	r1, r3
    9946:	d002      	beq.n	994e <__sflush_r+0x92>
    9948:	4628      	mov	r0, r5
    994a:	f7fc ff8f 	bl	686c <_free_r>
    994e:	2000      	movs	r0, #0
    9950:	6360      	str	r0, [r4, #52]	; 0x34
    9952:	e7c1      	b.n	98d8 <__sflush_r+0x1c>
    9954:	6a21      	ldr	r1, [r4, #32]
    9956:	2301      	movs	r3, #1
    9958:	4628      	mov	r0, r5
    995a:	47b0      	blx	r6
    995c:	1c41      	adds	r1, r0, #1
    995e:	d1c7      	bne.n	98f0 <__sflush_r+0x34>
    9960:	682b      	ldr	r3, [r5, #0]
    9962:	2b00      	cmp	r3, #0
    9964:	d0c4      	beq.n	98f0 <__sflush_r+0x34>
    9966:	2b1d      	cmp	r3, #29
    9968:	d001      	beq.n	996e <__sflush_r+0xb2>
    996a:	2b16      	cmp	r3, #22
    996c:	d101      	bne.n	9972 <__sflush_r+0xb6>
    996e:	602f      	str	r7, [r5, #0]
    9970:	e7b1      	b.n	98d6 <__sflush_r+0x1a>
    9972:	89a3      	ldrh	r3, [r4, #12]
    9974:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    9978:	81a3      	strh	r3, [r4, #12]
    997a:	e7ad      	b.n	98d8 <__sflush_r+0x1c>
    997c:	690f      	ldr	r7, [r1, #16]
    997e:	2f00      	cmp	r7, #0
    9980:	d0a9      	beq.n	98d6 <__sflush_r+0x1a>
    9982:	0793      	lsls	r3, r2, #30
    9984:	680e      	ldr	r6, [r1, #0]
    9986:	bf08      	it	eq
    9988:	694b      	ldreq	r3, [r1, #20]
    998a:	600f      	str	r7, [r1, #0]
    998c:	bf18      	it	ne
    998e:	2300      	movne	r3, #0
    9990:	eba6 0807 	sub.w	r8, r6, r7
    9994:	608b      	str	r3, [r1, #8]
    9996:	f1b8 0f00 	cmp.w	r8, #0
    999a:	dd9c      	ble.n	98d6 <__sflush_r+0x1a>
    999c:	4643      	mov	r3, r8
    999e:	463a      	mov	r2, r7
    99a0:	6a21      	ldr	r1, [r4, #32]
    99a2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    99a4:	4628      	mov	r0, r5
    99a6:	47b0      	blx	r6
    99a8:	2800      	cmp	r0, #0
    99aa:	dc06      	bgt.n	99ba <__sflush_r+0xfe>
    99ac:	89a3      	ldrh	r3, [r4, #12]
    99ae:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    99b2:	81a3      	strh	r3, [r4, #12]
    99b4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    99b8:	e78e      	b.n	98d8 <__sflush_r+0x1c>
    99ba:	4407      	add	r7, r0
    99bc:	eba8 0800 	sub.w	r8, r8, r0
    99c0:	e7e9      	b.n	9996 <__sflush_r+0xda>
    99c2:	bf00      	nop
    99c4:	20400001 	.word	0x20400001

000099c8 <_fflush_r>:
_fflush_r():
    99c8:	b538      	push	{r3, r4, r5, lr}
    99ca:	690b      	ldr	r3, [r1, #16]
    99cc:	4605      	mov	r5, r0
    99ce:	460c      	mov	r4, r1
    99d0:	b913      	cbnz	r3, 99d8 <_fflush_r+0x10>
    99d2:	2500      	movs	r5, #0
    99d4:	4628      	mov	r0, r5
    99d6:	bd38      	pop	{r3, r4, r5, pc}
    99d8:	b118      	cbz	r0, 99e2 <_fflush_r+0x1a>
    99da:	6983      	ldr	r3, [r0, #24]
    99dc:	b90b      	cbnz	r3, 99e2 <_fflush_r+0x1a>
    99de:	f000 f899 	bl	9b14 <__sinit>
    99e2:	4b14      	ldr	r3, [pc, #80]	; (9a34 <_fflush_r+0x6c>)
    99e4:	429c      	cmp	r4, r3
    99e6:	d11b      	bne.n	9a20 <_fflush_r+0x58>
    99e8:	686c      	ldr	r4, [r5, #4]
    99ea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    99ee:	2b00      	cmp	r3, #0
    99f0:	d0ef      	beq.n	99d2 <_fflush_r+0xa>
    99f2:	6e62      	ldr	r2, [r4, #100]	; 0x64
    99f4:	07d0      	lsls	r0, r2, #31
    99f6:	d404      	bmi.n	9a02 <_fflush_r+0x3a>
    99f8:	0599      	lsls	r1, r3, #22
    99fa:	d402      	bmi.n	9a02 <_fflush_r+0x3a>
    99fc:	6da0      	ldr	r0, [r4, #88]	; 0x58
    99fe:	f7fc fef2 	bl	67e6 <__retarget_lock_acquire_recursive>
    9a02:	4628      	mov	r0, r5
    9a04:	4621      	mov	r1, r4
    9a06:	f7ff ff59 	bl	98bc <__sflush_r>
    9a0a:	6e63      	ldr	r3, [r4, #100]	; 0x64
    9a0c:	07da      	lsls	r2, r3, #31
    9a0e:	4605      	mov	r5, r0
    9a10:	d4e0      	bmi.n	99d4 <_fflush_r+0xc>
    9a12:	89a3      	ldrh	r3, [r4, #12]
    9a14:	059b      	lsls	r3, r3, #22
    9a16:	d4dd      	bmi.n	99d4 <_fflush_r+0xc>
    9a18:	6da0      	ldr	r0, [r4, #88]	; 0x58
    9a1a:	f7fc fee5 	bl	67e8 <__retarget_lock_release_recursive>
    9a1e:	e7d9      	b.n	99d4 <_fflush_r+0xc>
    9a20:	4b05      	ldr	r3, [pc, #20]	; (9a38 <_fflush_r+0x70>)
    9a22:	429c      	cmp	r4, r3
    9a24:	d101      	bne.n	9a2a <_fflush_r+0x62>
    9a26:	68ac      	ldr	r4, [r5, #8]
    9a28:	e7df      	b.n	99ea <_fflush_r+0x22>
    9a2a:	4b04      	ldr	r3, [pc, #16]	; (9a3c <_fflush_r+0x74>)
    9a2c:	429c      	cmp	r4, r3
    9a2e:	bf08      	it	eq
    9a30:	68ec      	ldreq	r4, [r5, #12]
    9a32:	e7da      	b.n	99ea <_fflush_r+0x22>
    9a34:	0000dc80 	.word	0x0000dc80
    9a38:	0000dca0 	.word	0x0000dca0
    9a3c:	0000dc60 	.word	0x0000dc60

00009a40 <fflush>:
fflush():
    9a40:	4601      	mov	r1, r0
    9a42:	b920      	cbnz	r0, 9a4e <fflush+0xe>
    9a44:	4b04      	ldr	r3, [pc, #16]	; (9a58 <fflush+0x18>)
    9a46:	4905      	ldr	r1, [pc, #20]	; (9a5c <fflush+0x1c>)
    9a48:	6818      	ldr	r0, [r3, #0]
    9a4a:	f000 b8fd 	b.w	9c48 <_fwalk_reent>
    9a4e:	4b04      	ldr	r3, [pc, #16]	; (9a60 <fflush+0x20>)
    9a50:	6818      	ldr	r0, [r3, #0]
    9a52:	f7ff bfb9 	b.w	99c8 <_fflush_r>
    9a56:	bf00      	nop
    9a58:	0000dbb4 	.word	0x0000dbb4
    9a5c:	000099c9 	.word	0x000099c9
    9a60:	100001b0 	.word	0x100001b0

00009a64 <std>:
std():
    9a64:	2300      	movs	r3, #0
    9a66:	b510      	push	{r4, lr}
    9a68:	4604      	mov	r4, r0
    9a6a:	e9c0 3300 	strd	r3, r3, [r0]
    9a6e:	6083      	str	r3, [r0, #8]
    9a70:	8181      	strh	r1, [r0, #12]
    9a72:	6643      	str	r3, [r0, #100]	; 0x64
    9a74:	81c2      	strh	r2, [r0, #14]
    9a76:	e9c0 3304 	strd	r3, r3, [r0, #16]
    9a7a:	6183      	str	r3, [r0, #24]
    9a7c:	4619      	mov	r1, r3
    9a7e:	2208      	movs	r2, #8
    9a80:	305c      	adds	r0, #92	; 0x5c
    9a82:	f7fc feeb 	bl	685c <memset>
    9a86:	4b05      	ldr	r3, [pc, #20]	; (9a9c <std+0x38>)
    9a88:	6263      	str	r3, [r4, #36]	; 0x24
    9a8a:	4b05      	ldr	r3, [pc, #20]	; (9aa0 <std+0x3c>)
    9a8c:	62a3      	str	r3, [r4, #40]	; 0x28
    9a8e:	4b05      	ldr	r3, [pc, #20]	; (9aa4 <std+0x40>)
    9a90:	62e3      	str	r3, [r4, #44]	; 0x2c
    9a92:	4b05      	ldr	r3, [pc, #20]	; (9aa8 <std+0x44>)
    9a94:	6224      	str	r4, [r4, #32]
    9a96:	6323      	str	r3, [r4, #48]	; 0x30
    9a98:	bd10      	pop	{r4, pc}
    9a9a:	bf00      	nop
    9a9c:	0000b745 	.word	0x0000b745
    9aa0:	0000b76b 	.word	0x0000b76b
    9aa4:	0000b7a3 	.word	0x0000b7a3
    9aa8:	0000b7c7 	.word	0x0000b7c7

00009aac <_cleanup_r>:
_cleanup_r():
    9aac:	4901      	ldr	r1, [pc, #4]	; (9ab4 <_cleanup_r+0x8>)
    9aae:	f000 b8cb 	b.w	9c48 <_fwalk_reent>
    9ab2:	bf00      	nop
    9ab4:	000099c9 	.word	0x000099c9

00009ab8 <__sfmoreglue>:
__sfmoreglue():
    9ab8:	b570      	push	{r4, r5, r6, lr}
    9aba:	1e4a      	subs	r2, r1, #1
    9abc:	2568      	movs	r5, #104	; 0x68
    9abe:	4355      	muls	r5, r2
    9ac0:	460e      	mov	r6, r1
    9ac2:	f105 0174 	add.w	r1, r5, #116	; 0x74
    9ac6:	f7fc ff1f 	bl	6908 <_malloc_r>
    9aca:	4604      	mov	r4, r0
    9acc:	b140      	cbz	r0, 9ae0 <__sfmoreglue+0x28>
    9ace:	2100      	movs	r1, #0
    9ad0:	e9c0 1600 	strd	r1, r6, [r0]
    9ad4:	300c      	adds	r0, #12
    9ad6:	60a0      	str	r0, [r4, #8]
    9ad8:	f105 0268 	add.w	r2, r5, #104	; 0x68
    9adc:	f7fc febe 	bl	685c <memset>
    9ae0:	4620      	mov	r0, r4
    9ae2:	bd70      	pop	{r4, r5, r6, pc}

00009ae4 <__sfp_lock_acquire>:
__sfp_lock_acquire():
    9ae4:	4801      	ldr	r0, [pc, #4]	; (9aec <__sfp_lock_acquire+0x8>)
    9ae6:	f7fc be7e 	b.w	67e6 <__retarget_lock_acquire_recursive>
    9aea:	bf00      	nop
    9aec:	10001478 	.word	0x10001478

00009af0 <__sfp_lock_release>:
__sfp_lock_release():
    9af0:	4801      	ldr	r0, [pc, #4]	; (9af8 <__sfp_lock_release+0x8>)
    9af2:	f7fc be79 	b.w	67e8 <__retarget_lock_release_recursive>
    9af6:	bf00      	nop
    9af8:	10001478 	.word	0x10001478

00009afc <__sinit_lock_acquire>:
__sinit_lock_acquire():
    9afc:	4801      	ldr	r0, [pc, #4]	; (9b04 <__sinit_lock_acquire+0x8>)
    9afe:	f7fc be72 	b.w	67e6 <__retarget_lock_acquire_recursive>
    9b02:	bf00      	nop
    9b04:	10001473 	.word	0x10001473

00009b08 <__sinit_lock_release>:
__sinit_lock_release():
    9b08:	4801      	ldr	r0, [pc, #4]	; (9b10 <__sinit_lock_release+0x8>)
    9b0a:	f7fc be6d 	b.w	67e8 <__retarget_lock_release_recursive>
    9b0e:	bf00      	nop
    9b10:	10001473 	.word	0x10001473

00009b14 <__sinit>:
__sinit():
    9b14:	b510      	push	{r4, lr}
    9b16:	4604      	mov	r4, r0
    9b18:	f7ff fff0 	bl	9afc <__sinit_lock_acquire>
    9b1c:	69a3      	ldr	r3, [r4, #24]
    9b1e:	b11b      	cbz	r3, 9b28 <__sinit+0x14>
    9b20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    9b24:	f7ff bff0 	b.w	9b08 <__sinit_lock_release>
    9b28:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
    9b2c:	6523      	str	r3, [r4, #80]	; 0x50
    9b2e:	4b13      	ldr	r3, [pc, #76]	; (9b7c <__sinit+0x68>)
    9b30:	4a13      	ldr	r2, [pc, #76]	; (9b80 <__sinit+0x6c>)
    9b32:	681b      	ldr	r3, [r3, #0]
    9b34:	62a2      	str	r2, [r4, #40]	; 0x28
    9b36:	42a3      	cmp	r3, r4
    9b38:	bf04      	itt	eq
    9b3a:	2301      	moveq	r3, #1
    9b3c:	61a3      	streq	r3, [r4, #24]
    9b3e:	4620      	mov	r0, r4
    9b40:	f000 f820 	bl	9b84 <__sfp>
    9b44:	6060      	str	r0, [r4, #4]
    9b46:	4620      	mov	r0, r4
    9b48:	f000 f81c 	bl	9b84 <__sfp>
    9b4c:	60a0      	str	r0, [r4, #8]
    9b4e:	4620      	mov	r0, r4
    9b50:	f000 f818 	bl	9b84 <__sfp>
    9b54:	2200      	movs	r2, #0
    9b56:	60e0      	str	r0, [r4, #12]
    9b58:	2104      	movs	r1, #4
    9b5a:	6860      	ldr	r0, [r4, #4]
    9b5c:	f7ff ff82 	bl	9a64 <std>
    9b60:	2201      	movs	r2, #1
    9b62:	2109      	movs	r1, #9
    9b64:	68a0      	ldr	r0, [r4, #8]
    9b66:	f7ff ff7d 	bl	9a64 <std>
    9b6a:	2202      	movs	r2, #2
    9b6c:	2112      	movs	r1, #18
    9b6e:	68e0      	ldr	r0, [r4, #12]
    9b70:	f7ff ff78 	bl	9a64 <std>
    9b74:	2301      	movs	r3, #1
    9b76:	61a3      	str	r3, [r4, #24]
    9b78:	e7d2      	b.n	9b20 <__sinit+0xc>
    9b7a:	bf00      	nop
    9b7c:	0000dbb4 	.word	0x0000dbb4
    9b80:	00009aad 	.word	0x00009aad

00009b84 <__sfp>:
__sfp():
    9b84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    9b86:	4607      	mov	r7, r0
    9b88:	f7ff ffac 	bl	9ae4 <__sfp_lock_acquire>
    9b8c:	4b1e      	ldr	r3, [pc, #120]	; (9c08 <__sfp+0x84>)
    9b8e:	681e      	ldr	r6, [r3, #0]
    9b90:	69b3      	ldr	r3, [r6, #24]
    9b92:	b913      	cbnz	r3, 9b9a <__sfp+0x16>
    9b94:	4630      	mov	r0, r6
    9b96:	f7ff ffbd 	bl	9b14 <__sinit>
    9b9a:	3648      	adds	r6, #72	; 0x48
    9b9c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
    9ba0:	3b01      	subs	r3, #1
    9ba2:	d503      	bpl.n	9bac <__sfp+0x28>
    9ba4:	6833      	ldr	r3, [r6, #0]
    9ba6:	b30b      	cbz	r3, 9bec <__sfp+0x68>
    9ba8:	6836      	ldr	r6, [r6, #0]
    9baa:	e7f7      	b.n	9b9c <__sfp+0x18>
    9bac:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
    9bb0:	b9d5      	cbnz	r5, 9be8 <__sfp+0x64>
    9bb2:	4b16      	ldr	r3, [pc, #88]	; (9c0c <__sfp+0x88>)
    9bb4:	60e3      	str	r3, [r4, #12]
    9bb6:	f104 0058 	add.w	r0, r4, #88	; 0x58
    9bba:	6665      	str	r5, [r4, #100]	; 0x64
    9bbc:	f7fc fe12 	bl	67e4 <__retarget_lock_init_recursive>
    9bc0:	f7ff ff96 	bl	9af0 <__sfp_lock_release>
    9bc4:	6025      	str	r5, [r4, #0]
    9bc6:	e9c4 5501 	strd	r5, r5, [r4, #4]
    9bca:	e9c4 5504 	strd	r5, r5, [r4, #16]
    9bce:	61a5      	str	r5, [r4, #24]
    9bd0:	2208      	movs	r2, #8
    9bd2:	4629      	mov	r1, r5
    9bd4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
    9bd8:	f7fc fe40 	bl	685c <memset>
    9bdc:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
    9be0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
    9be4:	4620      	mov	r0, r4
    9be6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    9be8:	3468      	adds	r4, #104	; 0x68
    9bea:	e7d9      	b.n	9ba0 <__sfp+0x1c>
    9bec:	2104      	movs	r1, #4
    9bee:	4638      	mov	r0, r7
    9bf0:	f7ff ff62 	bl	9ab8 <__sfmoreglue>
    9bf4:	4604      	mov	r4, r0
    9bf6:	6030      	str	r0, [r6, #0]
    9bf8:	2800      	cmp	r0, #0
    9bfa:	d1d5      	bne.n	9ba8 <__sfp+0x24>
    9bfc:	f7ff ff78 	bl	9af0 <__sfp_lock_release>
    9c00:	230c      	movs	r3, #12
    9c02:	603b      	str	r3, [r7, #0]
    9c04:	e7ee      	b.n	9be4 <__sfp+0x60>
    9c06:	bf00      	nop
    9c08:	0000dbb4 	.word	0x0000dbb4
    9c0c:	ffff0001 	.word	0xffff0001

00009c10 <_fwalk>:
_fwalk():
    9c10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    9c14:	4688      	mov	r8, r1
    9c16:	f100 0448 	add.w	r4, r0, #72	; 0x48
    9c1a:	2600      	movs	r6, #0
    9c1c:	b914      	cbnz	r4, 9c24 <_fwalk+0x14>
    9c1e:	4630      	mov	r0, r6
    9c20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    9c24:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
    9c28:	3f01      	subs	r7, #1
    9c2a:	d501      	bpl.n	9c30 <_fwalk+0x20>
    9c2c:	6824      	ldr	r4, [r4, #0]
    9c2e:	e7f5      	b.n	9c1c <_fwalk+0xc>
    9c30:	89ab      	ldrh	r3, [r5, #12]
    9c32:	2b01      	cmp	r3, #1
    9c34:	d906      	bls.n	9c44 <_fwalk+0x34>
    9c36:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
    9c3a:	3301      	adds	r3, #1
    9c3c:	d002      	beq.n	9c44 <_fwalk+0x34>
    9c3e:	4628      	mov	r0, r5
    9c40:	47c0      	blx	r8
    9c42:	4306      	orrs	r6, r0
    9c44:	3568      	adds	r5, #104	; 0x68
    9c46:	e7ef      	b.n	9c28 <_fwalk+0x18>

00009c48 <_fwalk_reent>:
_fwalk_reent():
    9c48:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    9c4c:	4680      	mov	r8, r0
    9c4e:	4689      	mov	r9, r1
    9c50:	f100 0448 	add.w	r4, r0, #72	; 0x48
    9c54:	2600      	movs	r6, #0
    9c56:	b914      	cbnz	r4, 9c5e <_fwalk_reent+0x16>
    9c58:	4630      	mov	r0, r6
    9c5a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    9c5e:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
    9c62:	3f01      	subs	r7, #1
    9c64:	d501      	bpl.n	9c6a <_fwalk_reent+0x22>
    9c66:	6824      	ldr	r4, [r4, #0]
    9c68:	e7f5      	b.n	9c56 <_fwalk_reent+0xe>
    9c6a:	89ab      	ldrh	r3, [r5, #12]
    9c6c:	2b01      	cmp	r3, #1
    9c6e:	d907      	bls.n	9c80 <_fwalk_reent+0x38>
    9c70:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
    9c74:	3301      	adds	r3, #1
    9c76:	d003      	beq.n	9c80 <_fwalk_reent+0x38>
    9c78:	4629      	mov	r1, r5
    9c7a:	4640      	mov	r0, r8
    9c7c:	47c8      	blx	r9
    9c7e:	4306      	orrs	r6, r0
    9c80:	3568      	adds	r5, #104	; 0x68
    9c82:	e7ee      	b.n	9c62 <_fwalk_reent+0x1a>

00009c84 <rshift>:
rshift():
    9c84:	b5f0      	push	{r4, r5, r6, r7, lr}
    9c86:	6906      	ldr	r6, [r0, #16]
    9c88:	114b      	asrs	r3, r1, #5
    9c8a:	429e      	cmp	r6, r3
    9c8c:	f100 0414 	add.w	r4, r0, #20
    9c90:	dd30      	ble.n	9cf4 <rshift+0x70>
    9c92:	f011 011f 	ands.w	r1, r1, #31
    9c96:	eb04 0686 	add.w	r6, r4, r6, lsl #2
    9c9a:	eb04 0283 	add.w	r2, r4, r3, lsl #2
    9c9e:	d108      	bne.n	9cb2 <rshift+0x2e>
    9ca0:	4621      	mov	r1, r4
    9ca2:	42b2      	cmp	r2, r6
    9ca4:	460b      	mov	r3, r1
    9ca6:	d211      	bcs.n	9ccc <rshift+0x48>
    9ca8:	f852 3b04 	ldr.w	r3, [r2], #4
    9cac:	f841 3b04 	str.w	r3, [r1], #4
    9cb0:	e7f7      	b.n	9ca2 <rshift+0x1e>
    9cb2:	f854 5023 	ldr.w	r5, [r4, r3, lsl #2]
    9cb6:	f1c1 0c20 	rsb	ip, r1, #32
    9cba:	40cd      	lsrs	r5, r1
    9cbc:	3204      	adds	r2, #4
    9cbe:	4623      	mov	r3, r4
    9cc0:	4296      	cmp	r6, r2
    9cc2:	4617      	mov	r7, r2
    9cc4:	d80c      	bhi.n	9ce0 <rshift+0x5c>
    9cc6:	601d      	str	r5, [r3, #0]
    9cc8:	b105      	cbz	r5, 9ccc <rshift+0x48>
    9cca:	3304      	adds	r3, #4
    9ccc:	1b1a      	subs	r2, r3, r4
    9cce:	42a3      	cmp	r3, r4
    9cd0:	ea4f 02a2 	mov.w	r2, r2, asr #2
    9cd4:	bf08      	it	eq
    9cd6:	2300      	moveq	r3, #0
    9cd8:	6102      	str	r2, [r0, #16]
    9cda:	bf08      	it	eq
    9cdc:	6143      	streq	r3, [r0, #20]
    9cde:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9ce0:	683f      	ldr	r7, [r7, #0]
    9ce2:	fa07 f70c 	lsl.w	r7, r7, ip
    9ce6:	433d      	orrs	r5, r7
    9ce8:	f843 5b04 	str.w	r5, [r3], #4
    9cec:	f852 5b04 	ldr.w	r5, [r2], #4
    9cf0:	40cd      	lsrs	r5, r1
    9cf2:	e7e5      	b.n	9cc0 <rshift+0x3c>
    9cf4:	4623      	mov	r3, r4
    9cf6:	e7e9      	b.n	9ccc <rshift+0x48>

00009cf8 <__hexdig_fun>:
__hexdig_fun():
    9cf8:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
    9cfc:	2b09      	cmp	r3, #9
    9cfe:	d802      	bhi.n	9d06 <__hexdig_fun+0xe>
    9d00:	3820      	subs	r0, #32
    9d02:	b2c0      	uxtb	r0, r0
    9d04:	4770      	bx	lr
    9d06:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
    9d0a:	2b05      	cmp	r3, #5
    9d0c:	d801      	bhi.n	9d12 <__hexdig_fun+0x1a>
    9d0e:	3847      	subs	r0, #71	; 0x47
    9d10:	e7f7      	b.n	9d02 <__hexdig_fun+0xa>
    9d12:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
    9d16:	2b05      	cmp	r3, #5
    9d18:	d801      	bhi.n	9d1e <__hexdig_fun+0x26>
    9d1a:	3827      	subs	r0, #39	; 0x27
    9d1c:	e7f1      	b.n	9d02 <__hexdig_fun+0xa>
    9d1e:	2000      	movs	r0, #0
    9d20:	4770      	bx	lr
    9d22:	Address 0x0000000000009d22 is out of bounds.


00009d24 <__gethex>:
__gethex():
    9d24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9d28:	b08b      	sub	sp, #44	; 0x2c
    9d2a:	468b      	mov	fp, r1
    9d2c:	9306      	str	r3, [sp, #24]
    9d2e:	4bb7      	ldr	r3, [pc, #732]	; (a00c <__gethex+0x2e8>)
    9d30:	9002      	str	r0, [sp, #8]
    9d32:	681b      	ldr	r3, [r3, #0]
    9d34:	9303      	str	r3, [sp, #12]
    9d36:	4618      	mov	r0, r3
    9d38:	4690      	mov	r8, r2
    9d3a:	f7fd ff78 	bl	7c2e <strlen>
    9d3e:	9b03      	ldr	r3, [sp, #12]
    9d40:	f8db 2000 	ldr.w	r2, [fp]
    9d44:	9001      	str	r0, [sp, #4]
    9d46:	4403      	add	r3, r0
    9d48:	f813 3c01 	ldrb.w	r3, [r3, #-1]
    9d4c:	9307      	str	r3, [sp, #28]
    9d4e:	1c93      	adds	r3, r2, #2
    9d50:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
    9d54:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
    9d58:	32fe      	adds	r2, #254	; 0xfe
    9d5a:	eb02 0a03 	add.w	sl, r2, r3
    9d5e:	461f      	mov	r7, r3
    9d60:	f813 0b01 	ldrb.w	r0, [r3], #1
    9d64:	2830      	cmp	r0, #48	; 0x30
    9d66:	d0f8      	beq.n	9d5a <__gethex+0x36>
    9d68:	f7ff ffc6 	bl	9cf8 <__hexdig_fun>
    9d6c:	4604      	mov	r4, r0
    9d6e:	2800      	cmp	r0, #0
    9d70:	d168      	bne.n	9e44 <__gethex+0x120>
    9d72:	9a01      	ldr	r2, [sp, #4]
    9d74:	9903      	ldr	r1, [sp, #12]
    9d76:	4638      	mov	r0, r7
    9d78:	f7fd ff84 	bl	7c84 <strncmp>
    9d7c:	4605      	mov	r5, r0
    9d7e:	2800      	cmp	r0, #0
    9d80:	d163      	bne.n	9e4a <__gethex+0x126>
    9d82:	9b01      	ldr	r3, [sp, #4]
    9d84:	5cf8      	ldrb	r0, [r7, r3]
    9d86:	18fe      	adds	r6, r7, r3
    9d88:	f7ff ffb6 	bl	9cf8 <__hexdig_fun>
    9d8c:	2800      	cmp	r0, #0
    9d8e:	d05e      	beq.n	9e4e <__gethex+0x12a>
    9d90:	4633      	mov	r3, r6
    9d92:	7818      	ldrb	r0, [r3, #0]
    9d94:	2830      	cmp	r0, #48	; 0x30
    9d96:	461f      	mov	r7, r3
    9d98:	f103 0301 	add.w	r3, r3, #1
    9d9c:	d0f9      	beq.n	9d92 <__gethex+0x6e>
    9d9e:	f7ff ffab 	bl	9cf8 <__hexdig_fun>
    9da2:	fab0 f480 	clz	r4, r0
    9da6:	0964      	lsrs	r4, r4, #5
    9da8:	4635      	mov	r5, r6
    9daa:	f04f 0a01 	mov.w	sl, #1
    9dae:	463a      	mov	r2, r7
    9db0:	4616      	mov	r6, r2
    9db2:	3201      	adds	r2, #1
    9db4:	7830      	ldrb	r0, [r6, #0]
    9db6:	f7ff ff9f 	bl	9cf8 <__hexdig_fun>
    9dba:	2800      	cmp	r0, #0
    9dbc:	d1f8      	bne.n	9db0 <__gethex+0x8c>
    9dbe:	9a01      	ldr	r2, [sp, #4]
    9dc0:	9903      	ldr	r1, [sp, #12]
    9dc2:	4630      	mov	r0, r6
    9dc4:	f7fd ff5e 	bl	7c84 <strncmp>
    9dc8:	b950      	cbnz	r0, 9de0 <__gethex+0xbc>
    9dca:	b955      	cbnz	r5, 9de2 <__gethex+0xbe>
    9dcc:	9b01      	ldr	r3, [sp, #4]
    9dce:	18f5      	adds	r5, r6, r3
    9dd0:	462a      	mov	r2, r5
    9dd2:	4616      	mov	r6, r2
    9dd4:	3201      	adds	r2, #1
    9dd6:	7830      	ldrb	r0, [r6, #0]
    9dd8:	f7ff ff8e 	bl	9cf8 <__hexdig_fun>
    9ddc:	2800      	cmp	r0, #0
    9dde:	d1f8      	bne.n	9dd2 <__gethex+0xae>
    9de0:	b10d      	cbz	r5, 9de6 <__gethex+0xc2>
    9de2:	1bad      	subs	r5, r5, r6
    9de4:	00ad      	lsls	r5, r5, #2
    9de6:	7833      	ldrb	r3, [r6, #0]
    9de8:	2b50      	cmp	r3, #80	; 0x50
    9dea:	d001      	beq.n	9df0 <__gethex+0xcc>
    9dec:	2b70      	cmp	r3, #112	; 0x70
    9dee:	d13c      	bne.n	9e6a <__gethex+0x146>
    9df0:	7873      	ldrb	r3, [r6, #1]
    9df2:	2b2b      	cmp	r3, #43	; 0x2b
    9df4:	d02d      	beq.n	9e52 <__gethex+0x12e>
    9df6:	2b2d      	cmp	r3, #45	; 0x2d
    9df8:	d02f      	beq.n	9e5a <__gethex+0x136>
    9dfa:	1c71      	adds	r1, r6, #1
    9dfc:	f04f 0900 	mov.w	r9, #0
    9e00:	7808      	ldrb	r0, [r1, #0]
    9e02:	f7ff ff79 	bl	9cf8 <__hexdig_fun>
    9e06:	1e43      	subs	r3, r0, #1
    9e08:	b2db      	uxtb	r3, r3
    9e0a:	2b18      	cmp	r3, #24
    9e0c:	d82d      	bhi.n	9e6a <__gethex+0x146>
    9e0e:	f1a0 0210 	sub.w	r2, r0, #16
    9e12:	f811 0f01 	ldrb.w	r0, [r1, #1]!
    9e16:	f7ff ff6f 	bl	9cf8 <__hexdig_fun>
    9e1a:	1e43      	subs	r3, r0, #1
    9e1c:	b2db      	uxtb	r3, r3
    9e1e:	2b18      	cmp	r3, #24
    9e20:	d91e      	bls.n	9e60 <__gethex+0x13c>
    9e22:	f1b9 0f00 	cmp.w	r9, #0
    9e26:	d000      	beq.n	9e2a <__gethex+0x106>
    9e28:	4252      	negs	r2, r2
    9e2a:	4415      	add	r5, r2
    9e2c:	f8cb 1000 	str.w	r1, [fp]
    9e30:	b1ec      	cbz	r4, 9e6e <__gethex+0x14a>
    9e32:	f1ba 0f00 	cmp.w	sl, #0
    9e36:	bf14      	ite	ne
    9e38:	2700      	movne	r7, #0
    9e3a:	2706      	moveq	r7, #6
    9e3c:	4638      	mov	r0, r7
    9e3e:	b00b      	add	sp, #44	; 0x2c
    9e40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9e44:	2400      	movs	r4, #0
    9e46:	4625      	mov	r5, r4
    9e48:	e7b1      	b.n	9dae <__gethex+0x8a>
    9e4a:	463e      	mov	r6, r7
    9e4c:	4625      	mov	r5, r4
    9e4e:	2401      	movs	r4, #1
    9e50:	e7c9      	b.n	9de6 <__gethex+0xc2>
    9e52:	f04f 0900 	mov.w	r9, #0
    9e56:	1cb1      	adds	r1, r6, #2
    9e58:	e7d2      	b.n	9e00 <__gethex+0xdc>
    9e5a:	f04f 0901 	mov.w	r9, #1
    9e5e:	e7fa      	b.n	9e56 <__gethex+0x132>
    9e60:	230a      	movs	r3, #10
    9e62:	fb03 0202 	mla	r2, r3, r2, r0
    9e66:	3a10      	subs	r2, #16
    9e68:	e7d3      	b.n	9e12 <__gethex+0xee>
    9e6a:	4631      	mov	r1, r6
    9e6c:	e7de      	b.n	9e2c <__gethex+0x108>
    9e6e:	1bf3      	subs	r3, r6, r7
    9e70:	3b01      	subs	r3, #1
    9e72:	4621      	mov	r1, r4
    9e74:	2b07      	cmp	r3, #7
    9e76:	dc4f      	bgt.n	9f18 <__gethex+0x1f4>
    9e78:	9802      	ldr	r0, [sp, #8]
    9e7a:	f000 fb45 	bl	a508 <_Balloc>
    9e7e:	9b01      	ldr	r3, [sp, #4]
    9e80:	f100 0914 	add.w	r9, r0, #20
    9e84:	f04f 0b00 	mov.w	fp, #0
    9e88:	f1c3 0301 	rsb	r3, r3, #1
    9e8c:	4604      	mov	r4, r0
    9e8e:	f8cd 9010 	str.w	r9, [sp, #16]
    9e92:	46da      	mov	sl, fp
    9e94:	9308      	str	r3, [sp, #32]
    9e96:	42b7      	cmp	r7, r6
    9e98:	d341      	bcc.n	9f1e <__gethex+0x1fa>
    9e9a:	9804      	ldr	r0, [sp, #16]
    9e9c:	f840 ab04 	str.w	sl, [r0], #4
    9ea0:	eba0 0009 	sub.w	r0, r0, r9
    9ea4:	1080      	asrs	r0, r0, #2
    9ea6:	6120      	str	r0, [r4, #16]
    9ea8:	0147      	lsls	r7, r0, #5
    9eaa:	4650      	mov	r0, sl
    9eac:	f000 fbf0 	bl	a690 <__hi0bits>
    9eb0:	f8d8 6000 	ldr.w	r6, [r8]
    9eb4:	1a3f      	subs	r7, r7, r0
    9eb6:	42b7      	cmp	r7, r6
    9eb8:	dd63      	ble.n	9f82 <__gethex+0x25e>
    9eba:	1bbf      	subs	r7, r7, r6
    9ebc:	4639      	mov	r1, r7
    9ebe:	4620      	mov	r0, r4
    9ec0:	f000 fef9 	bl	acb6 <__any_on>
    9ec4:	4682      	mov	sl, r0
    9ec6:	b1a8      	cbz	r0, 9ef4 <__gethex+0x1d0>
    9ec8:	1e7b      	subs	r3, r7, #1
    9eca:	1159      	asrs	r1, r3, #5
    9ecc:	f003 021f 	and.w	r2, r3, #31
    9ed0:	f04f 0a01 	mov.w	sl, #1
    9ed4:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
    9ed8:	fa0a f202 	lsl.w	r2, sl, r2
    9edc:	420a      	tst	r2, r1
    9ede:	d009      	beq.n	9ef4 <__gethex+0x1d0>
    9ee0:	4553      	cmp	r3, sl
    9ee2:	dd05      	ble.n	9ef0 <__gethex+0x1cc>
    9ee4:	1eb9      	subs	r1, r7, #2
    9ee6:	4620      	mov	r0, r4
    9ee8:	f000 fee5 	bl	acb6 <__any_on>
    9eec:	2800      	cmp	r0, #0
    9eee:	d145      	bne.n	9f7c <__gethex+0x258>
    9ef0:	f04f 0a02 	mov.w	sl, #2
    9ef4:	4639      	mov	r1, r7
    9ef6:	4620      	mov	r0, r4
    9ef8:	f7ff fec4 	bl	9c84 <rshift>
    9efc:	443d      	add	r5, r7
    9efe:	f8d8 3008 	ldr.w	r3, [r8, #8]
    9f02:	42ab      	cmp	r3, r5
    9f04:	da4b      	bge.n	9f9e <__gethex+0x27a>
    9f06:	4621      	mov	r1, r4
    9f08:	9802      	ldr	r0, [sp, #8]
    9f0a:	f000 fb31 	bl	a570 <_Bfree>
    9f0e:	9a14      	ldr	r2, [sp, #80]	; 0x50
    9f10:	2300      	movs	r3, #0
    9f12:	6013      	str	r3, [r2, #0]
    9f14:	27a3      	movs	r7, #163	; 0xa3
    9f16:	e791      	b.n	9e3c <__gethex+0x118>
    9f18:	3101      	adds	r1, #1
    9f1a:	105b      	asrs	r3, r3, #1
    9f1c:	e7aa      	b.n	9e74 <__gethex+0x150>
    9f1e:	1e73      	subs	r3, r6, #1
    9f20:	9305      	str	r3, [sp, #20]
    9f22:	9a07      	ldr	r2, [sp, #28]
    9f24:	f816 3c01 	ldrb.w	r3, [r6, #-1]
    9f28:	4293      	cmp	r3, r2
    9f2a:	d017      	beq.n	9f5c <__gethex+0x238>
    9f2c:	f1bb 0f20 	cmp.w	fp, #32
    9f30:	d106      	bne.n	9f40 <__gethex+0x21c>
    9f32:	9b04      	ldr	r3, [sp, #16]
    9f34:	f843 ab04 	str.w	sl, [r3], #4
    9f38:	f04f 0a00 	mov.w	sl, #0
    9f3c:	9304      	str	r3, [sp, #16]
    9f3e:	46d3      	mov	fp, sl
    9f40:	f816 0c01 	ldrb.w	r0, [r6, #-1]
    9f44:	f7ff fed8 	bl	9cf8 <__hexdig_fun>
    9f48:	f000 000f 	and.w	r0, r0, #15
    9f4c:	fa00 f00b 	lsl.w	r0, r0, fp
    9f50:	ea4a 0a00 	orr.w	sl, sl, r0
    9f54:	f10b 0b04 	add.w	fp, fp, #4
    9f58:	9b05      	ldr	r3, [sp, #20]
    9f5a:	e00d      	b.n	9f78 <__gethex+0x254>
    9f5c:	9b05      	ldr	r3, [sp, #20]
    9f5e:	9a08      	ldr	r2, [sp, #32]
    9f60:	4413      	add	r3, r2
    9f62:	42bb      	cmp	r3, r7
    9f64:	d3e2      	bcc.n	9f2c <__gethex+0x208>
    9f66:	4618      	mov	r0, r3
    9f68:	9a01      	ldr	r2, [sp, #4]
    9f6a:	9903      	ldr	r1, [sp, #12]
    9f6c:	9309      	str	r3, [sp, #36]	; 0x24
    9f6e:	f7fd fe89 	bl	7c84 <strncmp>
    9f72:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9f74:	2800      	cmp	r0, #0
    9f76:	d1d9      	bne.n	9f2c <__gethex+0x208>
    9f78:	461e      	mov	r6, r3
    9f7a:	e78c      	b.n	9e96 <__gethex+0x172>
    9f7c:	f04f 0a03 	mov.w	sl, #3
    9f80:	e7b8      	b.n	9ef4 <__gethex+0x1d0>
    9f82:	da09      	bge.n	9f98 <__gethex+0x274>
    9f84:	1bf7      	subs	r7, r6, r7
    9f86:	4621      	mov	r1, r4
    9f88:	463a      	mov	r2, r7
    9f8a:	9802      	ldr	r0, [sp, #8]
    9f8c:	f000 fcb8 	bl	a900 <__lshift>
    9f90:	1bed      	subs	r5, r5, r7
    9f92:	4604      	mov	r4, r0
    9f94:	f100 0914 	add.w	r9, r0, #20
    9f98:	f04f 0a00 	mov.w	sl, #0
    9f9c:	e7af      	b.n	9efe <__gethex+0x1da>
    9f9e:	f8d8 3004 	ldr.w	r3, [r8, #4]
    9fa2:	42ab      	cmp	r3, r5
    9fa4:	dd6d      	ble.n	a082 <__gethex+0x35e>
    9fa6:	1b5d      	subs	r5, r3, r5
    9fa8:	42ae      	cmp	r6, r5
    9faa:	dc31      	bgt.n	a010 <__gethex+0x2ec>
    9fac:	f8d8 300c 	ldr.w	r3, [r8, #12]
    9fb0:	2b02      	cmp	r3, #2
    9fb2:	d022      	beq.n	9ffa <__gethex+0x2d6>
    9fb4:	2b03      	cmp	r3, #3
    9fb6:	d024      	beq.n	a002 <__gethex+0x2de>
    9fb8:	2b01      	cmp	r3, #1
    9fba:	d115      	bne.n	9fe8 <__gethex+0x2c4>
    9fbc:	42ae      	cmp	r6, r5
    9fbe:	d113      	bne.n	9fe8 <__gethex+0x2c4>
    9fc0:	2e01      	cmp	r6, #1
    9fc2:	d10b      	bne.n	9fdc <__gethex+0x2b8>
    9fc4:	9a06      	ldr	r2, [sp, #24]
    9fc6:	f8d8 3004 	ldr.w	r3, [r8, #4]
    9fca:	6013      	str	r3, [r2, #0]
    9fcc:	2301      	movs	r3, #1
    9fce:	6123      	str	r3, [r4, #16]
    9fd0:	f8c9 3000 	str.w	r3, [r9]
    9fd4:	9b14      	ldr	r3, [sp, #80]	; 0x50
    9fd6:	2762      	movs	r7, #98	; 0x62
    9fd8:	601c      	str	r4, [r3, #0]
    9fda:	e72f      	b.n	9e3c <__gethex+0x118>
    9fdc:	1e71      	subs	r1, r6, #1
    9fde:	4620      	mov	r0, r4
    9fe0:	f000 fe69 	bl	acb6 <__any_on>
    9fe4:	2800      	cmp	r0, #0
    9fe6:	d1ed      	bne.n	9fc4 <__gethex+0x2a0>
    9fe8:	4621      	mov	r1, r4
    9fea:	9802      	ldr	r0, [sp, #8]
    9fec:	f000 fac0 	bl	a570 <_Bfree>
    9ff0:	9a14      	ldr	r2, [sp, #80]	; 0x50
    9ff2:	2300      	movs	r3, #0
    9ff4:	6013      	str	r3, [r2, #0]
    9ff6:	2750      	movs	r7, #80	; 0x50
    9ff8:	e720      	b.n	9e3c <__gethex+0x118>
    9ffa:	9b15      	ldr	r3, [sp, #84]	; 0x54
    9ffc:	2b00      	cmp	r3, #0
    9ffe:	d1f3      	bne.n	9fe8 <__gethex+0x2c4>
    a000:	e7e0      	b.n	9fc4 <__gethex+0x2a0>
    a002:	9b15      	ldr	r3, [sp, #84]	; 0x54
    a004:	2b00      	cmp	r3, #0
    a006:	d1dd      	bne.n	9fc4 <__gethex+0x2a0>
    a008:	e7ee      	b.n	9fe8 <__gethex+0x2c4>
    a00a:	bf00      	nop
    a00c:	0000dcc0 	.word	0x0000dcc0
    a010:	1e6f      	subs	r7, r5, #1
    a012:	f1ba 0f00 	cmp.w	sl, #0
    a016:	d131      	bne.n	a07c <__gethex+0x358>
    a018:	b127      	cbz	r7, a024 <__gethex+0x300>
    a01a:	4639      	mov	r1, r7
    a01c:	4620      	mov	r0, r4
    a01e:	f000 fe4a 	bl	acb6 <__any_on>
    a022:	4682      	mov	sl, r0
    a024:	117a      	asrs	r2, r7, #5
    a026:	2301      	movs	r3, #1
    a028:	f007 071f 	and.w	r7, r7, #31
    a02c:	fa03 f707 	lsl.w	r7, r3, r7
    a030:	f859 3022 	ldr.w	r3, [r9, r2, lsl #2]
    a034:	4629      	mov	r1, r5
    a036:	421f      	tst	r7, r3
    a038:	4620      	mov	r0, r4
    a03a:	bf18      	it	ne
    a03c:	f04a 0a02 	orrne.w	sl, sl, #2
    a040:	1b76      	subs	r6, r6, r5
    a042:	f7ff fe1f 	bl	9c84 <rshift>
    a046:	f8d8 5004 	ldr.w	r5, [r8, #4]
    a04a:	2702      	movs	r7, #2
    a04c:	f1ba 0f00 	cmp.w	sl, #0
    a050:	d048      	beq.n	a0e4 <__gethex+0x3c0>
    a052:	f8d8 300c 	ldr.w	r3, [r8, #12]
    a056:	2b02      	cmp	r3, #2
    a058:	d015      	beq.n	a086 <__gethex+0x362>
    a05a:	2b03      	cmp	r3, #3
    a05c:	d017      	beq.n	a08e <__gethex+0x36a>
    a05e:	2b01      	cmp	r3, #1
    a060:	d109      	bne.n	a076 <__gethex+0x352>
    a062:	f01a 0f02 	tst.w	sl, #2
    a066:	d006      	beq.n	a076 <__gethex+0x352>
    a068:	f8d9 3000 	ldr.w	r3, [r9]
    a06c:	ea4a 0a03 	orr.w	sl, sl, r3
    a070:	f01a 0f01 	tst.w	sl, #1
    a074:	d10e      	bne.n	a094 <__gethex+0x370>
    a076:	f047 0710 	orr.w	r7, r7, #16
    a07a:	e033      	b.n	a0e4 <__gethex+0x3c0>
    a07c:	f04f 0a01 	mov.w	sl, #1
    a080:	e7d0      	b.n	a024 <__gethex+0x300>
    a082:	2701      	movs	r7, #1
    a084:	e7e2      	b.n	a04c <__gethex+0x328>
    a086:	9b15      	ldr	r3, [sp, #84]	; 0x54
    a088:	f1c3 0301 	rsb	r3, r3, #1
    a08c:	9315      	str	r3, [sp, #84]	; 0x54
    a08e:	9b15      	ldr	r3, [sp, #84]	; 0x54
    a090:	2b00      	cmp	r3, #0
    a092:	d0f0      	beq.n	a076 <__gethex+0x352>
    a094:	f8d4 9010 	ldr.w	r9, [r4, #16]
    a098:	f104 0314 	add.w	r3, r4, #20
    a09c:	ea4f 0a89 	mov.w	sl, r9, lsl #2
    a0a0:	eb03 010a 	add.w	r1, r3, sl
    a0a4:	f04f 0c00 	mov.w	ip, #0
    a0a8:	4618      	mov	r0, r3
    a0aa:	f853 2b04 	ldr.w	r2, [r3], #4
    a0ae:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
    a0b2:	d01c      	beq.n	a0ee <__gethex+0x3ca>
    a0b4:	3201      	adds	r2, #1
    a0b6:	6002      	str	r2, [r0, #0]
    a0b8:	2f02      	cmp	r7, #2
    a0ba:	f104 0314 	add.w	r3, r4, #20
    a0be:	d138      	bne.n	a132 <__gethex+0x40e>
    a0c0:	f8d8 2000 	ldr.w	r2, [r8]
    a0c4:	3a01      	subs	r2, #1
    a0c6:	42b2      	cmp	r2, r6
    a0c8:	d10a      	bne.n	a0e0 <__gethex+0x3bc>
    a0ca:	1171      	asrs	r1, r6, #5
    a0cc:	2201      	movs	r2, #1
    a0ce:	f006 061f 	and.w	r6, r6, #31
    a0d2:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
    a0d6:	fa02 f606 	lsl.w	r6, r2, r6
    a0da:	421e      	tst	r6, r3
    a0dc:	bf18      	it	ne
    a0de:	4617      	movne	r7, r2
    a0e0:	f047 0720 	orr.w	r7, r7, #32
    a0e4:	9b14      	ldr	r3, [sp, #80]	; 0x50
    a0e6:	601c      	str	r4, [r3, #0]
    a0e8:	9b06      	ldr	r3, [sp, #24]
    a0ea:	601d      	str	r5, [r3, #0]
    a0ec:	e6a6      	b.n	9e3c <__gethex+0x118>
    a0ee:	4299      	cmp	r1, r3
    a0f0:	f843 cc04 	str.w	ip, [r3, #-4]
    a0f4:	d8d8      	bhi.n	a0a8 <__gethex+0x384>
    a0f6:	68a3      	ldr	r3, [r4, #8]
    a0f8:	4599      	cmp	r9, r3
    a0fa:	db12      	blt.n	a122 <__gethex+0x3fe>
    a0fc:	6861      	ldr	r1, [r4, #4]
    a0fe:	9802      	ldr	r0, [sp, #8]
    a100:	3101      	adds	r1, #1
    a102:	f000 fa01 	bl	a508 <_Balloc>
    a106:	6922      	ldr	r2, [r4, #16]
    a108:	3202      	adds	r2, #2
    a10a:	f104 010c 	add.w	r1, r4, #12
    a10e:	4683      	mov	fp, r0
    a110:	0092      	lsls	r2, r2, #2
    a112:	300c      	adds	r0, #12
    a114:	f7fc fb7a 	bl	680c <memcpy>
    a118:	4621      	mov	r1, r4
    a11a:	9802      	ldr	r0, [sp, #8]
    a11c:	f000 fa28 	bl	a570 <_Bfree>
    a120:	465c      	mov	r4, fp
    a122:	6923      	ldr	r3, [r4, #16]
    a124:	1c5a      	adds	r2, r3, #1
    a126:	eb04 0383 	add.w	r3, r4, r3, lsl #2
    a12a:	6122      	str	r2, [r4, #16]
    a12c:	2201      	movs	r2, #1
    a12e:	615a      	str	r2, [r3, #20]
    a130:	e7c2      	b.n	a0b8 <__gethex+0x394>
    a132:	6922      	ldr	r2, [r4, #16]
    a134:	454a      	cmp	r2, r9
    a136:	dd0b      	ble.n	a150 <__gethex+0x42c>
    a138:	2101      	movs	r1, #1
    a13a:	4620      	mov	r0, r4
    a13c:	f7ff fda2 	bl	9c84 <rshift>
    a140:	f8d8 3008 	ldr.w	r3, [r8, #8]
    a144:	3501      	adds	r5, #1
    a146:	42ab      	cmp	r3, r5
    a148:	f6ff aedd 	blt.w	9f06 <__gethex+0x1e2>
    a14c:	2701      	movs	r7, #1
    a14e:	e7c7      	b.n	a0e0 <__gethex+0x3bc>
    a150:	f016 061f 	ands.w	r6, r6, #31
    a154:	d0fa      	beq.n	a14c <__gethex+0x428>
    a156:	449a      	add	sl, r3
    a158:	f1c6 0620 	rsb	r6, r6, #32
    a15c:	f85a 0c04 	ldr.w	r0, [sl, #-4]
    a160:	f000 fa96 	bl	a690 <__hi0bits>
    a164:	42b0      	cmp	r0, r6
    a166:	dbe7      	blt.n	a138 <__gethex+0x414>
    a168:	e7f0      	b.n	a14c <__gethex+0x428>
    a16a:	bf00      	nop

0000a16c <L_shift>:
L_shift():
    a16c:	f1c2 0208 	rsb	r2, r2, #8
    a170:	0092      	lsls	r2, r2, #2
    a172:	b570      	push	{r4, r5, r6, lr}
    a174:	f1c2 0620 	rsb	r6, r2, #32
    a178:	6843      	ldr	r3, [r0, #4]
    a17a:	6804      	ldr	r4, [r0, #0]
    a17c:	fa03 f506 	lsl.w	r5, r3, r6
    a180:	432c      	orrs	r4, r5
    a182:	40d3      	lsrs	r3, r2
    a184:	6004      	str	r4, [r0, #0]
    a186:	f840 3f04 	str.w	r3, [r0, #4]!
    a18a:	4288      	cmp	r0, r1
    a18c:	d3f4      	bcc.n	a178 <L_shift+0xc>
    a18e:	bd70      	pop	{r4, r5, r6, pc}

0000a190 <__match>:
__match():
    a190:	b530      	push	{r4, r5, lr}
    a192:	6803      	ldr	r3, [r0, #0]
    a194:	3301      	adds	r3, #1
    a196:	f811 4b01 	ldrb.w	r4, [r1], #1
    a19a:	b914      	cbnz	r4, a1a2 <__match+0x12>
    a19c:	6003      	str	r3, [r0, #0]
    a19e:	2001      	movs	r0, #1
    a1a0:	bd30      	pop	{r4, r5, pc}
    a1a2:	f813 2b01 	ldrb.w	r2, [r3], #1
    a1a6:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
    a1aa:	2d19      	cmp	r5, #25
    a1ac:	bf98      	it	ls
    a1ae:	3220      	addls	r2, #32
    a1b0:	42a2      	cmp	r2, r4
    a1b2:	d0f0      	beq.n	a196 <__match+0x6>
    a1b4:	2000      	movs	r0, #0
    a1b6:	e7f3      	b.n	a1a0 <__match+0x10>

0000a1b8 <__hexnan>:
__hexnan():
    a1b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a1bc:	680b      	ldr	r3, [r1, #0]
    a1be:	6801      	ldr	r1, [r0, #0]
    a1c0:	115f      	asrs	r7, r3, #5
    a1c2:	eb02 0787 	add.w	r7, r2, r7, lsl #2
    a1c6:	f013 031f 	ands.w	r3, r3, #31
    a1ca:	b087      	sub	sp, #28
    a1cc:	bf18      	it	ne
    a1ce:	3704      	addne	r7, #4
    a1d0:	2500      	movs	r5, #0
    a1d2:	1f3e      	subs	r6, r7, #4
    a1d4:	4682      	mov	sl, r0
    a1d6:	4690      	mov	r8, r2
    a1d8:	9301      	str	r3, [sp, #4]
    a1da:	f847 5c04 	str.w	r5, [r7, #-4]
    a1de:	46b1      	mov	r9, r6
    a1e0:	4634      	mov	r4, r6
    a1e2:	9502      	str	r5, [sp, #8]
    a1e4:	46ab      	mov	fp, r5
    a1e6:	784a      	ldrb	r2, [r1, #1]
    a1e8:	1c4b      	adds	r3, r1, #1
    a1ea:	9303      	str	r3, [sp, #12]
    a1ec:	b342      	cbz	r2, a240 <__hexnan+0x88>
    a1ee:	4610      	mov	r0, r2
    a1f0:	9105      	str	r1, [sp, #20]
    a1f2:	9204      	str	r2, [sp, #16]
    a1f4:	f7ff fd80 	bl	9cf8 <__hexdig_fun>
    a1f8:	2800      	cmp	r0, #0
    a1fa:	d143      	bne.n	a284 <__hexnan+0xcc>
    a1fc:	9a04      	ldr	r2, [sp, #16]
    a1fe:	9905      	ldr	r1, [sp, #20]
    a200:	2a20      	cmp	r2, #32
    a202:	d818      	bhi.n	a236 <__hexnan+0x7e>
    a204:	9b02      	ldr	r3, [sp, #8]
    a206:	459b      	cmp	fp, r3
    a208:	dd13      	ble.n	a232 <__hexnan+0x7a>
    a20a:	454c      	cmp	r4, r9
    a20c:	d206      	bcs.n	a21c <__hexnan+0x64>
    a20e:	2d07      	cmp	r5, #7
    a210:	dc04      	bgt.n	a21c <__hexnan+0x64>
    a212:	462a      	mov	r2, r5
    a214:	4649      	mov	r1, r9
    a216:	4620      	mov	r0, r4
    a218:	f7ff ffa8 	bl	a16c <L_shift>
    a21c:	4544      	cmp	r4, r8
    a21e:	d944      	bls.n	a2aa <__hexnan+0xf2>
    a220:	2300      	movs	r3, #0
    a222:	f1a4 0904 	sub.w	r9, r4, #4
    a226:	f844 3c04 	str.w	r3, [r4, #-4]
    a22a:	f8cd b008 	str.w	fp, [sp, #8]
    a22e:	464c      	mov	r4, r9
    a230:	461d      	mov	r5, r3
    a232:	9903      	ldr	r1, [sp, #12]
    a234:	e7d7      	b.n	a1e6 <__hexnan+0x2e>
    a236:	2a29      	cmp	r2, #41	; 0x29
    a238:	d14a      	bne.n	a2d0 <__hexnan+0x118>
    a23a:	3102      	adds	r1, #2
    a23c:	f8ca 1000 	str.w	r1, [sl]
    a240:	f1bb 0f00 	cmp.w	fp, #0
    a244:	d044      	beq.n	a2d0 <__hexnan+0x118>
    a246:	454c      	cmp	r4, r9
    a248:	d206      	bcs.n	a258 <__hexnan+0xa0>
    a24a:	2d07      	cmp	r5, #7
    a24c:	dc04      	bgt.n	a258 <__hexnan+0xa0>
    a24e:	462a      	mov	r2, r5
    a250:	4649      	mov	r1, r9
    a252:	4620      	mov	r0, r4
    a254:	f7ff ff8a 	bl	a16c <L_shift>
    a258:	4544      	cmp	r4, r8
    a25a:	d928      	bls.n	a2ae <__hexnan+0xf6>
    a25c:	4643      	mov	r3, r8
    a25e:	f854 2b04 	ldr.w	r2, [r4], #4
    a262:	f843 2b04 	str.w	r2, [r3], #4
    a266:	42a6      	cmp	r6, r4
    a268:	d2f9      	bcs.n	a25e <__hexnan+0xa6>
    a26a:	2200      	movs	r2, #0
    a26c:	f843 2b04 	str.w	r2, [r3], #4
    a270:	429e      	cmp	r6, r3
    a272:	d2fb      	bcs.n	a26c <__hexnan+0xb4>
    a274:	6833      	ldr	r3, [r6, #0]
    a276:	b91b      	cbnz	r3, a280 <__hexnan+0xc8>
    a278:	4546      	cmp	r6, r8
    a27a:	d127      	bne.n	a2cc <__hexnan+0x114>
    a27c:	2301      	movs	r3, #1
    a27e:	6033      	str	r3, [r6, #0]
    a280:	2005      	movs	r0, #5
    a282:	e026      	b.n	a2d2 <__hexnan+0x11a>
    a284:	3501      	adds	r5, #1
    a286:	2d08      	cmp	r5, #8
    a288:	f10b 0b01 	add.w	fp, fp, #1
    a28c:	dd06      	ble.n	a29c <__hexnan+0xe4>
    a28e:	4544      	cmp	r4, r8
    a290:	d9cf      	bls.n	a232 <__hexnan+0x7a>
    a292:	2300      	movs	r3, #0
    a294:	f844 3c04 	str.w	r3, [r4, #-4]
    a298:	2501      	movs	r5, #1
    a29a:	3c04      	subs	r4, #4
    a29c:	6822      	ldr	r2, [r4, #0]
    a29e:	f000 000f 	and.w	r0, r0, #15
    a2a2:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
    a2a6:	6020      	str	r0, [r4, #0]
    a2a8:	e7c3      	b.n	a232 <__hexnan+0x7a>
    a2aa:	2508      	movs	r5, #8
    a2ac:	e7c1      	b.n	a232 <__hexnan+0x7a>
    a2ae:	9b01      	ldr	r3, [sp, #4]
    a2b0:	2b00      	cmp	r3, #0
    a2b2:	d0df      	beq.n	a274 <__hexnan+0xbc>
    a2b4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    a2b8:	f1c3 0320 	rsb	r3, r3, #32
    a2bc:	fa22 f303 	lsr.w	r3, r2, r3
    a2c0:	f857 2c04 	ldr.w	r2, [r7, #-4]
    a2c4:	401a      	ands	r2, r3
    a2c6:	f847 2c04 	str.w	r2, [r7, #-4]
    a2ca:	e7d3      	b.n	a274 <__hexnan+0xbc>
    a2cc:	3e04      	subs	r6, #4
    a2ce:	e7d1      	b.n	a274 <__hexnan+0xbc>
    a2d0:	2004      	movs	r0, #4
    a2d2:	b007      	add	sp, #28
    a2d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000a2d8 <_getc_r>:
_getc_r():
    a2d8:	b538      	push	{r3, r4, r5, lr}
    a2da:	460c      	mov	r4, r1
    a2dc:	4605      	mov	r5, r0
    a2de:	b118      	cbz	r0, a2e8 <_getc_r+0x10>
    a2e0:	6983      	ldr	r3, [r0, #24]
    a2e2:	b90b      	cbnz	r3, a2e8 <_getc_r+0x10>
    a2e4:	f7ff fc16 	bl	9b14 <__sinit>
    a2e8:	4b18      	ldr	r3, [pc, #96]	; (a34c <_getc_r+0x74>)
    a2ea:	429c      	cmp	r4, r3
    a2ec:	d11e      	bne.n	a32c <_getc_r+0x54>
    a2ee:	686c      	ldr	r4, [r5, #4]
    a2f0:	6e63      	ldr	r3, [r4, #100]	; 0x64
    a2f2:	07d8      	lsls	r0, r3, #31
    a2f4:	d405      	bmi.n	a302 <_getc_r+0x2a>
    a2f6:	89a3      	ldrh	r3, [r4, #12]
    a2f8:	0599      	lsls	r1, r3, #22
    a2fa:	d402      	bmi.n	a302 <_getc_r+0x2a>
    a2fc:	6da0      	ldr	r0, [r4, #88]	; 0x58
    a2fe:	f7fc fa72 	bl	67e6 <__retarget_lock_acquire_recursive>
    a302:	6863      	ldr	r3, [r4, #4]
    a304:	3b01      	subs	r3, #1
    a306:	2b00      	cmp	r3, #0
    a308:	6063      	str	r3, [r4, #4]
    a30a:	da19      	bge.n	a340 <_getc_r+0x68>
    a30c:	4628      	mov	r0, r5
    a30e:	4621      	mov	r1, r4
    a310:	f001 f9b0 	bl	b674 <__srget_r>
    a314:	4605      	mov	r5, r0
    a316:	6e63      	ldr	r3, [r4, #100]	; 0x64
    a318:	07da      	lsls	r2, r3, #31
    a31a:	d405      	bmi.n	a328 <_getc_r+0x50>
    a31c:	89a3      	ldrh	r3, [r4, #12]
    a31e:	059b      	lsls	r3, r3, #22
    a320:	d402      	bmi.n	a328 <_getc_r+0x50>
    a322:	6da0      	ldr	r0, [r4, #88]	; 0x58
    a324:	f7fc fa60 	bl	67e8 <__retarget_lock_release_recursive>
    a328:	4628      	mov	r0, r5
    a32a:	bd38      	pop	{r3, r4, r5, pc}
    a32c:	4b08      	ldr	r3, [pc, #32]	; (a350 <_getc_r+0x78>)
    a32e:	429c      	cmp	r4, r3
    a330:	d101      	bne.n	a336 <_getc_r+0x5e>
    a332:	68ac      	ldr	r4, [r5, #8]
    a334:	e7dc      	b.n	a2f0 <_getc_r+0x18>
    a336:	4b07      	ldr	r3, [pc, #28]	; (a354 <_getc_r+0x7c>)
    a338:	429c      	cmp	r4, r3
    a33a:	bf08      	it	eq
    a33c:	68ec      	ldreq	r4, [r5, #12]
    a33e:	e7d7      	b.n	a2f0 <_getc_r+0x18>
    a340:	6823      	ldr	r3, [r4, #0]
    a342:	1c5a      	adds	r2, r3, #1
    a344:	6022      	str	r2, [r4, #0]
    a346:	781d      	ldrb	r5, [r3, #0]
    a348:	e7e5      	b.n	a316 <_getc_r+0x3e>
    a34a:	bf00      	nop
    a34c:	0000dc80 	.word	0x0000dc80
    a350:	0000dca0 	.word	0x0000dca0
    a354:	0000dc60 	.word	0x0000dc60

0000a358 <_localeconv_r>:
_localeconv_r():
    a358:	4800      	ldr	r0, [pc, #0]	; (a35c <_localeconv_r+0x4>)
    a35a:	4770      	bx	lr
    a35c:	10000308 	.word	0x10000308

0000a360 <__swhatbuf_r>:
__swhatbuf_r():
    a360:	b570      	push	{r4, r5, r6, lr}
    a362:	460e      	mov	r6, r1
    a364:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    a368:	2900      	cmp	r1, #0
    a36a:	b096      	sub	sp, #88	; 0x58
    a36c:	4614      	mov	r4, r2
    a36e:	461d      	mov	r5, r3
    a370:	da07      	bge.n	a382 <__swhatbuf_r+0x22>
    a372:	2300      	movs	r3, #0
    a374:	602b      	str	r3, [r5, #0]
    a376:	89b3      	ldrh	r3, [r6, #12]
    a378:	061a      	lsls	r2, r3, #24
    a37a:	d410      	bmi.n	a39e <__swhatbuf_r+0x3e>
    a37c:	f44f 6380 	mov.w	r3, #1024	; 0x400
    a380:	e00e      	b.n	a3a0 <__swhatbuf_r+0x40>
    a382:	466a      	mov	r2, sp
    a384:	f001 fb06 	bl	b994 <_fstat_r>
    a388:	2800      	cmp	r0, #0
    a38a:	dbf2      	blt.n	a372 <__swhatbuf_r+0x12>
    a38c:	9a01      	ldr	r2, [sp, #4]
    a38e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
    a392:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
    a396:	425a      	negs	r2, r3
    a398:	415a      	adcs	r2, r3
    a39a:	602a      	str	r2, [r5, #0]
    a39c:	e7ee      	b.n	a37c <__swhatbuf_r+0x1c>
    a39e:	2340      	movs	r3, #64	; 0x40
    a3a0:	2000      	movs	r0, #0
    a3a2:	6023      	str	r3, [r4, #0]
    a3a4:	b016      	add	sp, #88	; 0x58
    a3a6:	bd70      	pop	{r4, r5, r6, pc}

0000a3a8 <__smakebuf_r>:
__smakebuf_r():
    a3a8:	898b      	ldrh	r3, [r1, #12]
    a3aa:	b573      	push	{r0, r1, r4, r5, r6, lr}
    a3ac:	079d      	lsls	r5, r3, #30
    a3ae:	4606      	mov	r6, r0
    a3b0:	460c      	mov	r4, r1
    a3b2:	d507      	bpl.n	a3c4 <__smakebuf_r+0x1c>
    a3b4:	f104 0347 	add.w	r3, r4, #71	; 0x47
    a3b8:	6023      	str	r3, [r4, #0]
    a3ba:	6123      	str	r3, [r4, #16]
    a3bc:	2301      	movs	r3, #1
    a3be:	6163      	str	r3, [r4, #20]
    a3c0:	b002      	add	sp, #8
    a3c2:	bd70      	pop	{r4, r5, r6, pc}
    a3c4:	ab01      	add	r3, sp, #4
    a3c6:	466a      	mov	r2, sp
    a3c8:	f7ff ffca 	bl	a360 <__swhatbuf_r>
    a3cc:	9900      	ldr	r1, [sp, #0]
    a3ce:	4605      	mov	r5, r0
    a3d0:	4630      	mov	r0, r6
    a3d2:	f7fc fa99 	bl	6908 <_malloc_r>
    a3d6:	b948      	cbnz	r0, a3ec <__smakebuf_r+0x44>
    a3d8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    a3dc:	059a      	lsls	r2, r3, #22
    a3de:	d4ef      	bmi.n	a3c0 <__smakebuf_r+0x18>
    a3e0:	f023 0303 	bic.w	r3, r3, #3
    a3e4:	f043 0302 	orr.w	r3, r3, #2
    a3e8:	81a3      	strh	r3, [r4, #12]
    a3ea:	e7e3      	b.n	a3b4 <__smakebuf_r+0xc>
    a3ec:	4b0d      	ldr	r3, [pc, #52]	; (a424 <__smakebuf_r+0x7c>)
    a3ee:	62b3      	str	r3, [r6, #40]	; 0x28
    a3f0:	89a3      	ldrh	r3, [r4, #12]
    a3f2:	6020      	str	r0, [r4, #0]
    a3f4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    a3f8:	81a3      	strh	r3, [r4, #12]
    a3fa:	9b00      	ldr	r3, [sp, #0]
    a3fc:	6163      	str	r3, [r4, #20]
    a3fe:	9b01      	ldr	r3, [sp, #4]
    a400:	6120      	str	r0, [r4, #16]
    a402:	b15b      	cbz	r3, a41c <__smakebuf_r+0x74>
    a404:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    a408:	4630      	mov	r0, r6
    a40a:	f001 fad5 	bl	b9b8 <_isatty_r>
    a40e:	b128      	cbz	r0, a41c <__smakebuf_r+0x74>
    a410:	89a3      	ldrh	r3, [r4, #12]
    a412:	f023 0303 	bic.w	r3, r3, #3
    a416:	f043 0301 	orr.w	r3, r3, #1
    a41a:	81a3      	strh	r3, [r4, #12]
    a41c:	89a3      	ldrh	r3, [r4, #12]
    a41e:	431d      	orrs	r5, r3
    a420:	81a5      	strh	r5, [r4, #12]
    a422:	e7cd      	b.n	a3c0 <__smakebuf_r+0x18>
    a424:	00009aad 	.word	0x00009aad

0000a428 <__ascii_mbtowc>:
__ascii_mbtowc():
    a428:	b082      	sub	sp, #8
    a42a:	b901      	cbnz	r1, a42e <__ascii_mbtowc+0x6>
    a42c:	a901      	add	r1, sp, #4
    a42e:	b142      	cbz	r2, a442 <__ascii_mbtowc+0x1a>
    a430:	b14b      	cbz	r3, a446 <__ascii_mbtowc+0x1e>
    a432:	7813      	ldrb	r3, [r2, #0]
    a434:	600b      	str	r3, [r1, #0]
    a436:	7812      	ldrb	r2, [r2, #0]
    a438:	1c10      	adds	r0, r2, #0
    a43a:	bf18      	it	ne
    a43c:	2001      	movne	r0, #1
    a43e:	b002      	add	sp, #8
    a440:	4770      	bx	lr
    a442:	4610      	mov	r0, r2
    a444:	e7fb      	b.n	a43e <__ascii_mbtowc+0x16>
    a446:	f06f 0001 	mvn.w	r0, #1
    a44a:	e7f8      	b.n	a43e <__ascii_mbtowc+0x16>
    a44c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff

0000a450 <memchr>:
memchr():
    a450:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    a454:	2a10      	cmp	r2, #16
    a456:	db2b      	blt.n	a4b0 <memchr+0x60>
    a458:	f010 0f07 	tst.w	r0, #7
    a45c:	d008      	beq.n	a470 <memchr+0x20>
    a45e:	f810 3b01 	ldrb.w	r3, [r0], #1
    a462:	3a01      	subs	r2, #1
    a464:	428b      	cmp	r3, r1
    a466:	d02d      	beq.n	a4c4 <memchr+0x74>
    a468:	f010 0f07 	tst.w	r0, #7
    a46c:	b342      	cbz	r2, a4c0 <memchr+0x70>
    a46e:	d1f6      	bne.n	a45e <memchr+0xe>
    a470:	b4f0      	push	{r4, r5, r6, r7}
    a472:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
    a476:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
    a47a:	f022 0407 	bic.w	r4, r2, #7
    a47e:	f07f 0700 	mvns.w	r7, #0
    a482:	2300      	movs	r3, #0
    a484:	e8f0 5602 	ldrd	r5, r6, [r0], #8
    a488:	3c08      	subs	r4, #8
    a48a:	ea85 0501 	eor.w	r5, r5, r1
    a48e:	ea86 0601 	eor.w	r6, r6, r1
    a492:	fa85 f547 	uadd8	r5, r5, r7
    a496:	faa3 f587 	sel	r5, r3, r7
    a49a:	fa86 f647 	uadd8	r6, r6, r7
    a49e:	faa5 f687 	sel	r6, r5, r7
    a4a2:	b98e      	cbnz	r6, a4c8 <memchr+0x78>
    a4a4:	d1ee      	bne.n	a484 <memchr+0x34>
    a4a6:	bcf0      	pop	{r4, r5, r6, r7}
    a4a8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    a4ac:	f002 0207 	and.w	r2, r2, #7
    a4b0:	b132      	cbz	r2, a4c0 <memchr+0x70>
    a4b2:	f810 3b01 	ldrb.w	r3, [r0], #1
    a4b6:	3a01      	subs	r2, #1
    a4b8:	ea83 0301 	eor.w	r3, r3, r1
    a4bc:	b113      	cbz	r3, a4c4 <memchr+0x74>
    a4be:	d1f8      	bne.n	a4b2 <memchr+0x62>
    a4c0:	2000      	movs	r0, #0
    a4c2:	4770      	bx	lr
    a4c4:	3801      	subs	r0, #1
    a4c6:	4770      	bx	lr
    a4c8:	2d00      	cmp	r5, #0
    a4ca:	bf06      	itte	eq
    a4cc:	4635      	moveq	r5, r6
    a4ce:	3803      	subeq	r0, #3
    a4d0:	3807      	subne	r0, #7
    a4d2:	f015 0f01 	tst.w	r5, #1
    a4d6:	d107      	bne.n	a4e8 <memchr+0x98>
    a4d8:	3001      	adds	r0, #1
    a4da:	f415 7f80 	tst.w	r5, #256	; 0x100
    a4de:	bf02      	ittt	eq
    a4e0:	3001      	addeq	r0, #1
    a4e2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
    a4e6:	3001      	addeq	r0, #1
    a4e8:	bcf0      	pop	{r4, r5, r6, r7}
    a4ea:	3801      	subs	r0, #1
    a4ec:	4770      	bx	lr
    a4ee:	bf00      	nop

0000a4f0 <__malloc_lock>:
__malloc_lock():
    a4f0:	4801      	ldr	r0, [pc, #4]	; (a4f8 <__malloc_lock+0x8>)
    a4f2:	f7fc b978 	b.w	67e6 <__retarget_lock_acquire_recursive>
    a4f6:	bf00      	nop
    a4f8:	10001474 	.word	0x10001474

0000a4fc <__malloc_unlock>:
__malloc_unlock():
    a4fc:	4801      	ldr	r0, [pc, #4]	; (a504 <__malloc_unlock+0x8>)
    a4fe:	f7fc b973 	b.w	67e8 <__retarget_lock_release_recursive>
    a502:	bf00      	nop
    a504:	10001474 	.word	0x10001474

0000a508 <_Balloc>:
_Balloc():
    a508:	b570      	push	{r4, r5, r6, lr}
    a50a:	6a45      	ldr	r5, [r0, #36]	; 0x24
    a50c:	4604      	mov	r4, r0
    a50e:	460e      	mov	r6, r1
    a510:	b93d      	cbnz	r5, a522 <_Balloc+0x1a>
    a512:	2010      	movs	r0, #16
    a514:	f7fc f96a 	bl	67ec <malloc>
    a518:	e9c0 5501 	strd	r5, r5, [r0, #4]
    a51c:	6260      	str	r0, [r4, #36]	; 0x24
    a51e:	6005      	str	r5, [r0, #0]
    a520:	60c5      	str	r5, [r0, #12]
    a522:	6a65      	ldr	r5, [r4, #36]	; 0x24
    a524:	68eb      	ldr	r3, [r5, #12]
    a526:	b183      	cbz	r3, a54a <_Balloc+0x42>
    a528:	6a63      	ldr	r3, [r4, #36]	; 0x24
    a52a:	68db      	ldr	r3, [r3, #12]
    a52c:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
    a530:	b9b8      	cbnz	r0, a562 <_Balloc+0x5a>
    a532:	2101      	movs	r1, #1
    a534:	fa01 f506 	lsl.w	r5, r1, r6
    a538:	1d6a      	adds	r2, r5, #5
    a53a:	0092      	lsls	r2, r2, #2
    a53c:	4620      	mov	r0, r4
    a53e:	f000 fbdb 	bl	acf8 <_calloc_r>
    a542:	b160      	cbz	r0, a55e <_Balloc+0x56>
    a544:	e9c0 6501 	strd	r6, r5, [r0, #4]
    a548:	e00e      	b.n	a568 <_Balloc+0x60>
    a54a:	2221      	movs	r2, #33	; 0x21
    a54c:	2104      	movs	r1, #4
    a54e:	4620      	mov	r0, r4
    a550:	f000 fbd2 	bl	acf8 <_calloc_r>
    a554:	6a63      	ldr	r3, [r4, #36]	; 0x24
    a556:	60e8      	str	r0, [r5, #12]
    a558:	68db      	ldr	r3, [r3, #12]
    a55a:	2b00      	cmp	r3, #0
    a55c:	d1e4      	bne.n	a528 <_Balloc+0x20>
    a55e:	2000      	movs	r0, #0
    a560:	bd70      	pop	{r4, r5, r6, pc}
    a562:	6802      	ldr	r2, [r0, #0]
    a564:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
    a568:	2300      	movs	r3, #0
    a56a:	e9c0 3303 	strd	r3, r3, [r0, #12]
    a56e:	e7f7      	b.n	a560 <_Balloc+0x58>

0000a570 <_Bfree>:
_Bfree():
    a570:	b570      	push	{r4, r5, r6, lr}
    a572:	6a44      	ldr	r4, [r0, #36]	; 0x24
    a574:	4606      	mov	r6, r0
    a576:	460d      	mov	r5, r1
    a578:	b93c      	cbnz	r4, a58a <_Bfree+0x1a>
    a57a:	2010      	movs	r0, #16
    a57c:	f7fc f936 	bl	67ec <malloc>
    a580:	e9c0 4401 	strd	r4, r4, [r0, #4]
    a584:	6270      	str	r0, [r6, #36]	; 0x24
    a586:	6004      	str	r4, [r0, #0]
    a588:	60c4      	str	r4, [r0, #12]
    a58a:	b13d      	cbz	r5, a59c <_Bfree+0x2c>
    a58c:	6a73      	ldr	r3, [r6, #36]	; 0x24
    a58e:	686a      	ldr	r2, [r5, #4]
    a590:	68db      	ldr	r3, [r3, #12]
    a592:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
    a596:	6029      	str	r1, [r5, #0]
    a598:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
    a59c:	bd70      	pop	{r4, r5, r6, pc}

0000a59e <__multadd>:
__multadd():
    a59e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    a5a2:	690d      	ldr	r5, [r1, #16]
    a5a4:	461f      	mov	r7, r3
    a5a6:	4606      	mov	r6, r0
    a5a8:	460c      	mov	r4, r1
    a5aa:	f101 0c14 	add.w	ip, r1, #20
    a5ae:	2300      	movs	r3, #0
    a5b0:	f8dc 0000 	ldr.w	r0, [ip]
    a5b4:	b281      	uxth	r1, r0
    a5b6:	fb02 7101 	mla	r1, r2, r1, r7
    a5ba:	0c0f      	lsrs	r7, r1, #16
    a5bc:	0c00      	lsrs	r0, r0, #16
    a5be:	fb02 7000 	mla	r0, r2, r0, r7
    a5c2:	b289      	uxth	r1, r1
    a5c4:	3301      	adds	r3, #1
    a5c6:	eb01 4100 	add.w	r1, r1, r0, lsl #16
    a5ca:	429d      	cmp	r5, r3
    a5cc:	ea4f 4710 	mov.w	r7, r0, lsr #16
    a5d0:	f84c 1b04 	str.w	r1, [ip], #4
    a5d4:	dcec      	bgt.n	a5b0 <__multadd+0x12>
    a5d6:	b1d7      	cbz	r7, a60e <__multadd+0x70>
    a5d8:	68a3      	ldr	r3, [r4, #8]
    a5da:	42ab      	cmp	r3, r5
    a5dc:	dc12      	bgt.n	a604 <__multadd+0x66>
    a5de:	6861      	ldr	r1, [r4, #4]
    a5e0:	4630      	mov	r0, r6
    a5e2:	3101      	adds	r1, #1
    a5e4:	f7ff ff90 	bl	a508 <_Balloc>
    a5e8:	6922      	ldr	r2, [r4, #16]
    a5ea:	3202      	adds	r2, #2
    a5ec:	f104 010c 	add.w	r1, r4, #12
    a5f0:	4680      	mov	r8, r0
    a5f2:	0092      	lsls	r2, r2, #2
    a5f4:	300c      	adds	r0, #12
    a5f6:	f7fc f909 	bl	680c <memcpy>
    a5fa:	4621      	mov	r1, r4
    a5fc:	4630      	mov	r0, r6
    a5fe:	f7ff ffb7 	bl	a570 <_Bfree>
    a602:	4644      	mov	r4, r8
    a604:	eb04 0385 	add.w	r3, r4, r5, lsl #2
    a608:	3501      	adds	r5, #1
    a60a:	615f      	str	r7, [r3, #20]
    a60c:	6125      	str	r5, [r4, #16]
    a60e:	4620      	mov	r0, r4
    a610:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0000a614 <__s2b>:
__s2b():
    a614:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    a618:	460c      	mov	r4, r1
    a61a:	4615      	mov	r5, r2
    a61c:	461f      	mov	r7, r3
    a61e:	2209      	movs	r2, #9
    a620:	3308      	adds	r3, #8
    a622:	4606      	mov	r6, r0
    a624:	fb93 f3f2 	sdiv	r3, r3, r2
    a628:	2100      	movs	r1, #0
    a62a:	2201      	movs	r2, #1
    a62c:	429a      	cmp	r2, r3
    a62e:	db20      	blt.n	a672 <__s2b+0x5e>
    a630:	4630      	mov	r0, r6
    a632:	f7ff ff69 	bl	a508 <_Balloc>
    a636:	9b08      	ldr	r3, [sp, #32]
    a638:	6143      	str	r3, [r0, #20]
    a63a:	2d09      	cmp	r5, #9
    a63c:	f04f 0301 	mov.w	r3, #1
    a640:	6103      	str	r3, [r0, #16]
    a642:	dd19      	ble.n	a678 <__s2b+0x64>
    a644:	f104 0909 	add.w	r9, r4, #9
    a648:	46c8      	mov	r8, r9
    a64a:	442c      	add	r4, r5
    a64c:	f818 3b01 	ldrb.w	r3, [r8], #1
    a650:	4601      	mov	r1, r0
    a652:	3b30      	subs	r3, #48	; 0x30
    a654:	220a      	movs	r2, #10
    a656:	4630      	mov	r0, r6
    a658:	f7ff ffa1 	bl	a59e <__multadd>
    a65c:	45a0      	cmp	r8, r4
    a65e:	d1f5      	bne.n	a64c <__s2b+0x38>
    a660:	f1a5 0408 	sub.w	r4, r5, #8
    a664:	444c      	add	r4, r9
    a666:	1b2d      	subs	r5, r5, r4
    a668:	1963      	adds	r3, r4, r5
    a66a:	42bb      	cmp	r3, r7
    a66c:	db07      	blt.n	a67e <__s2b+0x6a>
    a66e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    a672:	0052      	lsls	r2, r2, #1
    a674:	3101      	adds	r1, #1
    a676:	e7d9      	b.n	a62c <__s2b+0x18>
    a678:	340a      	adds	r4, #10
    a67a:	2509      	movs	r5, #9
    a67c:	e7f3      	b.n	a666 <__s2b+0x52>
    a67e:	f814 3b01 	ldrb.w	r3, [r4], #1
    a682:	4601      	mov	r1, r0
    a684:	3b30      	subs	r3, #48	; 0x30
    a686:	220a      	movs	r2, #10
    a688:	4630      	mov	r0, r6
    a68a:	f7ff ff88 	bl	a59e <__multadd>
    a68e:	e7eb      	b.n	a668 <__s2b+0x54>

0000a690 <__hi0bits>:
__hi0bits():
    a690:	0c02      	lsrs	r2, r0, #16
    a692:	0412      	lsls	r2, r2, #16
    a694:	4603      	mov	r3, r0
    a696:	b9ca      	cbnz	r2, a6cc <__hi0bits+0x3c>
    a698:	0403      	lsls	r3, r0, #16
    a69a:	2010      	movs	r0, #16
    a69c:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
    a6a0:	bf04      	itt	eq
    a6a2:	021b      	lsleq	r3, r3, #8
    a6a4:	3008      	addeq	r0, #8
    a6a6:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
    a6aa:	bf04      	itt	eq
    a6ac:	011b      	lsleq	r3, r3, #4
    a6ae:	3004      	addeq	r0, #4
    a6b0:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
    a6b4:	bf04      	itt	eq
    a6b6:	009b      	lsleq	r3, r3, #2
    a6b8:	3002      	addeq	r0, #2
    a6ba:	2b00      	cmp	r3, #0
    a6bc:	db05      	blt.n	a6ca <__hi0bits+0x3a>
    a6be:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
    a6c2:	f100 0001 	add.w	r0, r0, #1
    a6c6:	bf08      	it	eq
    a6c8:	2020      	moveq	r0, #32
    a6ca:	4770      	bx	lr
    a6cc:	2000      	movs	r0, #0
    a6ce:	e7e5      	b.n	a69c <__hi0bits+0xc>

0000a6d0 <__lo0bits>:
__lo0bits():
    a6d0:	6803      	ldr	r3, [r0, #0]
    a6d2:	f013 0207 	ands.w	r2, r3, #7
    a6d6:	4601      	mov	r1, r0
    a6d8:	d00b      	beq.n	a6f2 <__lo0bits+0x22>
    a6da:	07da      	lsls	r2, r3, #31
    a6dc:	d424      	bmi.n	a728 <__lo0bits+0x58>
    a6de:	0798      	lsls	r0, r3, #30
    a6e0:	bf49      	itett	mi
    a6e2:	085b      	lsrmi	r3, r3, #1
    a6e4:	089b      	lsrpl	r3, r3, #2
    a6e6:	2001      	movmi	r0, #1
    a6e8:	600b      	strmi	r3, [r1, #0]
    a6ea:	bf5c      	itt	pl
    a6ec:	600b      	strpl	r3, [r1, #0]
    a6ee:	2002      	movpl	r0, #2
    a6f0:	4770      	bx	lr
    a6f2:	b298      	uxth	r0, r3
    a6f4:	b9b0      	cbnz	r0, a724 <__lo0bits+0x54>
    a6f6:	0c1b      	lsrs	r3, r3, #16
    a6f8:	2010      	movs	r0, #16
    a6fa:	f013 0fff 	tst.w	r3, #255	; 0xff
    a6fe:	bf04      	itt	eq
    a700:	0a1b      	lsreq	r3, r3, #8
    a702:	3008      	addeq	r0, #8
    a704:	071a      	lsls	r2, r3, #28
    a706:	bf04      	itt	eq
    a708:	091b      	lsreq	r3, r3, #4
    a70a:	3004      	addeq	r0, #4
    a70c:	079a      	lsls	r2, r3, #30
    a70e:	bf04      	itt	eq
    a710:	089b      	lsreq	r3, r3, #2
    a712:	3002      	addeq	r0, #2
    a714:	07da      	lsls	r2, r3, #31
    a716:	d403      	bmi.n	a720 <__lo0bits+0x50>
    a718:	085b      	lsrs	r3, r3, #1
    a71a:	f100 0001 	add.w	r0, r0, #1
    a71e:	d005      	beq.n	a72c <__lo0bits+0x5c>
    a720:	600b      	str	r3, [r1, #0]
    a722:	4770      	bx	lr
    a724:	4610      	mov	r0, r2
    a726:	e7e8      	b.n	a6fa <__lo0bits+0x2a>
    a728:	2000      	movs	r0, #0
    a72a:	4770      	bx	lr
    a72c:	2020      	movs	r0, #32
    a72e:	4770      	bx	lr

0000a730 <__i2b>:
__i2b():
    a730:	b510      	push	{r4, lr}
    a732:	460c      	mov	r4, r1
    a734:	2101      	movs	r1, #1
    a736:	f7ff fee7 	bl	a508 <_Balloc>
    a73a:	2201      	movs	r2, #1
    a73c:	6144      	str	r4, [r0, #20]
    a73e:	6102      	str	r2, [r0, #16]
    a740:	bd10      	pop	{r4, pc}

0000a742 <__multiply>:
__multiply():
    a742:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a746:	4690      	mov	r8, r2
    a748:	690a      	ldr	r2, [r1, #16]
    a74a:	f8d8 3010 	ldr.w	r3, [r8, #16]
    a74e:	429a      	cmp	r2, r3
    a750:	bfb8      	it	lt
    a752:	460b      	movlt	r3, r1
    a754:	460c      	mov	r4, r1
    a756:	bfbc      	itt	lt
    a758:	4644      	movlt	r4, r8
    a75a:	4698      	movlt	r8, r3
    a75c:	6927      	ldr	r7, [r4, #16]
    a75e:	f8d8 9010 	ldr.w	r9, [r8, #16]
    a762:	68a3      	ldr	r3, [r4, #8]
    a764:	6861      	ldr	r1, [r4, #4]
    a766:	eb07 0609 	add.w	r6, r7, r9
    a76a:	42b3      	cmp	r3, r6
    a76c:	bfb8      	it	lt
    a76e:	3101      	addlt	r1, #1
    a770:	f7ff feca 	bl	a508 <_Balloc>
    a774:	f100 0514 	add.w	r5, r0, #20
    a778:	eb05 0e86 	add.w	lr, r5, r6, lsl #2
    a77c:	462b      	mov	r3, r5
    a77e:	2200      	movs	r2, #0
    a780:	4573      	cmp	r3, lr
    a782:	d316      	bcc.n	a7b2 <__multiply+0x70>
    a784:	f104 0314 	add.w	r3, r4, #20
    a788:	f108 0214 	add.w	r2, r8, #20
    a78c:	eb03 0787 	add.w	r7, r3, r7, lsl #2
    a790:	eb02 0389 	add.w	r3, r2, r9, lsl #2
    a794:	9300      	str	r3, [sp, #0]
    a796:	9b00      	ldr	r3, [sp, #0]
    a798:	9201      	str	r2, [sp, #4]
    a79a:	4293      	cmp	r3, r2
    a79c:	d80c      	bhi.n	a7b8 <__multiply+0x76>
    a79e:	2e00      	cmp	r6, #0
    a7a0:	dd03      	ble.n	a7aa <__multiply+0x68>
    a7a2:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
    a7a6:	2b00      	cmp	r3, #0
    a7a8:	d059      	beq.n	a85e <__multiply+0x11c>
    a7aa:	6106      	str	r6, [r0, #16]
    a7ac:	b003      	add	sp, #12
    a7ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a7b2:	f843 2b04 	str.w	r2, [r3], #4
    a7b6:	e7e3      	b.n	a780 <__multiply+0x3e>
    a7b8:	f8b2 a000 	ldrh.w	sl, [r2]
    a7bc:	f1ba 0f00 	cmp.w	sl, #0
    a7c0:	d023      	beq.n	a80a <__multiply+0xc8>
    a7c2:	f104 0914 	add.w	r9, r4, #20
    a7c6:	46ac      	mov	ip, r5
    a7c8:	f04f 0800 	mov.w	r8, #0
    a7cc:	f859 1b04 	ldr.w	r1, [r9], #4
    a7d0:	f8dc b000 	ldr.w	fp, [ip]
    a7d4:	b28b      	uxth	r3, r1
    a7d6:	fa1f fb8b 	uxth.w	fp, fp
    a7da:	fb0a b303 	mla	r3, sl, r3, fp
    a7de:	ea4f 4b11 	mov.w	fp, r1, lsr #16
    a7e2:	f8dc 1000 	ldr.w	r1, [ip]
    a7e6:	4443      	add	r3, r8
    a7e8:	ea4f 4811 	mov.w	r8, r1, lsr #16
    a7ec:	fb0a 810b 	mla	r1, sl, fp, r8
    a7f0:	eb01 4113 	add.w	r1, r1, r3, lsr #16
    a7f4:	b29b      	uxth	r3, r3
    a7f6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
    a7fa:	454f      	cmp	r7, r9
    a7fc:	ea4f 4811 	mov.w	r8, r1, lsr #16
    a800:	f84c 3b04 	str.w	r3, [ip], #4
    a804:	d8e2      	bhi.n	a7cc <__multiply+0x8a>
    a806:	f8cc 8000 	str.w	r8, [ip]
    a80a:	9b01      	ldr	r3, [sp, #4]
    a80c:	f8b3 9002 	ldrh.w	r9, [r3, #2]
    a810:	3204      	adds	r2, #4
    a812:	f1b9 0f00 	cmp.w	r9, #0
    a816:	d020      	beq.n	a85a <__multiply+0x118>
    a818:	682b      	ldr	r3, [r5, #0]
    a81a:	f104 0814 	add.w	r8, r4, #20
    a81e:	46ac      	mov	ip, r5
    a820:	f04f 0a00 	mov.w	sl, #0
    a824:	f8b8 1000 	ldrh.w	r1, [r8]
    a828:	f8bc b002 	ldrh.w	fp, [ip, #2]
    a82c:	fb09 b101 	mla	r1, r9, r1, fp
    a830:	448a      	add	sl, r1
    a832:	b29b      	uxth	r3, r3
    a834:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
    a838:	f84c 3b04 	str.w	r3, [ip], #4
    a83c:	f858 3b04 	ldr.w	r3, [r8], #4
    a840:	f8bc 1000 	ldrh.w	r1, [ip]
    a844:	0c1b      	lsrs	r3, r3, #16
    a846:	fb09 1303 	mla	r3, r9, r3, r1
    a84a:	eb03 431a 	add.w	r3, r3, sl, lsr #16
    a84e:	4547      	cmp	r7, r8
    a850:	ea4f 4a13 	mov.w	sl, r3, lsr #16
    a854:	d8e6      	bhi.n	a824 <__multiply+0xe2>
    a856:	f8cc 3000 	str.w	r3, [ip]
    a85a:	3504      	adds	r5, #4
    a85c:	e79b      	b.n	a796 <__multiply+0x54>
    a85e:	3e01      	subs	r6, #1
    a860:	e79d      	b.n	a79e <__multiply+0x5c>
    a862:	Address 0x000000000000a862 is out of bounds.


0000a864 <__pow5mult>:
__pow5mult():
    a864:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    a868:	4615      	mov	r5, r2
    a86a:	f012 0203 	ands.w	r2, r2, #3
    a86e:	4606      	mov	r6, r0
    a870:	460f      	mov	r7, r1
    a872:	d007      	beq.n	a884 <__pow5mult+0x20>
    a874:	3a01      	subs	r2, #1
    a876:	4c21      	ldr	r4, [pc, #132]	; (a8fc <__pow5mult+0x98>)
    a878:	2300      	movs	r3, #0
    a87a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
    a87e:	f7ff fe8e 	bl	a59e <__multadd>
    a882:	4607      	mov	r7, r0
    a884:	10ad      	asrs	r5, r5, #2
    a886:	d035      	beq.n	a8f4 <__pow5mult+0x90>
    a888:	6a74      	ldr	r4, [r6, #36]	; 0x24
    a88a:	b93c      	cbnz	r4, a89c <__pow5mult+0x38>
    a88c:	2010      	movs	r0, #16
    a88e:	f7fb ffad 	bl	67ec <malloc>
    a892:	e9c0 4401 	strd	r4, r4, [r0, #4]
    a896:	6270      	str	r0, [r6, #36]	; 0x24
    a898:	6004      	str	r4, [r0, #0]
    a89a:	60c4      	str	r4, [r0, #12]
    a89c:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
    a8a0:	f8d8 4008 	ldr.w	r4, [r8, #8]
    a8a4:	b94c      	cbnz	r4, a8ba <__pow5mult+0x56>
    a8a6:	f240 2171 	movw	r1, #625	; 0x271
    a8aa:	4630      	mov	r0, r6
    a8ac:	f7ff ff40 	bl	a730 <__i2b>
    a8b0:	2300      	movs	r3, #0
    a8b2:	f8c8 0008 	str.w	r0, [r8, #8]
    a8b6:	4604      	mov	r4, r0
    a8b8:	6003      	str	r3, [r0, #0]
    a8ba:	f04f 0800 	mov.w	r8, #0
    a8be:	07eb      	lsls	r3, r5, #31
    a8c0:	d50a      	bpl.n	a8d8 <__pow5mult+0x74>
    a8c2:	4639      	mov	r1, r7
    a8c4:	4622      	mov	r2, r4
    a8c6:	4630      	mov	r0, r6
    a8c8:	f7ff ff3b 	bl	a742 <__multiply>
    a8cc:	4639      	mov	r1, r7
    a8ce:	4681      	mov	r9, r0
    a8d0:	4630      	mov	r0, r6
    a8d2:	f7ff fe4d 	bl	a570 <_Bfree>
    a8d6:	464f      	mov	r7, r9
    a8d8:	106d      	asrs	r5, r5, #1
    a8da:	d00b      	beq.n	a8f4 <__pow5mult+0x90>
    a8dc:	6820      	ldr	r0, [r4, #0]
    a8de:	b938      	cbnz	r0, a8f0 <__pow5mult+0x8c>
    a8e0:	4622      	mov	r2, r4
    a8e2:	4621      	mov	r1, r4
    a8e4:	4630      	mov	r0, r6
    a8e6:	f7ff ff2c 	bl	a742 <__multiply>
    a8ea:	6020      	str	r0, [r4, #0]
    a8ec:	f8c0 8000 	str.w	r8, [r0]
    a8f0:	4604      	mov	r4, r0
    a8f2:	e7e4      	b.n	a8be <__pow5mult+0x5a>
    a8f4:	4638      	mov	r0, r7
    a8f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    a8fa:	bf00      	nop
    a8fc:	0000ddc8 	.word	0x0000ddc8

0000a900 <__lshift>:
__lshift():
    a900:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    a904:	460c      	mov	r4, r1
    a906:	ea4f 1a62 	mov.w	sl, r2, asr #5
    a90a:	6923      	ldr	r3, [r4, #16]
    a90c:	6849      	ldr	r1, [r1, #4]
    a90e:	eb0a 0903 	add.w	r9, sl, r3
    a912:	68a3      	ldr	r3, [r4, #8]
    a914:	4607      	mov	r7, r0
    a916:	4616      	mov	r6, r2
    a918:	f109 0501 	add.w	r5, r9, #1
    a91c:	42ab      	cmp	r3, r5
    a91e:	db33      	blt.n	a988 <__lshift+0x88>
    a920:	4638      	mov	r0, r7
    a922:	f7ff fdf1 	bl	a508 <_Balloc>
    a926:	2300      	movs	r3, #0
    a928:	4680      	mov	r8, r0
    a92a:	f100 0114 	add.w	r1, r0, #20
    a92e:	f100 0210 	add.w	r2, r0, #16
    a932:	4618      	mov	r0, r3
    a934:	4553      	cmp	r3, sl
    a936:	db2a      	blt.n	a98e <__lshift+0x8e>
    a938:	6920      	ldr	r0, [r4, #16]
    a93a:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
    a93e:	f104 0314 	add.w	r3, r4, #20
    a942:	f016 021f 	ands.w	r2, r6, #31
    a946:	eb01 018a 	add.w	r1, r1, sl, lsl #2
    a94a:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
    a94e:	d022      	beq.n	a996 <__lshift+0x96>
    a950:	f1c2 0e20 	rsb	lr, r2, #32
    a954:	2000      	movs	r0, #0
    a956:	681e      	ldr	r6, [r3, #0]
    a958:	4096      	lsls	r6, r2
    a95a:	4330      	orrs	r0, r6
    a95c:	f841 0b04 	str.w	r0, [r1], #4
    a960:	f853 0b04 	ldr.w	r0, [r3], #4
    a964:	459c      	cmp	ip, r3
    a966:	fa20 f00e 	lsr.w	r0, r0, lr
    a96a:	d8f4      	bhi.n	a956 <__lshift+0x56>
    a96c:	6008      	str	r0, [r1, #0]
    a96e:	b108      	cbz	r0, a974 <__lshift+0x74>
    a970:	f109 0502 	add.w	r5, r9, #2
    a974:	3d01      	subs	r5, #1
    a976:	4638      	mov	r0, r7
    a978:	f8c8 5010 	str.w	r5, [r8, #16]
    a97c:	4621      	mov	r1, r4
    a97e:	f7ff fdf7 	bl	a570 <_Bfree>
    a982:	4640      	mov	r0, r8
    a984:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    a988:	3101      	adds	r1, #1
    a98a:	005b      	lsls	r3, r3, #1
    a98c:	e7c6      	b.n	a91c <__lshift+0x1c>
    a98e:	f842 0f04 	str.w	r0, [r2, #4]!
    a992:	3301      	adds	r3, #1
    a994:	e7ce      	b.n	a934 <__lshift+0x34>
    a996:	3904      	subs	r1, #4
    a998:	f853 2b04 	ldr.w	r2, [r3], #4
    a99c:	f841 2f04 	str.w	r2, [r1, #4]!
    a9a0:	459c      	cmp	ip, r3
    a9a2:	d8f9      	bhi.n	a998 <__lshift+0x98>
    a9a4:	e7e6      	b.n	a974 <__lshift+0x74>

0000a9a6 <__mcmp>:
__mcmp():
    a9a6:	6903      	ldr	r3, [r0, #16]
    a9a8:	690a      	ldr	r2, [r1, #16]
    a9aa:	1a9b      	subs	r3, r3, r2
    a9ac:	b530      	push	{r4, r5, lr}
    a9ae:	d10c      	bne.n	a9ca <__mcmp+0x24>
    a9b0:	0092      	lsls	r2, r2, #2
    a9b2:	3014      	adds	r0, #20
    a9b4:	3114      	adds	r1, #20
    a9b6:	1884      	adds	r4, r0, r2
    a9b8:	4411      	add	r1, r2
    a9ba:	f854 5d04 	ldr.w	r5, [r4, #-4]!
    a9be:	f851 2d04 	ldr.w	r2, [r1, #-4]!
    a9c2:	4295      	cmp	r5, r2
    a9c4:	d003      	beq.n	a9ce <__mcmp+0x28>
    a9c6:	d305      	bcc.n	a9d4 <__mcmp+0x2e>
    a9c8:	2301      	movs	r3, #1
    a9ca:	4618      	mov	r0, r3
    a9cc:	bd30      	pop	{r4, r5, pc}
    a9ce:	42a0      	cmp	r0, r4
    a9d0:	d3f3      	bcc.n	a9ba <__mcmp+0x14>
    a9d2:	e7fa      	b.n	a9ca <__mcmp+0x24>
    a9d4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    a9d8:	e7f7      	b.n	a9ca <__mcmp+0x24>

0000a9da <__mdiff>:
__mdiff():
    a9da:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    a9de:	460d      	mov	r5, r1
    a9e0:	4607      	mov	r7, r0
    a9e2:	4611      	mov	r1, r2
    a9e4:	4628      	mov	r0, r5
    a9e6:	4614      	mov	r4, r2
    a9e8:	f7ff ffdd 	bl	a9a6 <__mcmp>
    a9ec:	1e06      	subs	r6, r0, #0
    a9ee:	d108      	bne.n	aa02 <__mdiff+0x28>
    a9f0:	4631      	mov	r1, r6
    a9f2:	4638      	mov	r0, r7
    a9f4:	f7ff fd88 	bl	a508 <_Balloc>
    a9f8:	2301      	movs	r3, #1
    a9fa:	e9c0 3604 	strd	r3, r6, [r0, #16]
    a9fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    aa02:	bfa4      	itt	ge
    aa04:	4623      	movge	r3, r4
    aa06:	462c      	movge	r4, r5
    aa08:	4638      	mov	r0, r7
    aa0a:	6861      	ldr	r1, [r4, #4]
    aa0c:	bfa6      	itte	ge
    aa0e:	461d      	movge	r5, r3
    aa10:	2600      	movge	r6, #0
    aa12:	2601      	movlt	r6, #1
    aa14:	f7ff fd78 	bl	a508 <_Balloc>
    aa18:	692b      	ldr	r3, [r5, #16]
    aa1a:	60c6      	str	r6, [r0, #12]
    aa1c:	6926      	ldr	r6, [r4, #16]
    aa1e:	f105 0914 	add.w	r9, r5, #20
    aa22:	f104 0214 	add.w	r2, r4, #20
    aa26:	eb02 0786 	add.w	r7, r2, r6, lsl #2
    aa2a:	eb09 0883 	add.w	r8, r9, r3, lsl #2
    aa2e:	f100 0514 	add.w	r5, r0, #20
    aa32:	f04f 0e00 	mov.w	lr, #0
    aa36:	f852 ab04 	ldr.w	sl, [r2], #4
    aa3a:	f859 4b04 	ldr.w	r4, [r9], #4
    aa3e:	fa1e f18a 	uxtah	r1, lr, sl
    aa42:	b2a3      	uxth	r3, r4
    aa44:	1ac9      	subs	r1, r1, r3
    aa46:	0c23      	lsrs	r3, r4, #16
    aa48:	ebc3 431a 	rsb	r3, r3, sl, lsr #16
    aa4c:	eb03 4321 	add.w	r3, r3, r1, asr #16
    aa50:	b289      	uxth	r1, r1
    aa52:	ea4f 4e23 	mov.w	lr, r3, asr #16
    aa56:	45c8      	cmp	r8, r9
    aa58:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
    aa5c:	4694      	mov	ip, r2
    aa5e:	f845 3b04 	str.w	r3, [r5], #4
    aa62:	d8e8      	bhi.n	aa36 <__mdiff+0x5c>
    aa64:	45bc      	cmp	ip, r7
    aa66:	d304      	bcc.n	aa72 <__mdiff+0x98>
    aa68:	f855 3d04 	ldr.w	r3, [r5, #-4]!
    aa6c:	b183      	cbz	r3, aa90 <__mdiff+0xb6>
    aa6e:	6106      	str	r6, [r0, #16]
    aa70:	e7c5      	b.n	a9fe <__mdiff+0x24>
    aa72:	f85c 1b04 	ldr.w	r1, [ip], #4
    aa76:	fa1e f381 	uxtah	r3, lr, r1
    aa7a:	141a      	asrs	r2, r3, #16
    aa7c:	eb02 4211 	add.w	r2, r2, r1, lsr #16
    aa80:	b29b      	uxth	r3, r3
    aa82:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
    aa86:	ea4f 4e22 	mov.w	lr, r2, asr #16
    aa8a:	f845 3b04 	str.w	r3, [r5], #4
    aa8e:	e7e9      	b.n	aa64 <__mdiff+0x8a>
    aa90:	3e01      	subs	r6, #1
    aa92:	e7e9      	b.n	aa68 <__mdiff+0x8e>

0000aa94 <__ulp>:
__ulp():
    aa94:	4b11      	ldr	r3, [pc, #68]	; (aadc <__ulp+0x48>)
    aa96:	ee10 2a90 	vmov	r2, s1
    aa9a:	401a      	ands	r2, r3
    aa9c:	f1a2 7350 	sub.w	r3, r2, #54525952	; 0x3400000
    aaa0:	2b00      	cmp	r3, #0
    aaa2:	dd04      	ble.n	aaae <__ulp+0x1a>
    aaa4:	2000      	movs	r0, #0
    aaa6:	4619      	mov	r1, r3
    aaa8:	ec41 0b10 	vmov	d0, r0, r1
    aaac:	4770      	bx	lr
    aaae:	425b      	negs	r3, r3
    aab0:	151b      	asrs	r3, r3, #20
    aab2:	2b13      	cmp	r3, #19
    aab4:	f04f 0000 	mov.w	r0, #0
    aab8:	f04f 0100 	mov.w	r1, #0
    aabc:	dc04      	bgt.n	aac8 <__ulp+0x34>
    aabe:	f44f 2200 	mov.w	r2, #524288	; 0x80000
    aac2:	fa42 f103 	asr.w	r1, r2, r3
    aac6:	e7ef      	b.n	aaa8 <__ulp+0x14>
    aac8:	3b14      	subs	r3, #20
    aaca:	2b1e      	cmp	r3, #30
    aacc:	bfda      	itte	le
    aace:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
    aad2:	fa22 f303 	lsrle.w	r3, r2, r3
    aad6:	2301      	movgt	r3, #1
    aad8:	4618      	mov	r0, r3
    aada:	e7e5      	b.n	aaa8 <__ulp+0x14>
    aadc:	7ff00000 	.word	0x7ff00000

0000aae0 <__b2d>:
__b2d():
    aae0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    aae2:	6905      	ldr	r5, [r0, #16]
    aae4:	f100 0714 	add.w	r7, r0, #20
    aae8:	eb07 0585 	add.w	r5, r7, r5, lsl #2
    aaec:	1f2e      	subs	r6, r5, #4
    aaee:	f855 4c04 	ldr.w	r4, [r5, #-4]
    aaf2:	4620      	mov	r0, r4
    aaf4:	f7ff fdcc 	bl	a690 <__hi0bits>
    aaf8:	f1c0 0320 	rsb	r3, r0, #32
    aafc:	280a      	cmp	r0, #10
    aafe:	600b      	str	r3, [r1, #0]
    ab00:	f8df c078 	ldr.w	ip, [pc, #120]	; ab7c <__b2d+0x9c>
    ab04:	dc14      	bgt.n	ab30 <__b2d+0x50>
    ab06:	f1c0 0e0b 	rsb	lr, r0, #11
    ab0a:	fa24 f10e 	lsr.w	r1, r4, lr
    ab0e:	42b7      	cmp	r7, r6
    ab10:	ea41 030c 	orr.w	r3, r1, ip
    ab14:	bf34      	ite	cc
    ab16:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
    ab1a:	2100      	movcs	r1, #0
    ab1c:	3015      	adds	r0, #21
    ab1e:	fa04 f000 	lsl.w	r0, r4, r0
    ab22:	fa21 f10e 	lsr.w	r1, r1, lr
    ab26:	ea40 0201 	orr.w	r2, r0, r1
    ab2a:	ec43 2b10 	vmov	d0, r2, r3
    ab2e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    ab30:	42b7      	cmp	r7, r6
    ab32:	bf3a      	itte	cc
    ab34:	f1a5 0608 	subcc.w	r6, r5, #8
    ab38:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
    ab3c:	2100      	movcs	r1, #0
    ab3e:	380b      	subs	r0, #11
    ab40:	d017      	beq.n	ab72 <__b2d+0x92>
    ab42:	f1c0 0c20 	rsb	ip, r0, #32
    ab46:	fa04 f500 	lsl.w	r5, r4, r0
    ab4a:	42be      	cmp	r6, r7
    ab4c:	fa21 f40c 	lsr.w	r4, r1, ip
    ab50:	ea45 0504 	orr.w	r5, r5, r4
    ab54:	bf8c      	ite	hi
    ab56:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
    ab5a:	2400      	movls	r4, #0
    ab5c:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
    ab60:	fa01 f000 	lsl.w	r0, r1, r0
    ab64:	fa24 f40c 	lsr.w	r4, r4, ip
    ab68:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
    ab6c:	ea40 0204 	orr.w	r2, r0, r4
    ab70:	e7db      	b.n	ab2a <__b2d+0x4a>
    ab72:	ea44 030c 	orr.w	r3, r4, ip
    ab76:	460a      	mov	r2, r1
    ab78:	e7d7      	b.n	ab2a <__b2d+0x4a>
    ab7a:	bf00      	nop
    ab7c:	3ff00000 	.word	0x3ff00000

0000ab80 <__d2b>:
__d2b():
    ab80:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    ab84:	460e      	mov	r6, r1
    ab86:	2101      	movs	r1, #1
    ab88:	ec59 8b10 	vmov	r8, r9, d0
    ab8c:	4615      	mov	r5, r2
    ab8e:	f7ff fcbb 	bl	a508 <_Balloc>
    ab92:	f3c9 540a 	ubfx	r4, r9, #20, #11
    ab96:	4607      	mov	r7, r0
    ab98:	f3c9 0313 	ubfx	r3, r9, #0, #20
    ab9c:	bb2c      	cbnz	r4, abea <__d2b+0x6a>
    ab9e:	9301      	str	r3, [sp, #4]
    aba0:	f1b8 0300 	subs.w	r3, r8, #0
    aba4:	d026      	beq.n	abf4 <__d2b+0x74>
    aba6:	4668      	mov	r0, sp
    aba8:	9300      	str	r3, [sp, #0]
    abaa:	f7ff fd91 	bl	a6d0 <__lo0bits>
    abae:	9900      	ldr	r1, [sp, #0]
    abb0:	b1f0      	cbz	r0, abf0 <__d2b+0x70>
    abb2:	9a01      	ldr	r2, [sp, #4]
    abb4:	f1c0 0320 	rsb	r3, r0, #32
    abb8:	fa02 f303 	lsl.w	r3, r2, r3
    abbc:	430b      	orrs	r3, r1
    abbe:	40c2      	lsrs	r2, r0
    abc0:	617b      	str	r3, [r7, #20]
    abc2:	9201      	str	r2, [sp, #4]
    abc4:	9b01      	ldr	r3, [sp, #4]
    abc6:	61bb      	str	r3, [r7, #24]
    abc8:	2b00      	cmp	r3, #0
    abca:	bf14      	ite	ne
    abcc:	2102      	movne	r1, #2
    abce:	2101      	moveq	r1, #1
    abd0:	6139      	str	r1, [r7, #16]
    abd2:	b1c4      	cbz	r4, ac06 <__d2b+0x86>
    abd4:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
    abd8:	4404      	add	r4, r0
    abda:	6034      	str	r4, [r6, #0]
    abdc:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
    abe0:	6028      	str	r0, [r5, #0]
    abe2:	4638      	mov	r0, r7
    abe4:	b003      	add	sp, #12
    abe6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    abea:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
    abee:	e7d6      	b.n	ab9e <__d2b+0x1e>
    abf0:	6179      	str	r1, [r7, #20]
    abf2:	e7e7      	b.n	abc4 <__d2b+0x44>
    abf4:	a801      	add	r0, sp, #4
    abf6:	f7ff fd6b 	bl	a6d0 <__lo0bits>
    abfa:	9b01      	ldr	r3, [sp, #4]
    abfc:	617b      	str	r3, [r7, #20]
    abfe:	2101      	movs	r1, #1
    ac00:	6139      	str	r1, [r7, #16]
    ac02:	3020      	adds	r0, #32
    ac04:	e7e5      	b.n	abd2 <__d2b+0x52>
    ac06:	eb07 0381 	add.w	r3, r7, r1, lsl #2
    ac0a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
    ac0e:	6030      	str	r0, [r6, #0]
    ac10:	6918      	ldr	r0, [r3, #16]
    ac12:	f7ff fd3d 	bl	a690 <__hi0bits>
    ac16:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
    ac1a:	e7e1      	b.n	abe0 <__d2b+0x60>

0000ac1c <__ratio>:
__ratio():
    ac1c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ac20:	4688      	mov	r8, r1
    ac22:	4669      	mov	r1, sp
    ac24:	4681      	mov	r9, r0
    ac26:	f7ff ff5b 	bl	aae0 <__b2d>
    ac2a:	a901      	add	r1, sp, #4
    ac2c:	4640      	mov	r0, r8
    ac2e:	ec57 6b10 	vmov	r6, r7, d0
    ac32:	f7ff ff55 	bl	aae0 <__b2d>
    ac36:	f8d9 3010 	ldr.w	r3, [r9, #16]
    ac3a:	f8d8 2010 	ldr.w	r2, [r8, #16]
    ac3e:	eba3 0c02 	sub.w	ip, r3, r2
    ac42:	e9dd 3200 	ldrd	r3, r2, [sp]
    ac46:	1a9b      	subs	r3, r3, r2
    ac48:	eb03 134c 	add.w	r3, r3, ip, lsl #5
    ac4c:	ec5b ab10 	vmov	sl, fp, d0
    ac50:	2b00      	cmp	r3, #0
    ac52:	bfce      	itee	gt
    ac54:	463a      	movgt	r2, r7
    ac56:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
    ac5a:	465a      	movle	r2, fp
    ac5c:	4659      	mov	r1, fp
    ac5e:	463d      	mov	r5, r7
    ac60:	bfd4      	ite	le
    ac62:	eb02 5103 	addle.w	r1, r2, r3, lsl #20
    ac66:	eb02 5503 	addgt.w	r5, r2, r3, lsl #20
    ac6a:	4630      	mov	r0, r6
    ac6c:	ee10 2a10 	vmov	r2, s0
    ac70:	460b      	mov	r3, r1
    ac72:	4629      	mov	r1, r5
    ac74:	f001 f89c 	bl	bdb0 <__aeabi_ddiv>
    ac78:	ec41 0b10 	vmov	d0, r0, r1
    ac7c:	b003      	add	sp, #12
    ac7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000ac82 <__copybits>:
__copybits():
    ac82:	3901      	subs	r1, #1
    ac84:	b510      	push	{r4, lr}
    ac86:	1149      	asrs	r1, r1, #5
    ac88:	6914      	ldr	r4, [r2, #16]
    ac8a:	3101      	adds	r1, #1
    ac8c:	f102 0314 	add.w	r3, r2, #20
    ac90:	eb00 0181 	add.w	r1, r0, r1, lsl #2
    ac94:	eb03 0484 	add.w	r4, r3, r4, lsl #2
    ac98:	42a3      	cmp	r3, r4
    ac9a:	4602      	mov	r2, r0
    ac9c:	d303      	bcc.n	aca6 <__copybits+0x24>
    ac9e:	2300      	movs	r3, #0
    aca0:	428a      	cmp	r2, r1
    aca2:	d305      	bcc.n	acb0 <__copybits+0x2e>
    aca4:	bd10      	pop	{r4, pc}
    aca6:	f853 2b04 	ldr.w	r2, [r3], #4
    acaa:	f840 2b04 	str.w	r2, [r0], #4
    acae:	e7f3      	b.n	ac98 <__copybits+0x16>
    acb0:	f842 3b04 	str.w	r3, [r2], #4
    acb4:	e7f4      	b.n	aca0 <__copybits+0x1e>

0000acb6 <__any_on>:
__any_on():
    acb6:	f100 0214 	add.w	r2, r0, #20
    acba:	6900      	ldr	r0, [r0, #16]
    acbc:	114b      	asrs	r3, r1, #5
    acbe:	4298      	cmp	r0, r3
    acc0:	b510      	push	{r4, lr}
    acc2:	db11      	blt.n	ace8 <__any_on+0x32>
    acc4:	dd0a      	ble.n	acdc <__any_on+0x26>
    acc6:	f011 011f 	ands.w	r1, r1, #31
    acca:	d007      	beq.n	acdc <__any_on+0x26>
    accc:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
    acd0:	fa24 f001 	lsr.w	r0, r4, r1
    acd4:	fa00 f101 	lsl.w	r1, r0, r1
    acd8:	428c      	cmp	r4, r1
    acda:	d10b      	bne.n	acf4 <__any_on+0x3e>
    acdc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
    ace0:	4293      	cmp	r3, r2
    ace2:	d803      	bhi.n	acec <__any_on+0x36>
    ace4:	2000      	movs	r0, #0
    ace6:	bd10      	pop	{r4, pc}
    ace8:	4603      	mov	r3, r0
    acea:	e7f7      	b.n	acdc <__any_on+0x26>
    acec:	f853 1d04 	ldr.w	r1, [r3, #-4]!
    acf0:	2900      	cmp	r1, #0
    acf2:	d0f5      	beq.n	ace0 <__any_on+0x2a>
    acf4:	2001      	movs	r0, #1
    acf6:	e7f6      	b.n	ace6 <__any_on+0x30>

0000acf8 <_calloc_r>:
_calloc_r():
    acf8:	b538      	push	{r3, r4, r5, lr}
    acfa:	fb02 f401 	mul.w	r4, r2, r1
    acfe:	4621      	mov	r1, r4
    ad00:	f7fb fe02 	bl	6908 <_malloc_r>
    ad04:	4605      	mov	r5, r0
    ad06:	b118      	cbz	r0, ad10 <_calloc_r+0x18>
    ad08:	4622      	mov	r2, r4
    ad0a:	2100      	movs	r1, #0
    ad0c:	f7fb fda6 	bl	685c <memset>
    ad10:	4628      	mov	r0, r5
    ad12:	bd38      	pop	{r3, r4, r5, pc}

0000ad14 <_realloc_r>:
_realloc_r():
    ad14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    ad16:	4607      	mov	r7, r0
    ad18:	4614      	mov	r4, r2
    ad1a:	460e      	mov	r6, r1
    ad1c:	b921      	cbnz	r1, ad28 <_realloc_r+0x14>
    ad1e:	4611      	mov	r1, r2
    ad20:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    ad24:	f7fb bdf0 	b.w	6908 <_malloc_r>
    ad28:	b922      	cbnz	r2, ad34 <_realloc_r+0x20>
    ad2a:	f7fb fd9f 	bl	686c <_free_r>
    ad2e:	4625      	mov	r5, r4
    ad30:	4628      	mov	r0, r5
    ad32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    ad34:	f000 fe62 	bl	b9fc <_malloc_usable_size_r>
    ad38:	42a0      	cmp	r0, r4
    ad3a:	d20f      	bcs.n	ad5c <_realloc_r+0x48>
    ad3c:	4621      	mov	r1, r4
    ad3e:	4638      	mov	r0, r7
    ad40:	f7fb fde2 	bl	6908 <_malloc_r>
    ad44:	4605      	mov	r5, r0
    ad46:	2800      	cmp	r0, #0
    ad48:	d0f2      	beq.n	ad30 <_realloc_r+0x1c>
    ad4a:	4631      	mov	r1, r6
    ad4c:	4622      	mov	r2, r4
    ad4e:	f7fb fd5d 	bl	680c <memcpy>
    ad52:	4631      	mov	r1, r6
    ad54:	4638      	mov	r0, r7
    ad56:	f7fb fd89 	bl	686c <_free_r>
    ad5a:	e7e9      	b.n	ad30 <_realloc_r+0x1c>
    ad5c:	4635      	mov	r5, r6
    ad5e:	e7e7      	b.n	ad30 <_realloc_r+0x1c>

0000ad60 <__ssputs_r>:
__ssputs_r():
    ad60:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    ad64:	688e      	ldr	r6, [r1, #8]
    ad66:	429e      	cmp	r6, r3
    ad68:	4682      	mov	sl, r0
    ad6a:	460c      	mov	r4, r1
    ad6c:	4691      	mov	r9, r2
    ad6e:	4698      	mov	r8, r3
    ad70:	d838      	bhi.n	ade4 <__ssputs_r+0x84>
    ad72:	f8b1 c00c 	ldrh.w	ip, [r1, #12]
    ad76:	f41c 6f90 	tst.w	ip, #1152	; 0x480
    ad7a:	d031      	beq.n	ade0 <__ssputs_r+0x80>
    ad7c:	6962      	ldr	r2, [r4, #20]
    ad7e:	6825      	ldr	r5, [r4, #0]
    ad80:	6909      	ldr	r1, [r1, #16]
    ad82:	eb02 0242 	add.w	r2, r2, r2, lsl #1
    ad86:	1a6f      	subs	r7, r5, r1
    ad88:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
    ad8c:	3301      	adds	r3, #1
    ad8e:	1055      	asrs	r5, r2, #1
    ad90:	443b      	add	r3, r7
    ad92:	429d      	cmp	r5, r3
    ad94:	bf38      	it	cc
    ad96:	461d      	movcc	r5, r3
    ad98:	f41c 6f80 	tst.w	ip, #1024	; 0x400
    ad9c:	d030      	beq.n	ae00 <__ssputs_r+0xa0>
    ad9e:	4629      	mov	r1, r5
    ada0:	f7fb fdb2 	bl	6908 <_malloc_r>
    ada4:	4606      	mov	r6, r0
    ada6:	b950      	cbnz	r0, adbe <__ssputs_r+0x5e>
    ada8:	230c      	movs	r3, #12
    adaa:	f8ca 3000 	str.w	r3, [sl]
    adae:	89a3      	ldrh	r3, [r4, #12]
    adb0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    adb4:	81a3      	strh	r3, [r4, #12]
    adb6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    adba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    adbe:	463a      	mov	r2, r7
    adc0:	6921      	ldr	r1, [r4, #16]
    adc2:	f7fb fd23 	bl	680c <memcpy>
    adc6:	89a3      	ldrh	r3, [r4, #12]
    adc8:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
    adcc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    add0:	81a3      	strh	r3, [r4, #12]
    add2:	6126      	str	r6, [r4, #16]
    add4:	6165      	str	r5, [r4, #20]
    add6:	443e      	add	r6, r7
    add8:	1bed      	subs	r5, r5, r7
    adda:	6026      	str	r6, [r4, #0]
    addc:	60a5      	str	r5, [r4, #8]
    adde:	4646      	mov	r6, r8
    ade0:	4546      	cmp	r6, r8
    ade2:	d900      	bls.n	ade6 <__ssputs_r+0x86>
    ade4:	4646      	mov	r6, r8
    ade6:	4632      	mov	r2, r6
    ade8:	4649      	mov	r1, r9
    adea:	6820      	ldr	r0, [r4, #0]
    adec:	f7fb fd1c 	bl	6828 <memmove>
    adf0:	68a3      	ldr	r3, [r4, #8]
    adf2:	1b9b      	subs	r3, r3, r6
    adf4:	60a3      	str	r3, [r4, #8]
    adf6:	6823      	ldr	r3, [r4, #0]
    adf8:	441e      	add	r6, r3
    adfa:	6026      	str	r6, [r4, #0]
    adfc:	2000      	movs	r0, #0
    adfe:	e7dc      	b.n	adba <__ssputs_r+0x5a>
    ae00:	462a      	mov	r2, r5
    ae02:	f7ff ff87 	bl	ad14 <_realloc_r>
    ae06:	4606      	mov	r6, r0
    ae08:	2800      	cmp	r0, #0
    ae0a:	d1e2      	bne.n	add2 <__ssputs_r+0x72>
    ae0c:	6921      	ldr	r1, [r4, #16]
    ae0e:	4650      	mov	r0, sl
    ae10:	f7fb fd2c 	bl	686c <_free_r>
    ae14:	e7c8      	b.n	ada8 <__ssputs_r+0x48>
    ae16:	Address 0x000000000000ae16 is out of bounds.


0000ae18 <_svfiprintf_r>:
_svfiprintf_r():
    ae18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ae1c:	461e      	mov	r6, r3
    ae1e:	898b      	ldrh	r3, [r1, #12]
    ae20:	061b      	lsls	r3, r3, #24
    ae22:	b09d      	sub	sp, #116	; 0x74
    ae24:	4607      	mov	r7, r0
    ae26:	460d      	mov	r5, r1
    ae28:	4614      	mov	r4, r2
    ae2a:	d50e      	bpl.n	ae4a <_svfiprintf_r+0x32>
    ae2c:	690b      	ldr	r3, [r1, #16]
    ae2e:	b963      	cbnz	r3, ae4a <_svfiprintf_r+0x32>
    ae30:	2140      	movs	r1, #64	; 0x40
    ae32:	f7fb fd69 	bl	6908 <_malloc_r>
    ae36:	6028      	str	r0, [r5, #0]
    ae38:	6128      	str	r0, [r5, #16]
    ae3a:	b920      	cbnz	r0, ae46 <_svfiprintf_r+0x2e>
    ae3c:	230c      	movs	r3, #12
    ae3e:	603b      	str	r3, [r7, #0]
    ae40:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    ae44:	e0c9      	b.n	afda <_svfiprintf_r+0x1c2>
    ae46:	2340      	movs	r3, #64	; 0x40
    ae48:	616b      	str	r3, [r5, #20]
    ae4a:	2300      	movs	r3, #0
    ae4c:	9309      	str	r3, [sp, #36]	; 0x24
    ae4e:	2320      	movs	r3, #32
    ae50:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
    ae54:	f8df 919c 	ldr.w	r9, [pc, #412]	; aff4 <_svfiprintf_r+0x1dc>
    ae58:	9603      	str	r6, [sp, #12]
    ae5a:	2330      	movs	r3, #48	; 0x30
    ae5c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
    ae60:	f04f 0a01 	mov.w	sl, #1
    ae64:	4623      	mov	r3, r4
    ae66:	461e      	mov	r6, r3
    ae68:	f813 2b01 	ldrb.w	r2, [r3], #1
    ae6c:	b10a      	cbz	r2, ae72 <_svfiprintf_r+0x5a>
    ae6e:	2a25      	cmp	r2, #37	; 0x25
    ae70:	d1f9      	bne.n	ae66 <_svfiprintf_r+0x4e>
    ae72:	ebb6 0b04 	subs.w	fp, r6, r4
    ae76:	d00b      	beq.n	ae90 <_svfiprintf_r+0x78>
    ae78:	465b      	mov	r3, fp
    ae7a:	4622      	mov	r2, r4
    ae7c:	4629      	mov	r1, r5
    ae7e:	4638      	mov	r0, r7
    ae80:	f7ff ff6e 	bl	ad60 <__ssputs_r>
    ae84:	3001      	adds	r0, #1
    ae86:	f000 80a3 	beq.w	afd0 <_svfiprintf_r+0x1b8>
    ae8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    ae8c:	445b      	add	r3, fp
    ae8e:	9309      	str	r3, [sp, #36]	; 0x24
    ae90:	7833      	ldrb	r3, [r6, #0]
    ae92:	2b00      	cmp	r3, #0
    ae94:	f000 809c 	beq.w	afd0 <_svfiprintf_r+0x1b8>
    ae98:	2300      	movs	r3, #0
    ae9a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    ae9e:	e9cd 2305 	strd	r2, r3, [sp, #20]
    aea2:	3601      	adds	r6, #1
    aea4:	9304      	str	r3, [sp, #16]
    aea6:	9307      	str	r3, [sp, #28]
    aea8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
    aeac:	931a      	str	r3, [sp, #104]	; 0x68
    aeae:	4634      	mov	r4, r6
    aeb0:	2205      	movs	r2, #5
    aeb2:	f814 1b01 	ldrb.w	r1, [r4], #1
    aeb6:	484f      	ldr	r0, [pc, #316]	; (aff4 <_svfiprintf_r+0x1dc>)
    aeb8:	f7ff faca 	bl	a450 <memchr>
    aebc:	9b04      	ldr	r3, [sp, #16]
    aebe:	b9c0      	cbnz	r0, aef2 <_svfiprintf_r+0xda>
    aec0:	06d9      	lsls	r1, r3, #27
    aec2:	bf44      	itt	mi
    aec4:	2220      	movmi	r2, #32
    aec6:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    aeca:	071a      	lsls	r2, r3, #28
    aecc:	bf44      	itt	mi
    aece:	222b      	movmi	r2, #43	; 0x2b
    aed0:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    aed4:	7832      	ldrb	r2, [r6, #0]
    aed6:	2a2a      	cmp	r2, #42	; 0x2a
    aed8:	d013      	beq.n	af02 <_svfiprintf_r+0xea>
    aeda:	9a07      	ldr	r2, [sp, #28]
    aedc:	4634      	mov	r4, r6
    aede:	2000      	movs	r0, #0
    aee0:	260a      	movs	r6, #10
    aee2:	4621      	mov	r1, r4
    aee4:	f811 3b01 	ldrb.w	r3, [r1], #1
    aee8:	3b30      	subs	r3, #48	; 0x30
    aeea:	2b09      	cmp	r3, #9
    aeec:	d94b      	bls.n	af86 <_svfiprintf_r+0x16e>
    aeee:	b970      	cbnz	r0, af0e <_svfiprintf_r+0xf6>
    aef0:	e014      	b.n	af1c <_svfiprintf_r+0x104>
    aef2:	eba0 0009 	sub.w	r0, r0, r9
    aef6:	fa0a f000 	lsl.w	r0, sl, r0
    aefa:	4318      	orrs	r0, r3
    aefc:	9004      	str	r0, [sp, #16]
    aefe:	4626      	mov	r6, r4
    af00:	e7d5      	b.n	aeae <_svfiprintf_r+0x96>
    af02:	9a03      	ldr	r2, [sp, #12]
    af04:	1d11      	adds	r1, r2, #4
    af06:	6812      	ldr	r2, [r2, #0]
    af08:	9103      	str	r1, [sp, #12]
    af0a:	2a00      	cmp	r2, #0
    af0c:	db01      	blt.n	af12 <_svfiprintf_r+0xfa>
    af0e:	9207      	str	r2, [sp, #28]
    af10:	e004      	b.n	af1c <_svfiprintf_r+0x104>
    af12:	4252      	negs	r2, r2
    af14:	f043 0302 	orr.w	r3, r3, #2
    af18:	9207      	str	r2, [sp, #28]
    af1a:	9304      	str	r3, [sp, #16]
    af1c:	7823      	ldrb	r3, [r4, #0]
    af1e:	2b2e      	cmp	r3, #46	; 0x2e
    af20:	d10c      	bne.n	af3c <_svfiprintf_r+0x124>
    af22:	7863      	ldrb	r3, [r4, #1]
    af24:	2b2a      	cmp	r3, #42	; 0x2a
    af26:	d133      	bne.n	af90 <_svfiprintf_r+0x178>
    af28:	9b03      	ldr	r3, [sp, #12]
    af2a:	1d1a      	adds	r2, r3, #4
    af2c:	681b      	ldr	r3, [r3, #0]
    af2e:	9203      	str	r2, [sp, #12]
    af30:	2b00      	cmp	r3, #0
    af32:	bfb8      	it	lt
    af34:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
    af38:	3402      	adds	r4, #2
    af3a:	9305      	str	r3, [sp, #20]
    af3c:	4e2e      	ldr	r6, [pc, #184]	; (aff8 <_svfiprintf_r+0x1e0>)
    af3e:	7821      	ldrb	r1, [r4, #0]
    af40:	2203      	movs	r2, #3
    af42:	4630      	mov	r0, r6
    af44:	f7ff fa84 	bl	a450 <memchr>
    af48:	b138      	cbz	r0, af5a <_svfiprintf_r+0x142>
    af4a:	2340      	movs	r3, #64	; 0x40
    af4c:	1b80      	subs	r0, r0, r6
    af4e:	fa03 f000 	lsl.w	r0, r3, r0
    af52:	9b04      	ldr	r3, [sp, #16]
    af54:	4303      	orrs	r3, r0
    af56:	3401      	adds	r4, #1
    af58:	9304      	str	r3, [sp, #16]
    af5a:	f814 1b01 	ldrb.w	r1, [r4], #1
    af5e:	4827      	ldr	r0, [pc, #156]	; (affc <_svfiprintf_r+0x1e4>)
    af60:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
    af64:	2206      	movs	r2, #6
    af66:	f7ff fa73 	bl	a450 <memchr>
    af6a:	2800      	cmp	r0, #0
    af6c:	d038      	beq.n	afe0 <_svfiprintf_r+0x1c8>
    af6e:	4b24      	ldr	r3, [pc, #144]	; (b000 <_svfiprintf_r+0x1e8>)
    af70:	bb13      	cbnz	r3, afb8 <_svfiprintf_r+0x1a0>
    af72:	9b03      	ldr	r3, [sp, #12]
    af74:	3307      	adds	r3, #7
    af76:	f023 0307 	bic.w	r3, r3, #7
    af7a:	3308      	adds	r3, #8
    af7c:	9303      	str	r3, [sp, #12]
    af7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    af80:	4443      	add	r3, r8
    af82:	9309      	str	r3, [sp, #36]	; 0x24
    af84:	e76e      	b.n	ae64 <_svfiprintf_r+0x4c>
    af86:	fb06 3202 	mla	r2, r6, r2, r3
    af8a:	2001      	movs	r0, #1
    af8c:	460c      	mov	r4, r1
    af8e:	e7a8      	b.n	aee2 <_svfiprintf_r+0xca>
    af90:	2300      	movs	r3, #0
    af92:	3401      	adds	r4, #1
    af94:	9305      	str	r3, [sp, #20]
    af96:	4619      	mov	r1, r3
    af98:	260a      	movs	r6, #10
    af9a:	4620      	mov	r0, r4
    af9c:	f810 2b01 	ldrb.w	r2, [r0], #1
    afa0:	3a30      	subs	r2, #48	; 0x30
    afa2:	2a09      	cmp	r2, #9
    afa4:	d903      	bls.n	afae <_svfiprintf_r+0x196>
    afa6:	2b00      	cmp	r3, #0
    afa8:	d0c8      	beq.n	af3c <_svfiprintf_r+0x124>
    afaa:	9105      	str	r1, [sp, #20]
    afac:	e7c6      	b.n	af3c <_svfiprintf_r+0x124>
    afae:	fb06 2101 	mla	r1, r6, r1, r2
    afb2:	2301      	movs	r3, #1
    afb4:	4604      	mov	r4, r0
    afb6:	e7f0      	b.n	af9a <_svfiprintf_r+0x182>
    afb8:	ab03      	add	r3, sp, #12
    afba:	9300      	str	r3, [sp, #0]
    afbc:	462a      	mov	r2, r5
    afbe:	4b11      	ldr	r3, [pc, #68]	; (b004 <_svfiprintf_r+0x1ec>)
    afc0:	a904      	add	r1, sp, #16
    afc2:	4638      	mov	r0, r7
    afc4:	f7fb fedc 	bl	6d80 <_printf_float>
    afc8:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
    afcc:	4680      	mov	r8, r0
    afce:	d1d6      	bne.n	af7e <_svfiprintf_r+0x166>
    afd0:	89ab      	ldrh	r3, [r5, #12]
    afd2:	065b      	lsls	r3, r3, #25
    afd4:	f53f af34 	bmi.w	ae40 <_svfiprintf_r+0x28>
    afd8:	9809      	ldr	r0, [sp, #36]	; 0x24
    afda:	b01d      	add	sp, #116	; 0x74
    afdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    afe0:	ab03      	add	r3, sp, #12
    afe2:	9300      	str	r3, [sp, #0]
    afe4:	462a      	mov	r2, r5
    afe6:	4b07      	ldr	r3, [pc, #28]	; (b004 <_svfiprintf_r+0x1ec>)
    afe8:	a904      	add	r1, sp, #16
    afea:	4638      	mov	r0, r7
    afec:	f7fc f968 	bl	72c0 <_printf_i>
    aff0:	e7ea      	b.n	afc8 <_svfiprintf_r+0x1b0>
    aff2:	bf00      	nop
    aff4:	0000dbb8 	.word	0x0000dbb8
    aff8:	0000dbbe 	.word	0x0000dbbe
    affc:	0000dbc2 	.word	0x0000dbc2
    b000:	00006d81 	.word	0x00006d81
    b004:	0000ad61 	.word	0x0000ad61

0000b008 <_sungetc_r>:
_sungetc_r():
    b008:	b538      	push	{r3, r4, r5, lr}
    b00a:	1c4b      	adds	r3, r1, #1
    b00c:	4614      	mov	r4, r2
    b00e:	d103      	bne.n	b018 <_sungetc_r+0x10>
    b010:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
    b014:	4628      	mov	r0, r5
    b016:	bd38      	pop	{r3, r4, r5, pc}
    b018:	8993      	ldrh	r3, [r2, #12]
    b01a:	f023 0320 	bic.w	r3, r3, #32
    b01e:	8193      	strh	r3, [r2, #12]
    b020:	6b63      	ldr	r3, [r4, #52]	; 0x34
    b022:	6852      	ldr	r2, [r2, #4]
    b024:	b2cd      	uxtb	r5, r1
    b026:	b18b      	cbz	r3, b04c <_sungetc_r+0x44>
    b028:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    b02a:	4293      	cmp	r3, r2
    b02c:	dd08      	ble.n	b040 <_sungetc_r+0x38>
    b02e:	6823      	ldr	r3, [r4, #0]
    b030:	1e5a      	subs	r2, r3, #1
    b032:	6022      	str	r2, [r4, #0]
    b034:	f803 5c01 	strb.w	r5, [r3, #-1]
    b038:	6863      	ldr	r3, [r4, #4]
    b03a:	3301      	adds	r3, #1
    b03c:	6063      	str	r3, [r4, #4]
    b03e:	e7e9      	b.n	b014 <_sungetc_r+0xc>
    b040:	4621      	mov	r1, r4
    b042:	f000 fc3d 	bl	b8c0 <__submore>
    b046:	2800      	cmp	r0, #0
    b048:	d0f1      	beq.n	b02e <_sungetc_r+0x26>
    b04a:	e7e1      	b.n	b010 <_sungetc_r+0x8>
    b04c:	6921      	ldr	r1, [r4, #16]
    b04e:	6823      	ldr	r3, [r4, #0]
    b050:	b151      	cbz	r1, b068 <_sungetc_r+0x60>
    b052:	4299      	cmp	r1, r3
    b054:	d208      	bcs.n	b068 <_sungetc_r+0x60>
    b056:	f813 1c01 	ldrb.w	r1, [r3, #-1]
    b05a:	42a9      	cmp	r1, r5
    b05c:	d104      	bne.n	b068 <_sungetc_r+0x60>
    b05e:	3b01      	subs	r3, #1
    b060:	3201      	adds	r2, #1
    b062:	6023      	str	r3, [r4, #0]
    b064:	6062      	str	r2, [r4, #4]
    b066:	e7d5      	b.n	b014 <_sungetc_r+0xc>
    b068:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
    b06c:	f104 0344 	add.w	r3, r4, #68	; 0x44
    b070:	6363      	str	r3, [r4, #52]	; 0x34
    b072:	2303      	movs	r3, #3
    b074:	63a3      	str	r3, [r4, #56]	; 0x38
    b076:	4623      	mov	r3, r4
    b078:	f803 5f46 	strb.w	r5, [r3, #70]!
    b07c:	6023      	str	r3, [r4, #0]
    b07e:	2301      	movs	r3, #1
    b080:	e7dc      	b.n	b03c <_sungetc_r+0x34>

0000b082 <__ssrefill_r>:
__ssrefill_r():
    b082:	b510      	push	{r4, lr}
    b084:	460c      	mov	r4, r1
    b086:	6b49      	ldr	r1, [r1, #52]	; 0x34
    b088:	b169      	cbz	r1, b0a6 <__ssrefill_r+0x24>
    b08a:	f104 0344 	add.w	r3, r4, #68	; 0x44
    b08e:	4299      	cmp	r1, r3
    b090:	d001      	beq.n	b096 <__ssrefill_r+0x14>
    b092:	f7fb fbeb 	bl	686c <_free_r>
    b096:	6c23      	ldr	r3, [r4, #64]	; 0x40
    b098:	6063      	str	r3, [r4, #4]
    b09a:	2000      	movs	r0, #0
    b09c:	6360      	str	r0, [r4, #52]	; 0x34
    b09e:	b113      	cbz	r3, b0a6 <__ssrefill_r+0x24>
    b0a0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    b0a2:	6023      	str	r3, [r4, #0]
    b0a4:	bd10      	pop	{r4, pc}
    b0a6:	6923      	ldr	r3, [r4, #16]
    b0a8:	6023      	str	r3, [r4, #0]
    b0aa:	2300      	movs	r3, #0
    b0ac:	6063      	str	r3, [r4, #4]
    b0ae:	89a3      	ldrh	r3, [r4, #12]
    b0b0:	f043 0320 	orr.w	r3, r3, #32
    b0b4:	81a3      	strh	r3, [r4, #12]
    b0b6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    b0ba:	e7f3      	b.n	b0a4 <__ssrefill_r+0x22>

0000b0bc <__ssvfiscanf_r>:
__ssvfiscanf_r():
    b0bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b0c0:	460c      	mov	r4, r1
    b0c2:	f5ad 7d23 	sub.w	sp, sp, #652	; 0x28c
    b0c6:	2100      	movs	r1, #0
    b0c8:	e9cd 1144 	strd	r1, r1, [sp, #272]	; 0x110
    b0cc:	499a      	ldr	r1, [pc, #616]	; (b338 <__ssvfiscanf_r+0x27c>)
    b0ce:	91a0      	str	r1, [sp, #640]	; 0x280
    b0d0:	f10d 0804 	add.w	r8, sp, #4
    b0d4:	4999      	ldr	r1, [pc, #612]	; (b33c <__ssvfiscanf_r+0x280>)
    b0d6:	4f9a      	ldr	r7, [pc, #616]	; (b340 <__ssvfiscanf_r+0x284>)
    b0d8:	f8df 9268 	ldr.w	r9, [pc, #616]	; b344 <__ssvfiscanf_r+0x288>
    b0dc:	f8cd 8118 	str.w	r8, [sp, #280]	; 0x118
    b0e0:	4606      	mov	r6, r0
    b0e2:	91a1      	str	r1, [sp, #644]	; 0x284
    b0e4:	9300      	str	r3, [sp, #0]
    b0e6:	f892 a000 	ldrb.w	sl, [r2]
    b0ea:	f1ba 0f00 	cmp.w	sl, #0
    b0ee:	f000 8120 	beq.w	b332 <__ssvfiscanf_r+0x276>
    b0f2:	f81a 3007 	ldrb.w	r3, [sl, r7]
    b0f6:	f013 0308 	ands.w	r3, r3, #8
    b0fa:	f102 0501 	add.w	r5, r2, #1
    b0fe:	d019      	beq.n	b134 <__ssvfiscanf_r+0x78>
    b100:	6863      	ldr	r3, [r4, #4]
    b102:	2b00      	cmp	r3, #0
    b104:	dd0f      	ble.n	b126 <__ssvfiscanf_r+0x6a>
    b106:	6823      	ldr	r3, [r4, #0]
    b108:	781a      	ldrb	r2, [r3, #0]
    b10a:	5cba      	ldrb	r2, [r7, r2]
    b10c:	0712      	lsls	r2, r2, #28
    b10e:	d401      	bmi.n	b114 <__ssvfiscanf_r+0x58>
    b110:	462a      	mov	r2, r5
    b112:	e7e8      	b.n	b0e6 <__ssvfiscanf_r+0x2a>
    b114:	9a45      	ldr	r2, [sp, #276]	; 0x114
    b116:	3201      	adds	r2, #1
    b118:	9245      	str	r2, [sp, #276]	; 0x114
    b11a:	6862      	ldr	r2, [r4, #4]
    b11c:	3301      	adds	r3, #1
    b11e:	3a01      	subs	r2, #1
    b120:	6062      	str	r2, [r4, #4]
    b122:	6023      	str	r3, [r4, #0]
    b124:	e7ec      	b.n	b100 <__ssvfiscanf_r+0x44>
    b126:	9ba1      	ldr	r3, [sp, #644]	; 0x284
    b128:	4621      	mov	r1, r4
    b12a:	4630      	mov	r0, r6
    b12c:	4798      	blx	r3
    b12e:	2800      	cmp	r0, #0
    b130:	d0e9      	beq.n	b106 <__ssvfiscanf_r+0x4a>
    b132:	e7ed      	b.n	b110 <__ssvfiscanf_r+0x54>
    b134:	f1ba 0f25 	cmp.w	sl, #37	; 0x25
    b138:	d17d      	bne.n	b236 <__ssvfiscanf_r+0x17a>
    b13a:	9341      	str	r3, [sp, #260]	; 0x104
    b13c:	9343      	str	r3, [sp, #268]	; 0x10c
    b13e:	7853      	ldrb	r3, [r2, #1]
    b140:	2b2a      	cmp	r3, #42	; 0x2a
    b142:	bf02      	ittt	eq
    b144:	2310      	moveq	r3, #16
    b146:	1c95      	addeq	r5, r2, #2
    b148:	9341      	streq	r3, [sp, #260]	; 0x104
    b14a:	220a      	movs	r2, #10
    b14c:	46ab      	mov	fp, r5
    b14e:	f81b 1b01 	ldrb.w	r1, [fp], #1
    b152:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
    b156:	2b09      	cmp	r3, #9
    b158:	d921      	bls.n	b19e <__ssvfiscanf_r+0xe2>
    b15a:	2203      	movs	r2, #3
    b15c:	4879      	ldr	r0, [pc, #484]	; (b344 <__ssvfiscanf_r+0x288>)
    b15e:	f7ff f977 	bl	a450 <memchr>
    b162:	b138      	cbz	r0, b174 <__ssvfiscanf_r+0xb8>
    b164:	eba0 0309 	sub.w	r3, r0, r9
    b168:	2001      	movs	r0, #1
    b16a:	4098      	lsls	r0, r3
    b16c:	9b41      	ldr	r3, [sp, #260]	; 0x104
    b16e:	4318      	orrs	r0, r3
    b170:	9041      	str	r0, [sp, #260]	; 0x104
    b172:	465d      	mov	r5, fp
    b174:	f815 3b01 	ldrb.w	r3, [r5], #1
    b178:	2b67      	cmp	r3, #103	; 0x67
    b17a:	d848      	bhi.n	b20e <__ssvfiscanf_r+0x152>
    b17c:	2b65      	cmp	r3, #101	; 0x65
    b17e:	f080 809e 	bcs.w	b2be <__ssvfiscanf_r+0x202>
    b182:	2b47      	cmp	r3, #71	; 0x47
    b184:	d812      	bhi.n	b1ac <__ssvfiscanf_r+0xf0>
    b186:	2b45      	cmp	r3, #69	; 0x45
    b188:	f080 8099 	bcs.w	b2be <__ssvfiscanf_r+0x202>
    b18c:	2b00      	cmp	r3, #0
    b18e:	d06b      	beq.n	b268 <__ssvfiscanf_r+0x1ac>
    b190:	2b25      	cmp	r3, #37	; 0x25
    b192:	d050      	beq.n	b236 <__ssvfiscanf_r+0x17a>
    b194:	2303      	movs	r3, #3
    b196:	9347      	str	r3, [sp, #284]	; 0x11c
    b198:	230a      	movs	r3, #10
    b19a:	9342      	str	r3, [sp, #264]	; 0x108
    b19c:	e016      	b.n	b1cc <__ssvfiscanf_r+0x110>
    b19e:	9b43      	ldr	r3, [sp, #268]	; 0x10c
    b1a0:	fb02 1303 	mla	r3, r2, r3, r1
    b1a4:	3b30      	subs	r3, #48	; 0x30
    b1a6:	9343      	str	r3, [sp, #268]	; 0x10c
    b1a8:	465d      	mov	r5, fp
    b1aa:	e7cf      	b.n	b14c <__ssvfiscanf_r+0x90>
    b1ac:	2b5b      	cmp	r3, #91	; 0x5b
    b1ae:	d067      	beq.n	b280 <__ssvfiscanf_r+0x1c4>
    b1b0:	d827      	bhi.n	b202 <__ssvfiscanf_r+0x146>
    b1b2:	2b58      	cmp	r3, #88	; 0x58
    b1b4:	d1ee      	bne.n	b194 <__ssvfiscanf_r+0xd8>
    b1b6:	9a41      	ldr	r2, [sp, #260]	; 0x104
    b1b8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    b1bc:	9241      	str	r2, [sp, #260]	; 0x104
    b1be:	2210      	movs	r2, #16
    b1c0:	2b6f      	cmp	r3, #111	; 0x6f
    b1c2:	9242      	str	r2, [sp, #264]	; 0x108
    b1c4:	bf34      	ite	cc
    b1c6:	2303      	movcc	r3, #3
    b1c8:	2304      	movcs	r3, #4
    b1ca:	9347      	str	r3, [sp, #284]	; 0x11c
    b1cc:	6863      	ldr	r3, [r4, #4]
    b1ce:	2b00      	cmp	r3, #0
    b1d0:	dd77      	ble.n	b2c2 <__ssvfiscanf_r+0x206>
    b1d2:	9b41      	ldr	r3, [sp, #260]	; 0x104
    b1d4:	0659      	lsls	r1, r3, #25
    b1d6:	d404      	bmi.n	b1e2 <__ssvfiscanf_r+0x126>
    b1d8:	6823      	ldr	r3, [r4, #0]
    b1da:	781a      	ldrb	r2, [r3, #0]
    b1dc:	5cba      	ldrb	r2, [r7, r2]
    b1de:	0712      	lsls	r2, r2, #28
    b1e0:	d476      	bmi.n	b2d0 <__ssvfiscanf_r+0x214>
    b1e2:	9b47      	ldr	r3, [sp, #284]	; 0x11c
    b1e4:	2b02      	cmp	r3, #2
    b1e6:	f300 8086 	bgt.w	b2f6 <__ssvfiscanf_r+0x23a>
    b1ea:	466b      	mov	r3, sp
    b1ec:	4622      	mov	r2, r4
    b1ee:	a941      	add	r1, sp, #260	; 0x104
    b1f0:	4630      	mov	r0, r6
    b1f2:	f000 f8ab 	bl	b34c <_scanf_chars>
    b1f6:	2801      	cmp	r0, #1
    b1f8:	f000 809b 	beq.w	b332 <__ssvfiscanf_r+0x276>
    b1fc:	2802      	cmp	r0, #2
    b1fe:	d187      	bne.n	b110 <__ssvfiscanf_r+0x54>
    b200:	e02f      	b.n	b262 <__ssvfiscanf_r+0x1a6>
    b202:	2b63      	cmp	r3, #99	; 0x63
    b204:	d047      	beq.n	b296 <__ssvfiscanf_r+0x1da>
    b206:	2b64      	cmp	r3, #100	; 0x64
    b208:	d1c4      	bne.n	b194 <__ssvfiscanf_r+0xd8>
    b20a:	220a      	movs	r2, #10
    b20c:	e7d8      	b.n	b1c0 <__ssvfiscanf_r+0x104>
    b20e:	2b70      	cmp	r3, #112	; 0x70
    b210:	d02d      	beq.n	b26e <__ssvfiscanf_r+0x1b2>
    b212:	d808      	bhi.n	b226 <__ssvfiscanf_r+0x16a>
    b214:	2b6e      	cmp	r3, #110	; 0x6e
    b216:	d044      	beq.n	b2a2 <__ssvfiscanf_r+0x1e6>
    b218:	d82e      	bhi.n	b278 <__ssvfiscanf_r+0x1bc>
    b21a:	2b69      	cmp	r3, #105	; 0x69
    b21c:	d1ba      	bne.n	b194 <__ssvfiscanf_r+0xd8>
    b21e:	2300      	movs	r3, #0
    b220:	9342      	str	r3, [sp, #264]	; 0x108
    b222:	2303      	movs	r3, #3
    b224:	e7d1      	b.n	b1ca <__ssvfiscanf_r+0x10e>
    b226:	2b75      	cmp	r3, #117	; 0x75
    b228:	d0ef      	beq.n	b20a <__ssvfiscanf_r+0x14e>
    b22a:	2b78      	cmp	r3, #120	; 0x78
    b22c:	d0c3      	beq.n	b1b6 <__ssvfiscanf_r+0xfa>
    b22e:	2b73      	cmp	r3, #115	; 0x73
    b230:	d1b0      	bne.n	b194 <__ssvfiscanf_r+0xd8>
    b232:	2302      	movs	r3, #2
    b234:	e7c9      	b.n	b1ca <__ssvfiscanf_r+0x10e>
    b236:	6863      	ldr	r3, [r4, #4]
    b238:	2b00      	cmp	r3, #0
    b23a:	dd0c      	ble.n	b256 <__ssvfiscanf_r+0x19a>
    b23c:	6823      	ldr	r3, [r4, #0]
    b23e:	781a      	ldrb	r2, [r3, #0]
    b240:	4552      	cmp	r2, sl
    b242:	d176      	bne.n	b332 <__ssvfiscanf_r+0x276>
    b244:	3301      	adds	r3, #1
    b246:	6862      	ldr	r2, [r4, #4]
    b248:	6023      	str	r3, [r4, #0]
    b24a:	9b45      	ldr	r3, [sp, #276]	; 0x114
    b24c:	3a01      	subs	r2, #1
    b24e:	3301      	adds	r3, #1
    b250:	6062      	str	r2, [r4, #4]
    b252:	9345      	str	r3, [sp, #276]	; 0x114
    b254:	e75c      	b.n	b110 <__ssvfiscanf_r+0x54>
    b256:	9ba1      	ldr	r3, [sp, #644]	; 0x284
    b258:	4621      	mov	r1, r4
    b25a:	4630      	mov	r0, r6
    b25c:	4798      	blx	r3
    b25e:	2800      	cmp	r0, #0
    b260:	d0ec      	beq.n	b23c <__ssvfiscanf_r+0x180>
    b262:	9844      	ldr	r0, [sp, #272]	; 0x110
    b264:	2800      	cmp	r0, #0
    b266:	d15a      	bne.n	b31e <__ssvfiscanf_r+0x262>
    b268:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    b26c:	e05d      	b.n	b32a <__ssvfiscanf_r+0x26e>
    b26e:	9a41      	ldr	r2, [sp, #260]	; 0x104
    b270:	f042 0220 	orr.w	r2, r2, #32
    b274:	9241      	str	r2, [sp, #260]	; 0x104
    b276:	e79e      	b.n	b1b6 <__ssvfiscanf_r+0xfa>
    b278:	2308      	movs	r3, #8
    b27a:	9342      	str	r3, [sp, #264]	; 0x108
    b27c:	2304      	movs	r3, #4
    b27e:	e7a4      	b.n	b1ca <__ssvfiscanf_r+0x10e>
    b280:	4629      	mov	r1, r5
    b282:	4640      	mov	r0, r8
    b284:	f000 fa2c 	bl	b6e0 <__sccl>
    b288:	9b41      	ldr	r3, [sp, #260]	; 0x104
    b28a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    b28e:	9341      	str	r3, [sp, #260]	; 0x104
    b290:	4605      	mov	r5, r0
    b292:	2301      	movs	r3, #1
    b294:	e799      	b.n	b1ca <__ssvfiscanf_r+0x10e>
    b296:	9b41      	ldr	r3, [sp, #260]	; 0x104
    b298:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    b29c:	9341      	str	r3, [sp, #260]	; 0x104
    b29e:	2300      	movs	r3, #0
    b2a0:	e793      	b.n	b1ca <__ssvfiscanf_r+0x10e>
    b2a2:	9841      	ldr	r0, [sp, #260]	; 0x104
    b2a4:	06c3      	lsls	r3, r0, #27
    b2a6:	f53f af33 	bmi.w	b110 <__ssvfiscanf_r+0x54>
    b2aa:	9b00      	ldr	r3, [sp, #0]
    b2ac:	9a45      	ldr	r2, [sp, #276]	; 0x114
    b2ae:	1d19      	adds	r1, r3, #4
    b2b0:	9100      	str	r1, [sp, #0]
    b2b2:	681b      	ldr	r3, [r3, #0]
    b2b4:	07c0      	lsls	r0, r0, #31
    b2b6:	bf4c      	ite	mi
    b2b8:	801a      	strhmi	r2, [r3, #0]
    b2ba:	601a      	strpl	r2, [r3, #0]
    b2bc:	e728      	b.n	b110 <__ssvfiscanf_r+0x54>
    b2be:	2305      	movs	r3, #5
    b2c0:	e783      	b.n	b1ca <__ssvfiscanf_r+0x10e>
    b2c2:	9ba1      	ldr	r3, [sp, #644]	; 0x284
    b2c4:	4621      	mov	r1, r4
    b2c6:	4630      	mov	r0, r6
    b2c8:	4798      	blx	r3
    b2ca:	2800      	cmp	r0, #0
    b2cc:	d081      	beq.n	b1d2 <__ssvfiscanf_r+0x116>
    b2ce:	e7c8      	b.n	b262 <__ssvfiscanf_r+0x1a6>
    b2d0:	9a45      	ldr	r2, [sp, #276]	; 0x114
    b2d2:	3201      	adds	r2, #1
    b2d4:	9245      	str	r2, [sp, #276]	; 0x114
    b2d6:	6862      	ldr	r2, [r4, #4]
    b2d8:	3a01      	subs	r2, #1
    b2da:	2a00      	cmp	r2, #0
    b2dc:	6062      	str	r2, [r4, #4]
    b2de:	dd02      	ble.n	b2e6 <__ssvfiscanf_r+0x22a>
    b2e0:	3301      	adds	r3, #1
    b2e2:	6023      	str	r3, [r4, #0]
    b2e4:	e778      	b.n	b1d8 <__ssvfiscanf_r+0x11c>
    b2e6:	9ba1      	ldr	r3, [sp, #644]	; 0x284
    b2e8:	4621      	mov	r1, r4
    b2ea:	4630      	mov	r0, r6
    b2ec:	4798      	blx	r3
    b2ee:	2800      	cmp	r0, #0
    b2f0:	f43f af72 	beq.w	b1d8 <__ssvfiscanf_r+0x11c>
    b2f4:	e7b5      	b.n	b262 <__ssvfiscanf_r+0x1a6>
    b2f6:	2b04      	cmp	r3, #4
    b2f8:	dc06      	bgt.n	b308 <__ssvfiscanf_r+0x24c>
    b2fa:	466b      	mov	r3, sp
    b2fc:	4622      	mov	r2, r4
    b2fe:	a941      	add	r1, sp, #260	; 0x104
    b300:	4630      	mov	r0, r6
    b302:	f000 f87b 	bl	b3fc <_scanf_i>
    b306:	e776      	b.n	b1f6 <__ssvfiscanf_r+0x13a>
    b308:	4b0f      	ldr	r3, [pc, #60]	; (b348 <__ssvfiscanf_r+0x28c>)
    b30a:	2b00      	cmp	r3, #0
    b30c:	f43f af00 	beq.w	b110 <__ssvfiscanf_r+0x54>
    b310:	466b      	mov	r3, sp
    b312:	4622      	mov	r2, r4
    b314:	a941      	add	r1, sp, #260	; 0x104
    b316:	4630      	mov	r0, r6
    b318:	f7fc f8e6 	bl	74e8 <_scanf_float>
    b31c:	e76b      	b.n	b1f6 <__ssvfiscanf_r+0x13a>
    b31e:	89a3      	ldrh	r3, [r4, #12]
    b320:	f013 0f40 	tst.w	r3, #64	; 0x40
    b324:	bf18      	it	ne
    b326:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
    b32a:	f50d 7d23 	add.w	sp, sp, #652	; 0x28c
    b32e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b332:	9844      	ldr	r0, [sp, #272]	; 0x110
    b334:	e7f9      	b.n	b32a <__ssvfiscanf_r+0x26e>
    b336:	bf00      	nop
    b338:	0000b009 	.word	0x0000b009
    b33c:	0000b083 	.word	0x0000b083
    b340:	0000dab4 	.word	0x0000dab4
    b344:	0000dbbe 	.word	0x0000dbbe
    b348:	000074e9 	.word	0x000074e9

0000b34c <_scanf_chars>:
_scanf_chars():
    b34c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    b350:	4615      	mov	r5, r2
    b352:	688a      	ldr	r2, [r1, #8]
    b354:	4680      	mov	r8, r0
    b356:	460c      	mov	r4, r1
    b358:	b932      	cbnz	r2, b368 <_scanf_chars+0x1c>
    b35a:	698a      	ldr	r2, [r1, #24]
    b35c:	2a00      	cmp	r2, #0
    b35e:	bf0c      	ite	eq
    b360:	2201      	moveq	r2, #1
    b362:	f04f 32ff 	movne.w	r2, #4294967295	; 0xffffffff
    b366:	608a      	str	r2, [r1, #8]
    b368:	6822      	ldr	r2, [r4, #0]
    b36a:	f8df 908c 	ldr.w	r9, [pc, #140]	; b3f8 <_scanf_chars+0xac>
    b36e:	06d1      	lsls	r1, r2, #27
    b370:	bf5f      	itttt	pl
    b372:	681a      	ldrpl	r2, [r3, #0]
    b374:	1d11      	addpl	r1, r2, #4
    b376:	6019      	strpl	r1, [r3, #0]
    b378:	6816      	ldrpl	r6, [r2, #0]
    b37a:	2700      	movs	r7, #0
    b37c:	69a0      	ldr	r0, [r4, #24]
    b37e:	b188      	cbz	r0, b3a4 <_scanf_chars+0x58>
    b380:	2801      	cmp	r0, #1
    b382:	d107      	bne.n	b394 <_scanf_chars+0x48>
    b384:	682b      	ldr	r3, [r5, #0]
    b386:	781a      	ldrb	r2, [r3, #0]
    b388:	6963      	ldr	r3, [r4, #20]
    b38a:	5c9b      	ldrb	r3, [r3, r2]
    b38c:	b953      	cbnz	r3, b3a4 <_scanf_chars+0x58>
    b38e:	bb27      	cbnz	r7, b3da <_scanf_chars+0x8e>
    b390:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    b394:	2802      	cmp	r0, #2
    b396:	d120      	bne.n	b3da <_scanf_chars+0x8e>
    b398:	682b      	ldr	r3, [r5, #0]
    b39a:	781b      	ldrb	r3, [r3, #0]
    b39c:	f813 3009 	ldrb.w	r3, [r3, r9]
    b3a0:	071b      	lsls	r3, r3, #28
    b3a2:	d41a      	bmi.n	b3da <_scanf_chars+0x8e>
    b3a4:	6823      	ldr	r3, [r4, #0]
    b3a6:	06da      	lsls	r2, r3, #27
    b3a8:	bf5e      	ittt	pl
    b3aa:	682b      	ldrpl	r3, [r5, #0]
    b3ac:	781b      	ldrbpl	r3, [r3, #0]
    b3ae:	f806 3b01 	strbpl.w	r3, [r6], #1
    b3b2:	682a      	ldr	r2, [r5, #0]
    b3b4:	686b      	ldr	r3, [r5, #4]
    b3b6:	3201      	adds	r2, #1
    b3b8:	602a      	str	r2, [r5, #0]
    b3ba:	68a2      	ldr	r2, [r4, #8]
    b3bc:	3b01      	subs	r3, #1
    b3be:	3a01      	subs	r2, #1
    b3c0:	606b      	str	r3, [r5, #4]
    b3c2:	3701      	adds	r7, #1
    b3c4:	60a2      	str	r2, [r4, #8]
    b3c6:	b142      	cbz	r2, b3da <_scanf_chars+0x8e>
    b3c8:	2b00      	cmp	r3, #0
    b3ca:	dcd7      	bgt.n	b37c <_scanf_chars+0x30>
    b3cc:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
    b3d0:	4629      	mov	r1, r5
    b3d2:	4640      	mov	r0, r8
    b3d4:	4798      	blx	r3
    b3d6:	2800      	cmp	r0, #0
    b3d8:	d0d0      	beq.n	b37c <_scanf_chars+0x30>
    b3da:	6823      	ldr	r3, [r4, #0]
    b3dc:	f013 0310 	ands.w	r3, r3, #16
    b3e0:	d105      	bne.n	b3ee <_scanf_chars+0xa2>
    b3e2:	68e2      	ldr	r2, [r4, #12]
    b3e4:	3201      	adds	r2, #1
    b3e6:	60e2      	str	r2, [r4, #12]
    b3e8:	69a2      	ldr	r2, [r4, #24]
    b3ea:	b102      	cbz	r2, b3ee <_scanf_chars+0xa2>
    b3ec:	7033      	strb	r3, [r6, #0]
    b3ee:	6923      	ldr	r3, [r4, #16]
    b3f0:	441f      	add	r7, r3
    b3f2:	6127      	str	r7, [r4, #16]
    b3f4:	2000      	movs	r0, #0
    b3f6:	e7cb      	b.n	b390 <_scanf_chars+0x44>
    b3f8:	0000dab4 	.word	0x0000dab4

0000b3fc <_scanf_i>:
_scanf_i():
    b3fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b400:	4699      	mov	r9, r3
    b402:	4b74      	ldr	r3, [pc, #464]	; (b5d4 <_scanf_i+0x1d8>)
    b404:	460c      	mov	r4, r1
    b406:	4682      	mov	sl, r0
    b408:	4616      	mov	r6, r2
    b40a:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
    b40e:	b087      	sub	sp, #28
    b410:	ab03      	add	r3, sp, #12
    b412:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    b416:	4b70      	ldr	r3, [pc, #448]	; (b5d8 <_scanf_i+0x1dc>)
    b418:	69a1      	ldr	r1, [r4, #24]
    b41a:	4a70      	ldr	r2, [pc, #448]	; (b5dc <_scanf_i+0x1e0>)
    b41c:	2903      	cmp	r1, #3
    b41e:	bf18      	it	ne
    b420:	461a      	movne	r2, r3
    b422:	68a3      	ldr	r3, [r4, #8]
    b424:	9201      	str	r2, [sp, #4]
    b426:	1e5a      	subs	r2, r3, #1
    b428:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
    b42c:	bf88      	it	hi
    b42e:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
    b432:	4627      	mov	r7, r4
    b434:	bf82      	ittt	hi
    b436:	eb03 0805 	addhi.w	r8, r3, r5
    b43a:	f240 135d 	movwhi	r3, #349	; 0x15d
    b43e:	60a3      	strhi	r3, [r4, #8]
    b440:	f857 3b1c 	ldr.w	r3, [r7], #28
    b444:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
    b448:	bf98      	it	ls
    b44a:	f04f 0800 	movls.w	r8, #0
    b44e:	6023      	str	r3, [r4, #0]
    b450:	463d      	mov	r5, r7
    b452:	f04f 0b00 	mov.w	fp, #0
    b456:	6831      	ldr	r1, [r6, #0]
    b458:	ab03      	add	r3, sp, #12
    b45a:	2202      	movs	r2, #2
    b45c:	7809      	ldrb	r1, [r1, #0]
    b45e:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
    b462:	f7fe fff5 	bl	a450 <memchr>
    b466:	b328      	cbz	r0, b4b4 <_scanf_i+0xb8>
    b468:	f1bb 0f01 	cmp.w	fp, #1
    b46c:	d159      	bne.n	b522 <_scanf_i+0x126>
    b46e:	6862      	ldr	r2, [r4, #4]
    b470:	b92a      	cbnz	r2, b47e <_scanf_i+0x82>
    b472:	6822      	ldr	r2, [r4, #0]
    b474:	2308      	movs	r3, #8
    b476:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    b47a:	6063      	str	r3, [r4, #4]
    b47c:	6022      	str	r2, [r4, #0]
    b47e:	6822      	ldr	r2, [r4, #0]
    b480:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
    b484:	6022      	str	r2, [r4, #0]
    b486:	68a2      	ldr	r2, [r4, #8]
    b488:	1e51      	subs	r1, r2, #1
    b48a:	60a1      	str	r1, [r4, #8]
    b48c:	b192      	cbz	r2, b4b4 <_scanf_i+0xb8>
    b48e:	6832      	ldr	r2, [r6, #0]
    b490:	1c51      	adds	r1, r2, #1
    b492:	6031      	str	r1, [r6, #0]
    b494:	7812      	ldrb	r2, [r2, #0]
    b496:	f805 2b01 	strb.w	r2, [r5], #1
    b49a:	6872      	ldr	r2, [r6, #4]
    b49c:	3a01      	subs	r2, #1
    b49e:	2a00      	cmp	r2, #0
    b4a0:	6072      	str	r2, [r6, #4]
    b4a2:	dc07      	bgt.n	b4b4 <_scanf_i+0xb8>
    b4a4:	f8d4 2180 	ldr.w	r2, [r4, #384]	; 0x180
    b4a8:	4631      	mov	r1, r6
    b4aa:	4650      	mov	r0, sl
    b4ac:	4790      	blx	r2
    b4ae:	2800      	cmp	r0, #0
    b4b0:	f040 8085 	bne.w	b5be <_scanf_i+0x1c2>
    b4b4:	f10b 0b01 	add.w	fp, fp, #1
    b4b8:	f1bb 0f03 	cmp.w	fp, #3
    b4bc:	d1cb      	bne.n	b456 <_scanf_i+0x5a>
    b4be:	6863      	ldr	r3, [r4, #4]
    b4c0:	b90b      	cbnz	r3, b4c6 <_scanf_i+0xca>
    b4c2:	230a      	movs	r3, #10
    b4c4:	6063      	str	r3, [r4, #4]
    b4c6:	6863      	ldr	r3, [r4, #4]
    b4c8:	4945      	ldr	r1, [pc, #276]	; (b5e0 <_scanf_i+0x1e4>)
    b4ca:	6960      	ldr	r0, [r4, #20]
    b4cc:	1ac9      	subs	r1, r1, r3
    b4ce:	f000 f907 	bl	b6e0 <__sccl>
    b4d2:	f04f 0b00 	mov.w	fp, #0
    b4d6:	68a3      	ldr	r3, [r4, #8]
    b4d8:	6822      	ldr	r2, [r4, #0]
    b4da:	2b00      	cmp	r3, #0
    b4dc:	d03d      	beq.n	b55a <_scanf_i+0x15e>
    b4de:	6831      	ldr	r1, [r6, #0]
    b4e0:	6960      	ldr	r0, [r4, #20]
    b4e2:	f891 c000 	ldrb.w	ip, [r1]
    b4e6:	f810 000c 	ldrb.w	r0, [r0, ip]
    b4ea:	2800      	cmp	r0, #0
    b4ec:	d035      	beq.n	b55a <_scanf_i+0x15e>
    b4ee:	f1bc 0f30 	cmp.w	ip, #48	; 0x30
    b4f2:	d124      	bne.n	b53e <_scanf_i+0x142>
    b4f4:	0510      	lsls	r0, r2, #20
    b4f6:	d522      	bpl.n	b53e <_scanf_i+0x142>
    b4f8:	f10b 0b01 	add.w	fp, fp, #1
    b4fc:	f1b8 0f00 	cmp.w	r8, #0
    b500:	d003      	beq.n	b50a <_scanf_i+0x10e>
    b502:	3301      	adds	r3, #1
    b504:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
    b508:	60a3      	str	r3, [r4, #8]
    b50a:	6873      	ldr	r3, [r6, #4]
    b50c:	3b01      	subs	r3, #1
    b50e:	2b00      	cmp	r3, #0
    b510:	6073      	str	r3, [r6, #4]
    b512:	dd1b      	ble.n	b54c <_scanf_i+0x150>
    b514:	6833      	ldr	r3, [r6, #0]
    b516:	3301      	adds	r3, #1
    b518:	6033      	str	r3, [r6, #0]
    b51a:	68a3      	ldr	r3, [r4, #8]
    b51c:	3b01      	subs	r3, #1
    b51e:	60a3      	str	r3, [r4, #8]
    b520:	e7d9      	b.n	b4d6 <_scanf_i+0xda>
    b522:	f1bb 0f02 	cmp.w	fp, #2
    b526:	d1ae      	bne.n	b486 <_scanf_i+0x8a>
    b528:	6822      	ldr	r2, [r4, #0]
    b52a:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
    b52e:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
    b532:	d1bf      	bne.n	b4b4 <_scanf_i+0xb8>
    b534:	2310      	movs	r3, #16
    b536:	6063      	str	r3, [r4, #4]
    b538:	f442 7280 	orr.w	r2, r2, #256	; 0x100
    b53c:	e7a2      	b.n	b484 <_scanf_i+0x88>
    b53e:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
    b542:	6022      	str	r2, [r4, #0]
    b544:	780b      	ldrb	r3, [r1, #0]
    b546:	f805 3b01 	strb.w	r3, [r5], #1
    b54a:	e7de      	b.n	b50a <_scanf_i+0x10e>
    b54c:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
    b550:	4631      	mov	r1, r6
    b552:	4650      	mov	r0, sl
    b554:	4798      	blx	r3
    b556:	2800      	cmp	r0, #0
    b558:	d0df      	beq.n	b51a <_scanf_i+0x11e>
    b55a:	6823      	ldr	r3, [r4, #0]
    b55c:	05d9      	lsls	r1, r3, #23
    b55e:	d50d      	bpl.n	b57c <_scanf_i+0x180>
    b560:	42bd      	cmp	r5, r7
    b562:	d909      	bls.n	b578 <_scanf_i+0x17c>
    b564:	f815 1c01 	ldrb.w	r1, [r5, #-1]
    b568:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    b56c:	4632      	mov	r2, r6
    b56e:	4650      	mov	r0, sl
    b570:	4798      	blx	r3
    b572:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
    b576:	4645      	mov	r5, r8
    b578:	42bd      	cmp	r5, r7
    b57a:	d028      	beq.n	b5ce <_scanf_i+0x1d2>
    b57c:	6822      	ldr	r2, [r4, #0]
    b57e:	f012 0210 	ands.w	r2, r2, #16
    b582:	d113      	bne.n	b5ac <_scanf_i+0x1b0>
    b584:	702a      	strb	r2, [r5, #0]
    b586:	6863      	ldr	r3, [r4, #4]
    b588:	9e01      	ldr	r6, [sp, #4]
    b58a:	4639      	mov	r1, r7
    b58c:	4650      	mov	r0, sl
    b58e:	47b0      	blx	r6
    b590:	f8d9 3000 	ldr.w	r3, [r9]
    b594:	6821      	ldr	r1, [r4, #0]
    b596:	1d1a      	adds	r2, r3, #4
    b598:	f8c9 2000 	str.w	r2, [r9]
    b59c:	f011 0f20 	tst.w	r1, #32
    b5a0:	681b      	ldr	r3, [r3, #0]
    b5a2:	d00f      	beq.n	b5c4 <_scanf_i+0x1c8>
    b5a4:	6018      	str	r0, [r3, #0]
    b5a6:	68e3      	ldr	r3, [r4, #12]
    b5a8:	3301      	adds	r3, #1
    b5aa:	60e3      	str	r3, [r4, #12]
    b5ac:	1bed      	subs	r5, r5, r7
    b5ae:	44ab      	add	fp, r5
    b5b0:	6925      	ldr	r5, [r4, #16]
    b5b2:	445d      	add	r5, fp
    b5b4:	6125      	str	r5, [r4, #16]
    b5b6:	2000      	movs	r0, #0
    b5b8:	b007      	add	sp, #28
    b5ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b5be:	f04f 0b00 	mov.w	fp, #0
    b5c2:	e7ca      	b.n	b55a <_scanf_i+0x15e>
    b5c4:	07ca      	lsls	r2, r1, #31
    b5c6:	bf4c      	ite	mi
    b5c8:	8018      	strhmi	r0, [r3, #0]
    b5ca:	6018      	strpl	r0, [r3, #0]
    b5cc:	e7eb      	b.n	b5a6 <_scanf_i+0x1aa>
    b5ce:	2001      	movs	r0, #1
    b5d0:	e7f2      	b.n	b5b8 <_scanf_i+0x1bc>
    b5d2:	bf00      	nop
    b5d4:	0000ddd4 	.word	0x0000ddd4
    b5d8:	0000b8bd 	.word	0x0000b8bd
    b5dc:	000089cd 	.word	0x000089cd
    b5e0:	0000ddf0 	.word	0x0000ddf0

0000b5e4 <_putc_r>:
_putc_r():
    b5e4:	b570      	push	{r4, r5, r6, lr}
    b5e6:	460d      	mov	r5, r1
    b5e8:	4614      	mov	r4, r2
    b5ea:	4606      	mov	r6, r0
    b5ec:	b118      	cbz	r0, b5f6 <_putc_r+0x12>
    b5ee:	6983      	ldr	r3, [r0, #24]
    b5f0:	b90b      	cbnz	r3, b5f6 <_putc_r+0x12>
    b5f2:	f7fe fa8f 	bl	9b14 <__sinit>
    b5f6:	4b1c      	ldr	r3, [pc, #112]	; (b668 <_putc_r+0x84>)
    b5f8:	429c      	cmp	r4, r3
    b5fa:	d124      	bne.n	b646 <_putc_r+0x62>
    b5fc:	6874      	ldr	r4, [r6, #4]
    b5fe:	6e63      	ldr	r3, [r4, #100]	; 0x64
    b600:	07d8      	lsls	r0, r3, #31
    b602:	d405      	bmi.n	b610 <_putc_r+0x2c>
    b604:	89a3      	ldrh	r3, [r4, #12]
    b606:	0599      	lsls	r1, r3, #22
    b608:	d402      	bmi.n	b610 <_putc_r+0x2c>
    b60a:	6da0      	ldr	r0, [r4, #88]	; 0x58
    b60c:	f7fb f8eb 	bl	67e6 <__retarget_lock_acquire_recursive>
    b610:	68a3      	ldr	r3, [r4, #8]
    b612:	3b01      	subs	r3, #1
    b614:	2b00      	cmp	r3, #0
    b616:	60a3      	str	r3, [r4, #8]
    b618:	da05      	bge.n	b626 <_putc_r+0x42>
    b61a:	69a2      	ldr	r2, [r4, #24]
    b61c:	4293      	cmp	r3, r2
    b61e:	db1c      	blt.n	b65a <_putc_r+0x76>
    b620:	b2eb      	uxtb	r3, r5
    b622:	2b0a      	cmp	r3, #10
    b624:	d019      	beq.n	b65a <_putc_r+0x76>
    b626:	6823      	ldr	r3, [r4, #0]
    b628:	1c5a      	adds	r2, r3, #1
    b62a:	6022      	str	r2, [r4, #0]
    b62c:	701d      	strb	r5, [r3, #0]
    b62e:	b2ed      	uxtb	r5, r5
    b630:	6e63      	ldr	r3, [r4, #100]	; 0x64
    b632:	07da      	lsls	r2, r3, #31
    b634:	d405      	bmi.n	b642 <_putc_r+0x5e>
    b636:	89a3      	ldrh	r3, [r4, #12]
    b638:	059b      	lsls	r3, r3, #22
    b63a:	d402      	bmi.n	b642 <_putc_r+0x5e>
    b63c:	6da0      	ldr	r0, [r4, #88]	; 0x58
    b63e:	f7fb f8d3 	bl	67e8 <__retarget_lock_release_recursive>
    b642:	4628      	mov	r0, r5
    b644:	bd70      	pop	{r4, r5, r6, pc}
    b646:	4b09      	ldr	r3, [pc, #36]	; (b66c <_putc_r+0x88>)
    b648:	429c      	cmp	r4, r3
    b64a:	d101      	bne.n	b650 <_putc_r+0x6c>
    b64c:	68b4      	ldr	r4, [r6, #8]
    b64e:	e7d6      	b.n	b5fe <_putc_r+0x1a>
    b650:	4b07      	ldr	r3, [pc, #28]	; (b670 <_putc_r+0x8c>)
    b652:	429c      	cmp	r4, r3
    b654:	bf08      	it	eq
    b656:	68f4      	ldreq	r4, [r6, #12]
    b658:	e7d1      	b.n	b5fe <_putc_r+0x1a>
    b65a:	4629      	mov	r1, r5
    b65c:	4622      	mov	r2, r4
    b65e:	4630      	mov	r0, r6
    b660:	f7fd fa28 	bl	8ab4 <__swbuf_r>
    b664:	4605      	mov	r5, r0
    b666:	e7e3      	b.n	b630 <_putc_r+0x4c>
    b668:	0000dc80 	.word	0x0000dc80
    b66c:	0000dca0 	.word	0x0000dca0
    b670:	0000dc60 	.word	0x0000dc60

0000b674 <__srget_r>:
__srget_r():
    b674:	b538      	push	{r3, r4, r5, lr}
    b676:	460c      	mov	r4, r1
    b678:	4605      	mov	r5, r0
    b67a:	b118      	cbz	r0, b684 <__srget_r+0x10>
    b67c:	6983      	ldr	r3, [r0, #24]
    b67e:	b90b      	cbnz	r3, b684 <__srget_r+0x10>
    b680:	f7fe fa48 	bl	9b14 <__sinit>
    b684:	4b0e      	ldr	r3, [pc, #56]	; (b6c0 <__srget_r+0x4c>)
    b686:	429c      	cmp	r4, r3
    b688:	d10d      	bne.n	b6a6 <__srget_r+0x32>
    b68a:	686c      	ldr	r4, [r5, #4]
    b68c:	4621      	mov	r1, r4
    b68e:	4628      	mov	r0, r5
    b690:	f000 f9d8 	bl	ba44 <__srefill_r>
    b694:	b988      	cbnz	r0, b6ba <__srget_r+0x46>
    b696:	6863      	ldr	r3, [r4, #4]
    b698:	3b01      	subs	r3, #1
    b69a:	6063      	str	r3, [r4, #4]
    b69c:	6823      	ldr	r3, [r4, #0]
    b69e:	1c5a      	adds	r2, r3, #1
    b6a0:	6022      	str	r2, [r4, #0]
    b6a2:	7818      	ldrb	r0, [r3, #0]
    b6a4:	bd38      	pop	{r3, r4, r5, pc}
    b6a6:	4b07      	ldr	r3, [pc, #28]	; (b6c4 <__srget_r+0x50>)
    b6a8:	429c      	cmp	r4, r3
    b6aa:	d101      	bne.n	b6b0 <__srget_r+0x3c>
    b6ac:	68ac      	ldr	r4, [r5, #8]
    b6ae:	e7ed      	b.n	b68c <__srget_r+0x18>
    b6b0:	4b05      	ldr	r3, [pc, #20]	; (b6c8 <__srget_r+0x54>)
    b6b2:	429c      	cmp	r4, r3
    b6b4:	bf08      	it	eq
    b6b6:	68ec      	ldreq	r4, [r5, #12]
    b6b8:	e7e8      	b.n	b68c <__srget_r+0x18>
    b6ba:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    b6be:	e7f1      	b.n	b6a4 <__srget_r+0x30>
    b6c0:	0000dc80 	.word	0x0000dc80
    b6c4:	0000dca0 	.word	0x0000dca0
    b6c8:	0000dc60 	.word	0x0000dc60
    b6cc:	ffffffff 	.word	0xffffffff

0000b6d0 <nan>:
nan():
    b6d0:	ed9f 0b01 	vldr	d0, [pc, #4]	; b6d8 <nan+0x8>
    b6d4:	4770      	bx	lr
    b6d6:	bf00      	nop
    b6d8:	00000000 	.word	0x00000000
    b6dc:	7ff80000 	.word	0x7ff80000

0000b6e0 <__sccl>:
__sccl():
    b6e0:	b570      	push	{r4, r5, r6, lr}
    b6e2:	780b      	ldrb	r3, [r1, #0]
    b6e4:	2b5e      	cmp	r3, #94	; 0x5e
    b6e6:	bf13      	iteet	ne
    b6e8:	1c4a      	addne	r2, r1, #1
    b6ea:	1c8a      	addeq	r2, r1, #2
    b6ec:	784b      	ldrbeq	r3, [r1, #1]
    b6ee:	2100      	movne	r1, #0
    b6f0:	bf08      	it	eq
    b6f2:	2101      	moveq	r1, #1
    b6f4:	1e44      	subs	r4, r0, #1
    b6f6:	f100 05ff 	add.w	r5, r0, #255	; 0xff
    b6fa:	f804 1f01 	strb.w	r1, [r4, #1]!
    b6fe:	42ac      	cmp	r4, r5
    b700:	d1fb      	bne.n	b6fa <__sccl+0x1a>
    b702:	b913      	cbnz	r3, b70a <__sccl+0x2a>
    b704:	3a01      	subs	r2, #1
    b706:	4610      	mov	r0, r2
    b708:	bd70      	pop	{r4, r5, r6, pc}
    b70a:	f081 0401 	eor.w	r4, r1, #1
    b70e:	54c4      	strb	r4, [r0, r3]
    b710:	1c51      	adds	r1, r2, #1
    b712:	f811 5c01 	ldrb.w	r5, [r1, #-1]
    b716:	2d2d      	cmp	r5, #45	; 0x2d
    b718:	f101 36ff 	add.w	r6, r1, #4294967295	; 0xffffffff
    b71c:	460a      	mov	r2, r1
    b71e:	d006      	beq.n	b72e <__sccl+0x4e>
    b720:	2d5d      	cmp	r5, #93	; 0x5d
    b722:	d0f0      	beq.n	b706 <__sccl+0x26>
    b724:	b90d      	cbnz	r5, b72a <__sccl+0x4a>
    b726:	4632      	mov	r2, r6
    b728:	e7ed      	b.n	b706 <__sccl+0x26>
    b72a:	462b      	mov	r3, r5
    b72c:	e7ef      	b.n	b70e <__sccl+0x2e>
    b72e:	780e      	ldrb	r6, [r1, #0]
    b730:	2e5d      	cmp	r6, #93	; 0x5d
    b732:	d0fa      	beq.n	b72a <__sccl+0x4a>
    b734:	42b3      	cmp	r3, r6
    b736:	dcf8      	bgt.n	b72a <__sccl+0x4a>
    b738:	3301      	adds	r3, #1
    b73a:	429e      	cmp	r6, r3
    b73c:	54c4      	strb	r4, [r0, r3]
    b73e:	dcfb      	bgt.n	b738 <__sccl+0x58>
    b740:	3102      	adds	r1, #2
    b742:	e7e6      	b.n	b712 <__sccl+0x32>

0000b744 <__sread>:
__sread():
    b744:	b510      	push	{r4, lr}
    b746:	460c      	mov	r4, r1
    b748:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    b74c:	f000 f95e 	bl	ba0c <_read_r>
    b750:	2800      	cmp	r0, #0
    b752:	bfab      	itete	ge
    b754:	6d63      	ldrge	r3, [r4, #84]	; 0x54
    b756:	89a3      	ldrhlt	r3, [r4, #12]
    b758:	181b      	addge	r3, r3, r0
    b75a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
    b75e:	bfac      	ite	ge
    b760:	6563      	strge	r3, [r4, #84]	; 0x54
    b762:	81a3      	strhlt	r3, [r4, #12]
    b764:	bd10      	pop	{r4, pc}

0000b766 <__seofread>:
__seofread():
    b766:	2000      	movs	r0, #0
    b768:	4770      	bx	lr

0000b76a <__swrite>:
__swrite():
    b76a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    b76e:	461f      	mov	r7, r3
    b770:	898b      	ldrh	r3, [r1, #12]
    b772:	05db      	lsls	r3, r3, #23
    b774:	4605      	mov	r5, r0
    b776:	460c      	mov	r4, r1
    b778:	4616      	mov	r6, r2
    b77a:	d505      	bpl.n	b788 <__swrite+0x1e>
    b77c:	2302      	movs	r3, #2
    b77e:	2200      	movs	r2, #0
    b780:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    b784:	f000 f928 	bl	b9d8 <_lseek_r>
    b788:	89a3      	ldrh	r3, [r4, #12]
    b78a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    b78e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
    b792:	81a3      	strh	r3, [r4, #12]
    b794:	4632      	mov	r2, r6
    b796:	463b      	mov	r3, r7
    b798:	4628      	mov	r0, r5
    b79a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    b79e:	f000 b8d7 	b.w	b950 <_write_r>

0000b7a2 <__sseek>:
__sseek():
    b7a2:	b510      	push	{r4, lr}
    b7a4:	460c      	mov	r4, r1
    b7a6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    b7aa:	f000 f915 	bl	b9d8 <_lseek_r>
    b7ae:	1c43      	adds	r3, r0, #1
    b7b0:	89a3      	ldrh	r3, [r4, #12]
    b7b2:	bf15      	itete	ne
    b7b4:	6560      	strne	r0, [r4, #84]	; 0x54
    b7b6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
    b7ba:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
    b7be:	81a3      	strheq	r3, [r4, #12]
    b7c0:	bf18      	it	ne
    b7c2:	81a3      	strhne	r3, [r4, #12]
    b7c4:	bd10      	pop	{r4, pc}

0000b7c6 <__sclose>:
__sclose():
    b7c6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    b7ca:	f000 b8d3 	b.w	b974 <_close_r>
    b7ce:	Address 0x000000000000b7ce is out of bounds.


0000b7d0 <_strtoul_l.isra.0>:
_strtoul_l.isra.0():
    b7d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    b7d4:	4f38      	ldr	r7, [pc, #224]	; (b8b8 <_strtoul_l.isra.0+0xe8>)
    b7d6:	4686      	mov	lr, r0
    b7d8:	4608      	mov	r0, r1
    b7da:	4605      	mov	r5, r0
    b7dc:	f815 4b01 	ldrb.w	r4, [r5], #1
    b7e0:	5de6      	ldrb	r6, [r4, r7]
    b7e2:	f016 0608 	ands.w	r6, r6, #8
    b7e6:	d131      	bne.n	b84c <_strtoul_l.isra.0+0x7c>
    b7e8:	2c2d      	cmp	r4, #45	; 0x2d
    b7ea:	d131      	bne.n	b850 <_strtoul_l.isra.0+0x80>
    b7ec:	782c      	ldrb	r4, [r5, #0]
    b7ee:	f04f 0801 	mov.w	r8, #1
    b7f2:	1c85      	adds	r5, r0, #2
    b7f4:	2b00      	cmp	r3, #0
    b7f6:	d05a      	beq.n	b8ae <_strtoul_l.isra.0+0xde>
    b7f8:	2b10      	cmp	r3, #16
    b7fa:	d109      	bne.n	b810 <_strtoul_l.isra.0+0x40>
    b7fc:	2c30      	cmp	r4, #48	; 0x30
    b7fe:	d107      	bne.n	b810 <_strtoul_l.isra.0+0x40>
    b800:	7828      	ldrb	r0, [r5, #0]
    b802:	f000 00df 	and.w	r0, r0, #223	; 0xdf
    b806:	2858      	cmp	r0, #88	; 0x58
    b808:	d14c      	bne.n	b8a4 <_strtoul_l.isra.0+0xd4>
    b80a:	786c      	ldrb	r4, [r5, #1]
    b80c:	2310      	movs	r3, #16
    b80e:	3502      	adds	r5, #2
    b810:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
    b814:	2600      	movs	r6, #0
    b816:	fbbc fcf3 	udiv	ip, ip, r3
    b81a:	fb03 f90c 	mul.w	r9, r3, ip
    b81e:	ea6f 0909 	mvn.w	r9, r9
    b822:	4630      	mov	r0, r6
    b824:	f1a4 0730 	sub.w	r7, r4, #48	; 0x30
    b828:	2f09      	cmp	r7, #9
    b82a:	d818      	bhi.n	b85e <_strtoul_l.isra.0+0x8e>
    b82c:	463c      	mov	r4, r7
    b82e:	42a3      	cmp	r3, r4
    b830:	dd24      	ble.n	b87c <_strtoul_l.isra.0+0xac>
    b832:	2e00      	cmp	r6, #0
    b834:	db1f      	blt.n	b876 <_strtoul_l.isra.0+0xa6>
    b836:	4584      	cmp	ip, r0
    b838:	d31d      	bcc.n	b876 <_strtoul_l.isra.0+0xa6>
    b83a:	d101      	bne.n	b840 <_strtoul_l.isra.0+0x70>
    b83c:	45a1      	cmp	r9, r4
    b83e:	db1a      	blt.n	b876 <_strtoul_l.isra.0+0xa6>
    b840:	fb00 4003 	mla	r0, r0, r3, r4
    b844:	2601      	movs	r6, #1
    b846:	f815 4b01 	ldrb.w	r4, [r5], #1
    b84a:	e7eb      	b.n	b824 <_strtoul_l.isra.0+0x54>
    b84c:	4628      	mov	r0, r5
    b84e:	e7c4      	b.n	b7da <_strtoul_l.isra.0+0xa>
    b850:	2c2b      	cmp	r4, #43	; 0x2b
    b852:	bf08      	it	eq
    b854:	782c      	ldrbeq	r4, [r5, #0]
    b856:	46b0      	mov	r8, r6
    b858:	bf08      	it	eq
    b85a:	1c85      	addeq	r5, r0, #2
    b85c:	e7ca      	b.n	b7f4 <_strtoul_l.isra.0+0x24>
    b85e:	f1a4 0741 	sub.w	r7, r4, #65	; 0x41
    b862:	2f19      	cmp	r7, #25
    b864:	d801      	bhi.n	b86a <_strtoul_l.isra.0+0x9a>
    b866:	3c37      	subs	r4, #55	; 0x37
    b868:	e7e1      	b.n	b82e <_strtoul_l.isra.0+0x5e>
    b86a:	f1a4 0761 	sub.w	r7, r4, #97	; 0x61
    b86e:	2f19      	cmp	r7, #25
    b870:	d804      	bhi.n	b87c <_strtoul_l.isra.0+0xac>
    b872:	3c57      	subs	r4, #87	; 0x57
    b874:	e7db      	b.n	b82e <_strtoul_l.isra.0+0x5e>
    b876:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
    b87a:	e7e4      	b.n	b846 <_strtoul_l.isra.0+0x76>
    b87c:	2e00      	cmp	r6, #0
    b87e:	da07      	bge.n	b890 <_strtoul_l.isra.0+0xc0>
    b880:	2322      	movs	r3, #34	; 0x22
    b882:	f8ce 3000 	str.w	r3, [lr]
    b886:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    b88a:	b942      	cbnz	r2, b89e <_strtoul_l.isra.0+0xce>
    b88c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    b890:	f1b8 0f00 	cmp.w	r8, #0
    b894:	d000      	beq.n	b898 <_strtoul_l.isra.0+0xc8>
    b896:	4240      	negs	r0, r0
    b898:	2a00      	cmp	r2, #0
    b89a:	d0f7      	beq.n	b88c <_strtoul_l.isra.0+0xbc>
    b89c:	b106      	cbz	r6, b8a0 <_strtoul_l.isra.0+0xd0>
    b89e:	1e69      	subs	r1, r5, #1
    b8a0:	6011      	str	r1, [r2, #0]
    b8a2:	e7f3      	b.n	b88c <_strtoul_l.isra.0+0xbc>
    b8a4:	2430      	movs	r4, #48	; 0x30
    b8a6:	2b00      	cmp	r3, #0
    b8a8:	d1b2      	bne.n	b810 <_strtoul_l.isra.0+0x40>
    b8aa:	2308      	movs	r3, #8
    b8ac:	e7b0      	b.n	b810 <_strtoul_l.isra.0+0x40>
    b8ae:	2c30      	cmp	r4, #48	; 0x30
    b8b0:	d0a6      	beq.n	b800 <_strtoul_l.isra.0+0x30>
    b8b2:	230a      	movs	r3, #10
    b8b4:	e7ac      	b.n	b810 <_strtoul_l.isra.0+0x40>
    b8b6:	bf00      	nop
    b8b8:	0000dab4 	.word	0x0000dab4

0000b8bc <_strtoul_r>:
_strtoul_r():
    b8bc:	f7ff bf88 	b.w	b7d0 <_strtoul_l.isra.0>

0000b8c0 <__submore>:
__submore():
    b8c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    b8c4:	460c      	mov	r4, r1
    b8c6:	6b49      	ldr	r1, [r1, #52]	; 0x34
    b8c8:	f104 0344 	add.w	r3, r4, #68	; 0x44
    b8cc:	4299      	cmp	r1, r3
    b8ce:	d11d      	bne.n	b90c <__submore+0x4c>
    b8d0:	f44f 6180 	mov.w	r1, #1024	; 0x400
    b8d4:	f7fb f818 	bl	6908 <_malloc_r>
    b8d8:	b918      	cbnz	r0, b8e2 <__submore+0x22>
    b8da:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    b8de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    b8e2:	f44f 6380 	mov.w	r3, #1024	; 0x400
    b8e6:	63a3      	str	r3, [r4, #56]	; 0x38
    b8e8:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
    b8ec:	6360      	str	r0, [r4, #52]	; 0x34
    b8ee:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
    b8f2:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
    b8f6:	f880 33fe 	strb.w	r3, [r0, #1022]	; 0x3fe
    b8fa:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
    b8fe:	f880 33fd 	strb.w	r3, [r0, #1021]	; 0x3fd
    b902:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
    b906:	6020      	str	r0, [r4, #0]
    b908:	2000      	movs	r0, #0
    b90a:	e7e8      	b.n	b8de <__submore+0x1e>
    b90c:	6ba6      	ldr	r6, [r4, #56]	; 0x38
    b90e:	0077      	lsls	r7, r6, #1
    b910:	463a      	mov	r2, r7
    b912:	f7ff f9ff 	bl	ad14 <_realloc_r>
    b916:	4605      	mov	r5, r0
    b918:	2800      	cmp	r0, #0
    b91a:	d0de      	beq.n	b8da <__submore+0x1a>
    b91c:	eb00 0806 	add.w	r8, r0, r6
    b920:	4601      	mov	r1, r0
    b922:	4632      	mov	r2, r6
    b924:	4640      	mov	r0, r8
    b926:	f7fa ff71 	bl	680c <memcpy>
    b92a:	f8c4 8000 	str.w	r8, [r4]
    b92e:	e9c4 570d 	strd	r5, r7, [r4, #52]	; 0x34
    b932:	e7e9      	b.n	b908 <__submore+0x48>

0000b934 <__ascii_wctomb>:
__ascii_wctomb():
    b934:	b149      	cbz	r1, b94a <__ascii_wctomb+0x16>
    b936:	2aff      	cmp	r2, #255	; 0xff
    b938:	bf85      	ittet	hi
    b93a:	238a      	movhi	r3, #138	; 0x8a
    b93c:	6003      	strhi	r3, [r0, #0]
    b93e:	700a      	strbls	r2, [r1, #0]
    b940:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
    b944:	bf98      	it	ls
    b946:	2001      	movls	r0, #1
    b948:	4770      	bx	lr
    b94a:	4608      	mov	r0, r1
    b94c:	4770      	bx	lr
    b94e:	Address 0x000000000000b94e is out of bounds.


0000b950 <_write_r>:
_write_r():
    b950:	b538      	push	{r3, r4, r5, lr}
    b952:	4c07      	ldr	r4, [pc, #28]	; (b970 <_write_r+0x20>)
    b954:	4605      	mov	r5, r0
    b956:	4608      	mov	r0, r1
    b958:	4611      	mov	r1, r2
    b95a:	2200      	movs	r2, #0
    b95c:	6022      	str	r2, [r4, #0]
    b95e:	461a      	mov	r2, r3
    b960:	f7f6 fc50 	bl	2204 <_write>
    b964:	1c43      	adds	r3, r0, #1
    b966:	d102      	bne.n	b96e <_write_r+0x1e>
    b968:	6823      	ldr	r3, [r4, #0]
    b96a:	b103      	cbz	r3, b96e <_write_r+0x1e>
    b96c:	602b      	str	r3, [r5, #0]
    b96e:	bd38      	pop	{r3, r4, r5, pc}
    b970:	1000147c 	.word	0x1000147c

0000b974 <_close_r>:
_close_r():
    b974:	b538      	push	{r3, r4, r5, lr}
    b976:	4c06      	ldr	r4, [pc, #24]	; (b990 <_close_r+0x1c>)
    b978:	2300      	movs	r3, #0
    b97a:	4605      	mov	r5, r0
    b97c:	4608      	mov	r0, r1
    b97e:	6023      	str	r3, [r4, #0]
    b980:	f7f6 fc36 	bl	21f0 <_close>
    b984:	1c43      	adds	r3, r0, #1
    b986:	d102      	bne.n	b98e <_close_r+0x1a>
    b988:	6823      	ldr	r3, [r4, #0]
    b98a:	b103      	cbz	r3, b98e <_close_r+0x1a>
    b98c:	602b      	str	r3, [r5, #0]
    b98e:	bd38      	pop	{r3, r4, r5, pc}
    b990:	1000147c 	.word	0x1000147c

0000b994 <_fstat_r>:
_fstat_r():
    b994:	b538      	push	{r3, r4, r5, lr}
    b996:	4c07      	ldr	r4, [pc, #28]	; (b9b4 <_fstat_r+0x20>)
    b998:	2300      	movs	r3, #0
    b99a:	4605      	mov	r5, r0
    b99c:	4608      	mov	r0, r1
    b99e:	4611      	mov	r1, r2
    b9a0:	6023      	str	r3, [r4, #0]
    b9a2:	f7f6 fc2b 	bl	21fc <_fstat>
    b9a6:	1c43      	adds	r3, r0, #1
    b9a8:	d102      	bne.n	b9b0 <_fstat_r+0x1c>
    b9aa:	6823      	ldr	r3, [r4, #0]
    b9ac:	b103      	cbz	r3, b9b0 <_fstat_r+0x1c>
    b9ae:	602b      	str	r3, [r5, #0]
    b9b0:	bd38      	pop	{r3, r4, r5, pc}
    b9b2:	bf00      	nop
    b9b4:	1000147c 	.word	0x1000147c

0000b9b8 <_isatty_r>:
_isatty_r():
    b9b8:	b538      	push	{r3, r4, r5, lr}
    b9ba:	4c06      	ldr	r4, [pc, #24]	; (b9d4 <_isatty_r+0x1c>)
    b9bc:	2300      	movs	r3, #0
    b9be:	4605      	mov	r5, r0
    b9c0:	4608      	mov	r0, r1
    b9c2:	6023      	str	r3, [r4, #0]
    b9c4:	f7f6 fc00 	bl	21c8 <_isatty>
    b9c8:	1c43      	adds	r3, r0, #1
    b9ca:	d102      	bne.n	b9d2 <_isatty_r+0x1a>
    b9cc:	6823      	ldr	r3, [r4, #0]
    b9ce:	b103      	cbz	r3, b9d2 <_isatty_r+0x1a>
    b9d0:	602b      	str	r3, [r5, #0]
    b9d2:	bd38      	pop	{r3, r4, r5, pc}
    b9d4:	1000147c 	.word	0x1000147c

0000b9d8 <_lseek_r>:
_lseek_r():
    b9d8:	b538      	push	{r3, r4, r5, lr}
    b9da:	4c07      	ldr	r4, [pc, #28]	; (b9f8 <_lseek_r+0x20>)
    b9dc:	4605      	mov	r5, r0
    b9de:	4608      	mov	r0, r1
    b9e0:	4611      	mov	r1, r2
    b9e2:	2200      	movs	r2, #0
    b9e4:	6022      	str	r2, [r4, #0]
    b9e6:	461a      	mov	r2, r3
    b9e8:	f7f6 fc0a 	bl	2200 <_lseek>
    b9ec:	1c43      	adds	r3, r0, #1
    b9ee:	d102      	bne.n	b9f6 <_lseek_r+0x1e>
    b9f0:	6823      	ldr	r3, [r4, #0]
    b9f2:	b103      	cbz	r3, b9f6 <_lseek_r+0x1e>
    b9f4:	602b      	str	r3, [r5, #0]
    b9f6:	bd38      	pop	{r3, r4, r5, pc}
    b9f8:	1000147c 	.word	0x1000147c

0000b9fc <_malloc_usable_size_r>:
_malloc_usable_size_r():
    b9fc:	f851 3c04 	ldr.w	r3, [r1, #-4]
    ba00:	1f18      	subs	r0, r3, #4
    ba02:	2b00      	cmp	r3, #0
    ba04:	bfbc      	itt	lt
    ba06:	580b      	ldrlt	r3, [r1, r0]
    ba08:	18c0      	addlt	r0, r0, r3
    ba0a:	4770      	bx	lr

0000ba0c <_read_r>:
_read_r():
    ba0c:	b538      	push	{r3, r4, r5, lr}
    ba0e:	4c07      	ldr	r4, [pc, #28]	; (ba2c <_read_r+0x20>)
    ba10:	4605      	mov	r5, r0
    ba12:	4608      	mov	r0, r1
    ba14:	4611      	mov	r1, r2
    ba16:	2200      	movs	r2, #0
    ba18:	6022      	str	r2, [r4, #0]
    ba1a:	461a      	mov	r2, r3
    ba1c:	f7f6 fc2a 	bl	2274 <_read>
    ba20:	1c43      	adds	r3, r0, #1
    ba22:	d102      	bne.n	ba2a <_read_r+0x1e>
    ba24:	6823      	ldr	r3, [r4, #0]
    ba26:	b103      	cbz	r3, ba2a <_read_r+0x1e>
    ba28:	602b      	str	r3, [r5, #0]
    ba2a:	bd38      	pop	{r3, r4, r5, pc}
    ba2c:	1000147c 	.word	0x1000147c

0000ba30 <lflush>:
lflush():
    ba30:	8983      	ldrh	r3, [r0, #12]
    ba32:	f003 0309 	and.w	r3, r3, #9
    ba36:	2b09      	cmp	r3, #9
    ba38:	d101      	bne.n	ba3e <lflush+0xe>
    ba3a:	f7fe b801 	b.w	9a40 <fflush>
    ba3e:	2000      	movs	r0, #0
    ba40:	4770      	bx	lr
    ba42:	Address 0x000000000000ba42 is out of bounds.


0000ba44 <__srefill_r>:
__srefill_r():
    ba44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    ba46:	460c      	mov	r4, r1
    ba48:	4605      	mov	r5, r0
    ba4a:	b118      	cbz	r0, ba54 <__srefill_r+0x10>
    ba4c:	6983      	ldr	r3, [r0, #24]
    ba4e:	b90b      	cbnz	r3, ba54 <__srefill_r+0x10>
    ba50:	f7fe f860 	bl	9b14 <__sinit>
    ba54:	4b3c      	ldr	r3, [pc, #240]	; (bb48 <__srefill_r+0x104>)
    ba56:	429c      	cmp	r4, r3
    ba58:	d10a      	bne.n	ba70 <__srefill_r+0x2c>
    ba5a:	686c      	ldr	r4, [r5, #4]
    ba5c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
    ba60:	2300      	movs	r3, #0
    ba62:	6063      	str	r3, [r4, #4]
    ba64:	b293      	uxth	r3, r2
    ba66:	069e      	lsls	r6, r3, #26
    ba68:	d50c      	bpl.n	ba84 <__srefill_r+0x40>
    ba6a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    ba6e:	e067      	b.n	bb40 <__srefill_r+0xfc>
    ba70:	4b36      	ldr	r3, [pc, #216]	; (bb4c <__srefill_r+0x108>)
    ba72:	429c      	cmp	r4, r3
    ba74:	d101      	bne.n	ba7a <__srefill_r+0x36>
    ba76:	68ac      	ldr	r4, [r5, #8]
    ba78:	e7f0      	b.n	ba5c <__srefill_r+0x18>
    ba7a:	4b35      	ldr	r3, [pc, #212]	; (bb50 <__srefill_r+0x10c>)
    ba7c:	429c      	cmp	r4, r3
    ba7e:	bf08      	it	eq
    ba80:	68ec      	ldreq	r4, [r5, #12]
    ba82:	e7eb      	b.n	ba5c <__srefill_r+0x18>
    ba84:	0758      	lsls	r0, r3, #29
    ba86:	d449      	bmi.n	bb1c <__srefill_r+0xd8>
    ba88:	06d9      	lsls	r1, r3, #27
    ba8a:	d405      	bmi.n	ba98 <__srefill_r+0x54>
    ba8c:	2309      	movs	r3, #9
    ba8e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
    ba92:	602b      	str	r3, [r5, #0]
    ba94:	81a2      	strh	r2, [r4, #12]
    ba96:	e7e8      	b.n	ba6a <__srefill_r+0x26>
    ba98:	071a      	lsls	r2, r3, #28
    ba9a:	d50b      	bpl.n	bab4 <__srefill_r+0x70>
    ba9c:	4621      	mov	r1, r4
    ba9e:	4628      	mov	r0, r5
    baa0:	f7fd ff92 	bl	99c8 <_fflush_r>
    baa4:	2800      	cmp	r0, #0
    baa6:	d1e0      	bne.n	ba6a <__srefill_r+0x26>
    baa8:	89a3      	ldrh	r3, [r4, #12]
    baaa:	60a0      	str	r0, [r4, #8]
    baac:	f023 0308 	bic.w	r3, r3, #8
    bab0:	81a3      	strh	r3, [r4, #12]
    bab2:	61a0      	str	r0, [r4, #24]
    bab4:	89a3      	ldrh	r3, [r4, #12]
    bab6:	f043 0304 	orr.w	r3, r3, #4
    baba:	81a3      	strh	r3, [r4, #12]
    babc:	6923      	ldr	r3, [r4, #16]
    babe:	b91b      	cbnz	r3, bac8 <__srefill_r+0x84>
    bac0:	4621      	mov	r1, r4
    bac2:	4628      	mov	r0, r5
    bac4:	f7fe fc70 	bl	a3a8 <__smakebuf_r>
    bac8:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
    bacc:	b2be      	uxth	r6, r7
    bace:	07b3      	lsls	r3, r6, #30
    bad0:	d00f      	beq.n	baf2 <__srefill_r+0xae>
    bad2:	2301      	movs	r3, #1
    bad4:	81a3      	strh	r3, [r4, #12]
    bad6:	4b1f      	ldr	r3, [pc, #124]	; (bb54 <__srefill_r+0x110>)
    bad8:	491f      	ldr	r1, [pc, #124]	; (bb58 <__srefill_r+0x114>)
    bada:	6818      	ldr	r0, [r3, #0]
    badc:	f006 0609 	and.w	r6, r6, #9
    bae0:	f7fe f896 	bl	9c10 <_fwalk>
    bae4:	2e09      	cmp	r6, #9
    bae6:	81a7      	strh	r7, [r4, #12]
    bae8:	d103      	bne.n	baf2 <__srefill_r+0xae>
    baea:	4621      	mov	r1, r4
    baec:	4628      	mov	r0, r5
    baee:	f7fd fee5 	bl	98bc <__sflush_r>
    baf2:	6922      	ldr	r2, [r4, #16]
    baf4:	6022      	str	r2, [r4, #0]
    baf6:	6a66      	ldr	r6, [r4, #36]	; 0x24
    baf8:	6963      	ldr	r3, [r4, #20]
    bafa:	6a21      	ldr	r1, [r4, #32]
    bafc:	4628      	mov	r0, r5
    bafe:	47b0      	blx	r6
    bb00:	2800      	cmp	r0, #0
    bb02:	6060      	str	r0, [r4, #4]
    bb04:	dc1d      	bgt.n	bb42 <__srefill_r+0xfe>
    bb06:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    bb0a:	bf17      	itett	ne
    bb0c:	2200      	movne	r2, #0
    bb0e:	f043 0320 	orreq.w	r3, r3, #32
    bb12:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
    bb16:	6062      	strne	r2, [r4, #4]
    bb18:	81a3      	strh	r3, [r4, #12]
    bb1a:	e7a6      	b.n	ba6a <__srefill_r+0x26>
    bb1c:	6b61      	ldr	r1, [r4, #52]	; 0x34
    bb1e:	2900      	cmp	r1, #0
    bb20:	d0cc      	beq.n	babc <__srefill_r+0x78>
    bb22:	f104 0344 	add.w	r3, r4, #68	; 0x44
    bb26:	4299      	cmp	r1, r3
    bb28:	d002      	beq.n	bb30 <__srefill_r+0xec>
    bb2a:	4628      	mov	r0, r5
    bb2c:	f7fa fe9e 	bl	686c <_free_r>
    bb30:	6c23      	ldr	r3, [r4, #64]	; 0x40
    bb32:	6063      	str	r3, [r4, #4]
    bb34:	2000      	movs	r0, #0
    bb36:	6360      	str	r0, [r4, #52]	; 0x34
    bb38:	2b00      	cmp	r3, #0
    bb3a:	d0bf      	beq.n	babc <__srefill_r+0x78>
    bb3c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    bb3e:	6023      	str	r3, [r4, #0]
    bb40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    bb42:	2000      	movs	r0, #0
    bb44:	e7fc      	b.n	bb40 <__srefill_r+0xfc>
    bb46:	bf00      	nop
    bb48:	0000dc80 	.word	0x0000dc80
    bb4c:	0000dca0 	.word	0x0000dca0
    bb50:	0000dc60 	.word	0x0000dc60
    bb54:	0000dbb4 	.word	0x0000dbb4
    bb58:	0000ba31 	.word	0x0000ba31

0000bb5c <__aeabi_dmul>:
__muldf3():
    bb5c:	b570      	push	{r4, r5, r6, lr}
    bb5e:	f04f 0cff 	mov.w	ip, #255	; 0xff
    bb62:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
    bb66:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
    bb6a:	bf1d      	ittte	ne
    bb6c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
    bb70:	ea94 0f0c 	teqne	r4, ip
    bb74:	ea95 0f0c 	teqne	r5, ip
    bb78:	f000 f8de 	bleq	bd38 <__aeabi_dmul+0x1dc>
    bb7c:	442c      	add	r4, r5
    bb7e:	ea81 0603 	eor.w	r6, r1, r3
    bb82:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
    bb86:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
    bb8a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
    bb8e:	bf18      	it	ne
    bb90:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
    bb94:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    bb98:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
    bb9c:	d038      	beq.n	bc10 <__aeabi_dmul+0xb4>
    bb9e:	fba0 ce02 	umull	ip, lr, r0, r2
    bba2:	f04f 0500 	mov.w	r5, #0
    bba6:	fbe1 e502 	umlal	lr, r5, r1, r2
    bbaa:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
    bbae:	fbe0 e503 	umlal	lr, r5, r0, r3
    bbb2:	f04f 0600 	mov.w	r6, #0
    bbb6:	fbe1 5603 	umlal	r5, r6, r1, r3
    bbba:	f09c 0f00 	teq	ip, #0
    bbbe:	bf18      	it	ne
    bbc0:	f04e 0e01 	orrne.w	lr, lr, #1
    bbc4:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
    bbc8:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
    bbcc:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
    bbd0:	d204      	bcs.n	bbdc <__aeabi_dmul+0x80>
    bbd2:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
    bbd6:	416d      	adcs	r5, r5
    bbd8:	eb46 0606 	adc.w	r6, r6, r6
    bbdc:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
    bbe0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
    bbe4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
    bbe8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
    bbec:	ea4f 2ece 	mov.w	lr, lr, lsl #11
    bbf0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
    bbf4:	bf88      	it	hi
    bbf6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
    bbfa:	d81e      	bhi.n	bc3a <__aeabi_dmul+0xde>
    bbfc:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
    bc00:	bf08      	it	eq
    bc02:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
    bc06:	f150 0000 	adcs.w	r0, r0, #0
    bc0a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
    bc0e:	bd70      	pop	{r4, r5, r6, pc}
    bc10:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
    bc14:	ea46 0101 	orr.w	r1, r6, r1
    bc18:	ea40 0002 	orr.w	r0, r0, r2
    bc1c:	ea81 0103 	eor.w	r1, r1, r3
    bc20:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
    bc24:	bfc2      	ittt	gt
    bc26:	ebd4 050c 	rsbsgt	r5, r4, ip
    bc2a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
    bc2e:	bd70      	popgt	{r4, r5, r6, pc}
    bc30:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    bc34:	f04f 0e00 	mov.w	lr, #0
    bc38:	3c01      	subs	r4, #1
    bc3a:	f300 80ab 	bgt.w	bd94 <__aeabi_dmul+0x238>
    bc3e:	f114 0f36 	cmn.w	r4, #54	; 0x36
    bc42:	bfde      	ittt	le
    bc44:	2000      	movle	r0, #0
    bc46:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
    bc4a:	bd70      	pople	{r4, r5, r6, pc}
    bc4c:	f1c4 0400 	rsb	r4, r4, #0
    bc50:	3c20      	subs	r4, #32
    bc52:	da35      	bge.n	bcc0 <__aeabi_dmul+0x164>
    bc54:	340c      	adds	r4, #12
    bc56:	dc1b      	bgt.n	bc90 <__aeabi_dmul+0x134>
    bc58:	f104 0414 	add.w	r4, r4, #20
    bc5c:	f1c4 0520 	rsb	r5, r4, #32
    bc60:	fa00 f305 	lsl.w	r3, r0, r5
    bc64:	fa20 f004 	lsr.w	r0, r0, r4
    bc68:	fa01 f205 	lsl.w	r2, r1, r5
    bc6c:	ea40 0002 	orr.w	r0, r0, r2
    bc70:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
    bc74:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
    bc78:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
    bc7c:	fa21 f604 	lsr.w	r6, r1, r4
    bc80:	eb42 0106 	adc.w	r1, r2, r6
    bc84:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
    bc88:	bf08      	it	eq
    bc8a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
    bc8e:	bd70      	pop	{r4, r5, r6, pc}
    bc90:	f1c4 040c 	rsb	r4, r4, #12
    bc94:	f1c4 0520 	rsb	r5, r4, #32
    bc98:	fa00 f304 	lsl.w	r3, r0, r4
    bc9c:	fa20 f005 	lsr.w	r0, r0, r5
    bca0:	fa01 f204 	lsl.w	r2, r1, r4
    bca4:	ea40 0002 	orr.w	r0, r0, r2
    bca8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    bcac:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
    bcb0:	f141 0100 	adc.w	r1, r1, #0
    bcb4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
    bcb8:	bf08      	it	eq
    bcba:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
    bcbe:	bd70      	pop	{r4, r5, r6, pc}
    bcc0:	f1c4 0520 	rsb	r5, r4, #32
    bcc4:	fa00 f205 	lsl.w	r2, r0, r5
    bcc8:	ea4e 0e02 	orr.w	lr, lr, r2
    bccc:	fa20 f304 	lsr.w	r3, r0, r4
    bcd0:	fa01 f205 	lsl.w	r2, r1, r5
    bcd4:	ea43 0302 	orr.w	r3, r3, r2
    bcd8:	fa21 f004 	lsr.w	r0, r1, r4
    bcdc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    bce0:	fa21 f204 	lsr.w	r2, r1, r4
    bce4:	ea20 0002 	bic.w	r0, r0, r2
    bce8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
    bcec:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
    bcf0:	bf08      	it	eq
    bcf2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
    bcf6:	bd70      	pop	{r4, r5, r6, pc}
    bcf8:	f094 0f00 	teq	r4, #0
    bcfc:	d10f      	bne.n	bd1e <__aeabi_dmul+0x1c2>
    bcfe:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
    bd02:	0040      	lsls	r0, r0, #1
    bd04:	eb41 0101 	adc.w	r1, r1, r1
    bd08:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    bd0c:	bf08      	it	eq
    bd0e:	3c01      	subeq	r4, #1
    bd10:	d0f7      	beq.n	bd02 <__aeabi_dmul+0x1a6>
    bd12:	ea41 0106 	orr.w	r1, r1, r6
    bd16:	f095 0f00 	teq	r5, #0
    bd1a:	bf18      	it	ne
    bd1c:	4770      	bxne	lr
    bd1e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
    bd22:	0052      	lsls	r2, r2, #1
    bd24:	eb43 0303 	adc.w	r3, r3, r3
    bd28:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
    bd2c:	bf08      	it	eq
    bd2e:	3d01      	subeq	r5, #1
    bd30:	d0f7      	beq.n	bd22 <__aeabi_dmul+0x1c6>
    bd32:	ea43 0306 	orr.w	r3, r3, r6
    bd36:	4770      	bx	lr
    bd38:	ea94 0f0c 	teq	r4, ip
    bd3c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
    bd40:	bf18      	it	ne
    bd42:	ea95 0f0c 	teqne	r5, ip
    bd46:	d00c      	beq.n	bd62 <__aeabi_dmul+0x206>
    bd48:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
    bd4c:	bf18      	it	ne
    bd4e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
    bd52:	d1d1      	bne.n	bcf8 <__aeabi_dmul+0x19c>
    bd54:	ea81 0103 	eor.w	r1, r1, r3
    bd58:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    bd5c:	f04f 0000 	mov.w	r0, #0
    bd60:	bd70      	pop	{r4, r5, r6, pc}
    bd62:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
    bd66:	bf06      	itte	eq
    bd68:	4610      	moveq	r0, r2
    bd6a:	4619      	moveq	r1, r3
    bd6c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
    bd70:	d019      	beq.n	bda6 <__aeabi_dmul+0x24a>
    bd72:	ea94 0f0c 	teq	r4, ip
    bd76:	d102      	bne.n	bd7e <__aeabi_dmul+0x222>
    bd78:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
    bd7c:	d113      	bne.n	bda6 <__aeabi_dmul+0x24a>
    bd7e:	ea95 0f0c 	teq	r5, ip
    bd82:	d105      	bne.n	bd90 <__aeabi_dmul+0x234>
    bd84:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
    bd88:	bf1c      	itt	ne
    bd8a:	4610      	movne	r0, r2
    bd8c:	4619      	movne	r1, r3
    bd8e:	d10a      	bne.n	bda6 <__aeabi_dmul+0x24a>
    bd90:	ea81 0103 	eor.w	r1, r1, r3
    bd94:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    bd98:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
    bd9c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
    bda0:	f04f 0000 	mov.w	r0, #0
    bda4:	bd70      	pop	{r4, r5, r6, pc}
    bda6:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
    bdaa:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
    bdae:	bd70      	pop	{r4, r5, r6, pc}

0000bdb0 <__aeabi_ddiv>:
__divdf3():
    bdb0:	b570      	push	{r4, r5, r6, lr}
    bdb2:	f04f 0cff 	mov.w	ip, #255	; 0xff
    bdb6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
    bdba:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
    bdbe:	bf1d      	ittte	ne
    bdc0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
    bdc4:	ea94 0f0c 	teqne	r4, ip
    bdc8:	ea95 0f0c 	teqne	r5, ip
    bdcc:	f000 f8a7 	bleq	bf1e <__aeabi_ddiv+0x16e>
    bdd0:	eba4 0405 	sub.w	r4, r4, r5
    bdd4:	ea81 0e03 	eor.w	lr, r1, r3
    bdd8:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
    bddc:	ea4f 3101 	mov.w	r1, r1, lsl #12
    bde0:	f000 8088 	beq.w	bef4 <__aeabi_ddiv+0x144>
    bde4:	ea4f 3303 	mov.w	r3, r3, lsl #12
    bde8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
    bdec:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
    bdf0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
    bdf4:	ea4f 2202 	mov.w	r2, r2, lsl #8
    bdf8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
    bdfc:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
    be00:	ea4f 2600 	mov.w	r6, r0, lsl #8
    be04:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
    be08:	429d      	cmp	r5, r3
    be0a:	bf08      	it	eq
    be0c:	4296      	cmpeq	r6, r2
    be0e:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
    be12:	f504 7440 	add.w	r4, r4, #768	; 0x300
    be16:	d202      	bcs.n	be1e <__aeabi_ddiv+0x6e>
    be18:	085b      	lsrs	r3, r3, #1
    be1a:	ea4f 0232 	mov.w	r2, r2, rrx
    be1e:	1ab6      	subs	r6, r6, r2
    be20:	eb65 0503 	sbc.w	r5, r5, r3
    be24:	085b      	lsrs	r3, r3, #1
    be26:	ea4f 0232 	mov.w	r2, r2, rrx
    be2a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
    be2e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
    be32:	ebb6 0e02 	subs.w	lr, r6, r2
    be36:	eb75 0e03 	sbcs.w	lr, r5, r3
    be3a:	bf22      	ittt	cs
    be3c:	1ab6      	subcs	r6, r6, r2
    be3e:	4675      	movcs	r5, lr
    be40:	ea40 000c 	orrcs.w	r0, r0, ip
    be44:	085b      	lsrs	r3, r3, #1
    be46:	ea4f 0232 	mov.w	r2, r2, rrx
    be4a:	ebb6 0e02 	subs.w	lr, r6, r2
    be4e:	eb75 0e03 	sbcs.w	lr, r5, r3
    be52:	bf22      	ittt	cs
    be54:	1ab6      	subcs	r6, r6, r2
    be56:	4675      	movcs	r5, lr
    be58:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
    be5c:	085b      	lsrs	r3, r3, #1
    be5e:	ea4f 0232 	mov.w	r2, r2, rrx
    be62:	ebb6 0e02 	subs.w	lr, r6, r2
    be66:	eb75 0e03 	sbcs.w	lr, r5, r3
    be6a:	bf22      	ittt	cs
    be6c:	1ab6      	subcs	r6, r6, r2
    be6e:	4675      	movcs	r5, lr
    be70:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
    be74:	085b      	lsrs	r3, r3, #1
    be76:	ea4f 0232 	mov.w	r2, r2, rrx
    be7a:	ebb6 0e02 	subs.w	lr, r6, r2
    be7e:	eb75 0e03 	sbcs.w	lr, r5, r3
    be82:	bf22      	ittt	cs
    be84:	1ab6      	subcs	r6, r6, r2
    be86:	4675      	movcs	r5, lr
    be88:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
    be8c:	ea55 0e06 	orrs.w	lr, r5, r6
    be90:	d018      	beq.n	bec4 <__aeabi_ddiv+0x114>
    be92:	ea4f 1505 	mov.w	r5, r5, lsl #4
    be96:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
    be9a:	ea4f 1606 	mov.w	r6, r6, lsl #4
    be9e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
    bea2:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
    bea6:	ea4f 02c2 	mov.w	r2, r2, lsl #3
    beaa:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
    beae:	d1c0      	bne.n	be32 <__aeabi_ddiv+0x82>
    beb0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    beb4:	d10b      	bne.n	bece <__aeabi_ddiv+0x11e>
    beb6:	ea41 0100 	orr.w	r1, r1, r0
    beba:	f04f 0000 	mov.w	r0, #0
    bebe:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
    bec2:	e7b6      	b.n	be32 <__aeabi_ddiv+0x82>
    bec4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    bec8:	bf04      	itt	eq
    beca:	4301      	orreq	r1, r0
    becc:	2000      	moveq	r0, #0
    bece:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
    bed2:	bf88      	it	hi
    bed4:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
    bed8:	f63f aeaf 	bhi.w	bc3a <__aeabi_dmul+0xde>
    bedc:	ebb5 0c03 	subs.w	ip, r5, r3
    bee0:	bf04      	itt	eq
    bee2:	ebb6 0c02 	subseq.w	ip, r6, r2
    bee6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
    beea:	f150 0000 	adcs.w	r0, r0, #0
    beee:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
    bef2:	bd70      	pop	{r4, r5, r6, pc}
    bef4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
    bef8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
    befc:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
    bf00:	bfc2      	ittt	gt
    bf02:	ebd4 050c 	rsbsgt	r5, r4, ip
    bf06:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
    bf0a:	bd70      	popgt	{r4, r5, r6, pc}
    bf0c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    bf10:	f04f 0e00 	mov.w	lr, #0
    bf14:	3c01      	subs	r4, #1
    bf16:	e690      	b.n	bc3a <__aeabi_dmul+0xde>
    bf18:	ea45 0e06 	orr.w	lr, r5, r6
    bf1c:	e68d      	b.n	bc3a <__aeabi_dmul+0xde>
    bf1e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
    bf22:	ea94 0f0c 	teq	r4, ip
    bf26:	bf08      	it	eq
    bf28:	ea95 0f0c 	teqeq	r5, ip
    bf2c:	f43f af3b 	beq.w	bda6 <__aeabi_dmul+0x24a>
    bf30:	ea94 0f0c 	teq	r4, ip
    bf34:	d10a      	bne.n	bf4c <__aeabi_ddiv+0x19c>
    bf36:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
    bf3a:	f47f af34 	bne.w	bda6 <__aeabi_dmul+0x24a>
    bf3e:	ea95 0f0c 	teq	r5, ip
    bf42:	f47f af25 	bne.w	bd90 <__aeabi_dmul+0x234>
    bf46:	4610      	mov	r0, r2
    bf48:	4619      	mov	r1, r3
    bf4a:	e72c      	b.n	bda6 <__aeabi_dmul+0x24a>
    bf4c:	ea95 0f0c 	teq	r5, ip
    bf50:	d106      	bne.n	bf60 <__aeabi_ddiv+0x1b0>
    bf52:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
    bf56:	f43f aefd 	beq.w	bd54 <__aeabi_dmul+0x1f8>
    bf5a:	4610      	mov	r0, r2
    bf5c:	4619      	mov	r1, r3
    bf5e:	e722      	b.n	bda6 <__aeabi_dmul+0x24a>
    bf60:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
    bf64:	bf18      	it	ne
    bf66:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
    bf6a:	f47f aec5 	bne.w	bcf8 <__aeabi_dmul+0x19c>
    bf6e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
    bf72:	f47f af0d 	bne.w	bd90 <__aeabi_dmul+0x234>
    bf76:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
    bf7a:	f47f aeeb 	bne.w	bd54 <__aeabi_dmul+0x1f8>
    bf7e:	e712      	b.n	bda6 <__aeabi_dmul+0x24a>

0000bf80 <__gedf2>:
__gedf2():
    bf80:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
    bf84:	e006      	b.n	bf94 <__cmpdf2+0x4>
    bf86:	bf00      	nop

0000bf88 <__ledf2>:
__ledf2():
    bf88:	f04f 0c01 	mov.w	ip, #1
    bf8c:	e002      	b.n	bf94 <__cmpdf2+0x4>
    bf8e:	bf00      	nop

0000bf90 <__cmpdf2>:
__nedf2():
    bf90:	f04f 0c01 	mov.w	ip, #1
    bf94:	f84d cd04 	str.w	ip, [sp, #-4]!
    bf98:	ea4f 0c41 	mov.w	ip, r1, lsl #1
    bf9c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    bfa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
    bfa4:	bf18      	it	ne
    bfa6:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
    bfaa:	d01b      	beq.n	bfe4 <__cmpdf2+0x54>
    bfac:	b001      	add	sp, #4
    bfae:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
    bfb2:	bf0c      	ite	eq
    bfb4:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
    bfb8:	ea91 0f03 	teqne	r1, r3
    bfbc:	bf02      	ittt	eq
    bfbe:	ea90 0f02 	teqeq	r0, r2
    bfc2:	2000      	moveq	r0, #0
    bfc4:	4770      	bxeq	lr
    bfc6:	f110 0f00 	cmn.w	r0, #0
    bfca:	ea91 0f03 	teq	r1, r3
    bfce:	bf58      	it	pl
    bfd0:	4299      	cmppl	r1, r3
    bfd2:	bf08      	it	eq
    bfd4:	4290      	cmpeq	r0, r2
    bfd6:	bf2c      	ite	cs
    bfd8:	17d8      	asrcs	r0, r3, #31
    bfda:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
    bfde:	f040 0001 	orr.w	r0, r0, #1
    bfe2:	4770      	bx	lr
    bfe4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
    bfe8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    bfec:	d102      	bne.n	bff4 <__cmpdf2+0x64>
    bfee:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
    bff2:	d107      	bne.n	c004 <__cmpdf2+0x74>
    bff4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
    bff8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    bffc:	d1d6      	bne.n	bfac <__cmpdf2+0x1c>
    bffe:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
    c002:	d0d3      	beq.n	bfac <__cmpdf2+0x1c>
    c004:	f85d 0b04 	ldr.w	r0, [sp], #4
    c008:	4770      	bx	lr
    c00a:	bf00      	nop

0000c00c <__aeabi_cdrcmple>:
__aeabi_cdrcmple():
    c00c:	4684      	mov	ip, r0
    c00e:	4610      	mov	r0, r2
    c010:	4662      	mov	r2, ip
    c012:	468c      	mov	ip, r1
    c014:	4619      	mov	r1, r3
    c016:	4663      	mov	r3, ip
    c018:	e000      	b.n	c01c <__aeabi_cdcmpeq>
    c01a:	bf00      	nop

0000c01c <__aeabi_cdcmpeq>:
__aeabi_cdcmpeq():
    c01c:	b501      	push	{r0, lr}
    c01e:	f7ff ffb7 	bl	bf90 <__cmpdf2>
    c022:	2800      	cmp	r0, #0
    c024:	bf48      	it	mi
    c026:	f110 0f00 	cmnmi.w	r0, #0
    c02a:	bd01      	pop	{r0, pc}

0000c02c <__aeabi_dcmpeq>:
__aeabi_dcmpeq():
    c02c:	f84d ed08 	str.w	lr, [sp, #-8]!
    c030:	f7ff fff4 	bl	c01c <__aeabi_cdcmpeq>
    c034:	bf0c      	ite	eq
    c036:	2001      	moveq	r0, #1
    c038:	2000      	movne	r0, #0
    c03a:	f85d fb08 	ldr.w	pc, [sp], #8
    c03e:	bf00      	nop

0000c040 <__aeabi_dcmplt>:
__aeabi_dcmplt():
    c040:	f84d ed08 	str.w	lr, [sp, #-8]!
    c044:	f7ff ffea 	bl	c01c <__aeabi_cdcmpeq>
    c048:	bf34      	ite	cc
    c04a:	2001      	movcc	r0, #1
    c04c:	2000      	movcs	r0, #0
    c04e:	f85d fb08 	ldr.w	pc, [sp], #8
    c052:	bf00      	nop

0000c054 <__aeabi_dcmple>:
__aeabi_dcmple():
    c054:	f84d ed08 	str.w	lr, [sp, #-8]!
    c058:	f7ff ffe0 	bl	c01c <__aeabi_cdcmpeq>
    c05c:	bf94      	ite	ls
    c05e:	2001      	movls	r0, #1
    c060:	2000      	movhi	r0, #0
    c062:	f85d fb08 	ldr.w	pc, [sp], #8
    c066:	bf00      	nop

0000c068 <__aeabi_dcmpge>:
__aeabi_dcmpge():
    c068:	f84d ed08 	str.w	lr, [sp, #-8]!
    c06c:	f7ff ffce 	bl	c00c <__aeabi_cdrcmple>
    c070:	bf94      	ite	ls
    c072:	2001      	movls	r0, #1
    c074:	2000      	movhi	r0, #0
    c076:	f85d fb08 	ldr.w	pc, [sp], #8
    c07a:	bf00      	nop

0000c07c <__aeabi_dcmpgt>:
__aeabi_dcmpgt():
    c07c:	f84d ed08 	str.w	lr, [sp, #-8]!
    c080:	f7ff ffc4 	bl	c00c <__aeabi_cdrcmple>
    c084:	bf34      	ite	cc
    c086:	2001      	movcc	r0, #1
    c088:	2000      	movcs	r0, #0
    c08a:	f85d fb08 	ldr.w	pc, [sp], #8
    c08e:	bf00      	nop

0000c090 <__aeabi_dcmpun>:
__unorddf2():
    c090:	ea4f 0c41 	mov.w	ip, r1, lsl #1
    c094:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    c098:	d102      	bne.n	c0a0 <__aeabi_dcmpun+0x10>
    c09a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
    c09e:	d10a      	bne.n	c0b6 <__aeabi_dcmpun+0x26>
    c0a0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
    c0a4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    c0a8:	d102      	bne.n	c0b0 <__aeabi_dcmpun+0x20>
    c0aa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
    c0ae:	d102      	bne.n	c0b6 <__aeabi_dcmpun+0x26>
    c0b0:	f04f 0000 	mov.w	r0, #0
    c0b4:	4770      	bx	lr
    c0b6:	f04f 0001 	mov.w	r0, #1
    c0ba:	4770      	bx	lr

0000c0bc <__aeabi_d2iz>:
__aeabi_d2iz():
    c0bc:	ea4f 0241 	mov.w	r2, r1, lsl #1
    c0c0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
    c0c4:	d215      	bcs.n	c0f2 <__aeabi_d2iz+0x36>
    c0c6:	d511      	bpl.n	c0ec <__aeabi_d2iz+0x30>
    c0c8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
    c0cc:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
    c0d0:	d912      	bls.n	c0f8 <__aeabi_d2iz+0x3c>
    c0d2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
    c0d6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
    c0da:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
    c0de:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
    c0e2:	fa23 f002 	lsr.w	r0, r3, r2
    c0e6:	bf18      	it	ne
    c0e8:	4240      	negne	r0, r0
    c0ea:	4770      	bx	lr
    c0ec:	f04f 0000 	mov.w	r0, #0
    c0f0:	4770      	bx	lr
    c0f2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
    c0f6:	d105      	bne.n	c104 <__aeabi_d2iz+0x48>
    c0f8:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
    c0fc:	bf08      	it	eq
    c0fe:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
    c102:	4770      	bx	lr
    c104:	f04f 0000 	mov.w	r0, #0
    c108:	4770      	bx	lr
    c10a:	bf00      	nop

0000c10c <__aeabi_d2uiz>:
__aeabi_d2uiz():
    c10c:	004a      	lsls	r2, r1, #1
    c10e:	d211      	bcs.n	c134 <__aeabi_d2uiz+0x28>
    c110:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
    c114:	d211      	bcs.n	c13a <__aeabi_d2uiz+0x2e>
    c116:	d50d      	bpl.n	c134 <__aeabi_d2uiz+0x28>
    c118:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
    c11c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
    c120:	d40e      	bmi.n	c140 <__aeabi_d2uiz+0x34>
    c122:	ea4f 23c1 	mov.w	r3, r1, lsl #11
    c126:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
    c12a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
    c12e:	fa23 f002 	lsr.w	r0, r3, r2
    c132:	4770      	bx	lr
    c134:	f04f 0000 	mov.w	r0, #0
    c138:	4770      	bx	lr
    c13a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
    c13e:	d102      	bne.n	c146 <__aeabi_d2uiz+0x3a>
    c140:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    c144:	4770      	bx	lr
    c146:	f04f 0000 	mov.w	r0, #0
    c14a:	4770      	bx	lr

0000c14c <__aeabi_d2f>:
__truncdfsf2():
    c14c:	ea4f 0241 	mov.w	r2, r1, lsl #1
    c150:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
    c154:	bf24      	itt	cs
    c156:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
    c15a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
    c15e:	d90d      	bls.n	c17c <__aeabi_d2f+0x30>
    c160:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
    c164:	ea4f 02c0 	mov.w	r2, r0, lsl #3
    c168:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
    c16c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
    c170:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
    c174:	bf08      	it	eq
    c176:	f020 0001 	biceq.w	r0, r0, #1
    c17a:	4770      	bx	lr
    c17c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
    c180:	d121      	bne.n	c1c6 <__aeabi_d2f+0x7a>
    c182:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
    c186:	bfbc      	itt	lt
    c188:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
    c18c:	4770      	bxlt	lr
    c18e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    c192:	ea4f 5252 	mov.w	r2, r2, lsr #21
    c196:	f1c2 0218 	rsb	r2, r2, #24
    c19a:	f1c2 0c20 	rsb	ip, r2, #32
    c19e:	fa10 f30c 	lsls.w	r3, r0, ip
    c1a2:	fa20 f002 	lsr.w	r0, r0, r2
    c1a6:	bf18      	it	ne
    c1a8:	f040 0001 	orrne.w	r0, r0, #1
    c1ac:	ea4f 23c1 	mov.w	r3, r1, lsl #11
    c1b0:	ea4f 23d3 	mov.w	r3, r3, lsr #11
    c1b4:	fa03 fc0c 	lsl.w	ip, r3, ip
    c1b8:	ea40 000c 	orr.w	r0, r0, ip
    c1bc:	fa23 f302 	lsr.w	r3, r3, r2
    c1c0:	ea4f 0343 	mov.w	r3, r3, lsl #1
    c1c4:	e7cc      	b.n	c160 <__aeabi_d2f+0x14>
    c1c6:	ea7f 5362 	mvns.w	r3, r2, asr #21
    c1ca:	d107      	bne.n	c1dc <__aeabi_d2f+0x90>
    c1cc:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
    c1d0:	bf1e      	ittt	ne
    c1d2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
    c1d6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
    c1da:	4770      	bxne	lr
    c1dc:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
    c1e0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
    c1e4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    c1e8:	4770      	bx	lr
    c1ea:	bf00      	nop

0000c1ec <__aeabi_d2lz>:
__fixdfdi():
    c1ec:	b538      	push	{r3, r4, r5, lr}
    c1ee:	2200      	movs	r2, #0
    c1f0:	2300      	movs	r3, #0
    c1f2:	4604      	mov	r4, r0
    c1f4:	460d      	mov	r5, r1
    c1f6:	f7ff ff23 	bl	c040 <__aeabi_dcmplt>
    c1fa:	b928      	cbnz	r0, c208 <__aeabi_d2lz+0x1c>
    c1fc:	4620      	mov	r0, r4
    c1fe:	4629      	mov	r1, r5
    c200:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    c204:	f000 b80a 	b.w	c21c <__aeabi_d2ulz>
    c208:	4620      	mov	r0, r4
    c20a:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
    c20e:	f000 f805 	bl	c21c <__aeabi_d2ulz>
    c212:	4240      	negs	r0, r0
    c214:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    c218:	bd38      	pop	{r3, r4, r5, pc}
    c21a:	bf00      	nop

0000c21c <__aeabi_d2ulz>:
__fixunsdfdi():
    c21c:	b5d0      	push	{r4, r6, r7, lr}
    c21e:	2200      	movs	r2, #0
    c220:	4b0b      	ldr	r3, [pc, #44]	; (c250 <__aeabi_d2ulz+0x34>)
    c222:	4606      	mov	r6, r0
    c224:	460f      	mov	r7, r1
    c226:	f7ff fc99 	bl	bb5c <__aeabi_dmul>
    c22a:	f7ff ff6f 	bl	c10c <__aeabi_d2uiz>
    c22e:	4604      	mov	r4, r0
    c230:	f7fa f84a 	bl	62c8 <__aeabi_ui2d>
    c234:	2200      	movs	r2, #0
    c236:	4b07      	ldr	r3, [pc, #28]	; (c254 <__aeabi_d2ulz+0x38>)
    c238:	f7ff fc90 	bl	bb5c <__aeabi_dmul>
    c23c:	4602      	mov	r2, r0
    c23e:	460b      	mov	r3, r1
    c240:	4630      	mov	r0, r6
    c242:	4639      	mov	r1, r7
    c244:	f7f9 ff02 	bl	604c <__aeabi_dsub>
    c248:	f7ff ff60 	bl	c10c <__aeabi_d2uiz>
    c24c:	4621      	mov	r1, r4
    c24e:	bdd0      	pop	{r4, r6, r7, pc}
    c250:	3df00000 	.word	0x3df00000
    c254:	41f00000 	.word	0x41f00000

0000c258 <__FUNCTION__.8190>:
    c258:	72746e65 6f705f79 00746e69 2873250a     entry_point..%s(
    c268:	57203a29 494e5241 203a474e 736e6553     ): WARNING: Sens
    c278:	6520726f 726f7272 6e6f2073 69687420     or errors on thi
    c288:	6f622073 0a647261 73250a00 203a2928     s board...%s(): 
    c298:	65746e45 676e6972 69616d20 0a29286e     Entering main().
    c2a8:	52524500 203a524f 6e69616d 73202928     .ERROR: main() s
    c2b8:	6c756f68 656e2064 20726576 75746572     hould never retu
    c2c8:	202c6e72 676f7270 206d6172 20736168     rn, program has 
    c2d8:	6e656562 6c616820 00646574 78656e55     been halted.Unex
    c2e8:	74636570 43206465 65205550 70656378     pected CPU excep
    c2f8:	6e6f6974 75250020 6e692820 72726574     tion .%u (interr
    c308:	29747075 73616820 63636f20 64657275     upt) has occured
    c318:	646e6120 65687420 6f727020 6d617267      and the program
    c328:	6c697720 6f6e206c 61682077 000a746c      will now halt..
    c338:	65637845 6f697470 7061206e 72616570     Exception appear
    c348:	6f742073 20656220 27732527 6944000a     s to be '%s'..Di
    c358:	6f792064 65722075 74736967 74207265     d you register t
    c368:	69206568 7265746e 74707572 726f6320     he interrupt cor
    c378:	74636572 7520796c 676e6973 63706c20     rectly using lpc
    c388:	7265705f 65687069 736c6172 4120682e     _peripherals.h A
    c398:	003f4950 61747365 72006b63 74657365     PI?.estack.reset
    c3a8:	494d4e00 72616800 61662064 00746c75     .NMI.hard fault.
    c3b8:	6f6d656d 66207972 746c7561 73756200     memory fault.bus
    c3c8:	75616620 7500746c 65676173 75616620      fault.usage fau
    c3d8:	7200746c 72657365 00646576 736f7472     lt.reserved.rtos
    c3e8:	62656400 ff006775                       .debug..

0000c3f0 <table.8042>:
    c3f0:	0000c39c 0000c3a3 0000c3a9 0000c3ad     ................
    c400:	0000c3b8 0000c3c5 0000c3cf 0000c3db     ................
    c410:	0000c3db 0000c3db 0000c3db 0000c3e4     ................
    c420:	0000c3e9 0000c3db 0000c3e4 0000c3e4     ................
    c430:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    c440:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    c450:	2d2d2d2d 2d2d2d2d 2d2d2d0a 4157202d     --------.---- WA
    c460:	4e494e52 57203a47 72632065 65687361     RNING: We crashe
    c470:	72702064 6f697665 796c7375 2d2d2d20     d previously ---
    c480:	20000a2d 3a435020 25783020 586c3830     -..  PC: 0x%08lX
    c490:	2020000a 203a524c 30257830 0a586c38     ..  LR: 0x%08lX.
    c4a0:	53502000 30203a52 38302578 000a586c     . PSR: 0x%08lX..
    c4b0:	30522020 7830203a 6c383025 20000a58       R0: 0x%08lX.. 
    c4c0:	3a315220 25783020 586c3830 2020000a      R1: 0x%08lX..  
    c4d0:	203a3252 30257830 0a586c38 52202000     R2: 0x%08lX..  R
    c4e0:	30203a33 38302578 000a586c 4620200a     3: 0x%08lX...  F
    c4f0:	20646e69 20656874 736c2e2a 69662074     ind the *.lst fi
    c500:	6920656c 6f79206e 5f207275 6c697562     le in your _buil
    c510:	69642064 74636572 2c79726f 646e6120     d directory, and
    c520:	6f6f6c20 0a70756b 68742020 43502065      lookup.  the PC
    c530:	6c617620 74206575 6f6c206f 65746163      value to locate
    c540:	69687720 66206863 74636e75 206e6f69      which function 
    c550:	73756163 74206465 2e736968 5420200a     caused this..  T
    c560:	4c206568 68732052 646c756f 20656220     he LR should be 
    c570:	20656874 65727027 756f6976 66202773     the 'previous' f
    c580:	74636e75 206e6f69 74616874 73617720     unction that was
    c590:	6e757220 676e696e 20200a2e 522d3052      running..  R0-R
    c5a0:	72612033 61702065 656d6172 73726574     3 are parameters
    c5b0:	206f7420 636e7566 6e6f6974 000a2e73      to functions...

0000c5c0 <ExCvt>:
    c5c0:	41459a80 808f418e 49454545 8f8e4949     ..EA.A..EEEIII..
    c5d0:	4f929290 55554f99 9b9a9959 9f9e9d9c     ...O.OUUY.......
    c5e0:	554f4941 a7a6a5a5 abaaa9a8 afaeadac     AIOU............
    c5f0:	b3b2b1b0 b7b6b5b4 bbbab9b8 bfbebdbc     ................
    c600:	c3c2c1c0 c7c6c5c4 cbcac9c8 cfcecdcc     ................
    c610:	d3d2d1d0 d7d6d5d4 dbdad9d8 dfdedddc     ................
    c620:	e3e2e1e0 e7e6e5e4 ebeae9e8 efeeedec     ................
    c630:	f3f2f1f0 f7f6f5f4 fbfaf9f8 fffefdfc     ................

0000c640 <LfnOfs>:
    c640:	07050301 12100e09 1c181614 5441461e     .............FAT
    c650:	54414600 22003233 3e3c3a2a 007f7c3f     .FAT32."*:<>?|..
    c660:	3d3b2c2b ff005d5b                       +,;=[]..

0000c668 <cvt1.8022>:
    c668:	031a0061 031700e0 030700f8 000100ff     a...............
    c678:	01000178 01320130 01390106 014a0110     x...0.2...9...J.
    c688:	0179012e 01800106 0243004d 01820181     ..y.....M.C.....
    c698:	01840182 01860184 01870187 018a0189     ................
    c6a8:	018b018b 018e018d 0190018f 01910191     ................
    c6b8:	01940193 019601f6 01980197 023d0198     ..............=.
    c6c8:	019c019b 0220019d 01a0019f 01a201a0     ...... .........
    c6d8:	01a401a2 01a601a4 01a701a7 01aa01a9     ................
    c6e8:	01ac01ab 01ae01ac 01af01af 01b201b1     ................
    c6f8:	01b301b3 01b501b5 01b801b7 01ba01b8     ................
    c708:	01bc01bb 01be01bc 01c001f7 01c201c1     ................
    c718:	01c401c3 01c401c5 01c801c7 01ca01c7     ................
    c728:	01ca01cb 011001cd 000101dd 01de018e     ................
    c738:	01f30112 01f10003 01f401f4 012801f8     ..............(.
    c748:	01120222 0009023a 023b2c65 023d023b     "...:...e,;.;.=.
    c758:	023f2c66 02410240 02460241 0253010a     f,?.@.A.A.F...S.
    c768:	01810040 02550186 018a0189 018f0258     @.....U.....X...
    c778:	0190025a 025d025c 025f025e 02610193     Z...\.].^._...a.
    c788:	01940262 02650264 02670266 01960197     b...d.e.f.g.....
    c798:	2c62026a 026d026c 019c026e 02710270     j.b,l.m.n...p.q.
    c7a8:	0273019d 019f0274 02770276 02790278     ..s.t...v.w.x.y.
    c7b8:	027b027a 2c64027c 027f027e 028101a6     z.{.|.d,~.......
    c7c8:	01a90282 02850284 02870286 024401ae     ..............D.
    c7d8:	01b201b1 028d0245 028f028e 02910290     ....E...........
    c7e8:	037b01b7 03fd0003 03ff03fe 000403ac     ..{.............
    c7f8:	03880386 038a0389 031103b1 000203c2     ................
    c808:	03a303a3 030803c4 000303cc 038e038c     ................
    c818:	03d8038f 03f20118 03f9000a 03f403f3     ................
    c828:	03f603f5 03f703f7 03fa03f9 043003fa     ..............0.
    c838:	04500320 04600710 048a0122 04c10136      .P...`."...6...
    c848:	04cf010e 04c00001 014404d0 04260561     ..........D.a.&.
	...

0000c85a <cvt2.8023>:
    c85a:	00011d7d 1e002c63 1ea00196 1f00015a     }...c,......Z...
    c86a:	1f100608 1f200606 1f300608 1f400608     ...... ...0...@.
    c87a:	1f510606 1f590007 1f5b1f52 1f5d1f54     ..Q...Y.R.[.T.].
    c88a:	1f5f1f56 06081f60 000e1f70 1fbb1fba     V._.`...p.......
    c89a:	1fc91fc8 1fcb1fca 1fdb1fda 1ff91ff8     ................
    c8aa:	1feb1fea 1ffb1ffa 06081f80 06081f90     ................
    c8ba:	06081fa0 00041fb0 1fb91fb8 1fbc1fb2     ................
    c8ca:	00011fcc 1fd01fc3 1fe00602 1fe50602     ................
    c8da:	1fec0001 00011ff3 214e1ffc 21320001     ..........N!..2!
    c8ea:	02102170 00012184 24d02183 2c30051a     p!...!...!.$..0,
    c8fa:	2c60042f 2c670102 2c750106 2c800102     /.`,..g,..u,...,
    c90a:	2d000164 ff410826 0000031a              d..-&.A.....

0000c916 <uc437>:
    c916:	00fc00c7 00e200e9 00e000e4 00e700e5     ................
    c926:	00eb00ea 00ef00e8 00ec00ee 00c500c4     ................
    c936:	00e600c9 00f400c6 00f200f6 00f900fb     ................
    c946:	00d600ff 00a200dc 00a500a3 019220a7     ............. ..
    c956:	00ed00e1 00fa00f3 00d100f1 00ba00aa     ................
    c966:	231000bf 00bd00ac 00a100bc 00bb00ab     ...#............
    c976:	25922591 25022593 25612524 25562562     .%.%.%.%$%a%b%V%
    c986:	25632555 25572551 255c255d 2510255b     U%c%Q%W%]%\%[%.%
    c996:	25342514 251c252c 253c2500 255f255e     .%4%,%.%.%<%^%_%
    c9a6:	2554255a 25662569 25502560 2567256c     Z%T%i%f%`%P%l%g%
    c9b6:	25642568 25592565 25522558 256b2553     h%d%e%Y%X%R%S%k%
    c9c6:	2518256a 2588250c 258c2584 25802590     j%.%.%.%.%.%.%.%
    c9d6:	00df03b1 03c00393 03c303a3 03c400b5     ................
    c9e6:	039803a6 03b403a9 03c6221e 222903b5     ........."....)"
    c9f6:	00b12261 22642265 23212320 224800f7     a"..e"d" #!#..H"
    ca06:	221900b0 221a00b7 00b2207f 00a025a0     ..."...". ...%..
    ca16:	4f525245 43203a52 206c6c61 5f206f74     ERROR: Call to _
    ca26:	736f6c63 20292865 20746f6e 65707865     close() not expe
    ca36:	64657463 5245000a 3a524f52 6c614320     cted..ERROR: Cal
    ca46:	6f74206c 65725f20 29286461 74697720     l to _read() wit
    ca56:	6e612068 736e7520 6f707075 64657472     h an unsupported
    ca66:	6e616820 00656c64 4f525245 43203a52      handle.ERROR: C
    ca76:	206c6c61 5f206f74 74697277 20292865     all to _write() 
    ca86:	68746977 206e6120 75736e75 726f7070     with an unsuppor
    ca96:	20646574 646e6168 0d00656c 73694c0a     ted handle...Lis
    caa6:	666f2074 6d6f6320 646e616d 75282073     t of commands (u
    cab6:	68206573 20706c65 6d616e3c 74203e65     se help <name> t
    cac6:	6567206f 75662074 68206c6c 20706c65     o get full help 
    cad6:	79206669 7320756f 2e206565 3a292e2e     if you see ...):
    cae6:	000a0d20 31252020 3a207336 352e2520      ...  %16s : %.5
    caf6:	2e207330 20002e2e 36312520 203a2073     0s ....  %16s : 
    cb06:	0d007325 6c656800 6f430070 6e616d6d     %s...help.Comman
    cb16:	61662064 64656c69 0d00203a 6d6f430a     d failed: ...Com
    cb26:	646e616d 6c656820 656d2070 67617373     mand help messag
    cb36:	25203a65 000a0d73 4f525245 43203a52     e: %s...ERROR: C
    cb46:	646c756f 746f6e20 6e696620 65682064     ould not find he
    cb56:	6620706c 6320726f 616d6d6f 203a646e     lp for command: 
    cb66:	616e5500 20656c62 6d206f74 68637461     .Unable to match
    cb76:	796e6120 67657220 65747369 20646572      any registered 
    cb86:	20494c43 6d6d6f63 20646e61 3a726f66     CLI command for:
    cb96:	2d2d0020 2d2d2d2d 2d2d2d2d 2d2d2d2d      .--------------
    cba6:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    cbb6:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    cbc6:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    cbd6:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    cbe6:	0a0d2d2d 696c6300 73657200 00656d75     --...cli.resume.
    cbf6:	75736552 6120656d 73617420 7573006b     Resume a task.su
    cc06:	6e657073 75530064 6e657073 20612064     spend.Suspend a 
    cc16:	6b736174 6c654400 72656269 6c657461     task.Deliberatel
    cc26:	72632079 65687361 68742073 79732065     y crashes the sy
    cc36:	6d657473 206f7420 6f6d6564 7274736e     stem to demonstr
    cc46:	20657461 20776f68 64206f74 67756265     ate how to debug
    cc56:	63206120 68736172 63326900 63326900      a crash.i2c.i2c
    cc66:	61657220 78302064 30204444 20525278      read 0xDD 0xRR 
    cc76:	0a3e6e3c 20633269 74697277 78302065     <n>.i2c write 0x
    cc86:	30204444 20525278 6c61763c 203e6575     DD 0xRR <value> 
    cc96:	6c61763c 203e6575 002e2e2e 6b736174     <value> ....task
    cca6:	7473696c 74754f00 73747570 73696c20     list.Outputs lis
    ccb6:	666f2074 4f545220 61742053 2c736b73     t of RTOS tasks,
    ccc6:	55504320 646e6120 61747320 75206b63      CPU and stack u
    ccd6:	65676173 61740a2e 696c6b73 3c207473     sage..tasklist <
    cce6:	656d6974 7720273e 206c6c69 70736964     time>' will disp
    ccf6:	2079616c 20555043 6c697475 74617a69     lay CPU utilizat
    cd06:	206e6f69 68746977 74206e69 20736968     ion within this 
    cd16:	656d6974 6e697720 2e776f64 72617500     time window..uar
    cd26:	53003374 20646e65 74732061 676e6972     t3.Send a string
    cd36:	206f7420 54524155 65720033 77006461      to UART3.read.w
    cd46:	65746972 25783000 78302078 25207825     rite.0x%x 0x%x %
    cd56:	32490075 65522043 6f206461 6c532066     u.I2C Read of Sl
    cd66:	20657661 30257830 000a5832 78302020     ave 0x%02X..  0x
    cd76:	58323025 7830203a 58323025 64252820     %02X: 0x%02X (%d
    cd86:	49000a29 62204332 65207375 726f7272     )..I2C bus error
    cd96:	72756420 20676e69 5f633269 6165725f      during i2c__rea
    cda6:	6c735f64 5f657661 61746164 000a2928     d_slave_data()..
    cdb6:	6d6d6f43 20646e61 6f727265 52203a72     Command error: R
    cdc6:	20646165 6d6d6f63 20646e61 756f6873     ead command shou
    cdd6:	6220646c 69272065 72206332 20646165     ld be 'i2c read 
    cde6:	44447830 52783020 6e3c2052 000a273e     0xDD 0xRR <n>'..
    cdf6:	78257830 25783020 72570078 2065746f     0x%x 0x%x.Wrote 
    ce06:	62207525 73657479 206f7420 76616c73     %u bytes to slav
    ce16:	78302065 58323025 2020000a 6433255b     e 0x%02X..  [%3d
    ce26:	203d205d 30257830 28205832 0a296425     ] = 0x%02X (%d).
    ce36:	43324900 73756220 72726520 6420726f     .I2C bus error d
    ce46:	6e697275 32692067 775f5f63 65746972     uring i2c__write
    ce56:	616c735f 645f6576 28617461 43000a29     _slave_data()..C
    ce66:	616d6d6f 6520646e 726f7272 7257203a     ommand error: Wr
    ce76:	20657469 6d6d6f63 20646e61 756f6873     ite command shou
    ce86:	6220646c 69272065 77206332 65746972     ld be 'i2c write
    ce96:	44783020 78302044 3c205252 756c6176      0xDD 0xRR <valu
    cea6:	3c203e65 756c6176 2e203e65 0a272e2e     e> <value> ...'.
    ceb6:	6d614e00 31250065 20207330 74617453     .Name.%10s  Stat
    cec6:	50207375 74532072 206b6361 25555043     us Pr Stack CPU%
    ced6:	20202025 20202020 54202020 0a656d69     %          Time.
    cee6:	30312500 73252073 75322520 75352520     .%10s %s %2u %5u
    cef6:	75342520 30312520 73752075 764f000a      %4u %10u us..Ov
    cf06:	65687265 203a6461 75207525 4f000a53     erhead: %u uS..O
    cf16:	75707475 6f742074 52415520 203a3354     utput to UART3: 
    cf26:	6e757200 676e696e 65722000 20796461     .running. ready 
    cf36:	6f6c6200 64656b63 6c656400 64657465     .blocked.deleted
    cf46:	                                         ..

0000cf48 <task_status_table.8139>:
    cf48:	0000cf27 0000cf2f 0000cf37 0000cc04     '.../...7.......
    cf58:	0000cf3f                                ?...

0000cf5c <__FUNCTION__.9195>:
    cf5c:	69726570 72656870 5f736c61 74696e69     peripherals_init
    cf6c:	20445300 64726163 756f6d20 6465746e     .SD card mounted
    cf7c:	63757320 73736563 6c6c7566 57000a79      successfully..W
    cf8c:	494e5241 203a474e 63204453 20647261     ARNING: SD card 
    cf9c:	6c756f63 6f6e2064 65622074 756f6d20     could not be mou
    cfac:	6465746e 2d2d000a 2d2d2d2d 2d2d2d2d     nted..----------
    cfbc:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    cfcc:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    cfdc:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    cfec:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    cffc:	2d2d2d2d 0a002d2d 250a7325 3a292873     ------..%s.%s():
    d00c:	776f4c20 76656c20 73206c65 74726174      Low level start
    d01c:	250a7075 49000a73 73204332 6576616c     up.%s..I2C slave
    d02c:	74656420 65746365 74612064 64646120      detected at add
    d03c:	73736572 7830203a 58323025 7246000a     ress: 0x%02X..Fr
    d04c:	54526565 4120534f 52455353 20292854     eeRTOS ASSERT() 
    d05c:	7563636f 64657272 646e6920 74616369     occurred indicat
    d06c:	20676e69 65206e61 726f7272 6e6f6320     ing an error con
    d07c:	69746964 74206e6f 20746168 756f6873     dition that shou
    d08c:	4e20646c 52455645 70616820 006e6570     ld NEVER happen.
    d09c:	44202d20 79206469 6320756f 206c6c61      - Did you call 
    d0ac:	6c622061 696b636f 4120676e 6f204950     a blocking API o
    d0bc:	6f6e2072 7246206e 53496d6f 20292852     r non FromISR() 
    d0cc:	20495041 69736e69 61206564 5349206e     API inside an IS
    d0dc:	20003f52 6944202d 6f792064 6f662075     R?. - Did you fo
    d0ec:	74656772 206f7420 20657375 69727066     rget to use fpri
    d0fc:	2866746e 65647473 20297272 61206e69     ntf(stderr) in a
    d10c:	5349206e 48003f52 20657265 74207369     n ISR?.Here is t
    d11c:	6c206568 20656e69 6320666f 2065646f     he line of code 
    d12c:	74616874 6c616820 20646574 20656874     that halted the 
    d13c:	3a555043 41760020 696c7070 69746163     CPU: .vApplicati
    d14c:	614d6e6f 636f6c6c 6c696146 6f486465     onMallocFailedHo
    d15c:	29286b6f 6c616320 3b64656c 206f6e20     ok() called; no 
    d16c:	65726f6d 4d415220 6d656d20 0079726f     more RAM memory.
    d17c:	63617473 766f206b 6c667265 6220776f     stack overflow b
    d18c:	68742079 74207369 3a6b7361 00783000     y this task:.0x.
    d19c:	72437875 63697469 654e6c61 6e697473     uxCriticalNestin
    d1ac:	3d3d2067 55307e20 2028004c 74726f70     g == ~0UL.( port
    d1bc:	4349564e 544e495f 5254435f 45525f4c     NVIC_INT_CTRL_RE
    d1cc:	20262047 74726f70 54434556 49544341     G & portVECTACTI
    d1dc:	4d5f4556 204b5341 3d3d2029 75003020     VE_MASK ) == 0.u
    d1ec:	69724378 61636974 73654e6c 676e6974     xCriticalNesting
    d1fc:	43637500 65727275 7250746e 69726f69     .ucCurrentPriori
    d20c:	3e207974 6375203d 5378614d 61437379     ty >= ucMaxSysCa
    d21c:	72506c6c 69726f69 28007974 726f7020     llPriority.( por
    d22c:	52494174 525f5243 26204745 726f7020     tAIRCR_REG & por
    d23c:	49525074 5449524f 52475f59 5f50554f     tPRIORITY_GROUP_
    d24c:	4b53414d 3c202920 6c75203d 5078614d     MASK ) <= ulMaxP
    d25c:	52474952 5650554f 65756c61 726f7000     RIGROUPValue.por
    d26c:	55504374 21204449 6f70203d 4f437472     tCPUID != portCO
    d27c:	58455452 5f374d5f 31703072 0044495f     RTEX_M7_r0p1_ID.
    d28c:	74726f70 49555043 3d212044 726f7020     portCPUID != por
    d29c:	524f4374 5f584554 725f374d 5f307030     tCORTEX_M7_r0p0_
    d2ac:	28004449 726f7020 58414d74 4952505f     ID.( portMAX_PRI
    d2bc:	554f5247 49425f50 2d205354 4d6c7520     GROUP_BITS - ulM
    d2cc:	52507861 4f524749 61565055 2065756c     axPRIGROUPValue 
    d2dc:	3d3d2029 4e5f5f20 5f434956 4f495250     ) == __NVIC_PRIO
    d2ec:	5449425f 20280053 69427875 6f547374     _BITS.( uxBitsTo
    d2fc:	20746553 76652026 45746e65 544e4556     Set & eventEVENT
    d30c:	5449425f 4f435f53 4f52544e 59425f4c     _BITS_CONTROL_BY
    d31c:	20534554 3d3d2029 78003020 6e657645     TES ) == 0.xEven
    d32c:	6f724774 28007075 42787520 54737469     tGroup.( uxBitsT
    d33c:	6961576f 726f4674 65202620 746e6576     oWaitFor & event
    d34c:	4e455645 49425f54 435f5354 52544e4f     EVENT_BITS_CONTR
    d35c:	425f4c4f 53455459 3d202920 0030203d     OL_BYTES ) == 0.
    d36c:	69427875 6f547374 74696157 20726f46     uxBitsToWaitFor 
    d37c:	30203d21 20282100 54782028 476b7361     != 0.!( ( xTaskG
    d38c:	63537465 75646568 5372656c 65746174     etSchedulerState
    d39c:	3d202928 6174203d 43536b73 55444548     () == taskSCHEDU
    d3ac:	5f52454c 50535553 45444e45 20292044     LER_SUSPENDED ) 
    d3bc:	28202626 69547820 54736b63 6961576f     && ( xTicksToWai
    d3cc:	3d212074 29203020 75002920 65755178     t != 0 ) ).uxQue
    d3dc:	654c6575 6874676e 28203e20 61425520     ueLength > ( UBa
    d3ec:	79546573 745f6570 30202920 53787000     seType_t ) 0.pxS
    d3fc:	69746174 65755163 21206575 554e203d     taticQueue != NU
    d40c:	21004c4c 20282028 51637570 65756575     LL.!( ( pucQueue
    d41c:	726f7453 20656761 4e203d21 204c4c55     Storage != NULL 
    d42c:	26262029 75202820 65744978 7a69536d     ) && ( uxItemSiz
    d43c:	3d3d2065 29203020 21002920 20282028     e == 0 ) ).!( ( 
    d44c:	51637570 65756575 726f7453 20656761     pucQueueStorage 
    d45c:	4e203d3d 204c4c55 26262029 75202820     == NULL ) && ( u
    d46c:	65744978 7a69536d 3d212065 29203020     xItemSize != 0 )
    d47c:	78002920 657a6953 203d3d20 657a6973      ).xSize == size
    d48c:	2028666f 75657551 20745f65 78700029     of( Queue_t ).px
    d49c:	75657551 28210065 70202820 65744976     Queue.!( ( pvIte
    d4ac:	516f546d 65756575 203d3d20 4c4c554e     mToQueue == NULL
    d4bc:	26202920 20282026 75517870 2d657565      ) && ( pxQueue-
    d4cc:	4978753e 536d6574 20657a69 28203d21     >uxItemSize != (
    d4dc:	61425520 79546573 745f6570 30202920      UBaseType_t ) 0
    d4ec:	20292055 28210029 78202820 79706f43     U ) ).!( ( xCopy
    d4fc:	69736f50 6e6f6974 203d3d20 75657571     Position == queu
    d50c:	45564f65 49525752 29204554 20262620     eOVERWRITE ) && 
    d51c:	78702028 75657551 753e2d65 6e654c78     ( pxQueue->uxLen
    d52c:	20687467 31203d21 29202920 51787000     gth != 1 ) ).pxQ
    d53c:	65756575 78753e2d 6d657449 657a6953     ueue->uxItemSize
    d54c:	203d3d20 28210030 70202820 65755178      == 0.!( ( pxQue
    d55c:	3e2d6575 75517875 54657565 20657079     ue->uxQueueType 
    d56c:	71203d3d 65756575 55455551 53495f45     == queueQUEUE_IS
    d57c:	54554d5f 29205845 20262620 78702028     _MUTEX ) && ( px
    d58c:	75657551 753e2d65 6553782e 6870616d     Queue->u.xSemaph
    d59c:	2e65726f 74754d78 6f487865 7265646c     ore.xMutexHolder
    d5ac:	203d2120 4c4c554e 29202920 70202800      != NULL ) ).( p
    d5bc:	65755178 29206575 20282100 20282028     xQueue ).!( ( ( 
    d5cc:	75427670 72656666 3d202920 554e203d     pvBuffer ) == NU
    d5dc:	29204c4c 20262620 20282028 75517870     LL ) && ( ( pxQu
    d5ec:	20657565 753e2d29 65744978 7a69536d     eue )->uxItemSiz
    d5fc:	3d212065 55202820 65736142 65707954     e != ( UBaseType
    d60c:	2920745f 20553020 00292029 28202821     _t ) 0U ) ).!( (
    d61c:	42767020 65666675 3d3d2072 4c554e20      pvBuffer == NUL
    d62c:	2029204c 28202626 51787020 65756575     L ) && ( pxQueue
    d63c:	78753e2d 6d657449 657a6953 203d2120     ->uxItemSize != 
    d64c:	42552028 54657361 5f657079 20292074     ( UBaseType_t ) 
    d65c:	29205530 78002920 65686e49 61746972     0U ) ).xInherita
    d66c:	4f65636e 72756363 20646572 70203d3d     nceOccurred == p
    d67c:	4c414664 70004553 42435478 61547800     dFALSE.pxTCB.xTa
    d68c:	70006b73 65725078 756f6976 6b615773     sk.pxPreviousWak
    d69c:	6d695465 20280065 6d695478 636e4965     eTime.( xTimeInc
    d6ac:	656d6572 3e20746e 20553020 78750029     rement > 0U ).ux
    d6bc:	65686353 656c7564 73755372 646e6570     SchedulerSuspend
    d6cc:	3d206465 0030203d 76457870 4c746e65     ed == 0.pxEventL
    d6dc:	00747369 63537875 75646568 5372656c     ist.uxSchedulerS
    d6ec:	65707375 6465646e 203d2120 78700030     uspended != 0.px
    d6fc:	20424354 70203d21 72754378 746e6572     TCB != pxCurrent
    d70c:	00424354 63537875 75646568 5372656c     TCB.uxSchedulerS
    d71c:	65707375 6465646e 203d2120 41466470     uspended != pdFA
    d72c:	0045534c 73615478 526f546b 6d757365     LSE.xTaskToResum
    d73c:	78700065 656d6954 0074754f 454c4449     e.pxTimeOut.IDLE
    d74c:	73696c00 52554374 544e4552 53494c5f     .listCURRENT_LIS
    d75c:	454c5f54 4854474e 28262028 52787020     T_LENGTH( &( pxR
    d76c:	79646165 6b736154 73694c73 205b7374     eadyTasksLists[ 
    d77c:	6f547875 69725070 7469726f 205d2079     uxTopPriority ] 
    d78c:	20292029 0030203e 69547870 54736b63     ) ) > 0.pxTicksT
    d79c:	6961576f 75700074 61745378 75426b63     oWait.puxStackBu
    d7ac:	72656666 203d2120 4c4c554e 54787000     ffer != NULL.pxT
    d7bc:	426b7361 65666675 3d212072 4c554e20     askBuffer != NUL
    d7cc:	5378004c 20657a69 73203d3d 6f657a69     L.xSize == sizeo
    d7dc:	54202866 745f4243 28002920 73696c20     f( TCB_t ).( lis
    d7ec:	53494c74 53495f54 504d455f 20285954     tLIST_IS_EMPTY( 
    d7fc:	65447870 6579616c 73615464 73694c6b     pxDelayedTaskLis
    d80c:	20292074 78700029 20424354 70203d3d     t ) ).pxTCB == p
    d81c:	72754378 746e6572 00424354 43547870     xCurrentTCB.pxTC
    d82c:	753e2d42 74754d78 73657865 646c6548     B->uxMutexesHeld
    d83c:	55787000 6f6c626e 64656b63 00424354     .pxUnblockedTCB.
    d84c:	63537875 75646568 5372656c 65707375     uxSchedulerSuspe
    d85c:	6465646e ffffff00                       nded....

0000d864 <gpio_memory_map>:
    d864:	20098000 20098020 20098040 20098060     ...  .. @.. `.. 
    d874:	20098080 200980a0                       ... ... 

0000d87c <hw_timers>:
    d87c:	40004000 00000001 0000d8ac 40008000     .@.@...........@
    d88c:	00000002 0000d8b2 40090000 00000003     ...........@....
    d89c:	0000d8b8 40094000 00000004 0000d8be     .....@.@........
    d8ac:	545f5748 57480030 0031545f 545f5748     HW_T0.HW_T1.HW_T
    d8bc:	57480032 0033545f 00005755 00005749     2.HW_T3.UW..IW..
    d8cc:	0000573d 30633269 63326900 32690031     =W..i2c0.i2c1.i2
    d8dc:	                                         c2.

0000d8df <lpc_peripheral_pconp_bit_map>:
    d8df:	16020100 18040317 13070619 0a15001a     ................
    d8ef:	00000000 000c0000 001d0d00 00000000     ................
    d8ff:	00000000 00000014 00000000 00000000     ................
	...
    d937:	61550e00 00307472 74726155 61550031     ..Uart0.Uart1.Ua
    d947:	00327472 74726155 ffff0033               rt2.Uart3....

0000d954 <uart__isrs>:
    d954:	00005b9d 00005b91 00005b85 00005b79     .[...[...[..y[..

0000d964 <uart_peripheral_ids>:
    d964:	08070605 203a6925 25203a78 79202c69     ....%i: x: %i, y
    d974:	6925203a 3a7a202c 0a692520 6f725000     : %i, z: %i..Pro
    d984:	65637564 6f430072 6d75736e 57007265     ducer.Consumer.W
    d994:	68637461 00676f64 72617453 676e6974     atchdog.Starting
    d9a4:	4f545220 61540053 20736b73 20646964      RTOS.Tasks did 
    d9b4:	20746f6e 706d6f63 6574656c 7250203a     not complete: Pr
    d9c4:	6375646f 61207265 4320646e 75736e6f     oducer and Consu
    d9d4:	2072656d 6c696166 000a6465 6b736154     mer failed..Task
    d9e4:	69642073 6f6e2064 6f632074 656c706d     s did not comple
    d9f4:	203a6574 646f7250 72656375 63755320     te: Producer Suc
    da04:	64656563 202c6465 756e6f43 72656d73     ceeded, Conusmer
    da14:	69614620 0a64656c 73615400 6420736b      Failed..Tasks d
    da24:	6e206469 6320746f 6c706d6f 3a657465     id not complete:
    da34:	6f725020 65637564 61462072 64656c69      Producer Failed
    da44:	6f43202c 6d73756e 53207265 65636375     , Conusmer Succe
    da54:	64656465 6154000a 20736b73 706d6f63     eded..Tasks comp
    da64:	6574656c 66000a64 2e656c69 00747874     leted..file.txt.
    da74:	4f525245 46203a52 656c6961 6f742064     ERROR: Failed to
    da84:	69727720 64206574 20617461 66206f74      write data to f
    da94:	00656c69 4f525245 46203a52 656c6961     ile.ERROR: Faile
    daa4:	6f742064 65706f20 25203a6e               d to open: %s..

0000dab3 <_ctype_>:
    dab3:	20202000 20202020 28282020 20282828     .         ((((( 
    dac3:	20202020 20202020 20202020 20202020                     
    dad3:	10108820 10101010 10101010 10101010      ...............
    dae3:	04040410 04040404 10040404 10101010     ................
    daf3:	41411010 41414141 01010101 01010101     ..AAAAAA........
    db03:	01010101 01010101 01010101 10101010     ................
    db13:	42421010 42424242 02020202 02020202     ..BBBBBB........
    db23:	02020202 02020202 02020202 10101010     ................
    db33:	00000020 00000000 00000000 00000000      ...............
	...

0000dbb4 <_global_impure_ptr>:
    dbb4:	100001b4 2b302d23 6c680020 6665004c     ....#-0+ .hlL.ef
    dbc4:	47464567 464e4900 666e6900 4e414e00     gEFG.INF.inf.NAN
    dbd4:	6e616e00 32313000 36353433 41393837     .nan.0123456789A
    dbe4:	45444342 31300046 35343332 39383736     BCDEF.0123456789
    dbf4:	64636261 65006665 00646c25              abcdef.e%ld.

0000dc00 <fpi.7522>:
    dc00:	00000035 fffffbce 000003cb 00000001     5...............
    dc10:	00000000                                ....

0000dc14 <fpinan.7558>:
    dc14:	00000034 fffffbce 000003cb 00000001     4...............
    dc24:	00000000                                ....

0000dc28 <tinytens>:
    dc28:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
    dc38:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
    dc48:	64ac6f43 11680628 69666e49 7974696e     Co.d(.h.Infinity
    dc58:	4e614e00 ffffff00                       .NaN....

0000dc60 <__sf_fake_stderr>:
	...

0000dc80 <__sf_fake_stdin>:
	...

0000dca0 <__sf_fake_stdout>:
	...

0000dcc0 <_C_numeric_locale>:
    dcc0:	0000cca0 0000cae9 10000214 4f500043     ............C.PO
    dcd0:	00584953 ffffffff                       SIX.....

0000dcd8 <__mprec_bigtens>:
    dcd8:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
    dce8:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
    dcf8:	7f73bf3c 75154fdd                       <.s..O.u

0000dd00 <__mprec_tens>:
    dd00:	00000000 3ff00000 00000000 40240000     .......?......$@
    dd10:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
    dd20:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
    dd30:	00000000 412e8480 00000000 416312d0     .......A......cA
    dd40:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
    dd50:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
    dd60:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
    dd70:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
    dd80:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
    dd90:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
    dda0:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
    ddb0:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
    ddc0:	79d99db4 44ea7843                       ...yCx.D

0000ddc8 <p05.7444>:
    ddc8:	00000005 00000019 0000007d 0000ddf2     ........}.......
    ddd8:	0000ddf5 0000ddf8 61462d41 3938662d     ........A-Fa-f89
    dde8:	33323130 37363534 2d2b005d 00303000     01234567].+-.00.
    ddf8:	ff005878                                xX..
