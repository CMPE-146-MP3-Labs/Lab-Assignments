
_build_lpc40xx_freertos/lpc40xx_freertos.elf:     file format elf32-littlearm
_build_lpc40xx_freertos/lpc40xx_freertos.elf
architecture: armv7e-m, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000000e5

Program Header:
0x70000001 off    0x0001ba2c vaddr 0x0000ba2c paddr 0x0000ba2c align 2**2
         filesz 0x00000008 memsz 0x00000008 flags r--
    LOAD off    0x00010000 vaddr 0x00000000 paddr 0x00000000 align 2**16
         filesz 0x0000ba34 memsz 0x0000ba34 flags r-x
    LOAD off    0x00020000 vaddr 0x10000000 paddr 0x0000ba34 align 2**16
         filesz 0x00000324 memsz 0x00000324 flags rw-
    LOAD off    0x00020328 vaddr 0x10000328 paddr 0x0000bd58 align 2**16
         filesz 0x00000000 memsz 0x00000890 flags rw-
    LOAD off    0x00030000 vaddr 0x20000000 paddr 0x20000000 align 2**16
         filesz 0x00000000 memsz 0x00000028 flags rw-
private flags = 5000400: [Version5 EABI] [hard-float ABI]

Sections:
Idx Name             Size      VMA       LMA       File off  Algn  Flags
  0 .text            0000ba2c  00000000  00000000  00010000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx       00000008  0000ba2c  0000ba2c  0001ba2c  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data            00000324  10000000  0000ba34  00020000  2**2  CONTENTS, ALLOC, LOAD, DATA
  3 .bss             00000890  10000328  0000bd58  00020328  2**3  ALLOC
  4 .persistent_ram2 00000028  20000000  20000000  00030000  2**2  ALLOC
  5 .debug_info      000201ed  00000000  00000000  00020324  2**0  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev    00005aca  00000000  00000000  00040511  2**0  CONTENTS, READONLY, DEBUGGING
  7 .debug_aranges   00000d38  00000000  00000000  00045fdb  2**0  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges    000016e8  00000000  00000000  00046d13  2**0  CONTENTS, READONLY, DEBUGGING
  9 .debug_line      00011775  00000000  00000000  000483fb  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_str       000059f9  00000000  00000000  00059b70  2**0  CONTENTS, READONLY, DEBUGGING
 11 .comment         00000076  00000000  00000000  0005f569  2**0  CONTENTS, READONLY
 12 .ARM.attributes  00000032  00000000  00000000  0005f5df  2**0  CONTENTS, READONLY
 13 .debug_frame     000038dc  00000000  00000000  0005f614  2**2  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc       00010b9b  00000000  00000000  00062ef0  2**0  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
0000ba2c l    d  .ARM.exidx	00000000 .ARM.exidx
10000000 l    d  .data	00000000 .data
10000328 l    d  .bss	00000000 .bss
20000000 l    d  .persistent_ram2	00000000 .persistent_ram2
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 interrupt_vector_table.c
00000158 l     F .text	0000001a isr_hard_fault
0000016c l       .text	00000000 handler_address
00000174 l     F .text	0000005c halt
0000a51c l     O .text	00000040 table.8042
00000000 l    df *ABS*	00000000 entry_point.c
0000a384 l     O .text	0000000c __FUNCTION__.8190
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 crash.c
20000000 l     O .persistent_ram2	00000028 crash_registers
00000000 l    df *ABS*	00000000 sbrk.c
10000000 l     O .data	00000004 next_free_heap.5390
10000004 l     O .data	00000004 next_free_heap.5399
00000000 l    df *ABS*	00000000 startup.c
00000000 l    df *ABS*	00000000 acceleration.c
00000000 l    df *ABS*	00000000 sensors.c
00000000 l    df *ABS*	00000000 ff.c
00000490 l     F .text	00000010 ld_dword
000004a0 l     F .text	00000010 st_dword
000004b0 l     F .text	0000001c mem_cmp
000004cc l     F .text	00000016 clst2sect
000004e2 l     F .text	0000001e sum_sfn
00000500 l     F .text	0000002a get_ldnumber
0000052a l     F .text	00000012 mem_cpy.part.0
0000053c l     F .text	0000001c ld_clust.isra.3
00000558 l     F .text	00000018 st_clust.isra.4
00000570 l     F .text	00000040 sync_window.part.6
000005b0 l     F .text	00000044 move_window
000005f4 l     F .text	00000074 check_fs
00000668 l     F .text	000002c0 find_volume
00000928 l     F .text	000000f8 put_fat
00000a20 l     F .text	000000b4 get_fat.isra.10
00000ad4 l     F .text	00000082 dir_sdi
00000b56 l     F .text	000000e8 create_chain
00000c3e l     F .text	0000006e remove_chain
00000cac l     F .text	00000016 unlock_fs
00000cc2 l     F .text	00000050 validate
00000d12 l     F .text	0000005c dir_clear
00000d6e l     F .text	000000aa dir_next
00000e18 l     F .text	00000148 dir_find
00000f60 l     F .text	00000294 follow_path
000011f4 l     F .text	000000a0 sync_fs
00001294 l     F .text	00000288 dir_register
10000328 l     O .bss	00000004 FatFs
1000032c l     O .bss	00000002 Fsid
0000a6ec l     O .text	00000080 ExCvt
0000a76c l     O .text	0000000d LfnOfs
00000000 l    df *ABS*	00000000 ffsystem.c
10000330 l     O .bss	00000050 mutex_struct.8002
00000000 l    df *ABS*	00000000 ffunicode.c
0000a794 l     O .text	000001f2 cvt1.8022
0000a986 l     O .text	000000bc cvt2.8023
0000aa42 l     O .text	00000100 uc437
00000000 l    df *ABS*	00000000 disk_glue_logic.c
00000000 l    df *ABS*	00000000 fatfs_time.c
00000000 l    df *ABS*	00000000 sd_card.c
00001b9a l     F .text	00000028 sd_card__wait_for_ready
00001bc4 l     F .text	00000020 sd_card__power_off
00001be4 l     F .text	0000005a sd_card__transmit_datablock
00001c3e l     F .text	00000086 sd_card__send_command
00001cc4 l     F .text	00000042 sd_card__read_datablock
10000380 l     O .bss	00000001 g_card_type
10000008 l     O .data	00000001 g_disk_status
00000000 l    df *ABS*	00000000 system_calls.c
000021a8 l     F .text	0000001e system_calls__print_and_halt
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 peripherals_init.c
10000384 l     O .bss	00000050 binary_semaphore_struct.9224
100003d4 l     O .bss	00000050 mutex_struct.9225
10000424 l     O .bss	00000020 rxq_storage.9216
10000444 l     O .bss	00000050 rxq_struct.9214
10000494 l     O .bss	00000238 sd_card_drive.9207
100006cc l     O .bss	00000080 txq_storage.9217
1000074c l     O .bss	00000050 txq_struct.9215
0000abcd l     O .text	00000011 __FUNCTION__.9195
00000000 l    df *ABS*	00000000 ssp2_mutex.c
1000079c l     O .bss	00000004 spi2_mutex_handle
100007a0 l     O .bss	00000050 spi2_mutex_memory
00000000 l    df *ABS*	00000000 sys_time.c
00002484 l     F .text	00000024 sys_time__one_minute_isr
100007f0 l     O .bss	00000004 sys_time__one_minute_counter
00000000 l    df *ABS*	00000000 uart_printf.c
00000000 l    df *ABS*	00000000 rtos_hooks.c
100007f8 l     O .bss	00000008 freertos_run_time_counter_offset
10000800 l     O .bss	00000190 uxIdleTaskStack.7857
10000990 l     O .bss	0000005c xIdleTaskTCB.7856
00000000 l    df *ABS*	00000000 freertos_interrupt_handlers.c
00000000 l    df *ABS*	00000000 heap_selector.c
00000000 l    df *ABS*	00000000 port.c
00002628 l     F .text	00000022 prvPortStartFirstTask
00002650 l     F .text	0000000e vPortEnableVFP
00002664 l     F .text	0000003c prvTaskExitError
000026f0 l       .text	00000000 pxCurrentTCBConst2
000027c0 l       .text	00000000 pxCurrentTCBConst
100009ec l     O .bss	00000001 ucMaxSysCallPriority
100009f0 l     O .bss	00000004 ulMaxPRIGROUPValue
100009f4 l     O .bss	00000004 uxCriticalNesting
00000000 l    df *ABS*	00000000 event_groups.c
00000000 l    df *ABS*	00000000 list.c
00000000 l    df *ABS*	00000000 queue.c
00002ba2 l     F .text	00000016 prvIsQueueEmpty
00002bb8 l     F .text	0000006a prvCopyDataToQueue
00002c22 l     F .text	0000002a prvCopyDataFromQueue
00002c4c l     F .text	00000070 prvUnlockQueue
00000000 l    df *ABS*	00000000 tasks.c
0000347c l     F .text	000000f4 prvAddNewTaskToReadyList
00003570 l     F .text	00000028 prvIdleTask
00003598 l     F .text	00000024 prvResetNextTaskUnblockTime
000035bc l     F .text	00000098 prvInitialiseNewTask.isra.2
00003654 l     F .text	0000008c prvAddCurrentTaskToDelayedList
100009fc l     O .bss	00000004 pxDelayedTaskList
10000a00 l     O .bss	00000004 pxOverflowDelayedTaskList
10000a04 l     O .bss	000000c8 pxReadyTasksLists
10000acc l     O .bss	00000004 ulTaskSwitchedInTime
10000ad0 l     O .bss	00000004 uxCurrentNumberOfTasks
10000ad4 l     O .bss	00000004 uxPendedTicks
10000ad8 l     O .bss	00000004 uxSchedulerSuspended
10000adc l     O .bss	00000004 uxTaskNumber
10000ae0 l     O .bss	00000004 uxTopReadyPriority
10000ae4 l     O .bss	00000014 xDelayedTaskList1
10000af8 l     O .bss	00000014 xDelayedTaskList2
10000b0c l     O .bss	00000004 xIdleTaskHandle
10000b10 l     O .bss	00000004 xNextTaskUnblockTime
10000b14 l     O .bss	00000004 xNumOfOverflows
10000b18 l     O .bss	00000014 xPendingReadyList
10000b2c l     O .bss	00000004 xSchedulerRunning
10000b30 l     O .bss	00000014 xSuspendedTaskList
10000b44 l     O .bss	00000004 xTickCount
10000b48 l     O .bss	00000004 xYieldPending
00000000 l    df *ABS*	00000000 board_io.c
10000b4c l     O .bss	00000001 board_io__led0
10000b4d l     O .bss	00000001 board_io__led1
10000b4e l     O .bss	00000001 board_io__led2
10000b4f l     O .bss	00000001 board_io__led3
10000b50 l     O .bss	00000001 board_io__sw0
10000b51 l     O .bss	00000001 board_io__sw1
10000b52 l     O .bss	00000001 board_io__sw2
10000b53 l     O .bss	00000001 board_io__sw3
00000000 l    df *ABS*	00000000 gpio.c
0000b4b8 l     O .text	00000018 gpio_memory_map
00000000 l    df *ABS*	00000000 hw_timer.c
0000b4d0 l     O .text	00000030 hw_timers
00000000 l    df *ABS*	00000000 i2c.c
0000439c l     F .text	0000005e i2c__transfer_unprotected
000043fc l     F .text	00000128 i2c__handle_interrupt
00004524 l     F .text	0000000c i2c2_isr
00004530 l     F .text	0000000c i2c1_isr
0000453c l     F .text	0000000c i2c0_isr
1000000c l     O .data	00000060 i2c_structs
00000000 l    df *ABS*	00000000 lpc_peripherals.c
000046f4 l     F .text	00000002 lpc_peripheral__halt_handler
10000b54 l     O .bss	00000004 memory_write_to_avoid_spurious_interrupt.7702
1000006c l     O .data	000000a4 lpc_peripheral__isr_registrations
0000b533 l     O .text	0000005a lpc_peripheral_pconp_bit_map
00000000 l    df *ABS*	00000000 ssp2.c
000047a4 l     F .text	00000098 ssp2__dma_transfer_block
00000000 l    df *ABS*	00000000 uart.c
000048cc l     F .text	00000094 uart__isr_common
00004960 l     F .text	0000000c uart3_isr
0000496c l     F .text	0000000c uart2_isr
00004978 l     F .text	0000000c uart1_isr
00004984 l     F .text	0000000c uart0_isr
10000110 l     O .data	00000040 uarts
0000b5a8 l     O .text	00000010 uart__isrs
0000b5b8 l     O .text	00000004 uart_peripheral_ids
00000000 l    df *ABS*	00000000 main.c
00004bf0 l     F .text	00000070 producer_task
00004c60 l     F .text	00000068 watchdog_task
00004dac l     F .text	0000007c consumer_task
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 lock.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
0000577c l     F .text	0000002e __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_float.c
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 nano-vfscanf_float.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 strtod.c
000069a8 l     F .text	00000038 sulp
0000b854 l     O .text	00000014 fpi.7522
0000b868 l     O .text	00000014 fpinan.7558
0000b880 l     O .text	00000028 tinytens
00000000 l    df *ABS*	00000000 strtol.c
00007584 l     F .text	000000f0 _strtol_l.isra.0
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
000077f8 l     F .text	00000112 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00008608 l     F .text	00000048 std
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
000087f0 l     F .text	00000074 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
00008cd8 l     F .text	00000024 L_shift
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 lib_a-memchr.o
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 mprec.c
0000ba20 l     O .text	0000000c p05.7444
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00000000 l    df *ABS*	00000000 s_nan.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_unorddf2.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 _arm_fixunsdfsi.o
00000000 l    df *ABS*	00000000 _arm_truncdfsf2.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 impure.c
10000154 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 lnumeric.c
100001b4 l     O .data	00000002 numempty
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 reent.c
00009c54 g     F .text	00000010 _malloc_usable_size_r
00005a20 g     F .text	000000ba __cvt
0000a1bc g     F .text	0000002c .hidden __aeabi_dcmpun
000097a6 g     F .text	00000042 __any_on
00009c10 g     F .text	00000020 _isatty_r
0000a180 g     F .text	00000012 .hidden __aeabi_dcmple
00004b74 g     F .text	0000007c uart__put
00006698 g     F .text	000000dc _puts_r
0000a0bc g     F .text	0000007a .hidden __cmpdf2
00009c30 g     F .text	00000024 _lseek_r
00003b7c g     F .text	00000054 vTaskPlaceOnUnorderedEventList
0000a0bc g     F .text	0000007a .hidden __eqdf2
0000483c g     F .text	0000002c ssp2__set_max_clock
00002738 g     F .text	00000028 vPortExitCritical
0000048c g     F .text	00000004 sensors__init
00005144 g     F .text	0000005a .hidden __floatdidf
000049f0 g     F .text	00000028 uart__is_initialized
00006668 g     F .text	00000030 printf
10000ba8 g     O .bss	00000001 __lock___atexit_recursive_mutex
000024a8 g     F .text	0000002c sys_time__init
00009b62 g     F .text	00000024 __sseek
000086b8 g     F .text	00000070 __sinit
00007678 g     F .text	000000a4 __swbuf_r
0000865c g     F .text	0000002c __sfmoreglue
00008fec g     F .text	0000000c __malloc_unlock
000003e8 g     F .text	00000018 startup__initialize_interrupts
00007578 g     F .text	0000000c _strtod_r
00008864 g     F .text	0000002a __hexdig_fun
10000ba9 g     O .bss	00000001 __lock___arc4random_mutex
000055e8 g     F .text	00000034 memmove
00004140 g     F .text	0000000c board_io__get_led3
00002fa0 g     F .text	000000bc xQueueGenericSendFromISR
00008ff8 g     F .text	00000068 _Balloc
0000ba34 g       .ARM.exidx	00000000 __exidx_end
00004774 g     F .text	00000030 lpc_peripheral__enable_interrupt
0000a0ac g     F .text	0000008a .hidden __gtdf2
00003fd4 g     F .text	00000010 vRunTimeStatIsrExit
100009f8 g     O .bss	00000004 pxCurrentTCB
0000a318 g     F .text	0000002e .hidden __aeabi_d2lz
00009bec g     F .text	00000024 _fstat_r
10000bb4 g     O .bss	00000004 errno
00000422 g     F .text	0000006a acceleration__get_data
0000ba34 g       .ARM.exidx	00000000 _etext
10000b60 g     O .bss	00000004 Check_In
0000a148 g     F .text	00000010 .hidden __aeabi_cdcmple
00004990 g     F .text	00000060 uart__init
00001a70 g     F .text	0000008c ff_wtoupper
0000022c g     F .text	00000040 clock__initialize_system_clock_96mhz
00003cd4 g     F .text	00000018 vTaskInternalSetTimeOutState
00002994 g     F .text	00000108 xEventGroupWaitBits
0000438c g     F .text	00000010 hw_timer__set_value
00004ab0 g     F .text	00000024 uart__polled_put
00002820 g     F .text	00000100 xPortStartScheduler
000055cc g     F .text	0000001c memcpy
00003b4c g     F .text	00000030 vTaskPlaceOnEventList
00008d24 g     F .text	00000120 __hexnan
00003c50 g     F .text	00000084 vTaskRemoveFromUnorderedEventList
0000a138 g     F .text	00000020 .hidden __aeabi_cdrcmple
000067a4 g     F .text	00000184 setvbuf
00008650 g     F .text	0000000c _cleanup_r
00009908 g     F .text	000001f0 _svfprintf_r
000050cc g     F .text	00000022 .hidden __floatsidf
000027f0  w    F .text	00000030 vPortSetupTimerInterrupt
0000a0b4 g     F .text	00000082 .hidden __ltdf2
000027c4 g     F .text	0000002c xPortSysTickHandler
00001afc g     F .text	0000001c disk_initialize
000051a0 g     F .text	00000000 .hidden __aeabi_uldivmod
00006774 g     F .text	00000010 puts
00002f74 g     F .text	0000002a xQueueCreateMutexStatic
0000260e g     F .text	0000001a vPortFree
0000970c g     F .text	00000066 __ratio
00004128 g     F .text	0000000c board_io__get_led1
0000323c g     F .text	00000180 xQueueSemaphoreTake
00004108 g     F .text	00000014 board_io__sd_card_is_present
000019e0 g     F .text	0000000a ff_del_syncobj
000055ac g     F .text	00000010 malloc
00002920 g     F .text	00000058 vPortValidateInterruptPriority
00004750 g     F .text	00000024 lpc_peripheral__is_powered_on
000021fc g     F .text	00000004 _fstat
0000b958 g     O .text	000000c8 __mprec_tens
00004548 g     F .text	000000b8 i2c__initialize
00002760 g     F .text	00000064 xPortPendSVHandler
10000328 g       .bss	00000000 _bss_start
0000a238 g     F .text	00000040 .hidden __fixunsdfsi
00002b3c g     F .text	00000018 vListInsertEnd
00001b18 g     F .text	0000000a disk_status
00002978 g     F .text	0000001c xEventGroupCreate
000050ac g     F .text	0000001e .hidden __aeabi_ui2d
00008e44 g     F .text	00000008 _localeconv_r
20008000 g       *ABS*	00000000 __top_ram_32k
00009220 g     F .text	00000012 __i2b
00004234 g     F .text	00000020 gpio__set_as_output
000051d0 g     F .text	000002d0 .hidden __udivmoddi4
00004e28 g     F .text	00000000 .hidden __aeabi_drsub
00006784 g     F .text	00000020 _sbrk_r
000041e8 g     F .text	00000024 gpio__set_as_input
10000b64 g     O .bss	00000040 string
000025ec g     F .text	00000004 xPortSysTickHandler_wrapper
00004176 g     F .text	0000002a gpio__construct_with_function
00009c64 g     F .text	00000024 _read_r
00002b36 g     F .text	00000006 vListInitialiseItem
00001b72 g     F .text	00000024 disk_ioctl
0000a16c g     F .text	00000012 .hidden __aeabi_dcmplt
00003100 g     F .text	0000013c xQueueReceive
000050f0 g     F .text	00000042 .hidden __extendsfdf2
00009edc g     F .text	000001d0 .hidden __aeabi_ddiv
00004e34 g     F .text	00000276 .hidden __adddf3
20008000 g       *ABS*	00000000 _heap_end
000095d0 g     F .text	000000a0 __b2d
0000ba2c g       .text	00000000 __exidx_start
10000baa g     O .bss	00000001 __lock___env_recursive_mutex
00009c88 g     F .text	00000254 .hidden __aeabi_dmul
000021c8 g     F .text	00000028 _isatty
10000bab g     O .bss	00000001 __lock___sinit_recursive_mutex
0000b808 g     O .text	00000004 _global_impure_ptr
00002a9c g     F .text	00000084 xEventGroupSetBits
00009804 g     F .text	0000004c _realloc_r
000041c0 g     F .text	00000028 gpio__enable_pull_down_resistors
00004a40 g     F .text	00000070 uart__enable_queues
0000b930 g     O .text	00000028 __mprec_bigtens
00009104 g     F .text	0000007c __s2b
000042bc g     F .text	0000001c gpio__reset
000042a0 g     F .text	0000001c gpio__set
000050ac g     F .text	0000001e .hidden __floatunsidf
000048ac g     F .text	00000014 ssp2__exchange_byte
00000344 g     F .text	00000054 _sbrk
00009496 g     F .text	00000034 __mcmp
000025f0 g     F .text	0000001e pvPortMalloc
10010000 g       *ABS*	00000000 __end_of_unused_ram64
00003458 g     F .text	00000024 vQueueDelete
00002b20 g     F .text	00000016 vListInitialise
00002512 g     F .text	0000002a uart_puts__polled
0000a278 g     F .text	0000009e .hidden __aeabi_d2f
00080000 g       *ABS*	00000000 __top_flash
10000bb8 g       .bss	00000000 _bss_end
0000382c g     F .text	0000000c xTaskGetTickCount
0000a348 g     F .text	0000003c .hidden __aeabi_d2ulz
00002e18 g     F .text	0000015c xQueueGenericSend
00001a08 g     F .text	00000040 ff_uni2oem
0000242c g     F .text	00000034 spi2_mutex__acquire
000069e0 g     F .text	00000b98 _strtod_l
000046dc g     F .text	00000018 i2c__write_single
00008cfc g     F .text	00000028 __match
00004340 g     F .text	00000024 hw_timer__enable_match_isr
00002300 g     F .text	0000012c peripherals_init
00009180 g     F .text	00000040 __hi0bits
00003fe4 g     F .text	00000104 board_io__initialize
0000a1e8 g     F .text	0000004e .hidden __fixdfsi
00003e30 g     F .text	0000009c xTaskPriorityDisinherit
20000028 g       .persistent_ram2	00000000 _heap_start
10000bac g     O .bss	00000001 __lock___malloc_recursive_mutex
0000427c g     F .text	00000024 gpio__get
00001e74 g     F .text	0000008c sd_card__read
10000bb8 g       .bss	00000000 __start_of_unused_ram64
00003bd0 g     F .text	00000080 xTaskRemoveFromEventList
00002558 g     F .text	00000010 vApplicationMallocFailedHook
000001d0 g     F .text	0000004c isr_hard_fault_handler
000054a4 g     F .text	00000024 fprintf
00004e34 g     F .text	00000276 .hidden __aeabi_dadd
0000a0b4 g     F .text	00000082 .hidden __ledf2
10000000 g       .data	00000000 _bdata_vma
00009354 g     F .text	0000009c __pow5mult
00005134 g     F .text	0000006a .hidden __aeabi_ul2d
0000b8b8 g     O .text	00000020 __sf_fake_stderr
000042f8 g     F .text	00000048 hw_timer__enable
000055a8 g     F .text	00000002 __retarget_lock_release_recursive
00000398 g     F .text	0000003c startup__initialize_ram
00001d28 g     F .text	0000013c sd_card__initialize
00009850 g     F .text	000000b6 __ssputs_r
00000224 g     F .text	00000008 clock__get_peripheral_clock_hz
00003f94 g     F .text	00000018 pvTaskIncrementMutexHeldCount
00000284 g     F .text	000000c0 crash__report_if_occurred
0000a1a8 g     F .text	00000012 .hidden __aeabi_dcmpgt
10010000 g       *ABS*	00000000 __top_ram_64k
000057aa g     F .text	00000024 __sfputs_r
00008688 g     F .text	0000000c __sfp_lock_acquire
00008f40 g     F .text	00000000 memchr
00005b40  w    F .text	00000454 _printf_float
00003cec g     F .text	00000074 xTaskCheckForTimeOut
0000562c g     F .text	0000009c _free_r
00003d8c g     F .text	000000a4 xTaskPriorityInherit
0000a194 g     F .text	00000012 .hidden __aeabi_dcmpge
0000199c g     F .text	00000028 f_close
00004e30 g     F .text	0000027a .hidden __aeabi_dsub
0000381c g     F .text	00000010 vTaskSuspendAll
00005134 g     F .text	0000006a .hidden __floatundidf
00002200 g     F .text	00000004 _lseek
000093f0 g     F .text	000000a6 __lshift
000042d8 g     F .text	0000001e gpio__toggle
00002b82 g     F .text	00000020 uxListRemove
00002578 g     F .text	00000040 configASSERT_callback
00006984 g     F .text	00000024 strncmp
00009232 g     F .text	00000120 __multiply
000036e0 g     F .text	0000006c xTaskCreateStatic
000019c4 g     F .text	0000001c ff_cre_syncobj
00009670 g     F .text	0000009c __d2b
00003a90 g     F .text	000000bc vTaskSwitchContext
00004654 g     F .text	0000001e i2c__read_single
0000420c g     F .text	00000028 gpio__construct_as_input
00002d38 g     F .text	00000094 xQueueGenericCreateStatic
00004a2c g     F .text	00000014 uart__is_receive_queue_initialized
00009bcc g     F .text	00000020 _close_r
000050cc g     F .text	00000022 .hidden __aeabi_i2d
000025b8 g     F .text	00000018 vApplicationGetIdleTaskMemory
00001f00 g     F .text	000000a8 sd_card__write
10000324 g       .data	00000000 _data_end
0000771c g     F .text	000000dc __swsetup_r
000048c0 g     F .text	00000006 ssp2__dma_write_block
0000253c g     F .text	0000001c vApplicationStackOverflowHook
000054a0  w    F .text	00000002 .hidden __aeabi_ldiv0
00009edc g     F .text	000001d0 .hidden __divdf3
00008728 g     F .text	0000008c __sfp
00009772 g     F .text	00000034 __copybits
000086ac g     F .text	0000000c __sinit_lock_release
00002500 g     F .text	00000012 sys_time__get_uptime_ms
00000000 g       .text	00000000 __base_flash
00009c88 g     F .text	00000254 .hidden __muldf3
00004134 g     F .text	0000000c board_io__get_led2
00009b08 g     F .text	00000022 __sread
00001b96 g     F .text	00000004 get_fattime
00008fe0 g     F .text	0000000c __malloc_lock
00008590 g     F .text	00000078 _fflush_r
00004b20 g     F .text	00000054 uart__polled_get
000097e8 g     F .text	0000001c _calloc_r
000024d4 g     F .text	0000002c sys_time__get_uptime_us
0000b8d8 g     O .text	00000020 __sf_fake_stdin
000055a6 g     F .text	00000002 __retarget_lock_acquire_recursive
0000561c g     F .text	00000010 memset
000046c4 g     F .text	00000018 i2c__detect
00004cc8 g     F .text	0000008c main
000055a4 g     F .text	00000002 __retarget_lock_init_recursive
00001fa8 g     F .text	00000200 sd_card__ioctl
000018fa g     F .text	000000a2 f_sync
10000000 g       .text	00000000 __base_ram_64k
00002b54 g     F .text	0000002e vListInsert
00009b86 g     F .text	00000008 __sclose
0000a278 g     F .text	0000009e .hidden __truncdfsf2
00007674 g     F .text	00000004 _strtol_r
000000e4 g       .text	00000000 __init_array_end
000026d0 g     F .text	00000024 vPortSVCHandler
00007910 g     F .text	00000b74 _dtoa_r
000056c8 g     F .text	000000b4 _malloc_r
00009b8e g     F .text	0000001a __ascii_wctomb
00005144 g     F .text	0000005a .hidden __aeabi_l2d
0000151c g     F .text	00000070 f_mount
000033bc g     F .text	0000009c xQueueReceiveFromISR
00002dcc g     F .text	0000004c xQueueGenericCreate
00004a18 g     F .text	00000014 uart__is_transmit_queue_initialized
00001a48 g     F .text	00000028 ff_oem2uni
00004868 g     F .text	00000044 ssp2__initialize
00001e64 g     F .text	00000010 sd_card__status
0000a348 g     F .text	0000003c .hidden __fixunsdfdi
0000a0bc g     F .text	0000007a .hidden __nedf2
000025e8 g     F .text	00000004 xPortPendSVHandler_wrapper
00004600 g     F .text	00000054 i2c__read_slave_data
00006668 g     F .text	00000030 iprintf
000019fc g     F .text	0000000a ff_rel_grant
0000395c g     F .text	000000ec xTaskResumeAll
00006934 g     F .text	00000040 sprintf
000025e4 g     F .text	00000004 vPortSVCHandler_wrapper
000037a8 g     F .text	00000074 vTaskStartScheduler
00005ada g     F .text	00000064 __exponent
000046f8 g     F .text	00000034 lpc_peripheral__interrupt_dispatcher
0000a318 g     F .text	0000002e .hidden __fixdfdi
00009ba8 g     F .text	00000024 _write_r
0000021c g     F .text	00000008 clock__get_core_clock_hz
00006928 g     F .text	0000000c nanf
00005f94 g     F .text	000000ea _printf_common
10000150 g     O .data	00000004 _impure_ptr
00008484 g     F .text	0000010c __sflush_r
000000e4 g       .text	00000000 __preinit_array_end
000041a0 g     F .text	00000020 gpio__enable_open_drain
000040e8 g     F .text	00000010 board_io__sd_card_cs
00002460 g     F .text	00000024 spi2_mutex__release
00009908 g     F .text	000001f0 _svfiprintf_r
00008f14 g     F .text	00000024 __ascii_mbtowc
00009584 g     F .text	0000004c __ulp
00003d60 g     F .text	0000000c vTaskMissedYield
000040f8 g     F .text	00000010 board_io__sd_card_ds
0000b918 g     O .text	0000000c _C_numeric_locale
10000ba4 g     O .bss	00000004 sd_card_Q
0000026c g     F .text	00000018 crash__record_get
00001d08 g     F .text	00000020 sd_card__update_status
0000a238 g     F .text	00000040 .hidden __aeabi_d2uiz
00009af8 g     F .text	00000010 nan
00003838 g     F .text	00000124 xTaskIncrementTick
000025d0 g     F .text	00000014 freertos_hooks__get_run_time_counter_value
00008e4c g     F .text	00000048 __swhatbuf_r
10010000 g       *ABS*	00000000 _estack
0000a158 g     F .text	00000012 .hidden __aeabi_dcmpeq
00000400 g     F .text	00000022 acceleration__init
00002cbc g     F .text	0000007c xQueueGenericReset
00002204 g     F .text	00000070 _write
000022f4 g     F .text	0000000c delay__ms
00000000 g     O .text	000000e4 interrupt_vector_table
10000bad g     O .bss	00000001 __lock___at_quick_exit_mutex
00001758 g     F .text	000001a2 f_write
000054c8 g     F .text	000000cc _fputs_r
20000000 g       .text	00000000 __base_ram_32k
0000374c g     F .text	0000005a xTaskCreate
00009b2a g     F .text	00000038 __swrite
0000158c g     F .text	000001cc f_open
00001b4a g     F .text	00000028 disk_write
000054a4 g     F .text	00000024 fiprintf
000057d0 g     F .text	00000250 _vfiprintf_r
000087b4 g     F .text	0000003c _fwalk_reent
0000414c g     F .text	0000002a gpio__set_function
000094ca g     F .text	000000ba __mdiff
0000a1e8 g     F .text	0000004e .hidden __aeabi_d2iz
000019ea g     F .text	00000012 ff_req_grant
0000ba34 g       *ABS*	00000000 _bdata_lma
00003a48 g     F .text	00000048 vTaskDelay
00008694 g     F .text	0000000c __sfp_lock_release
0000b8f8 g     O .text	00000020 __sf_fake_stdout
00006934 g     F .text	00000040 siprintf
00003d6c g     F .text	00000020 xTaskGetSchedulerState
0000b707 g     O .text	00000101 _ctype_
00003ecc g     F .text	000000b0 vTaskPriorityDisinheritAfterTimeout
00002274 g     F .text	00000040 _read
000000e4 g       .text	00000000 __init_array_start
000054a0  w    F .text	00000002 .hidden __aeabi_idiv0
0000a1bc g     F .text	0000002c .hidden __unorddf2
00004364 g     F .text	00000018 hw_timer__acknowledge_interrupt
000003d4 g     F .text	00000014 startup__initialize_fpu
00004d54 g     F .text	00000058 write_file_using_fatfs_pi
10000bae g     O .bss	00000001 __lock___dd_hash_mutex
00008e94 g     F .text	00000080 __smakebuf_r
10000baf g     O .bss	00000001 __lock___tz_mutex
00006974 g     F .text	00000010 strlen
00001b22 g     F .text	00000028 disk_read
000026a0 g     F .text	0000002c pxPortInitialiseStack
00006080 g     F .text	00000228 _printf_i
00004ad4 g     F .text	0000004c uart__get
0000a148 g     F .text	00000010 .hidden __aeabi_cdcmpeq
0000411c g     F .text	0000000c board_io__get_led0
0000a0ac g     F .text	0000008a .hidden __gedf2
00008890 g     F .text	00000446 __gethex
10000b5c g     O .bss	00000004 __malloc_sbrk_start
00004674 g     F .text	00000050 i2c__write_slave_data
000022b4 g     F .text	00000040 delay__us
000050f0 g     F .text	00000042 .hidden __aeabi_f2d
00005594 g     F .text	00000010 fputs
000026f4 g     F .text	00000044 vPortEnterCritical
0000472c g     F .text	00000024 lpc_peripheral__turn_on_power_to
10000b58 g     O .bss	00000004 __malloc_free_list
00004e30 g     F .text	0000027a .hidden __subdf3
000057d0 g     F .text	00000250 _vfprintf_r
000000e4 g       .text	00000000 __preinit_array_start
0000437c g     F .text	00000010 hw_timer__get_value
000091c0 g     F .text	00000060 __lo0bits
00003fac g     F .text	00000028 vRunTimeStatIsrEntry
000000e4 g     F .text	00000074 entry_point
00004254 g     F .text	00000028 gpio__construct_as_output
00003f7c g     F .text	00000018 uxTaskResetEventItemValue
100001b8 g     O .data	0000016c __global_locale
000048c6 g     F .text	00000006 ssp2__dma_read_block
10000bb0 g     O .bss	00000001 __lock___sfp_recursive_mutex
0000305c g     F .text	000000a4 xQueueGiveFromISR
000021f0 g     F .text	0000000c _close
000055bc g     F .text	00000010 free
000086a0 g     F .text	0000000c __sinit_lock_acquire
000062a8  w    F .text	000003c0 _scanf_float
0000908e g     F .text	00000076 __multadd
00009060 g     F .text	0000002e _Bfree
00002568 g     F .text	00000010 vApplicationIdleHook



Disassembly of section .text:

00000000 <interrupt_vector_table>:
__base_flash():
       0:	00 00 01 10 e5 00 00 00 75 01 00 00 59 01 00 00     ........u...Y...
      10:	75 01 00 00 75 01 00 00 75 01 00 00 75 01 00 00     u...u...u...u...
      20:	75 01 00 00 75 01 00 00 75 01 00 00 e5 25 00 00     u...u...u....%..
      30:	75 01 00 00 75 01 00 00 e9 25 00 00 ed 25 00 00     u...u....%...%..
      40:	f9 46 00 00 f9 46 00 00 f9 46 00 00 f9 46 00 00     .F...F...F...F..
      50:	f9 46 00 00 f9 46 00 00 f9 46 00 00 f9 46 00 00     .F...F...F...F..
      60:	f9 46 00 00 f9 46 00 00 f9 46 00 00 f9 46 00 00     .F...F...F...F..
      70:	f9 46 00 00 f9 46 00 00 f9 46 00 00 f9 46 00 00     .F...F...F...F..
      80:	f9 46 00 00 f9 46 00 00 f9 46 00 00 f9 46 00 00     .F...F...F...F..
      90:	f9 46 00 00 f9 46 00 00 f9 46 00 00 f9 46 00 00     .F...F...F...F..
      a0:	f9 46 00 00 f9 46 00 00 f9 46 00 00 f9 46 00 00     .F...F...F...F..
      b0:	f9 46 00 00 f9 46 00 00 f9 46 00 00 f9 46 00 00     .F...F...F...F..
      c0:	f9 46 00 00 f9 46 00 00 f9 46 00 00 f9 46 00 00     .F...F...F...F..
      d0:	f9 46 00 00 f9 46 00 00 f9 46 00 00 f9 46 00 00     .F...F...F...F..
      e0:	f9 46 00 00                                         .F..

000000e4 <entry_point>:
entry_point():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/entry_point.c:18
extern void main(void);
static void entry_point__halt(void);
static void entry_point__handle_crash_report(void);
static void entry_point__rtos_trace_init_after_mounting_sd_card(void);

void entry_point(void) {
      e4:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/entry_point.c:19
  startup__initialize_ram();
      e6:	f000 f957 	bl	398 <startup__initialize_ram>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/entry_point.c:20
  startup__initialize_fpu();
      ea:	f000 f973 	bl	3d4 <startup__initialize_fpu>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/entry_point.c:21
  clock__initialize_system_clock_96mhz();
      ee:	f000 f89d 	bl	22c <clock__initialize_system_clock_96mhz>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/entry_point.c:34
   *  - Initialize trace here so that the trace library APIs are accessible
   * early
   */
  vTraceEnable(TRC_INIT);

  startup__initialize_interrupts();
      f2:	f000 f979 	bl	3e8 <startup__initialize_interrupts>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/entry_point.c:35
  sys_time__init(clock__get_peripheral_clock_hz());
      f6:	f000 f895 	bl	224 <clock__get_peripheral_clock_hz>
      fa:	f002 f9d5 	bl	24a8 <sys_time__init>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/entry_point.c:39

  // Peripherals init initializes UART and then we can print the crash report if
  // applicable
  peripherals_init();
      fe:	f002 f8ff 	bl	2300 <peripherals_init>
entry_point__handle_crash_report():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/entry_point.c:62
  while (1) {
  }
}

static void entry_point__handle_crash_report(void) {
  if (crash__report_if_occurred()) {
     102:	f000 f8bf 	bl	284 <crash__report_if_occurred>
     106:	b140      	cbz	r0, 11a <entry_point+0x36>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/entry_point.c:63
    while (sys_time__get_uptime_ms() < 5000) {
     108:	f241 3487 	movw	r4, #4999	; 0x1387
     10c:	2500      	movs	r5, #0
     10e:	f002 f9f7 	bl	2500 <sys_time__get_uptime_ms>
     112:	428d      	cmp	r5, r1
     114:	bf08      	it	eq
     116:	4284      	cmpeq	r4, r0
     118:	d2f9      	bcs.n	10e <entry_point+0x2a>
entry_point():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/entry_point.c:42
  if (!sensors__init()) {
     11a:	f000 f9b7 	bl	48c <sensors__init>
     11e:	b918      	cbnz	r0, 128 <entry_point+0x44>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/entry_point.c:43
    printf("\n%s(): WARNING: Sensor errors on this board\n", __FUNCTION__);
     120:	4908      	ldr	r1, [pc, #32]	; (144 <entry_point+0x60>)
     122:	4809      	ldr	r0, [pc, #36]	; (148 <entry_point+0x64>)
     124:	f006 faa0 	bl	6668 <iprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/entry_point.c:48
  printf("\n%s(): Entering main()\n", __FUNCTION__);
     128:	4906      	ldr	r1, [pc, #24]	; (144 <entry_point+0x60>)
     12a:	4808      	ldr	r0, [pc, #32]	; (14c <entry_point+0x68>)
     12c:	f006 fa9c 	bl	6668 <iprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/entry_point.c:49
  main();
     130:	f004 fdca 	bl	4cc8 <main>
entry_point__halt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/entry_point.c:56
  fprintf(stderr, "ERROR: main() should never return, program has been halted");
     134:	4b06      	ldr	r3, [pc, #24]	; (150 <entry_point+0x6c>)
     136:	4807      	ldr	r0, [pc, #28]	; (154 <entry_point+0x70>)
     138:	681b      	ldr	r3, [r3, #0]
     13a:	68d9      	ldr	r1, [r3, #12]
     13c:	f005 fa2a 	bl	5594 <fputs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/entry_point.c:58
  }
     140:	e7fe      	b.n	140 <entry_point+0x5c>
     142:	bf00      	nop
     144:	0000a384 	.word	0x0000a384
     148:	0000a390 	.word	0x0000a390
     14c:	0000a3bd 	.word	0x0000a3bd
     150:	10000150 	.word	0x10000150
     154:	0000a3d5 	.word	0x0000a3d5

00000158 <isr_hard_fault>:
isr_hard_fault():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:137
/**
 * Explanation of register usage dictated by ARM's EABI:
 * https://stackoverflow.com/questions/261419/what-registers-to-save-in-the-arm-c-calling-convention
 */
static void isr_hard_fault(void) {
  __asm__ volatile("tst lr, #4                                    \n"
     158:	f01e 0f04 	tst.w	lr, #4
     15c:	bf0c      	ite	eq
     15e:	f3ef 8008 	mrseq	r0, MSP
     162:	f3ef 8009 	mrsne	r0, PSP
     166:	6981      	ldr	r1, [r0, #24]
     168:	4a00      	ldr	r2, [pc, #0]	; (16c <handler_address>)
     16a:	4710      	bx	r2

0000016c <handler_address>:
     16c:	000001d1 	.word	0x000001d1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:145
                   "mrsne r0, psp                                 \n"
                   "ldr r1, [r0, #24]                             \n"
                   "ldr r2, handler_address                       \n"
                   "bx r2                                         \n"
                   "handler_address: .word isr_hard_fault_handler \n");
}
     170:	4770      	bx	lr
handler_address():
     172:	Address 0x0000000000000172 is out of bounds.


00000174 <halt>:
halt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:106
static void halt(void) {
     174:	b538      	push	{r3, r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:111
  fprintf(stderr, "Unexpected CPU exception ");
     176:	4c0f      	ldr	r4, [pc, #60]	; (1b4 <halt+0x40>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:110
  const unsigned isr_num = (*((uint8_t *)0xE000ED04));
     178:	4b0f      	ldr	r3, [pc, #60]	; (1b8 <halt+0x44>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:111
  fprintf(stderr, "Unexpected CPU exception ");
     17a:	4810      	ldr	r0, [pc, #64]	; (1bc <halt+0x48>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:110
  const unsigned isr_num = (*((uint8_t *)0xE000ED04));
     17c:	781d      	ldrb	r5, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:111
  fprintf(stderr, "Unexpected CPU exception ");
     17e:	6823      	ldr	r3, [r4, #0]
     180:	68d9      	ldr	r1, [r3, #12]
     182:	f005 fa07 	bl	5594 <fputs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:112
  fprintf(stderr, "%u (interrupt) has occured and the program will now halt\n",
     186:	6823      	ldr	r3, [r4, #0]
     188:	490d      	ldr	r1, [pc, #52]	; (1c0 <halt+0x4c>)
     18a:	68d8      	ldr	r0, [r3, #12]
     18c:	462a      	mov	r2, r5
     18e:	f005 f989 	bl	54a4 <fiprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:115
  if (isr_num < 16) {
     192:	2d0f      	cmp	r5, #15
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:121
    fprintf(stderr, "Exception appears to be '%s'\n", table[isr_num]);
     194:	6823      	ldr	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:115
  if (isr_num < 16) {
     196:	d807      	bhi.n	1a8 <halt+0x34>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:121
    fprintf(stderr, "Exception appears to be '%s'\n", table[isr_num]);
     198:	4a0a      	ldr	r2, [pc, #40]	; (1c4 <halt+0x50>)
     19a:	490b      	ldr	r1, [pc, #44]	; (1c8 <halt+0x54>)
     19c:	f852 2025 	ldr.w	r2, [r2, r5, lsl #2]
     1a0:	68d8      	ldr	r0, [r3, #12]
     1a2:	f005 f97f 	bl	54a4 <fiprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:128 (discriminator 1)
    ;
     1a6:	e7fe      	b.n	1a6 <halt+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:123
    fprintf(stderr, "Did you register the interrupt correctly using "
     1a8:	68d9      	ldr	r1, [r3, #12]
     1aa:	4808      	ldr	r0, [pc, #32]	; (1cc <halt+0x58>)
     1ac:	f005 f9f2 	bl	5594 <fputs>
     1b0:	e7f9      	b.n	1a6 <halt+0x32>
     1b2:	bf00      	nop
     1b4:	10000150 	.word	0x10000150
     1b8:	e000ed04 	.word	0xe000ed04
     1bc:	0000a410 	.word	0x0000a410
     1c0:	0000a42a 	.word	0x0000a42a
     1c4:	0000a51c 	.word	0x0000a51c
     1c8:	0000a464 	.word	0x0000a464
     1cc:	0000a482 	.word	0x0000a482

000001d0 <isr_hard_fault_handler>:
isr_hard_fault_handler():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:147

void isr_hard_fault_handler(unsigned long *hardfault_args) {
     1d0:	b510      	push	{r4, lr}
     1d2:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:148
  crash__registers_s *c = crash__record_get();
     1d4:	f000 f84a 	bl	26c <crash__record_get>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:150

  c->registers[0] = ((unsigned long)hardfault_args[0]);
     1d8:	6823      	ldr	r3, [r4, #0]
     1da:	6083      	str	r3, [r0, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:151
  c->registers[1] = ((unsigned long)hardfault_args[1]);
     1dc:	6863      	ldr	r3, [r4, #4]
     1de:	60c3      	str	r3, [r0, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:152
  c->registers[2] = ((unsigned long)hardfault_args[2]);
     1e0:	68a3      	ldr	r3, [r4, #8]
     1e2:	6103      	str	r3, [r0, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:153
  c->registers[3] = ((unsigned long)hardfault_args[3]);
     1e4:	68e3      	ldr	r3, [r4, #12]
     1e6:	6143      	str	r3, [r0, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:155

  c->r12 = ((unsigned long)hardfault_args[4]);
     1e8:	6923      	ldr	r3, [r4, #16]
     1ea:	6243      	str	r3, [r0, #36]	; 0x24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:156
  c->lr = ((unsigned long)hardfault_args[5]) - 1;
     1ec:	6963      	ldr	r3, [r4, #20]
     1ee:	3b01      	subs	r3, #1
     1f0:	61c3      	str	r3, [r0, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:157
  c->pc = ((unsigned long)hardfault_args[6]);
     1f2:	69a3      	ldr	r3, [r4, #24]
     1f4:	6183      	str	r3, [r0, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/interrupt_vector_table.c:158
  c->psr = ((unsigned long)hardfault_args[7]);
     1f6:	69e3      	ldr	r3, [r4, #28]
     1f8:	6203      	str	r3, [r0, #32]
__DSB():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/cmsis_gcc.h:946
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
     1fa:	f3bf 8f4f 	dsb	sy
__NVIC_SystemReset():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1938
__NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
{
  __DSB();                                                          /* Ensure all outstanding memory accesses included
                                                                       buffered write are completed before reset */
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
     1fe:	4905      	ldr	r1, [pc, #20]	; (214 <isr_hard_fault_handler+0x44>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1937
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
     200:	4b05      	ldr	r3, [pc, #20]	; (218 <isr_hard_fault_handler+0x48>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1938
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
     202:	68ca      	ldr	r2, [r1, #12]
     204:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1937
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
     208:	4313      	orrs	r3, r2
     20a:	60cb      	str	r3, [r1, #12]
__DSB():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/cmsis_gcc.h:946
     20c:	f3bf 8f4f 	dsb	sy
__NVIC_SystemReset():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1944
                            SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchanged */
  __DSB();                                                          /* Ensure completion of memory access */

  for(;;)                                                           /* wait until reset */
  {
    __NOP();
     210:	bf00      	nop
     212:	e7fd      	b.n	210 <isr_hard_fault_handler+0x40>
     214:	e000ed00 	.word	0xe000ed00
     218:	05fa0004 	.word	0x05fa0004

0000021c <clock__get_core_clock_hz>:
clock__get_core_clock_hz():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/clock.c:13
 *
 * We use fixed CPU frequency because clock__initialize_system_clock_96mhz()
 * configures fixed CPU frequency. It is rare that anyone needs to change this
 * (ever).
 */
uint32_t clock__get_core_clock_hz(void) { return (UINT32_C(96) * 1000 * 1000); }
     21c:	4800      	ldr	r0, [pc, #0]	; (220 <clock__get_core_clock_hz+0x4>)
     21e:	4770      	bx	lr
     220:	05b8d800 	.word	0x05b8d800

00000224 <clock__get_peripheral_clock_hz>:
clock__get_peripheral_clock_hz():
     224:	4800      	ldr	r0, [pc, #0]	; (228 <clock__get_peripheral_clock_hz+0x4>)
     226:	4770      	bx	lr
     228:	05b8d800 	.word	0x05b8d800

0000022c <clock__initialize_system_clock_96mhz>:
clock__initialize_system_clock_96mhz():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/clock.c:24

void clock__initialize_system_clock_96mhz(void) {
  // Step 3 from UM: Write PLL new setup values to the PLL CFG register
  const uint8_t multiplier = 8; // 8 * 12Mhz = 96Mhz

  LPC_SC->PLL0CFG = ((multiplier - 1) << 0);
     22c:	4b0e      	ldr	r3, [pc, #56]	; (268 <clock__initialize_system_clock_96mhz+0x3c>)
     22e:	2207      	movs	r2, #7
     230:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/clock.c:28
  LPC_SC->PLL0CON = 1; // PLL enable

  // Necessary feed sequence to ensure the changes are intentional
  LPC_SC->PLL0FEED = 0xAA;
     234:	21aa      	movs	r1, #170	; 0xaa
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/clock.c:25
  LPC_SC->PLL0CON = 1; // PLL enable
     236:	2201      	movs	r2, #1
     238:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/clock.c:28
  LPC_SC->PLL0FEED = 0xAA;
     23c:	f8c3 108c 	str.w	r1, [r3, #140]	; 0x8c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/clock.c:29
  LPC_SC->PLL0FEED = 0x55;
     240:	2155      	movs	r1, #85	; 0x55
     242:	f8c3 108c 	str.w	r1, [r3, #140]	; 0x8c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/clock.c:32

  // Step 4 from UM: Setup necessary clock dividers
  LPC_SC->PCLKSEL = 1; // APB peripherals receive clock/1 (divided by 1)
     246:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/clock.c:36 (discriminator 1)

  // Step 5 from UM: Wait for PLL to lock
  const uint32_t pll_lock_bit_mask = (1 << 10);
  while (!(LPC_SC->PLL0STAT & pll_lock_bit_mask)) {
     24a:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
     24e:	0552      	lsls	r2, r2, #21
     250:	d5fb      	bpl.n	24a <clock__initialize_system_clock_96mhz+0x1e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/clock.c:42
    ;
  }

  // Before we switch to the faster clock, we need to configure flash memory
  // access properly with respect to core clock
  uint32_t flash_cfg = LPC_SC->FLASHCFG;
     252:	681a      	ldr	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/clock.c:43
  flash_cfg &= ~(0xF << 12);
     254:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/clock.c:44
  flash_cfg |= (0x4 << 12); // 5 cpu clocks for use with up to 100Mhz
     258:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/clock.c:45
  LPC_SC->FLASHCFG = flash_cfg;
     25c:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/clock.c:49

  // Step 6 from UM: Connect the PLL to the CPU
  const uint32_t cpu_on_pll_clock = (1 << 8) | (1 << 0);
  LPC_SC->CCLKSEL = cpu_on_pll_clock; // CPU uses PLL clock (Table 20)
     25e:	f240 1201 	movw	r2, #257	; 0x101
     262:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/clock.c:50
}
     266:	4770      	bx	lr
     268:	400fc000 	.word	0x400fc000

0000026c <crash__record_get>:
crash__record_get():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:18

static void crash__clear_record(void);

crash__registers_s *crash__record_get(void) {
  // Record the crash signature first before returning the struct
  crash_registers.signature = crash__signature;
     26c:	4802      	ldr	r0, [pc, #8]	; (278 <crash__record_get+0xc>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:19
  crash_registers.signature_inverted = ~crash__signature;
     26e:	4a03      	ldr	r2, [pc, #12]	; (27c <crash__record_get+0x10>)
     270:	4b03      	ldr	r3, [pc, #12]	; (280 <crash__record_get+0x14>)
     272:	e9c0 2300 	strd	r2, r3, [r0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:22

  return &crash_registers;
}
     276:	4770      	bx	lr
     278:	20000000 	.word	0x20000000
     27c:	deadbeef 	.word	0xdeadbeef
     280:	21524110 	.word	0x21524110

00000284 <crash__report_if_occurred>:
crash__report_if_occurred():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:24

bool crash__report_if_occurred(void) {
     284:	b538      	push	{r3, r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:27
  bool crash_occured = false;

  if (crash__signature == crash_registers.signature &&
     286:	4c22      	ldr	r4, [pc, #136]	; (310 <crash__report_if_occurred+0x8c>)
     288:	4b22      	ldr	r3, [pc, #136]	; (314 <crash__report_if_occurred+0x90>)
     28a:	6822      	ldr	r2, [r4, #0]
     28c:	429a      	cmp	r2, r3
     28e:	d13d      	bne.n	30c <crash__report_if_occurred+0x88>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:27 (discriminator 1)
     290:	6862      	ldr	r2, [r4, #4]
     292:	4b21      	ldr	r3, [pc, #132]	; (318 <crash__report_if_occurred+0x94>)
     294:	429a      	cmp	r2, r3
     296:	d139      	bne.n	30c <crash__report_if_occurred+0x88>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:31
      ~crash__signature == crash_registers.signature_inverted) {
    crash_occured = true;

    fprintf(stderr, "----------------------------------------\n"
     298:	4d20      	ldr	r5, [pc, #128]	; (31c <crash__report_if_occurred+0x98>)
     29a:	4821      	ldr	r0, [pc, #132]	; (320 <crash__report_if_occurred+0x9c>)
     29c:	682b      	ldr	r3, [r5, #0]
     29e:	68d9      	ldr	r1, [r3, #12]
     2a0:	f005 f978 	bl	5594 <fputs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:34
                    "---- WARNING: We crashed previously ----\n");

    fprintf(stderr, "  PC: 0x%08lX\n", crash_registers.pc);
     2a4:	682b      	ldr	r3, [r5, #0]
     2a6:	69a2      	ldr	r2, [r4, #24]
     2a8:	491e      	ldr	r1, [pc, #120]	; (324 <crash__report_if_occurred+0xa0>)
     2aa:	68d8      	ldr	r0, [r3, #12]
     2ac:	f005 f8fa 	bl	54a4 <fiprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:35
    fprintf(stderr, "  LR: 0x%08lX\n", crash_registers.lr);
     2b0:	682b      	ldr	r3, [r5, #0]
     2b2:	69e2      	ldr	r2, [r4, #28]
     2b4:	491c      	ldr	r1, [pc, #112]	; (328 <crash__report_if_occurred+0xa4>)
     2b6:	68d8      	ldr	r0, [r3, #12]
     2b8:	f005 f8f4 	bl	54a4 <fiprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:36
    fprintf(stderr, " PSR: 0x%08lX\n", crash_registers.psr);
     2bc:	682b      	ldr	r3, [r5, #0]
     2be:	6a22      	ldr	r2, [r4, #32]
     2c0:	491a      	ldr	r1, [pc, #104]	; (32c <crash__report_if_occurred+0xa8>)
     2c2:	68d8      	ldr	r0, [r3, #12]
     2c4:	f005 f8ee 	bl	54a4 <fiprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:38

    fprintf(stderr, "  R0: 0x%08lX\n", crash_registers.registers[0]);
     2c8:	682b      	ldr	r3, [r5, #0]
     2ca:	68a2      	ldr	r2, [r4, #8]
     2cc:	4918      	ldr	r1, [pc, #96]	; (330 <crash__report_if_occurred+0xac>)
     2ce:	68d8      	ldr	r0, [r3, #12]
     2d0:	f005 f8e8 	bl	54a4 <fiprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:39
    fprintf(stderr, "  R1: 0x%08lX\n", crash_registers.registers[1]);
     2d4:	682b      	ldr	r3, [r5, #0]
     2d6:	68e2      	ldr	r2, [r4, #12]
     2d8:	4916      	ldr	r1, [pc, #88]	; (334 <crash__report_if_occurred+0xb0>)
     2da:	68d8      	ldr	r0, [r3, #12]
     2dc:	f005 f8e2 	bl	54a4 <fiprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:40
    fprintf(stderr, "  R2: 0x%08lX\n", crash_registers.registers[2]);
     2e0:	682b      	ldr	r3, [r5, #0]
     2e2:	6922      	ldr	r2, [r4, #16]
     2e4:	4914      	ldr	r1, [pc, #80]	; (338 <crash__report_if_occurred+0xb4>)
     2e6:	68d8      	ldr	r0, [r3, #12]
     2e8:	f005 f8dc 	bl	54a4 <fiprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:41
    fprintf(stderr, "  R3: 0x%08lX\n", crash_registers.registers[3]);
     2ec:	682b      	ldr	r3, [r5, #0]
     2ee:	6962      	ldr	r2, [r4, #20]
     2f0:	4912      	ldr	r1, [pc, #72]	; (33c <crash__report_if_occurred+0xb8>)
     2f2:	68d8      	ldr	r0, [r3, #12]
     2f4:	f005 f8d6 	bl	54a4 <fiprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:43

    fprintf(stderr,
     2f8:	682b      	ldr	r3, [r5, #0]
     2fa:	4811      	ldr	r0, [pc, #68]	; (340 <crash__report_if_occurred+0xbc>)
     2fc:	68d9      	ldr	r1, [r3, #12]
     2fe:	f005 f949 	bl	5594 <fputs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:29
    crash_occured = true;
     302:	2001      	movs	r0, #1
crash__clear_record():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:56
  crash__clear_record();
  return crash_occured;
}

static void crash__clear_record(void) {
  crash_registers.signature = 0;
     304:	2300      	movs	r3, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:57
  crash_registers.signature_inverted = 0;
     306:	e9c4 3300 	strd	r3, r3, [r4]
crash__report_if_occurred():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:53
}
     30a:	bd38      	pop	{r3, r4, r5, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/crash.c:25
  bool crash_occured = false;
     30c:	2000      	movs	r0, #0
     30e:	e7f9      	b.n	304 <crash__report_if_occurred+0x80>
     310:	20000000 	.word	0x20000000
     314:	deadbeef 	.word	0xdeadbeef
     318:	21524110 	.word	0x21524110
     31c:	10000150 	.word	0x10000150
     320:	0000a55c 	.word	0x0000a55c
     324:	0000a5af 	.word	0x0000a5af
     328:	0000a5be 	.word	0x0000a5be
     32c:	0000a5cd 	.word	0x0000a5cd
     330:	0000a5dc 	.word	0x0000a5dc
     334:	0000a5eb 	.word	0x0000a5eb
     338:	0000a5fa 	.word	0x0000a5fa
     33c:	0000a609 	.word	0x0000a609
     340:	0000a618 	.word	0x0000a618

00000344 <_sbrk>:
sbrk_ram1():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:32
  // These symbols are defined by the linker script
  extern uint32_t _heap_start;
  extern uint32_t _heap_end;

  static void *next_free_heap = (void *)&_heap_start;
  void *memory_to_return = next_free_heap;
     344:	4a0e      	ldr	r2, [pc, #56]	; (380 <_sbrk+0x3c>)
     346:	6813      	ldr	r3, [r2, #0]
_sbrk():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:12
void *_sbrk(size_t requested_byte_count) {
     348:	b510      	push	{r4, lr}
sbrk_ram1():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:43
   * couple of reasons:
   *   1. Maybe we still have a small chunk we could still serve in the future
   *   2. We do not want to increment next_free_heap and go out of bounds to
   * wrap
   */
  if (!((next_free_heap >= (void *)&_heap_start) &&
     34a:	4c0e      	ldr	r4, [pc, #56]	; (384 <_sbrk+0x40>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:33
  next_free_heap += requested_byte_count;
     34c:	1819      	adds	r1, r3, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:43
  if (!((next_free_heap >= (void *)&_heap_start) &&
     34e:	42a1      	cmp	r1, r4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:33
  next_free_heap += requested_byte_count;
     350:	6011      	str	r1, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:43
  if (!((next_free_heap >= (void *)&_heap_start) &&
     352:	d302      	bcc.n	35a <_sbrk+0x16>
     354:	4c0c      	ldr	r4, [pc, #48]	; (388 <_sbrk+0x44>)
     356:	42a1      	cmp	r1, r4
     358:	d30b      	bcc.n	372 <_sbrk+0x2e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:46
        (next_free_heap < (void *)&_heap_end))) {
    memory_to_return = NULL;
    next_free_heap -= requested_byte_count;
     35a:	6013      	str	r3, [r2, #0]
sbrk_ram2():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:57
static void *sbrk_ram2(size_t requested_byte_count) {
  extern uint32_t __start_of_unused_ram64;
  extern uint32_t __end_of_unused_ram64;

  static void *next_free_heap = (void *)&__start_of_unused_ram64;
  void *memory_to_return = next_free_heap;
     35c:	4a0b      	ldr	r2, [pc, #44]	; (38c <_sbrk+0x48>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:60
  next_free_heap += requested_byte_count;

  if (!((next_free_heap >= (void *)&__start_of_unused_ram64) &&
     35e:	490c      	ldr	r1, [pc, #48]	; (390 <_sbrk+0x4c>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:57
  void *memory_to_return = next_free_heap;
     360:	6813      	ldr	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:58
  next_free_heap += requested_byte_count;
     362:	4418      	add	r0, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:60
  if (!((next_free_heap >= (void *)&__start_of_unused_ram64) &&
     364:	4288      	cmp	r0, r1
     366:	d308      	bcc.n	37a <_sbrk+0x36>
     368:	490a      	ldr	r1, [pc, #40]	; (394 <_sbrk+0x50>)
     36a:	4288      	cmp	r0, r1
     36c:	d205      	bcs.n	37a <_sbrk+0x36>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:58
  next_free_heap += requested_byte_count;
     36e:	6010      	str	r0, [r2, #0]
     370:	e001      	b.n	376 <_sbrk+0x32>
_sbrk():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:19
  if (NULL == memory_to_return) {
     372:	2b00      	cmp	r3, #0
     374:	d0f2      	beq.n	35c <_sbrk+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:24
}
     376:	4618      	mov	r0, r3
     378:	bd10      	pop	{r4, pc}
sbrk_ram2():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:62
        (next_free_heap < (void *)&__end_of_unused_ram64))) {
    memory_to_return = NULL;
     37a:	2300      	movs	r3, #0
_sbrk():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/sbrk.c:23
  return memory_to_return;
     37c:	e7fb      	b.n	376 <_sbrk+0x32>
     37e:	bf00      	nop
     380:	10000000 	.word	0x10000000
     384:	20000028 	.word	0x20000028
     388:	20008000 	.word	0x20008000
     38c:	10000004 	.word	0x10000004
     390:	10000bb8 	.word	0x10000bb8
     394:	10010000 	.word	0x10010000

00000398 <startup__initialize_ram>:
startup__init_data_sram():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:62
  extern void *_bdata_vma;
  extern void *_data_end;

  uint8_t *src_flash = (uint8_t *)&_bdata_lma; // Flash
  uint8_t *dest_ram = (uint8_t *)&_bdata_vma;  // RAM
  while (dest_ram < (uint8_t *)&_data_end) {
     398:	4a09      	ldr	r2, [pc, #36]	; (3c0 <startup__initialize_ram+0x28>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:61
  uint8_t *dest_ram = (uint8_t *)&_bdata_vma;  // RAM
     39a:	4b0a      	ldr	r3, [pc, #40]	; (3c4 <startup__initialize_ram+0x2c>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:62
  while (dest_ram < (uint8_t *)&_data_end) {
     39c:	490a      	ldr	r1, [pc, #40]	; (3c8 <startup__initialize_ram+0x30>)
     39e:	428b      	cmp	r3, r1
     3a0:	d305      	bcc.n	3ae <startup__initialize_ram+0x16>
startup__init_bss_sram():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:73

static void startup__init_bss_sram(void) {
  extern void *_bss_start;
  extern void *_bss_end;

  uint8_t *sram_ptr = (uint8_t *)&_bss_start;
     3a2:	4b0a      	ldr	r3, [pc, #40]	; (3cc <startup__initialize_ram+0x34>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:74
  while (sram_ptr < (uint8_t *)&_bss_end) {
     3a4:	4a0a      	ldr	r2, [pc, #40]	; (3d0 <startup__initialize_ram+0x38>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:75
    *sram_ptr = 0U;
     3a6:	2100      	movs	r1, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:74
  while (sram_ptr < (uint8_t *)&_bss_end) {
     3a8:	4293      	cmp	r3, r2
     3aa:	d305      	bcc.n	3b8 <startup__initialize_ram+0x20>
startup__initialize_ram():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:14
}
     3ac:	4770      	bx	lr
startup__init_data_sram():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:63
    *dest_ram = *src_flash;
     3ae:	f812 0b01 	ldrb.w	r0, [r2], #1
     3b2:	f803 0b01 	strb.w	r0, [r3], #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:65
    src_flash++;
     3b6:	e7f2      	b.n	39e <startup__initialize_ram+0x6>
startup__init_bss_sram():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:75
    *sram_ptr = 0U;
     3b8:	f803 1b01 	strb.w	r1, [r3], #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:76
    sram_ptr++;
     3bc:	e7f4      	b.n	3a8 <startup__initialize_ram+0x10>
     3be:	bf00      	nop
     3c0:	0000ba34 	.word	0x0000ba34
     3c4:	10000000 	.word	0x10000000
     3c8:	10000324 	.word	0x10000324
     3cc:	10000328 	.word	0x10000328
     3d0:	10000bb8 	.word	0x10000bb8

000003d4 <startup__initialize_fpu>:
startup__initialize_fpu():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:22
  SCB->CPACR |= (0xF << 20); // Set [23:20]
     3d4:	4a03      	ldr	r2, [pc, #12]	; (3e4 <startup__initialize_fpu+0x10>)
     3d6:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
     3da:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
     3de:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:23
}
     3e2:	4770      	bx	lr
     3e4:	e000ed00 	.word	0xe000ed00

000003e8 <startup__initialize_interrupts>:
__NVIC_SetPriority():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1813
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
     3e8:	4804      	ldr	r0, [pc, #16]	; (3fc <startup__initialize_interrupts+0x14>)
startup__initialize_interrupts():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:39
  for (int peripheral = first_peripheral; peripheral <= last_peripheral;
     3ea:	2300      	movs	r3, #0
__NVIC_SetPriority():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1813
     3ec:	2120      	movs	r1, #32
     3ee:	18c2      	adds	r2, r0, r3
startup__initialize_interrupts():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:40
       peripheral++) {
     3f0:	3301      	adds	r3, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:39
  for (int peripheral = first_peripheral; peripheral <= last_peripheral;
     3f2:	2b29      	cmp	r3, #41	; 0x29
__NVIC_SetPriority():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1813
     3f4:	f882 1300 	strb.w	r1, [r2, #768]	; 0x300
startup__initialize_interrupts():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:39
     3f8:	d1f9      	bne.n	3ee <startup__initialize_interrupts+0x6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:53
}
     3fa:	4770      	bx	lr
     3fc:	e000e100 	.word	0xe000e100

00000400 <acceleration__init>:
acceleration__init():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:14
  acceleration__memory_axis_base = 0x01,
  acceleration__memory_control = 0x2A,
  acceleration__memory_who_am_i = 0x0D,
} acceleration__memory_e;

bool acceleration__init(void) {
     400:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:16
  const uint8_t active_mode_with_100Hz = (1 << 0) | (3 << 3);
  i2c__write_single(acceleration__sensor_bus, acceleration__address,
     402:	222a      	movs	r2, #42	; 0x2a
     404:	2319      	movs	r3, #25
     406:	2138      	movs	r1, #56	; 0x38
     408:	2002      	movs	r0, #2
     40a:	f004 f967 	bl	46dc <i2c__write_single>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:21
                    acceleration__memory_control, active_mode_with_100Hz);

  const uint8_t who_am_i_expected_value = 0x2A;
  const uint8_t who_am_i_actual_value =
      i2c__read_single(acceleration__sensor_bus, acceleration__address,
     40e:	220d      	movs	r2, #13
     410:	2138      	movs	r1, #56	; 0x38
     412:	2002      	movs	r0, #2
     414:	f004 f91e 	bl	4654 <i2c__read_single>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:25
                       acceleration__memory_who_am_i);

  return (who_am_i_expected_value == who_am_i_actual_value);
}
     418:	f1a0 032a 	sub.w	r3, r0, #42	; 0x2a
     41c:	4258      	negs	r0, r3
     41e:	4158      	adcs	r0, r3
     420:	bd08      	pop	{r3, pc}

00000422 <acceleration__get_data>:
acceleration__get_data():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:27

acceleration__axis_data_s acceleration__get_data(void) {
     422:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:30
  acceleration__axis_data_s axis_data = {0};

  uint8_t axis_raw_data[6] = {0};
     424:	2300      	movs	r3, #0
     426:	9302      	str	r3, [sp, #8]
     428:	f8ad 300c 	strh.w	r3, [sp, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:31
  i2c__read_slave_data(acceleration__sensor_bus, acceleration__address,
     42c:	2306      	movs	r3, #6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:27
acceleration__axis_data_s acceleration__get_data(void) {
     42e:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:31
  i2c__read_slave_data(acceleration__sensor_bus, acceleration__address,
     430:	9300      	str	r3, [sp, #0]
     432:	2201      	movs	r2, #1
     434:	ab02      	add	r3, sp, #8
     436:	2138      	movs	r1, #56	; 0x38
     438:	2002      	movs	r0, #2
     43a:	f004 f8e1 	bl	4600 <i2c__read_slave_data>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:37
                       acceleration__memory_axis_base, axis_raw_data,
                       sizeof(axis_raw_data));

  // First byte is MSB then LSB
  axis_data.x = ((uint16_t)axis_raw_data[0] << 8) | axis_raw_data[1];
  axis_data.y = ((uint16_t)axis_raw_data[2] << 8) | axis_raw_data[3];
     43e:	f89d 200a 	ldrb.w	r2, [sp, #10]
     442:	f89d 300b 	ldrb.w	r3, [sp, #11]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:38
  axis_data.z = ((uint16_t)axis_raw_data[4] << 8) | axis_raw_data[5];
     446:	f89d 100c 	ldrb.w	r1, [sp, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:36
  axis_data.x = ((uint16_t)axis_raw_data[0] << 8) | axis_raw_data[1];
     44a:	f89d 0008 	ldrb.w	r0, [sp, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:37
  axis_data.y = ((uint16_t)axis_raw_data[2] << 8) | axis_raw_data[3];
     44e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:42

  // Data is at upper 12-bits, so shift the result down by 4
  axis_data.x /= 16;
  axis_data.y /= 16;
     452:	b21b      	sxth	r3, r3
     454:	2b00      	cmp	r3, #0
     456:	bfb8      	it	lt
     458:	330f      	addlt	r3, #15
     45a:	111a      	asrs	r2, r3, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:38
  axis_data.z = ((uint16_t)axis_raw_data[4] << 8) | axis_raw_data[5];
     45c:	f89d 300d 	ldrb.w	r3, [sp, #13]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:45
  axis_data.z /= 16;

  return axis_data;
     460:	8062      	strh	r2, [r4, #2]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:38
  axis_data.z = ((uint16_t)axis_raw_data[4] << 8) | axis_raw_data[5];
     462:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:36
  axis_data.x = ((uint16_t)axis_raw_data[0] << 8) | axis_raw_data[1];
     466:	f89d 1009 	ldrb.w	r1, [sp, #9]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:43
  axis_data.z /= 16;
     46a:	b21b      	sxth	r3, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:36
  axis_data.x = ((uint16_t)axis_raw_data[0] << 8) | axis_raw_data[1];
     46c:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:43
  axis_data.z /= 16;
     470:	2b00      	cmp	r3, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:41
  axis_data.x /= 16;
     472:	b209      	sxth	r1, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:43
  axis_data.z /= 16;
     474:	bfb8      	it	lt
     476:	330f      	addlt	r3, #15
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:41
  axis_data.x /= 16;
     478:	2900      	cmp	r1, #0
     47a:	bfb8      	it	lt
     47c:	310f      	addlt	r1, #15
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:43
  axis_data.z /= 16;
     47e:	111b      	asrs	r3, r3, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:41
  axis_data.x /= 16;
     480:	1109      	asrs	r1, r1, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:46
}
     482:	4620      	mov	r0, r4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:45
  return axis_data;
     484:	8021      	strh	r1, [r4, #0]
     486:	80a3      	strh	r3, [r4, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:46
}
     488:	b004      	add	sp, #16
     48a:	bd10      	pop	{r4, pc}

0000048c <sensors__init>:
sensors__init():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sensors/sources/sensors.c:8
#include "acceleration.h"

bool sensors__init(void) {
  bool status = true;

  status &= acceleration__init();
     48c:	f7ff bfb8 	b.w	400 <acceleration__init>

00000490 <ld_dword>:
ld_dword():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:594
static DWORD ld_dword (const BYTE* ptr)	/* Load a 4-byte little-endian word */
{
	DWORD rv;

	rv = ptr[3];
	rv = rv << 8 | ptr[2];
     490:	8842      	ldrh	r2, [r0, #2]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:595
	rv = rv << 8 | ptr[1];
     492:	7843      	ldrb	r3, [r0, #1]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:596
	rv = rv << 8 | ptr[0];
     494:	7800      	ldrb	r0, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:595
	rv = rv << 8 | ptr[1];
     496:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:598
	return rv;
}
     49a:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
     49e:	4770      	bx	lr

000004a0 <st_dword>:
st_dword():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:626
	*ptr++ = (BYTE)val;
}

static void st_dword (BYTE* ptr, DWORD val)	/* Store a 4-byte word in little-endian */
{
	*ptr++ = (BYTE)val; val >>= 8;
     4a0:	0a0b      	lsrs	r3, r1, #8
     4a2:	7001      	strb	r1, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:627
	*ptr++ = (BYTE)val; val >>= 8;
     4a4:	7043      	strb	r3, [r0, #1]
     4a6:	0c0b      	lsrs	r3, r1, #16
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:628
	*ptr++ = (BYTE)val; val >>= 8;
     4a8:	0e09      	lsrs	r1, r1, #24
     4aa:	7083      	strb	r3, [r0, #2]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:629
	*ptr++ = (BYTE)val;
     4ac:	70c1      	strb	r1, [r0, #3]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:630
}
     4ae:	4770      	bx	lr

000004b0 <mem_cmp>:
mem_cmp():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:680
}


/* Compare memory block */
static int mem_cmp (const void* dst, const void* src, UINT cnt)	/* ZR:same, NZ:different */
{
     4b0:	b510      	push	{r4, lr}
     4b2:	4402      	add	r2, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:685 (discriminator 2)
	const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
	int r = 0;

	do {
		r = *d++ - *s++;
     4b4:	f810 3b01 	ldrb.w	r3, [r0], #1
     4b8:	f811 4b01 	ldrb.w	r4, [r1], #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:686 (discriminator 2)
	} while (--cnt && r == 0);
     4bc:	4290      	cmp	r0, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:685 (discriminator 2)
		r = *d++ - *s++;
     4be:	eba3 0304 	sub.w	r3, r3, r4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:686 (discriminator 2)
	} while (--cnt && r == 0);
     4c2:	d001      	beq.n	4c8 <mem_cmp+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:686 (discriminator 1)
     4c4:	2b00      	cmp	r3, #0
     4c6:	d0f5      	beq.n	4b4 <mem_cmp+0x4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:689

	return r;
}
     4c8:	4618      	mov	r0, r3
     4ca:	bd10      	pop	{r4, pc}

000004cc <clst2sect>:
clst2sect():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1138
	FATFS* fs,		/* Filesystem object */
	DWORD clst		/* Cluster# to be converted */
)
{
	clst -= 2;		/* Cluster number is origin from 2 */
	if (clst >= fs->n_fatent - 2) return 0;		/* Is it invalid cluster number? */
     4cc:	69c3      	ldr	r3, [r0, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1137
	clst -= 2;		/* Cluster number is origin from 2 */
     4ce:	3902      	subs	r1, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1138
	if (clst >= fs->n_fatent - 2) return 0;		/* Is it invalid cluster number? */
     4d0:	3b02      	subs	r3, #2
     4d2:	428b      	cmp	r3, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1139
	return fs->database + fs->csize * clst;		/* Start sector number of the cluster */
     4d4:	bf83      	ittte	hi
     4d6:	8943      	ldrhhi	r3, [r0, #10]
     4d8:	6b00      	ldrhi	r0, [r0, #48]	; 0x30
     4da:	fb01 0003 	mlahi	r0, r1, r3, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1138
	if (clst >= fs->n_fatent - 2) return 0;		/* Is it invalid cluster number? */
     4de:	2000      	movls	r0, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1140
}
     4e0:	4770      	bx	lr

000004e2 <sum_sfn>:
sum_sfn():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2043
/*-----------------------------------------------------------------------*/

static BYTE sum_sfn (
	const BYTE* dir		/* Pointer to the SFN entry */
)
{
     4e2:	4602      	mov	r2, r0
     4e4:	f100 010b 	add.w	r1, r0, #11
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2044
	BYTE sum = 0;
     4e8:	2000      	movs	r0, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2048 (discriminator 1)
	UINT n = 11;

	do {
		sum = (sum >> 1) + (sum << 7) + *dir++;
     4ea:	01c3      	lsls	r3, r0, #7
     4ec:	ea43 0350 	orr.w	r3, r3, r0, lsr #1
     4f0:	f812 0b01 	ldrb.w	r0, [r2], #1
     4f4:	fa50 f383 	uxtab	r3, r0, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2049 (discriminator 1)
	} while (--n);
     4f8:	428a      	cmp	r2, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2048 (discriminator 1)
		sum = (sum >> 1) + (sum << 7) + *dir++;
     4fa:	b2d8      	uxtb	r0, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2049 (discriminator 1)
	} while (--n);
     4fc:	d1f5      	bne.n	4ea <sum_sfn+0x8>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2051
	return sum;
}
     4fe:	4770      	bx	lr

00000500 <get_ldnumber>:
get_ldnumber():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3123
#if FF_STR_VOLUME_ID		/* Find string volume ID */
	const char *sp;
	char c;
#endif

	tt = tp = *path;
     500:	6802      	ldr	r2, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3124
	if (!tp) return vol;	/* Invalid path name? */
     502:	b14a      	cbz	r2, 518 <get_ldnumber+0x18>
     504:	4613      	mov	r3, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3125 (discriminator 2)
	do tc = *tt++; while ((UINT)tc >= (FF_USE_LFN ? ' ' : '!') && tc != ':');	/* Find a colon in the path */
     506:	f813 1b01 	ldrb.w	r1, [r3], #1
     50a:	291f      	cmp	r1, #31
     50c:	d90b      	bls.n	526 <get_ldnumber+0x26>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3125 (discriminator 1)
     50e:	293a      	cmp	r1, #58	; 0x3a
     510:	d1f9      	bne.n	506 <get_ldnumber+0x6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3129

	if (tc == ':') {	/* DOS/Windows style volume ID? */
		i = FF_VOLUMES;
		if (IsDigit(*tp) && tp + 2 == tt) {	/* Is there a numeric volume ID + colon? */
     512:	1c91      	adds	r1, r2, #2
     514:	428b      	cmp	r3, r1
     516:	d002      	beq.n	51e <get_ldnumber+0x1e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3124
	if (!tp) return vol;	/* Invalid path name? */
     518:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3176
	vol = CurrVol;	/* Default drive is current drive */
#else
	vol = 0;		/* Default drive is 0 */
#endif
	return vol;		/* Return the default drive */
}
     51c:	4770      	bx	lr
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3145
		if (i < FF_VOLUMES) {	/* If a volume ID is found, get the drive number and strip it */
     51e:	7812      	ldrb	r2, [r2, #0]
     520:	2a30      	cmp	r2, #48	; 0x30
     522:	d1f9      	bne.n	518 <get_ldnumber+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3147
			*path = tt;		/* Snip the drive prefix off */
     524:	6003      	str	r3, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3175
	return vol;		/* Return the default drive */
     526:	2000      	movs	r0, #0
     528:	4770      	bx	lr

0000052a <mem_cpy.part.0>:
mem_cpy():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:654
static void mem_cpy (void* dst, const void* src, UINT cnt)
     52a:	3801      	subs	r0, #1
     52c:	440a      	add	r2, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:661
			*d++ = *s++;
     52e:	f811 3b01 	ldrb.w	r3, [r1], #1
     532:	f800 3f01 	strb.w	r3, [r0, #1]!
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:662
		} while (--cnt);
     536:	4291      	cmp	r1, r2
     538:	d1f9      	bne.n	52e <mem_cpy.part.0+0x4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:664
}
     53a:	4770      	bx	lr

0000053c <ld_clust.isra.3>:
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     53c:	7eca      	ldrb	r2, [r1, #27]
     53e:	7e8b      	ldrb	r3, [r1, #26]
ld_clust():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1842
	if (fs->fs_type == FS_FAT32) {
     540:	2803      	cmp	r0, #3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1841
	cl = ld_word(dir + DIR_FstClusLO);
     542:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     546:	bf01      	itttt	eq
     548:	7d48      	ldrbeq	r0, [r1, #21]
     54a:	7d0a      	ldrbeq	r2, [r1, #20]
ld_clust():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1843
		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
     54c:	ea42 2200 	orreq.w	r2, r2, r0, lsl #8
     550:	ea43 4302 	orreq.w	r3, r3, r2, lsl #16
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1847
}
     554:	4618      	mov	r0, r3
     556:	4770      	bx	lr

00000558 <st_clust.isra.4>:
st_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:620
	*ptr++ = (BYTE)val; val >>= 8;
     558:	f3c2 2307 	ubfx	r3, r2, #8, #8
     55c:	768a      	strb	r2, [r1, #26]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:621
	*ptr++ = (BYTE)val;
     55e:	76cb      	strb	r3, [r1, #27]
st_clust():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1858
	if (fs->fs_type == FS_FAT32) {
     560:	7803      	ldrb	r3, [r0, #0]
     562:	2b03      	cmp	r3, #3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1859
		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
     564:	bf01      	itttt	eq
     566:	0c12      	lsreq	r2, r2, #16
st_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:620
	*ptr++ = (BYTE)val; val >>= 8;
     568:	750a      	strbeq	r2, [r1, #20]
     56a:	0a12      	lsreq	r2, r2, #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:621
	*ptr++ = (BYTE)val;
     56c:	754a      	strbeq	r2, [r1, #21]
st_clust():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1861
}
     56e:	4770      	bx	lr

00000570 <sync_window.part.6>:
sync_window():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1042
static FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERR */
     570:	b570      	push	{r4, r5, r6, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1050
		if (disk_write(fs->pdrv, fs->win, fs->winsect, 1) == RES_OK) {	/* Write back the window */
     572:	f100 0638 	add.w	r6, r0, #56	; 0x38
     576:	6b42      	ldr	r2, [r0, #52]	; 0x34
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1042
static FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERR */
     578:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1050
		if (disk_write(fs->pdrv, fs->win, fs->winsect, 1) == RES_OK) {	/* Write back the window */
     57a:	2301      	movs	r3, #1
     57c:	4631      	mov	r1, r6
     57e:	7840      	ldrb	r0, [r0, #1]
     580:	f001 fae3 	bl	1b4a <disk_write>
     584:	4605      	mov	r5, r0
     586:	b988      	cbnz	r0, 5ac <sync_window.part.6+0x3c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1052
			if (fs->winsect - fs->fatbase < fs->fsize) {	/* Is it in the 1st FAT? */
     588:	6b61      	ldr	r1, [r4, #52]	; 0x34
     58a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
     58c:	6a22      	ldr	r2, [r4, #32]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1051
			fs->wflag = 0;	/* Clear window dirty flag */
     58e:	70e0      	strb	r0, [r4, #3]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1052
			if (fs->winsect - fs->fatbase < fs->fsize) {	/* Is it in the 1st FAT? */
     590:	1acb      	subs	r3, r1, r3
     592:	4293      	cmp	r3, r2
     594:	d208      	bcs.n	5a8 <sync_window.part.6+0x38>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1053
				if (fs->n_fats == 2) disk_write(fs->pdrv, fs->win, fs->winsect + fs->fsize, 1);	/* Reflect it to 2nd FAT if needed */
     596:	78a3      	ldrb	r3, [r4, #2]
     598:	2b02      	cmp	r3, #2
     59a:	d105      	bne.n	5a8 <sync_window.part.6+0x38>
     59c:	440a      	add	r2, r1
     59e:	2301      	movs	r3, #1
     5a0:	4631      	mov	r1, r6
     5a2:	7860      	ldrb	r0, [r4, #1]
     5a4:	f001 fad1 	bl	1b4a <disk_write>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1060
}
     5a8:	4628      	mov	r0, r5
     5aa:	bd70      	pop	{r4, r5, r6, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1056
			res = FR_DISK_ERR;
     5ac:	2501      	movs	r5, #1
     5ae:	e7fb      	b.n	5a8 <sync_window.part.6+0x38>

000005b0 <move_window>:
move_window():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1068
{
     5b0:	b538      	push	{r3, r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1072
	if (sector != fs->winsect) {	/* Window offset changed? */
     5b2:	6b43      	ldr	r3, [r0, #52]	; 0x34
     5b4:	428b      	cmp	r3, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1068
{
     5b6:	4604      	mov	r4, r0
     5b8:	460d      	mov	r5, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1072
	if (sector != fs->winsect) {	/* Window offset changed? */
     5ba:	d019      	beq.n	5f0 <move_window+0x40>
sync_window():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1049
	if (fs->wflag) {	/* Is the disk access window dirty */
     5bc:	78c3      	ldrb	r3, [r0, #3]
     5be:	b98b      	cbnz	r3, 5e4 <move_window+0x34>
move_window():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1077
			if (disk_read(fs->pdrv, fs->win, sector, 1) != RES_OK) {
     5c0:	2301      	movs	r3, #1
     5c2:	462a      	mov	r2, r5
     5c4:	f104 0138 	add.w	r1, r4, #56	; 0x38
     5c8:	7860      	ldrb	r0, [r4, #1]
     5ca:	f001 faaa 	bl	1b22 <disk_read>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1079
				res = FR_DISK_ERR;
     5ce:	2800      	cmp	r0, #0
     5d0:	bf18      	it	ne
     5d2:	f04f 35ff 	movne.w	r5, #4294967295	; 0xffffffff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1077
			if (disk_read(fs->pdrv, fs->win, sector, 1) != RES_OK) {
     5d6:	4603      	mov	r3, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1081
			fs->winsect = sector;
     5d8:	6365      	str	r5, [r4, #52]	; 0x34
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1079
				res = FR_DISK_ERR;
     5da:	bf0c      	ite	eq
     5dc:	4603      	moveq	r3, r0
     5de:	2301      	movne	r3, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1085
}
     5e0:	4618      	mov	r0, r3
     5e2:	bd38      	pop	{r3, r4, r5, pc}
sync_window():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1085
     5e4:	f7ff ffc4 	bl	570 <sync_window.part.6>
move_window():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1076
		if (res == FR_OK) {			/* Fill sector window with new data */
     5e8:	4603      	mov	r3, r0
     5ea:	2800      	cmp	r0, #0
     5ec:	d1f8      	bne.n	5e0 <move_window+0x30>
     5ee:	e7e7      	b.n	5c0 <move_window+0x10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1069
	FRESULT res = FR_OK;
     5f0:	2300      	movs	r3, #0
     5f2:	e7f5      	b.n	5e0 <move_window+0x30>

000005f4 <check_fs>:
check_fs():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3189

static BYTE check_fs (	/* 0:FAT, 1:exFAT, 2:Valid BS but not FAT, 3:Not a BS, 4:Disk error */
	FATFS* fs,			/* Filesystem object */
	DWORD sect			/* Sector# (lba) to load and check if it is an FAT-VBR or not */
)
{
     5f4:	b538      	push	{r3, r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3190
	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
     5f6:	2300      	movs	r3, #0
     5f8:	70c3      	strb	r3, [r0, #3]
     5fa:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
     5fe:	6343      	str	r3, [r0, #52]	; 0x34
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3189
{
     600:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3191
	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
     602:	f7ff ffd5 	bl	5b0 <move_window>
     606:	4604      	mov	r4, r0
     608:	bb18      	cbnz	r0, 652 <check_fs+0x5e>
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     60a:	f895 2237 	ldrb.w	r2, [r5, #567]	; 0x237
     60e:	f895 3236 	ldrb.w	r3, [r5, #566]	; 0x236
     612:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
check_fs():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3193

	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot record signature (always here regardless of the sector size) */
     616:	f64a 2255 	movw	r2, #43605	; 0xaa55
     61a:	4293      	cmp	r3, r2
     61c:	d11b      	bne.n	656 <check_fs+0x62>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3198

#if FF_FS_EXFAT
	if (!mem_cmp(fs->win + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11)) return 1;	/* Check if exFAT VBR */
#endif
	if (fs->win[BS_JmpBoot] == 0xE9 || fs->win[BS_JmpBoot] == 0xEB || fs->win[BS_JmpBoot] == 0xE8) {	/* Valid JumpBoot code? */
     61e:	f895 3038 	ldrb.w	r3, [r5, #56]	; 0x38
     622:	2beb      	cmp	r3, #235	; 0xeb
     624:	d003      	beq.n	62e <check_fs+0x3a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3198 (discriminator 2)
     626:	3318      	adds	r3, #24
     628:	b2db      	uxtb	r3, r3
     62a:	2b01      	cmp	r3, #1
     62c:	d815      	bhi.n	65a <check_fs+0x66>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3199
		if (!mem_cmp(fs->win + BS_FilSysType, "FAT", 3)) return 0;		/* Is it an FAT VBR? */
     62e:	2203      	movs	r2, #3
     630:	490b      	ldr	r1, [pc, #44]	; (660 <check_fs+0x6c>)
     632:	f105 006e 	add.w	r0, r5, #110	; 0x6e
     636:	f7ff ff3b 	bl	4b0 <mem_cmp>
     63a:	b140      	cbz	r0, 64e <check_fs+0x5a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3200
		if (!mem_cmp(fs->win + BS_FilSysType32, "FAT32", 5)) return 0;	/* Is it an FAT32 VBR? */
     63c:	2205      	movs	r2, #5
     63e:	4909      	ldr	r1, [pc, #36]	; (664 <check_fs+0x70>)
     640:	f105 008a 	add.w	r0, r5, #138	; 0x8a
     644:	f7ff ff34 	bl	4b0 <mem_cmp>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3202
	}
	return 2;	/* Valid BS but not FAT */
     648:	2800      	cmp	r0, #0
     64a:	bf18      	it	ne
     64c:	2402      	movne	r4, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3203
}
     64e:	4620      	mov	r0, r4
     650:	bd38      	pop	{r3, r4, r5, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3191
	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
     652:	2404      	movs	r4, #4
     654:	e7fb      	b.n	64e <check_fs+0x5a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3193
	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot record signature (always here regardless of the sector size) */
     656:	2403      	movs	r4, #3
     658:	e7f9      	b.n	64e <check_fs+0x5a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3202
	return 2;	/* Valid BS but not FAT */
     65a:	2402      	movs	r4, #2
     65c:	e7f7      	b.n	64e <check_fs+0x5a>
     65e:	bf00      	nop
     660:	0000a779 	.word	0x0000a779
     664:	0000a77d 	.word	0x0000a77d

00000668 <find_volume>:
find_volume():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3217
static FRESULT find_volume (	/* FR_OK(0): successful, !=0: an error occurred */
	const TCHAR** path,			/* Pointer to pointer to the path name (drive number) */
	FATFS** rfs,				/* Pointer to pointer to the found filesystem object */
	BYTE mode					/* !=0: Check write protection for write access */
)
{
     668:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3228
	FATFS *fs;
	UINT i;


	/* Get logical drive number */
	*rfs = 0;
     66c:	2300      	movs	r3, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3217
{
     66e:	b085      	sub	sp, #20
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3228
	*rfs = 0;
     670:	600b      	str	r3, [r1, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3217
{
     672:	460f      	mov	r7, r1
     674:	4615      	mov	r5, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3229
	vol = get_ldnumber(path);
     676:	f7ff ff43 	bl	500 <get_ldnumber>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3230
	if (vol < 0) return FR_INVALID_DRIVE;
     67a:	1e06      	subs	r6, r0, #0
     67c:	f2c0 8139 	blt.w	8f2 <find_volume+0x28a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3233

	/* Check if the filesystem object is valid or not */
	fs = FatFs[vol];					/* Get pointer to the filesystem object */
     680:	4ba4      	ldr	r3, [pc, #656]	; (914 <find_volume+0x2ac>)
     682:	f853 4026 	ldr.w	r4, [r3, r6, lsl #2]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3234
	if (!fs) return FR_NOT_ENABLED;		/* Is the filesystem object available? */
     686:	2c00      	cmp	r4, #0
     688:	f000 8135 	beq.w	8f6 <find_volume+0x28e>
lock_fs():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:911
	return ff_req_grant(fs->sobj);
     68c:	6920      	ldr	r0, [r4, #16]
     68e:	f001 f9ac 	bl	19ea <ff_req_grant>
find_volume():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3236
#if FF_FS_REENTRANT
	if (!lock_fs(fs)) return FR_TIMEOUT;	/* Lock the volume */
     692:	2800      	cmp	r0, #0
     694:	f000 8131 	beq.w	8fa <find_volume+0x292>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3238
#endif
	*rfs = fs;							/* Return pointer to the filesystem object */
     698:	603c      	str	r4, [r7, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3241

	mode &= (BYTE)~FA_READ;				/* Desired access mode, write access or not */
	if (fs->fs_type != 0) {				/* If the volume has been mounted */
     69a:	7823      	ldrb	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3240
	mode &= (BYTE)~FA_READ;				/* Desired access mode, write access or not */
     69c:	f005 05fe 	and.w	r5, r5, #254	; 0xfe
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3241
	if (fs->fs_type != 0) {				/* If the volume has been mounted */
     6a0:	b16b      	cbz	r3, 6be <find_volume+0x56>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3242
		stat = disk_status(fs->pdrv);
     6a2:	7860      	ldrb	r0, [r4, #1]
     6a4:	f001 fa38 	bl	1b18 <disk_status>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3243
		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
     6a8:	07c1      	lsls	r1, r0, #31
     6aa:	d408      	bmi.n	6be <find_volume+0x56>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3244
			if (!FF_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
     6ac:	b11d      	cbz	r5, 6b6 <find_volume+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3244 (discriminator 1)
     6ae:	f010 0504 	ands.w	r5, r0, #4
     6b2:	d000      	beq.n	6b6 <find_volume+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3245
				return FR_WRITE_PROTECTED;
     6b4:	250a      	movs	r5, #10
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3444
#endif
#if FF_FS_LOCK != 0			/* Clear file lock semaphores */
	clear_lock(fs);
#endif
	return FR_OK;
}
     6b6:	4628      	mov	r0, r5
     6b8:	b005      	add	sp, #20
     6ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3254
	fs->fs_type = 0;					/* Clear the filesystem object */
     6be:	2300      	movs	r3, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3255
	fs->pdrv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
     6c0:	b2f0      	uxtb	r0, r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3254
	fs->fs_type = 0;					/* Clear the filesystem object */
     6c2:	7023      	strb	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3255
	fs->pdrv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
     6c4:	7060      	strb	r0, [r4, #1]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3256
	stat = disk_initialize(fs->pdrv);	/* Initialize the physical drive */
     6c6:	f001 fa19 	bl	1afc <disk_initialize>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3257
	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
     6ca:	07c2      	lsls	r2, r0, #31
     6cc:	f100 8117 	bmi.w	8fe <find_volume+0x296>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3260
	if (!FF_FS_READONLY && mode && (stat & STA_PROTECT)) { /* Check disk write protection if needed */
     6d0:	b10d      	cbz	r5, 6d6 <find_volume+0x6e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3260 (discriminator 1)
     6d2:	0743      	lsls	r3, r0, #29
     6d4:	d4ee      	bmi.n	6b4 <find_volume+0x4c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3270
	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
     6d6:	2100      	movs	r1, #0
     6d8:	4620      	mov	r0, r4
     6da:	f7ff ff8b 	bl	5f4 <check_fs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3271
	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
     6de:	2802      	cmp	r0, #2
     6e0:	f040 80ee 	bne.w	8c0 <find_volume+0x258>
     6e4:	466f      	mov	r7, sp
     6e6:	f504 71ff 	add.w	r1, r4, #510	; 0x1fe
     6ea:	f204 263e 	addw	r6, r4, #574	; 0x23e
     6ee:	463d      	mov	r5, r7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3274
			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
     6f0:	f811 0c04 	ldrb.w	r0, [r1, #-4]
     6f4:	b110      	cbz	r0, 6fc <find_volume+0x94>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3274 (discriminator 1)
     6f6:	4608      	mov	r0, r1
     6f8:	f7ff feca 	bl	490 <ld_dword>
     6fc:	3110      	adds	r1, #16
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3272 (discriminator 4)
		for (i = 0; i < 4; i++) {		/* Get partition offset */
     6fe:	428e      	cmp	r6, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3274 (discriminator 4)
			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
     700:	f845 0b04 	str.w	r0, [r5], #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3272 (discriminator 4)
		for (i = 0; i < 4; i++) {		/* Get partition offset */
     704:	d1f4      	bne.n	6f0 <find_volume+0x88>
     706:	2500      	movs	r5, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3279
			bsect = br[i];
     708:	f857 6b04 	ldr.w	r6, [r7], #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3280
			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
     70c:	2e00      	cmp	r6, #0
     70e:	f000 80ce 	beq.w	8ae <find_volume+0x246>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3280 (discriminator 1)
     712:	4631      	mov	r1, r6
     714:	4620      	mov	r0, r4
     716:	f7ff ff6d 	bl	5f4 <check_fs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3281 (discriminator 1)
		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
     71a:	2801      	cmp	r0, #1
     71c:	f200 80c8 	bhi.w	8b0 <find_volume+0x248>
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     720:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
     724:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
     728:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
find_volume():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3352
		if (ld_word(fs->win + BPB_BytsPerSec) != SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_BytsPerSec must be equal to the physical sector size) */
     72c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
     730:	f040 80ca 	bne.w	8c8 <find_volume+0x260>
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     734:	f894 304f 	ldrb.w	r3, [r4, #79]	; 0x4f
     738:	f894 504e 	ldrb.w	r5, [r4, #78]	; 0x4e
find_volume():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3355
		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
     73c:	ea55 2503 	orrs.w	r5, r5, r3, lsl #8
     740:	d104      	bne.n	74c <find_volume+0xe4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3355 (discriminator 1)
     742:	f104 005c 	add.w	r0, r4, #92	; 0x5c
     746:	f7ff fea3 	bl	490 <ld_dword>
     74a:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3358
		fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
     74c:	f894 1048 	ldrb.w	r1, [r4, #72]	; 0x48
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3356
		fs->fsize = fasize;
     750:	6225      	str	r5, [r4, #32]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3359
		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
     752:	1e4b      	subs	r3, r1, #1
     754:	2b01      	cmp	r3, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3358
		fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
     756:	70a1      	strb	r1, [r4, #2]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3359
		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
     758:	f200 80b6 	bhi.w	8c8 <find_volume+0x260>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3362
		fs->csize = fs->win[BPB_SecPerClus];			/* Cluster size */
     75c:	f894 9045 	ldrb.w	r9, [r4, #69]	; 0x45
     760:	fa1f f389 	uxth.w	r3, r9
     764:	8163      	strh	r3, [r4, #10]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3363
		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power of 2) */
     766:	2b00      	cmp	r3, #0
     768:	f000 80ae 	beq.w	8c8 <find_volume+0x260>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3363 (discriminator 2)
     76c:	f109 33ff 	add.w	r3, r9, #4294967295	; 0xffffffff
     770:	ea13 0f09 	tst.w	r3, r9
     774:	f040 80a8 	bne.w	8c8 <find_volume+0x260>
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     778:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
     77c:	f894 7049 	ldrb.w	r7, [r4, #73]	; 0x49
     780:	ea47 2703 	orr.w	r7, r7, r3, lsl #8
     784:	b23f      	sxth	r7, r7
     786:	fa1f f887 	uxth.w	r8, r7
find_volume():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3366
		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
     78a:	f018 0f0f 	tst.w	r8, #15
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3365
		fs->n_rootdir = ld_word(fs->win + BPB_RootEntCnt);	/* Number of root directory entries */
     78e:	f8a4 8008 	strh.w	r8, [r4, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3366
		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
     792:	f040 8099 	bne.w	8c8 <find_volume+0x260>
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     796:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
     79a:	f894 004b 	ldrb.w	r0, [r4, #75]	; 0x4b
find_volume():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3369
		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
     79e:	ea50 2003 	orrs.w	r0, r0, r3, lsl #8
     7a2:	d103      	bne.n	7ac <find_volume+0x144>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3369 (discriminator 1)
     7a4:	f104 0058 	add.w	r0, r4, #88	; 0x58
     7a8:	f7ff fe72 	bl	490 <ld_dword>
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     7ac:	f894 2047 	ldrb.w	r2, [r4, #71]	; 0x47
     7b0:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
find_volume():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3372
		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
     7b4:	ea53 2302 	orrs.w	r3, r3, r2, lsl #8
     7b8:	f000 8086 	beq.w	8c8 <find_volume+0x260>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3360
		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
     7bc:	fb05 fc01 	mul.w	ip, r5, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3375
		sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZDIRE);	/* RSV + FAT + DIR */
     7c0:	eb03 1218 	add.w	r2, r3, r8, lsr #4
     7c4:	4462      	add	r2, ip
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3376
		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
     7c6:	4290      	cmp	r0, r2
     7c8:	d37e      	bcc.n	8c8 <find_volume+0x260>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3377
		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
     7ca:	1a80      	subs	r0, r0, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3378
		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
     7cc:	4548      	cmp	r0, r9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3377
		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
     7ce:	fbb0 f1f9 	udiv	r1, r0, r9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3378
		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
     7d2:	d379      	bcc.n	8c8 <find_volume+0x260>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3380
		if (nclst <= MAX_FAT32) fmt = FS_FAT32;
     7d4:	4850      	ldr	r0, [pc, #320]	; (918 <find_volume+0x2b0>)
     7d6:	4281      	cmp	r1, r0
     7d8:	d876      	bhi.n	8c8 <find_volume+0x260>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3381
		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
     7da:	f64f 70f5 	movw	r0, #65525	; 0xfff5
     7de:	4281      	cmp	r1, r0
     7e0:	f240 808f 	bls.w	902 <find_volume+0x29a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3380
		if (nclst <= MAX_FAT32) fmt = FS_FAT32;
     7e4:	f04f 0903 	mov.w	r9, #3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3386
		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
     7e8:	3102      	adds	r1, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3388
		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
     7ea:	4433      	add	r3, r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3389
		fs->database = bsect + sysect;					/* Data start sector */
     7ec:	4432      	add	r2, r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3390
		if (fmt == FS_FAT32) {
     7ee:	f1b9 0f03 	cmp.w	r9, #3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3386
		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
     7f2:	61e1      	str	r1, [r4, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3387
		fs->volbase = bsect;							/* Volume start sector */
     7f4:	6266      	str	r6, [r4, #36]	; 0x24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3388
		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
     7f6:	62a3      	str	r3, [r4, #40]	; 0x28
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3389
		fs->database = bsect + sysect;					/* Data start sector */
     7f8:	6322      	str	r2, [r4, #48]	; 0x30
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3390
		if (fmt == FS_FAT32) {
     7fa:	d169      	bne.n	8d0 <find_volume+0x268>
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     7fc:	f894 2063 	ldrb.w	r2, [r4, #99]	; 0x63
     800:	f894 3062 	ldrb.w	r3, [r4, #98]	; 0x62
     804:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
find_volume():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3391
			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0) */
     808:	431f      	orrs	r7, r3
     80a:	b23f      	sxth	r7, r7
     80c:	2f00      	cmp	r7, #0
     80e:	d15b      	bne.n	8c8 <find_volume+0x260>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3393
			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
     810:	f104 0064 	add.w	r0, r4, #100	; 0x64
     814:	f7ff fe3c 	bl	490 <ld_dword>
     818:	62e0      	str	r0, [r4, #44]	; 0x2c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3394
			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
     81a:	0089      	lsls	r1, r1, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3401
		if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_FATSz must not be less than the size needed) */
     81c:	f201 11ff 	addw	r1, r1, #511	; 0x1ff
     820:	ebb5 2f51 	cmp.w	r5, r1, lsr #9
     824:	d350      	bcc.n	8c8 <find_volume+0x260>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3405
		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
     826:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
     82a:	e9c4 3305 	strd	r3, r3, [r4, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3408
		if (fmt == FS_FAT32				/* Allow to update FSInfo only if BPB_FSInfo32 == 1 */
     82e:	f1b9 0f03 	cmp.w	r9, #3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3406
		fs->fsi_flag = 0x80;
     832:	f04f 0380 	mov.w	r3, #128	; 0x80
     836:	7123      	strb	r3, [r4, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3408
		if (fmt == FS_FAT32				/* Allow to update FSInfo only if BPB_FSInfo32 == 1 */
     838:	d12f      	bne.n	89a <find_volume+0x232>
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     83a:	f894 2069 	ldrb.w	r2, [r4, #105]	; 0x69
     83e:	f894 3068 	ldrb.w	r3, [r4, #104]	; 0x68
     842:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
find_volume():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3409
			&& ld_word(fs->win + BPB_FSInfo32) == 1
     846:	2b01      	cmp	r3, #1
     848:	d127      	bne.n	89a <find_volume+0x232>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3410
			&& move_window(fs, bsect + 1) == FR_OK)
     84a:	1c71      	adds	r1, r6, #1
     84c:	4620      	mov	r0, r4
     84e:	f7ff feaf 	bl	5b0 <move_window>
     852:	bb10      	cbnz	r0, 89a <find_volume+0x232>
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     854:	f894 2237 	ldrb.w	r2, [r4, #567]	; 0x237
     858:	f894 3236 	ldrb.w	r3, [r4, #566]	; 0x236
find_volume():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3412
			fs->fsi_flag = 0;
     85c:	7120      	strb	r0, [r4, #4]
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     85e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
find_volume():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3413
			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSInfo data if available */
     862:	f64a 2255 	movw	r2, #43605	; 0xaa55
     866:	4293      	cmp	r3, r2
     868:	d117      	bne.n	89a <find_volume+0x232>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3414
				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
     86a:	f104 0038 	add.w	r0, r4, #56	; 0x38
     86e:	f7ff fe0f 	bl	490 <ld_dword>
     872:	4b2a      	ldr	r3, [pc, #168]	; (91c <find_volume+0x2b4>)
     874:	4298      	cmp	r0, r3
     876:	d110      	bne.n	89a <find_volume+0x232>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3415
				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
     878:	f504 7007 	add.w	r0, r4, #540	; 0x21c
     87c:	f7ff fe08 	bl	490 <ld_dword>
     880:	4b27      	ldr	r3, [pc, #156]	; (920 <find_volume+0x2b8>)
     882:	4298      	cmp	r0, r3
     884:	d109      	bne.n	89a <find_volume+0x232>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3418
				fs->free_clst = ld_dword(fs->win + FSI_Free_Count);
     886:	f504 7008 	add.w	r0, r4, #544	; 0x220
     88a:	f7ff fe01 	bl	490 <ld_dword>
     88e:	61a0      	str	r0, [r4, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3421
				fs->last_clst = ld_dword(fs->win + FSI_Nxt_Free);
     890:	f504 7009 	add.w	r0, r4, #548	; 0x224
     894:	f7ff fdfc 	bl	490 <ld_dword>
     898:	6160      	str	r0, [r4, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3430
	fs->id = ++Fsid;		/* Volume mount ID */
     89a:	4a22      	ldr	r2, [pc, #136]	; (924 <find_volume+0x2bc>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3429
	fs->fs_type = fmt;		/* FAT sub-type */
     89c:	f884 9000 	strb.w	r9, [r4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3430
	fs->id = ++Fsid;		/* Volume mount ID */
     8a0:	8813      	ldrh	r3, [r2, #0]
     8a2:	3301      	adds	r3, #1
     8a4:	b29b      	uxth	r3, r3
     8a6:	8013      	strh	r3, [r2, #0]
     8a8:	80e3      	strh	r3, [r4, #6]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3443
	return FR_OK;
     8aa:	2500      	movs	r5, #0
     8ac:	e703      	b.n	6b6 <find_volume+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3280
			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
     8ae:	2003      	movs	r0, #3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3281 (discriminator 1)
		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
     8b0:	3501      	adds	r5, #1
     8b2:	2d04      	cmp	r5, #4
     8b4:	f47f af28 	bne.w	708 <find_volume+0xa0>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3283
	if (fmt == 4) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
     8b8:	2804      	cmp	r0, #4
     8ba:	d105      	bne.n	8c8 <find_volume+0x260>
     8bc:	2501      	movs	r5, #1
     8be:	e6fa      	b.n	6b6 <find_volume+0x4e>
     8c0:	2804      	cmp	r0, #4
     8c2:	d0fb      	beq.n	8bc <find_volume+0x254>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3284
	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
     8c4:	2801      	cmp	r0, #1
     8c6:	d901      	bls.n	8cc <find_volume+0x264>
     8c8:	250d      	movs	r5, #13
     8ca:	e6f4      	b.n	6b6 <find_volume+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3269
	bsect = 0;
     8cc:	2600      	movs	r6, #0
     8ce:	e727      	b.n	720 <find_volume+0xb8>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3396
			if (fs->n_rootdir == 0)	return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must not be 0) */
     8d0:	f1b8 0f00 	cmp.w	r8, #0
     8d4:	d0f8      	beq.n	8c8 <find_volume+0x260>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3397
			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
     8d6:	4463      	add	r3, ip
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3399
				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
     8d8:	f1b9 0f02 	cmp.w	r9, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3397
			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
     8dc:	62e3      	str	r3, [r4, #44]	; 0x2c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3398
			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
     8de:	ea4f 0341 	mov.w	r3, r1, lsl #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3399
				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
     8e2:	bf1b      	ittet	ne
     8e4:	185b      	addne	r3, r3, r1
     8e6:	f001 0101 	andne.w	r1, r1, #1
     8ea:	4619      	moveq	r1, r3
     8ec:	eb01 0153 	addne.w	r1, r1, r3, lsr #1
     8f0:	e794      	b.n	81c <find_volume+0x1b4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3230
	if (vol < 0) return FR_INVALID_DRIVE;
     8f2:	250b      	movs	r5, #11
     8f4:	e6df      	b.n	6b6 <find_volume+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3234
	if (!fs) return FR_NOT_ENABLED;		/* Is the filesystem object available? */
     8f6:	250c      	movs	r5, #12
     8f8:	e6dd      	b.n	6b6 <find_volume+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3236
	if (!lock_fs(fs)) return FR_TIMEOUT;	/* Lock the volume */
     8fa:	250f      	movs	r5, #15
     8fc:	e6db      	b.n	6b6 <find_volume+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3258
		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
     8fe:	2503      	movs	r5, #3
     900:	e6d9      	b.n	6b6 <find_volume+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3382
		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
     902:	f640 79f5 	movw	r9, #4085	; 0xff5
     906:	4549      	cmp	r1, r9
     908:	bf8c      	ite	hi
     90a:	f04f 0902 	movhi.w	r9, #2
     90e:	f04f 0901 	movls.w	r9, #1
     912:	e769      	b.n	7e8 <find_volume+0x180>
     914:	10000328 	.word	0x10000328
     918:	0ffffff5 	.word	0x0ffffff5
     91c:	41615252 	.word	0x41615252
     920:	61417272 	.word	0x61417272
     924:	1000032c 	.word	0x1000032c

00000928 <put_fat>:
put_fat():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1237
	if (clst >= 2 && clst < fs->n_fatent) {	/* Check if in valid range */
     928:	2901      	cmp	r1, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1231
{
     92a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
     92e:	4605      	mov	r5, r0
     930:	460c      	mov	r4, r1
     932:	4617      	mov	r7, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1237
	if (clst >= 2 && clst < fs->n_fatent) {	/* Check if in valid range */
     934:	d972      	bls.n	a1c <put_fat+0xf4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1237 (discriminator 1)
     936:	69c3      	ldr	r3, [r0, #28]
     938:	428b      	cmp	r3, r1
     93a:	d96f      	bls.n	a1c <put_fat+0xf4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1238
		switch (fs->fs_type) {
     93c:	7803      	ldrb	r3, [r0, #0]
     93e:	2b02      	cmp	r3, #2
     940:	d03f      	beq.n	9c2 <put_fat+0x9a>
     942:	2b03      	cmp	r3, #3
     944:	d050      	beq.n	9e8 <put_fat+0xc0>
     946:	2b01      	cmp	r3, #1
     948:	d168      	bne.n	a1c <put_fat+0xf4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1240
			bc = (UINT)clst; bc += bc / 2;	/* bc: byte offset of the entry */
     94a:	eb01 0851 	add.w	r8, r1, r1, lsr #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1241
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
     94e:	6a81      	ldr	r1, [r0, #40]	; 0x28
     950:	eb01 2158 	add.w	r1, r1, r8, lsr #9
     954:	f7ff fe2c 	bl	5b0 <move_window>
     958:	4606      	mov	r6, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1242
			if (res != FR_OK) break;
     95a:	bb38      	cbnz	r0, 9ac <put_fat+0x84>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1243
			p = fs->win + bc++ % SS(fs);
     95c:	f105 0938 	add.w	r9, r5, #56	; 0x38
     960:	f108 0a01 	add.w	sl, r8, #1
     964:	f3c8 0808 	ubfx	r8, r8, #0, #9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1244
			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;		/* Put 1st byte */
     968:	f014 0401 	ands.w	r4, r4, #1
     96c:	bf1f      	itttt	ne
     96e:	f819 3008 	ldrbne.w	r3, [r9, r8]
     972:	f003 020f 	andne.w	r2, r3, #15
     976:	013b      	lslne	r3, r7, #4
     978:	f003 03f0 	andne.w	r3, r3, #240	; 0xf0
     97c:	bf14      	ite	ne
     97e:	4313      	orrne	r3, r2
     980:	b2fb      	uxtbeq	r3, r7
     982:	f809 3008 	strb.w	r3, [r9, r8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1246
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
     986:	6aa9      	ldr	r1, [r5, #40]	; 0x28
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1245
			fs->wflag = 1;
     988:	2301      	movs	r3, #1
     98a:	70eb      	strb	r3, [r5, #3]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1246
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
     98c:	eb01 215a 	add.w	r1, r1, sl, lsr #9
     990:	4628      	mov	r0, r5
     992:	f7ff fe0d 	bl	5b0 <move_window>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1247
			if (res != FR_OK) break;
     996:	4606      	mov	r6, r0
     998:	b940      	cbnz	r0, 9ac <put_fat+0x84>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1248
			p = fs->win + bc % SS(fs);
     99a:	f3ca 0a08 	ubfx	sl, sl, #0, #9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1249
			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));	/* Put 2nd byte */
     99e:	b144      	cbz	r4, 9b2 <put_fat+0x8a>
     9a0:	f3c7 1707 	ubfx	r7, r7, #4, #8
     9a4:	f809 700a 	strb.w	r7, [r9, sl]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1270
			fs->wflag = 1;
     9a8:	2301      	movs	r3, #1
     9aa:	70eb      	strb	r3, [r5, #3]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1275
}
     9ac:	4630      	mov	r0, r6
     9ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1249
			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));	/* Put 2nd byte */
     9b2:	f819 300a 	ldrb.w	r3, [r9, sl]
     9b6:	f3c7 2703 	ubfx	r7, r7, #8, #4
     9ba:	f023 030f 	bic.w	r3, r3, #15
     9be:	431f      	orrs	r7, r3
     9c0:	e7f0      	b.n	9a4 <put_fat+0x7c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1254
			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
     9c2:	6a81      	ldr	r1, [r0, #40]	; 0x28
     9c4:	eb01 2114 	add.w	r1, r1, r4, lsr #8
     9c8:	f7ff fdf2 	bl	5b0 <move_window>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1255
			if (res != FR_OK) break;
     9cc:	4606      	mov	r6, r0
     9ce:	2800      	cmp	r0, #0
     9d0:	d1ec      	bne.n	9ac <put_fat+0x84>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1256
			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);	/* Simple WORD array */
     9d2:	0064      	lsls	r4, r4, #1
     9d4:	f105 0338 	add.w	r3, r5, #56	; 0x38
     9d8:	f404 74ff 	and.w	r4, r4, #510	; 0x1fe
     9dc:	191a      	adds	r2, r3, r4
st_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:620
	*ptr++ = (BYTE)val; val >>= 8;
     9de:	551f      	strb	r7, [r3, r4]
     9e0:	f3c7 2707 	ubfx	r7, r7, #8, #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:621
	*ptr++ = (BYTE)val;
     9e4:	7057      	strb	r7, [r2, #1]
put_fat():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1257
			fs->wflag = 1;
     9e6:	e7df      	b.n	9a8 <put_fat+0x80>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1264
			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
     9e8:	6a81      	ldr	r1, [r0, #40]	; 0x28
     9ea:	eb01 11d4 	add.w	r1, r1, r4, lsr #7
     9ee:	f7ff fddf 	bl	5b0 <move_window>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1265
			if (res != FR_OK) break;
     9f2:	4606      	mov	r6, r0
     9f4:	2800      	cmp	r0, #0
     9f6:	d1d9      	bne.n	9ac <put_fat+0x84>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1267
				val = (val & 0x0FFFFFFF) | (ld_dword(fs->win + clst * 4 % SS(fs)) & 0xF0000000);
     9f8:	00a4      	lsls	r4, r4, #2
     9fa:	f105 0338 	add.w	r3, r5, #56	; 0x38
     9fe:	f404 74fe 	and.w	r4, r4, #508	; 0x1fc
     a02:	441c      	add	r4, r3
     a04:	4620      	mov	r0, r4
     a06:	f7ff fd43 	bl	490 <ld_dword>
     a0a:	f027 4770 	bic.w	r7, r7, #4026531840	; 0xf0000000
     a0e:	f000 4170 	and.w	r1, r0, #4026531840	; 0xf0000000
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1269
			st_dword(fs->win + clst * 4 % SS(fs), val);
     a12:	4339      	orrs	r1, r7
     a14:	4620      	mov	r0, r4
     a16:	f7ff fd43 	bl	4a0 <st_dword>
     a1a:	e7c5      	b.n	9a8 <put_fat+0x80>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1234
	FRESULT res = FR_INT_ERR;
     a1c:	2602      	movs	r6, #2
     a1e:	e7c5      	b.n	9ac <put_fat+0x84>

00000a20 <get_fat.isra.10>:
get_fat():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1159
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check if in valid range */
     a20:	2901      	cmp	r1, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1149
static DWORD get_fat (		/* 0xFFFFFFFF:Disk error, 1:Internal error, 2..0x7FFFFFFF:Cluster status */
     a22:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     a24:	4605      	mov	r5, r0
     a26:	460c      	mov	r4, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1159
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check if in valid range */
     a28:	d952      	bls.n	ad0 <get_fat.isra.10+0xb0>
     a2a:	69c3      	ldr	r3, [r0, #28]
     a2c:	4299      	cmp	r1, r3
     a2e:	d24f      	bcs.n	ad0 <get_fat.isra.10+0xb0>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1165
		switch (fs->fs_type) {
     a30:	7803      	ldrb	r3, [r0, #0]
     a32:	2b02      	cmp	r3, #2
     a34:	d029      	beq.n	a8a <get_fat.isra.10+0x6a>
     a36:	2b03      	cmp	r3, #3
     a38:	d038      	beq.n	aac <get_fat.isra.10+0x8c>
     a3a:	2b01      	cmp	r3, #1
     a3c:	d148      	bne.n	ad0 <get_fat.isra.10+0xb0>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1167
			bc = (UINT)clst; bc += bc / 2;
     a3e:	eb01 0651 	add.w	r6, r1, r1, lsr #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1168
			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
     a42:	6a81      	ldr	r1, [r0, #40]	; 0x28
     a44:	eb01 2156 	add.w	r1, r1, r6, lsr #9
     a48:	f7ff fdb2 	bl	5b0 <move_window>
     a4c:	b110      	cbz	r0, a54 <get_fat.isra.10+0x34>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1163
		val = 0xFFFFFFFF;	/* Default value falls on disk error */
     a4e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1216
}
     a52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1169
			wc = fs->win[bc++ % SS(fs)];		/* Get 1st byte of the entry */
     a54:	1c77      	adds	r7, r6, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1170
			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
     a56:	6aa9      	ldr	r1, [r5, #40]	; 0x28
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1169
			wc = fs->win[bc++ % SS(fs)];		/* Get 1st byte of the entry */
     a58:	f3c6 0608 	ubfx	r6, r6, #0, #9
     a5c:	442e      	add	r6, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1170
			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
     a5e:	eb01 2157 	add.w	r1, r1, r7, lsr #9
     a62:	4628      	mov	r0, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1169
			wc = fs->win[bc++ % SS(fs)];		/* Get 1st byte of the entry */
     a64:	f896 6038 	ldrb.w	r6, [r6, #56]	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1170
			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
     a68:	f7ff fda2 	bl	5b0 <move_window>
     a6c:	2800      	cmp	r0, #0
     a6e:	d1ee      	bne.n	a4e <get_fat.isra.10+0x2e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1171
			wc |= fs->win[bc % SS(fs)] << 8;	/* Merge 2nd byte of the entry */
     a70:	f3c7 0708 	ubfx	r7, r7, #0, #9
     a74:	443d      	add	r5, r7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1172
			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);	/* Adjust bit position */
     a76:	07e3      	lsls	r3, r4, #31
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1171
			wc |= fs->win[bc % SS(fs)] << 8;	/* Merge 2nd byte of the entry */
     a78:	f895 0038 	ldrb.w	r0, [r5, #56]	; 0x38
     a7c:	ea46 2000 	orr.w	r0, r6, r0, lsl #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1172
			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);	/* Adjust bit position */
     a80:	bf4c      	ite	mi
     a82:	0900      	lsrmi	r0, r0, #4
     a84:	f3c0 000b 	ubfxpl	r0, r0, #0, #12
     a88:	e7e3      	b.n	a52 <get_fat.isra.10+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1176
			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2))) != FR_OK) break;
     a8a:	6a81      	ldr	r1, [r0, #40]	; 0x28
     a8c:	eb01 2114 	add.w	r1, r1, r4, lsr #8
     a90:	f7ff fd8e 	bl	5b0 <move_window>
     a94:	2800      	cmp	r0, #0
     a96:	d1da      	bne.n	a4e <get_fat.isra.10+0x2e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1177
			val = ld_word(fs->win + clst * 2 % SS(fs));		/* Simple WORD array */
     a98:	0064      	lsls	r4, r4, #1
     a9a:	3538      	adds	r5, #56	; 0x38
     a9c:	f404 74ff 	and.w	r4, r4, #510	; 0x1fe
     aa0:	192b      	adds	r3, r5, r4
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     aa2:	5d28      	ldrb	r0, [r5, r4]
     aa4:	785b      	ldrb	r3, [r3, #1]
get_fat():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1177
			val = ld_word(fs->win + clst * 2 % SS(fs));		/* Simple WORD array */
     aa6:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1178
			break;
     aaa:	e7d2      	b.n	a52 <get_fat.isra.10+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1181
			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
     aac:	6a81      	ldr	r1, [r0, #40]	; 0x28
     aae:	eb01 11d4 	add.w	r1, r1, r4, lsr #7
     ab2:	f7ff fd7d 	bl	5b0 <move_window>
     ab6:	2800      	cmp	r0, #0
     ab8:	d1c9      	bne.n	a4e <get_fat.isra.10+0x2e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1182
			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;	/* Simple DWORD array but mask out upper 4 bits */
     aba:	00a4      	lsls	r4, r4, #2
     abc:	f105 0038 	add.w	r0, r5, #56	; 0x38
     ac0:	f404 74fe 	and.w	r4, r4, #508	; 0x1fc
     ac4:	4420      	add	r0, r4
     ac6:	f7ff fce3 	bl	490 <ld_dword>
     aca:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1183
			break;
     ace:	e7c0      	b.n	a52 <get_fat.isra.10+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1211
			val = 1;	/* Internal error */
     ad0:	2001      	movs	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1215
	return val;
     ad2:	e7be      	b.n	a52 <get_fat.isra.10+0x32>

00000ad4 <dir_sdi>:
dir_sdi():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1692
	if (ofs >= (DWORD)((FF_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR) || ofs % SZDIRE) {	/* Check range of offset and alignment */
     ad4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1687
{
     ad8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     ada:	4606      	mov	r6, r0
     adc:	460d      	mov	r5, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1692
	if (ofs >= (DWORD)((FF_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR) || ofs % SZDIRE) {	/* Check range of offset and alignment */
     ade:	d301      	bcc.n	ae4 <dir_sdi+0x10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1693
		return FR_INT_ERR;
     ae0:	2002      	movs	r0, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1722
}
     ae2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1692 (discriminator 1)
	if (ofs >= (DWORD)((FF_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR) || ofs % SZDIRE) {	/* Check range of offset and alignment */
     ae4:	06ca      	lsls	r2, r1, #27
     ae6:	d1fb      	bne.n	ae0 <dir_sdi+0xc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1696
	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
     ae8:	6882      	ldr	r2, [r0, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1689
	FATFS *fs = dp->obj.fs;
     aea:	6804      	ldr	r4, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1695
	dp->dptr = ofs;				/* Set current offset */
     aec:	6131      	str	r1, [r6, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1697
	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
     aee:	b9ca      	cbnz	r2, b24 <dir_sdi+0x50>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1697 (discriminator 1)
     af0:	7823      	ldrb	r3, [r4, #0]
     af2:	2b02      	cmp	r3, #2
     af4:	d901      	bls.n	afa <dir_sdi+0x26>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1698
		clst = fs->dirbase;
     af6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1702
	if (clst == 0) {	/* Static table (root-directory on the FAT volume) */
     af8:	b99b      	cbnz	r3, b22 <dir_sdi+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1703
		if (ofs / SZDIRE >= fs->n_rootdir) return FR_INT_ERR;	/* Is index out of range? */
     afa:	8923      	ldrh	r3, [r4, #8]
     afc:	ebb3 1f55 	cmp.w	r3, r5, lsr #5
     b00:	d9ee      	bls.n	ae0 <dir_sdi+0xc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1704
		dp->sect = fs->dirbase;
     b02:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
     b04:	61b3      	str	r3, [r6, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1717
	if (dp->sect == 0) return FR_INT_ERR;
     b06:	69b3      	ldr	r3, [r6, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1716
	dp->clust = clst;					/* Current cluster# */
     b08:	6172      	str	r2, [r6, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1717
	if (dp->sect == 0) return FR_INT_ERR;
     b0a:	2b00      	cmp	r3, #0
     b0c:	d0e8      	beq.n	ae0 <dir_sdi+0xc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1718
	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
     b0e:	eb03 2355 	add.w	r3, r3, r5, lsr #9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1719
	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
     b12:	3438      	adds	r4, #56	; 0x38
     b14:	f3c5 0508 	ubfx	r5, r5, #0, #9
     b18:	442c      	add	r4, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1718
	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
     b1a:	61b3      	str	r3, [r6, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1719
	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
     b1c:	61f4      	str	r4, [r6, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1721
	return FR_OK;
     b1e:	2000      	movs	r0, #0
     b20:	e7df      	b.n	ae2 <dir_sdi+0xe>
     b22:	461a      	mov	r2, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1707
		csz = (DWORD)fs->csize * SS(fs);	/* Bytes per cluster */
     b24:	8967      	ldrh	r7, [r4, #10]
     b26:	027f      	lsls	r7, r7, #9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1708
		while (ofs >= csz) {				/* Follow cluster chain */
     b28:	42bd      	cmp	r5, r7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1709
			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
     b2a:	4611      	mov	r1, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1708
		while (ofs >= csz) {				/* Follow cluster chain */
     b2c:	d204      	bcs.n	b38 <dir_sdi+0x64>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1714
		dp->sect = clst2sect(fs, clst);
     b2e:	4620      	mov	r0, r4
     b30:	f7ff fccc 	bl	4cc <clst2sect>
     b34:	61b0      	str	r0, [r6, #24]
     b36:	e7e6      	b.n	b06 <dir_sdi+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1709
			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
     b38:	6830      	ldr	r0, [r6, #0]
     b3a:	f7ff ff71 	bl	a20 <get_fat.isra.10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1710
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
     b3e:	1c43      	adds	r3, r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1709
			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
     b40:	4602      	mov	r2, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1710
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
     b42:	d006      	beq.n	b52 <dir_sdi+0x7e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1711
			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal error */
     b44:	2801      	cmp	r0, #1
     b46:	d9cb      	bls.n	ae0 <dir_sdi+0xc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1711 (discriminator 2)
     b48:	69e3      	ldr	r3, [r4, #28]
     b4a:	4283      	cmp	r3, r0
     b4c:	d9c8      	bls.n	ae0 <dir_sdi+0xc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1712
			ofs -= csz;
     b4e:	1bed      	subs	r5, r5, r7
     b50:	e7ea      	b.n	b28 <dir_sdi+0x54>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1710
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
     b52:	2001      	movs	r0, #1
     b54:	e7c5      	b.n	ae2 <dir_sdi+0xe>

00000b56 <create_chain>:
create_chain():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1515
{
     b56:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     b5a:	4680      	mov	r8, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1518
	FATFS *fs = obj->fs;
     b5c:	6805      	ldr	r5, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1521
	if (clst == 0) {	/* Create a new chain */
     b5e:	460f      	mov	r7, r1
     b60:	b949      	cbnz	r1, b76 <create_chain+0x20>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1522
		scl = fs->last_clst;				/* Suggested cluster to start to find */
     b62:	696e      	ldr	r6, [r5, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1523
		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
     b64:	b1c6      	cbz	r6, b98 <create_chain+0x42>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1523 (discriminator 2)
     b66:	69eb      	ldr	r3, [r5, #28]
     b68:	42b3      	cmp	r3, r6
     b6a:	bf98      	it	ls
     b6c:	2601      	movls	r6, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1532
	if (fs->free_clst == 0) return 0;		/* No free cluster */
     b6e:	69ab      	ldr	r3, [r5, #24]
     b70:	b9a3      	cbnz	r3, b9c <create_chain+0x46>
     b72:	2400      	movs	r4, #0
     b74:	e006      	b.n	b84 <create_chain+0x2e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1526
		cs = get_fat(obj, clst);			/* Check the cluster status */
     b76:	4628      	mov	r0, r5
     b78:	f7ff ff52 	bl	a20 <get_fat.isra.10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1527
		if (cs < 2) return 1;				/* Test for insanity */
     b7c:	2801      	cmp	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1526
		cs = get_fat(obj, clst);			/* Check the cluster status */
     b7e:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1527
		if (cs < 2) return 1;				/* Test for insanity */
     b80:	d803      	bhi.n	b8a <create_chain+0x34>
     b82:	2401      	movs	r4, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1602
}
     b84:	4620      	mov	r0, r4
     b86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1528
		if (cs == 0xFFFFFFFF) return cs;	/* Test for disk error */
     b8a:	1c42      	adds	r2, r0, #1
     b8c:	d051      	beq.n	c32 <create_chain+0xdc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1529
		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
     b8e:	69eb      	ldr	r3, [r5, #28]
     b90:	4283      	cmp	r3, r0
     b92:	d8f7      	bhi.n	b84 <create_chain+0x2e>
     b94:	463e      	mov	r6, r7
     b96:	e7ea      	b.n	b6e <create_chain+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1523
		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
     b98:	2601      	movs	r6, #1
     b9a:	e7e8      	b.n	b6e <create_chain+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1562
		if (scl == clst) {						/* Stretching an existing chain? */
     b9c:	42be      	cmp	r6, r7
     b9e:	d115      	bne.n	bcc <create_chain+0x76>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1564
			if (ncl >= fs->n_fatent) ncl = 2;
     ba0:	69eb      	ldr	r3, [r5, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1565
			cs = get_fat(obj, ncl);				/* Get next cluster status */
     ba2:	f8d8 0000 	ldr.w	r0, [r8]
     ba6:	1c74      	adds	r4, r6, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1564
			if (ncl >= fs->n_fatent) ncl = 2;
     ba8:	42a3      	cmp	r3, r4
     baa:	bf98      	it	ls
     bac:	2402      	movls	r4, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1565
			cs = get_fat(obj, ncl);				/* Get next cluster status */
     bae:	4621      	mov	r1, r4
     bb0:	f7ff ff36 	bl	a20 <get_fat.isra.10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1566
			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* Test for error */
     bb4:	2801      	cmp	r0, #1
     bb6:	d0e4      	beq.n	b82 <create_chain+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1566 (discriminator 2)
     bb8:	1c43      	adds	r3, r0, #1
     bba:	d03a      	beq.n	c32 <create_chain+0xdc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1567
			if (cs != 0) {						/* Not free? */
     bbc:	b1d8      	cbz	r0, bf6 <create_chain+0xa0>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1568
				cs = fs->last_clst;				/* Start at suggested cluster if it is valid */
     bbe:	696b      	ldr	r3, [r5, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1569
				if (cs >= 2 && cs < fs->n_fatent) scl = cs;
     bc0:	2b01      	cmp	r3, #1
     bc2:	d903      	bls.n	bcc <create_chain+0x76>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1569 (discriminator 1)
     bc4:	69ea      	ldr	r2, [r5, #28]
     bc6:	4293      	cmp	r3, r2
     bc8:	bf38      	it	cc
     bca:	461e      	movcc	r6, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1569
     bcc:	4634      	mov	r4, r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1577
				if (ncl >= fs->n_fatent) {		/* Check wrap-around */
     bce:	69eb      	ldr	r3, [r5, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1576
				ncl++;							/* Next cluster */
     bd0:	3401      	adds	r4, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1577
				if (ncl >= fs->n_fatent) {		/* Check wrap-around */
     bd2:	42a3      	cmp	r3, r4
     bd4:	d802      	bhi.n	bdc <create_chain+0x86>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1579
					if (ncl > scl) return 0;	/* No free cluster found? */
     bd6:	2e01      	cmp	r6, #1
     bd8:	d9cb      	bls.n	b72 <create_chain+0x1c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1578
					ncl = 2;
     bda:	2402      	movs	r4, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1581
				cs = get_fat(obj, ncl);			/* Get the cluster status */
     bdc:	4621      	mov	r1, r4
     bde:	f8d8 0000 	ldr.w	r0, [r8]
     be2:	f7ff ff1d 	bl	a20 <get_fat.isra.10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1582
				if (cs == 0) break;				/* Found a free cluster? */
     be6:	b140      	cbz	r0, bfa <create_chain+0xa4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1583
				if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* Test for error */
     be8:	2801      	cmp	r0, #1
     bea:	d0ca      	beq.n	b82 <create_chain+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1583 (discriminator 2)
     bec:	3001      	adds	r0, #1
     bee:	d020      	beq.n	c32 <create_chain+0xdc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1584
				if (ncl == scl) return 0;		/* No free cluster found? */
     bf0:	42b4      	cmp	r4, r6
     bf2:	d1ec      	bne.n	bce <create_chain+0x78>
     bf4:	e7bd      	b.n	b72 <create_chain+0x1c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1573
		if (ncl == 0) {	/* The new cluster cannot be contiguous and find another fragment */
     bf6:	2c00      	cmp	r4, #0
     bf8:	d0e8      	beq.n	bcc <create_chain+0x76>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1587
		res = put_fat(fs, ncl, 0xFFFFFFFF);		/* Mark the new cluster 'EOC' */
     bfa:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
     bfe:	4621      	mov	r1, r4
     c00:	4628      	mov	r0, r5
     c02:	f7ff fe91 	bl	928 <put_fat>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1588
		if (res == FR_OK && clst != 0) {
     c06:	b990      	cbnz	r0, c2e <create_chain+0xd8>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1588 (discriminator 1)
     c08:	b957      	cbnz	r7, c20 <create_chain+0xca>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1595
		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
     c0a:	e9d5 3206 	ldrd	r3, r2, [r5, #24]
     c0e:	3a02      	subs	r2, #2
     c10:	4293      	cmp	r3, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1594
		fs->last_clst = ncl;
     c12:	616c      	str	r4, [r5, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1595
		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
     c14:	d910      	bls.n	c38 <create_chain+0xe2>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1596
		fs->fsi_flag |= 1;
     c16:	792b      	ldrb	r3, [r5, #4]
     c18:	f043 0301 	orr.w	r3, r3, #1
     c1c:	712b      	strb	r3, [r5, #4]
     c1e:	e7b1      	b.n	b84 <create_chain+0x2e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1589
			res = put_fat(fs, clst, ncl);		/* Link it from the previous one if needed */
     c20:	4622      	mov	r2, r4
     c22:	4639      	mov	r1, r7
     c24:	4628      	mov	r0, r5
     c26:	f7ff fe7f 	bl	928 <put_fat>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1593
	if (res == FR_OK) {			/* Update FSINFO if function succeeded. */
     c2a:	2800      	cmp	r0, #0
     c2c:	d0ed      	beq.n	c0a <create_chain+0xb4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1598
		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;	/* Failed. Generate error status */
     c2e:	2801      	cmp	r0, #1
     c30:	d1a7      	bne.n	b82 <create_chain+0x2c>
     c32:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
     c36:	e7a5      	b.n	b84 <create_chain+0x2e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1595 (discriminator 1)
		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
     c38:	3b01      	subs	r3, #1
     c3a:	61ab      	str	r3, [r5, #24]
     c3c:	e7eb      	b.n	c16 <create_chain+0xc0>

00000c3e <remove_chain>:
remove_chain():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1421
{
     c3e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     c40:	460d      	mov	r5, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1432
	if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Check if in valid range */
     c42:	2d01      	cmp	r5, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1421
{
     c44:	4607      	mov	r7, r0
     c46:	4611      	mov	r1, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1424
	FATFS *fs = obj->fs;
     c48:	6804      	ldr	r4, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1432
	if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Check if in valid range */
     c4a:	d92b      	bls.n	ca4 <remove_chain+0x66>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1432 (discriminator 2)
     c4c:	69e3      	ldr	r3, [r4, #28]
     c4e:	42ab      	cmp	r3, r5
     c50:	d928      	bls.n	ca4 <remove_chain+0x66>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1435
	if (pclst != 0 && (!FF_FS_EXFAT || fs->fs_type != FS_EXFAT || obj->stat != 2)) {
     c52:	b12a      	cbz	r2, c60 <remove_chain+0x22>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1436
		res = put_fat(fs, pclst, 0xFFFFFFFF);
     c54:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
     c58:	4620      	mov	r0, r4
     c5a:	f7ff fe65 	bl	928 <put_fat>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1437
		if (res != FR_OK) return res;
     c5e:	b930      	cbnz	r0, c6e <remove_chain+0x30>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1442
		nxt = get_fat(obj, clst);			/* Get cluster status */
     c60:	4629      	mov	r1, r5
     c62:	6838      	ldr	r0, [r7, #0]
     c64:	f7ff fedc 	bl	a20 <get_fat.isra.10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1443
		if (nxt == 0) break;				/* Empty cluster? */
     c68:	4606      	mov	r6, r0
     c6a:	b908      	cbnz	r0, c70 <remove_chain+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1501
	return FR_OK;
     c6c:	2000      	movs	r0, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1502
}
     c6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1444
		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
     c70:	2801      	cmp	r0, #1
     c72:	d017      	beq.n	ca4 <remove_chain+0x66>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1445
		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
     c74:	1c43      	adds	r3, r0, #1
     c76:	d017      	beq.n	ca8 <remove_chain+0x6a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1447
			res = put_fat(fs, clst, 0);		/* Mark the cluster 'free' on the FAT */
     c78:	2200      	movs	r2, #0
     c7a:	4629      	mov	r1, r5
     c7c:	4620      	mov	r0, r4
     c7e:	f7ff fe53 	bl	928 <put_fat>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1448
			if (res != FR_OK) return res;
     c82:	2800      	cmp	r0, #0
     c84:	d1f3      	bne.n	c6e <remove_chain+0x30>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1450
		if (fs->free_clst < fs->n_fatent - 2) {	/* Update FSINFO */
     c86:	e9d4 3206 	ldrd	r3, r2, [r4, #24]
     c8a:	1e91      	subs	r1, r2, #2
     c8c:	428b      	cmp	r3, r1
     c8e:	d205      	bcs.n	c9c <remove_chain+0x5e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1451
			fs->free_clst++;
     c90:	3301      	adds	r3, #1
     c92:	61a3      	str	r3, [r4, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1452
			fs->fsi_flag |= 1;
     c94:	7923      	ldrb	r3, [r4, #4]
     c96:	f043 0301 	orr.w	r3, r3, #1
     c9a:	7123      	strb	r3, [r4, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1473
	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
     c9c:	42b2      	cmp	r2, r6
     c9e:	4635      	mov	r5, r6
     ca0:	d8de      	bhi.n	c60 <remove_chain+0x22>
     ca2:	e7e3      	b.n	c6c <remove_chain+0x2e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1432
	if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Check if in valid range */
     ca4:	2002      	movs	r0, #2
     ca6:	e7e2      	b.n	c6e <remove_chain+0x30>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1445
		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
     ca8:	2001      	movs	r0, #1
     caa:	e7e0      	b.n	c6e <remove_chain+0x30>

00000cac <unlock_fs>:
unlock_fs():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:920
	if (fs && res != FR_NOT_ENABLED && res != FR_INVALID_DRIVE && res != FR_TIMEOUT) {
     cac:	b140      	cbz	r0, cc0 <unlock_fs+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:920 (discriminator 2)
     cae:	f1a1 030b 	sub.w	r3, r1, #11
     cb2:	2b01      	cmp	r3, #1
     cb4:	d904      	bls.n	cc0 <unlock_fs+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:920
     cb6:	290f      	cmp	r1, #15
     cb8:	d002      	beq.n	cc0 <unlock_fs+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:921
		ff_rel_grant(fs->sobj);
     cba:	6900      	ldr	r0, [r0, #16]
     cbc:	f000 be9e 	b.w	19fc <ff_rel_grant>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:923
}
     cc0:	4770      	bx	lr

00000cc2 <validate>:
validate():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3457

static FRESULT validate (	/* Returns FR_OK or FR_INVALID_OBJECT */
	FFOBJID* obj,			/* Pointer to the FFOBJID, the 1st member in the FIL/DIR object, to check validity */
	FATFS** rfs				/* Pointer to pointer to the owner filesystem object to return */
)
{
     cc2:	b538      	push	{r3, r4, r5, lr}
     cc4:	460d      	mov	r5, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3461
	FRESULT res = FR_INVALID_OBJECT;


	if (obj && obj->fs && obj->fs->fs_type && obj->id == obj->fs->id) {	/* Test if the object is valid */
     cc6:	4604      	mov	r4, r0
     cc8:	b1f0      	cbz	r0, d08 <validate+0x46>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3461 (discriminator 1)
     cca:	6803      	ldr	r3, [r0, #0]
     ccc:	b1db      	cbz	r3, d06 <validate+0x44>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3461 (discriminator 2)
     cce:	781a      	ldrb	r2, [r3, #0]
     cd0:	b1b2      	cbz	r2, d00 <validate+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3461 (discriminator 3)
     cd2:	8881      	ldrh	r1, [r0, #4]
     cd4:	88da      	ldrh	r2, [r3, #6]
     cd6:	4291      	cmp	r1, r2
     cd8:	d112      	bne.n	d00 <validate+0x3e>
lock_fs():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:911
	return ff_req_grant(fs->sobj);
     cda:	6918      	ldr	r0, [r3, #16]
     cdc:	f000 fe85 	bl	19ea <ff_req_grant>
validate():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3463
#if FF_FS_REENTRANT
		if (lock_fs(obj->fs)) {	/* Obtain the filesystem object */
     ce0:	4603      	mov	r3, r0
     ce2:	b198      	cbz	r0, d0c <validate+0x4a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3464
			if (!(disk_status(obj->fs->pdrv) & STA_NOINIT)) { /* Test if the phsical drive is kept initialized */
     ce4:	6823      	ldr	r3, [r4, #0]
     ce6:	7858      	ldrb	r0, [r3, #1]
     ce8:	f000 ff16 	bl	1b18 <disk_status>
     cec:	f010 0001 	ands.w	r0, r0, #1
     cf0:	d102      	bne.n	cf8 <validate+0x36>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3478
		if (!(disk_status(obj->fs->pdrv) & STA_NOINIT)) { /* Test if the phsical drive is kept initialized */
			res = FR_OK;
		}
#endif
	}
	*rfs = (res == FR_OK) ? obj->fs : 0;	/* Corresponding filesystem object */
     cf2:	6824      	ldr	r4, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3478 (discriminator 4)
     cf4:	602c      	str	r4, [r5, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3480 (discriminator 4)
	return res;
}
     cf6:	bd38      	pop	{r3, r4, r5, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3467
				unlock_fs(obj->fs, FR_OK);
     cf8:	2100      	movs	r1, #0
     cfa:	6820      	ldr	r0, [r4, #0]
     cfc:	f7ff ffd6 	bl	cac <unlock_fs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3458
	FRESULT res = FR_INVALID_OBJECT;
     d00:	2009      	movs	r0, #9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3478
	*rfs = (res == FR_OK) ? obj->fs : 0;	/* Corresponding filesystem object */
     d02:	2400      	movs	r4, #0
     d04:	e7f6      	b.n	cf4 <validate+0x32>
     d06:	461c      	mov	r4, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3458
	FRESULT res = FR_INVALID_OBJECT;
     d08:	2009      	movs	r0, #9
     d0a:	e7f3      	b.n	cf4 <validate+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3470
			res = FR_TIMEOUT;
     d0c:	200f      	movs	r0, #15
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3478
	*rfs = (res == FR_OK) ? obj->fs : 0;	/* Corresponding filesystem object */
     d0e:	461c      	mov	r4, r3
     d10:	e7f0      	b.n	cf4 <validate+0x32>

00000d12 <dir_clear>:
dir_clear():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1648
{
     d12:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
sync_window():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1049
	if (fs->wflag) {	/* Is the disk access window dirty */
     d14:	78c3      	ldrb	r3, [r0, #3]
dir_clear():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1648
{
     d16:	4604      	mov	r4, r0
     d18:	460d      	mov	r5, r1
sync_window():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1049
	if (fs->wflag) {	/* Is the disk access window dirty */
     d1a:	b9c3      	cbnz	r3, d4e <dir_clear+0x3c>
dir_clear():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1655
	sect = clst2sect(fs, clst);		/* Top of the cluster */
     d1c:	4629      	mov	r1, r5
     d1e:	4620      	mov	r0, r4
     d20:	f7ff fbd4 	bl	4cc <clst2sect>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1657
	mem_set(fs->win, 0, sizeof fs->win);	/* Clear window buffer */
     d24:	f104 0638 	add.w	r6, r4, #56	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1655
	sect = clst2sect(fs, clst);		/* Top of the cluster */
     d28:	4607      	mov	r7, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1656
	fs->winsect = sect;				/* Set window to top of the cluster */
     d2a:	6360      	str	r0, [r4, #52]	; 0x34
mem_set():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:670
	BYTE *d = (BYTE*)dst;
     d2c:	f504 720e 	add.w	r2, r4, #568	; 0x238
     d30:	4633      	mov	r3, r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:673
		*d++ = (BYTE)val;
     d32:	2100      	movs	r1, #0
     d34:	f803 1b01 	strb.w	r1, [r3], #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:674
	} while (--cnt);
     d38:	4293      	cmp	r3, r2
     d3a:	d1fb      	bne.n	d34 <dir_clear+0x22>
dir_clear():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1670
		for (n = 0; n < fs->csize && disk_write(fs->pdrv, ibuf, sect + n, szb) == RES_OK; n += szb) ;	/* Fill the cluster with 0 */
     d3c:	2500      	movs	r5, #0
     d3e:	8963      	ldrh	r3, [r4, #10]
     d40:	429d      	cmp	r5, r3
     d42:	d30a      	bcc.n	d5a <dir_clear+0x48>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1672
	return (n == fs->csize) ? FR_OK : FR_DISK_ERR;
     d44:	8960      	ldrh	r0, [r4, #10]
     d46:	1b40      	subs	r0, r0, r5
     d48:	bf18      	it	ne
     d4a:	2001      	movne	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1673
}
     d4c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
sync_window():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1673
     d4e:	f7ff fc0f 	bl	570 <sync_window.part.6>
dir_clear():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1654
	if (sync_window(fs) != FR_OK) return FR_DISK_ERR;	/* Flush disk access window */
     d52:	2800      	cmp	r0, #0
     d54:	d0e2      	beq.n	d1c <dir_clear+0xa>
     d56:	2001      	movs	r0, #1
     d58:	e7f8      	b.n	d4c <dir_clear+0x3a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1670
		for (n = 0; n < fs->csize && disk_write(fs->pdrv, ibuf, sect + n, szb) == RES_OK; n += szb) ;	/* Fill the cluster with 0 */
     d5a:	2301      	movs	r3, #1
     d5c:	197a      	adds	r2, r7, r5
     d5e:	4631      	mov	r1, r6
     d60:	7860      	ldrb	r0, [r4, #1]
     d62:	f000 fef2 	bl	1b4a <disk_write>
     d66:	2800      	cmp	r0, #0
     d68:	d1ec      	bne.n	d44 <dir_clear+0x32>
     d6a:	3501      	adds	r5, #1
     d6c:	e7e7      	b.n	d3e <dir_clear+0x2c>

00000d6e <dir_next>:
dir_next():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1735
{
     d6e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1740
	ofs = dp->dptr + SZDIRE;	/* Next entry */
     d72:	6907      	ldr	r7, [r0, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1737
	FATFS *fs = dp->obj.fs;
     d74:	6805      	ldr	r5, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1740
	ofs = dp->dptr + SZDIRE;	/* Next entry */
     d76:	3720      	adds	r7, #32
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1741
	if (ofs >= (DWORD)((FF_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) dp->sect = 0;	/* Disable it if the offset reached the max value */
     d78:	f5b7 1f00 	cmp.w	r7, #2097152	; 0x200000
     d7c:	bf24      	itt	cs
     d7e:	2300      	movcs	r3, #0
     d80:	6183      	strcs	r3, [r0, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1742
	if (dp->sect == 0) return FR_NO_FILE;	/* Report EOT if it has been disabled */
     d82:	6983      	ldr	r3, [r0, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1735
{
     d84:	4604      	mov	r4, r0
     d86:	4689      	mov	r9, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1742
	if (dp->sect == 0) return FR_NO_FILE;	/* Report EOT if it has been disabled */
     d88:	b173      	cbz	r3, da8 <dir_next+0x3a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1744
	if (ofs % SS(fs) == 0) {	/* Sector changed? */
     d8a:	f3c7 0808 	ubfx	r8, r7, #0, #9
     d8e:	f1b8 0f00 	cmp.w	r8, #0
     d92:	d139      	bne.n	e08 <dir_next+0x9a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1747
		if (dp->clust == 0) {	/* Static table */
     d94:	6941      	ldr	r1, [r0, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1745
		dp->sect++;				/* Next sector */
     d96:	3301      	adds	r3, #1
     d98:	6183      	str	r3, [r0, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1747
		if (dp->clust == 0) {	/* Static table */
     d9a:	b939      	cbnz	r1, dac <dir_next+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1748
			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
     d9c:	892b      	ldrh	r3, [r5, #8]
     d9e:	ebb3 1f57 	cmp.w	r3, r7, lsr #5
     da2:	d831      	bhi.n	e08 <dir_next+0x9a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1749
				dp->sect = 0; return FR_NO_FILE;
     da4:	2300      	movs	r3, #0
     da6:	61a3      	str	r3, [r4, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1742
	if (dp->sect == 0) return FR_NO_FILE;	/* Report EOT if it has been disabled */
     da8:	2004      	movs	r0, #4
     daa:	e00b      	b.n	dc4 <dir_next+0x56>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1753
			if ((ofs / SS(fs) & (fs->csize - 1)) == 0) {	/* Cluster changed? */
     dac:	896b      	ldrh	r3, [r5, #10]
     dae:	3b01      	subs	r3, #1
     db0:	ea13 2357 	ands.w	r3, r3, r7, lsr #9
     db4:	d128      	bne.n	e08 <dir_next+0x9a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1754
				clst = get_fat(&dp->obj, dp->clust);		/* Get next cluster */
     db6:	4628      	mov	r0, r5
     db8:	f7ff fe32 	bl	a20 <get_fat.isra.10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1755
				if (clst <= 1) return FR_INT_ERR;			/* Internal error */
     dbc:	2801      	cmp	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1754
				clst = get_fat(&dp->obj, dp->clust);		/* Get next cluster */
     dbe:	4606      	mov	r6, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1755
				if (clst <= 1) return FR_INT_ERR;			/* Internal error */
     dc0:	d802      	bhi.n	dc8 <dir_next+0x5a>
     dc2:	2002      	movs	r0, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1782
}
     dc4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1756
				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
     dc8:	1c42      	adds	r2, r0, #1
     dca:	d101      	bne.n	dd0 <dir_next+0x62>
     dcc:	2001      	movs	r0, #1
     dce:	e7f9      	b.n	dc4 <dir_next+0x56>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1757
				if (clst >= fs->n_fatent) {					/* It reached end of dynamic table */
     dd0:	69eb      	ldr	r3, [r5, #28]
     dd2:	4283      	cmp	r3, r0
     dd4:	d812      	bhi.n	dfc <dir_next+0x8e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1759
					if (!stretch) {								/* If no stretch, report EOT */
     dd6:	f1b9 0f00 	cmp.w	r9, #0
     dda:	d0e3      	beq.n	da4 <dir_next+0x36>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1762
					clst = create_chain(&dp->obj, dp->clust);	/* Allocate a cluster */
     ddc:	6961      	ldr	r1, [r4, #20]
     dde:	4620      	mov	r0, r4
     de0:	f7ff feb9 	bl	b56 <create_chain>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1763
					if (clst == 0) return FR_DENIED;			/* No free cluster */
     de4:	4606      	mov	r6, r0
     de6:	b1a8      	cbz	r0, e14 <dir_next+0xa6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1764
					if (clst == 1) return FR_INT_ERR;			/* Internal error */
     de8:	2801      	cmp	r0, #1
     dea:	d0ea      	beq.n	dc2 <dir_next+0x54>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1765
					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
     dec:	1c43      	adds	r3, r0, #1
     dee:	d0ed      	beq.n	dcc <dir_next+0x5e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1766
					if (dir_clear(fs, clst) != FR_OK) return FR_DISK_ERR;	/* Clean up the stretched table */
     df0:	4601      	mov	r1, r0
     df2:	4628      	mov	r0, r5
     df4:	f7ff ff8d 	bl	d12 <dir_clear>
     df8:	2800      	cmp	r0, #0
     dfa:	d1e7      	bne.n	dcc <dir_next+0x5e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1773
				dp->clust = clst;		/* Initialize data for new cluster */
     dfc:	6166      	str	r6, [r4, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1774
				dp->sect = clst2sect(fs, clst);
     dfe:	4631      	mov	r1, r6
     e00:	4628      	mov	r0, r5
     e02:	f7ff fb63 	bl	4cc <clst2sect>
     e06:	61a0      	str	r0, [r4, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1779
	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
     e08:	3538      	adds	r5, #56	; 0x38
     e0a:	4445      	add	r5, r8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1778
	dp->dptr = ofs;						/* Current entry */
     e0c:	6127      	str	r7, [r4, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1779
	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
     e0e:	61e5      	str	r5, [r4, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1781
	return FR_OK;
     e10:	2000      	movs	r0, #0
     e12:	e7d7      	b.n	dc4 <dir_next+0x56>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1763
					if (clst == 0) return FR_DENIED;			/* No free cluster */
     e14:	2007      	movs	r0, #7
     e16:	e7d5      	b.n	dc4 <dir_next+0x56>

00000e18 <dir_find>:
dir_find():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2415
{
     e18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2423
	res = dir_sdi(dp, 0);			/* Rewind directory object */
     e1c:	2100      	movs	r1, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2415
{
     e1e:	b085      	sub	sp, #20
     e20:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2417
	FATFS *fs = dp->obj.fs;
     e22:	f8d0 8000 	ldr.w	r8, [r0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2423
	res = dir_sdi(dp, 0);			/* Rewind directory object */
     e26:	f7ff fe55 	bl	ad4 <dir_sdi>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2424
	if (res != FR_OK) return res;
     e2a:	4681      	mov	r9, r0
     e2c:	2800      	cmp	r0, #0
     e2e:	f040 808c 	bne.w	f4a <dir_find+0x132>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2447
	ord = sum = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
     e32:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
     e36:	f04f 0aff 	mov.w	sl, #255	; 0xff
     e3a:	62e3      	str	r3, [r4, #44]	; 0x2c
     e3c:	4657      	mov	r7, sl
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2457
			ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
     e3e:	9300      	str	r3, [sp, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2450
		res = move_window(fs, dp->sect);
     e40:	69a1      	ldr	r1, [r4, #24]
     e42:	4640      	mov	r0, r8
     e44:	f7ff fbb4 	bl	5b0 <move_window>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2451
		if (res != FR_OK) break;
     e48:	4681      	mov	r9, r0
     e4a:	2800      	cmp	r0, #0
     e4c:	d17d      	bne.n	f4a <dir_find+0x132>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2452
		c = dp->dir[DIR_Name];
     e4e:	69e5      	ldr	r5, [r4, #28]
     e50:	782e      	ldrb	r6, [r5, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2453
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
     e52:	2e00      	cmp	r6, #0
     e54:	d07d      	beq.n	f52 <dir_find+0x13a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2455
		dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;
     e56:	7aea      	ldrb	r2, [r5, #11]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2456
		if (c == DDEM || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
     e58:	2ee5      	cmp	r6, #229	; 0xe5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2455
		dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;
     e5a:	f002 033f 	and.w	r3, r2, #63	; 0x3f
     e5e:	71a3      	strb	r3, [r4, #6]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2456
		if (c == DDEM || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
     e60:	d003      	beq.n	e6a <dir_find+0x52>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2456 (discriminator 1)
     e62:	0710      	lsls	r0, r2, #28
     e64:	d504      	bpl.n	e70 <dir_find+0x58>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2456 (discriminator 2)
     e66:	2b0f      	cmp	r3, #15
     e68:	d004      	beq.n	e74 <dir_find+0x5c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2472
				ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
     e6a:	9b00      	ldr	r3, [sp, #0]
     e6c:	62e3      	str	r3, [r4, #44]	; 0x2c
     e6e:	e052      	b.n	f16 <dir_find+0xfe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2459
			if (a == AM_LFN) {			/* An LFN entry is found */
     e70:	2b0f      	cmp	r3, #15
     e72:	d157      	bne.n	f24 <dir_find+0x10c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2460
				if (!(dp->fn[NSFLAG] & NS_NOLFN)) {
     e74:	f894 302b 	ldrb.w	r3, [r4, #43]	; 0x2b
     e78:	0659      	lsls	r1, r3, #25
     e7a:	d442      	bmi.n	f02 <dir_find+0xea>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2461
					if (c & LLEF) {		/* Is it start of LFN sequence? */
     e7c:	0672      	lsls	r2, r6, #25
     e7e:	d548      	bpl.n	f12 <dir_find+0xfa>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2464
						dp->blk_ofs = dp->dptr;	/* Start offset of LFN */
     e80:	6923      	ldr	r3, [r4, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2462
						sum = dp->dir[LDIR_Chksum];
     e82:	f895 a00d 	ldrb.w	sl, [r5, #13]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2464
						dp->blk_ofs = dp->dptr;	/* Start offset of LFN */
     e86:	62e3      	str	r3, [r4, #44]	; 0x2c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2463
						c &= (BYTE)~LLEF; ord = c;	/* LFN start order */
     e88:	f006 06bf 	and.w	r6, r6, #191	; 0xbf
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2467 (discriminator 1)
					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0xFF;
     e8c:	7b6b      	ldrb	r3, [r5, #13]
     e8e:	4553      	cmp	r3, sl
     e90:	d141      	bne.n	f16 <dir_find+0xfe>
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585 (discriminator 3)
	rv = rv << 8 | ptr[0];
     e92:	7eea      	ldrb	r2, [r5, #27]
     e94:	7eab      	ldrb	r3, [r5, #26]
cmp_lfn():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1880 (discriminator 3)
	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO */
     e96:	ea53 2302 	orrs.w	r3, r3, r2, lsl #8
     e9a:	d13c      	bne.n	f16 <dir_find+0xfe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1882
	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
     e9c:	782f      	ldrb	r7, [r5, #0]
dir_find():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2467
					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0xFF;
     e9e:	f8d8 b00c 	ldr.w	fp, [r8, #12]
cmp_lfn():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1882
	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
     ea2:	f007 073f 	and.w	r7, r7, #63	; 0x3f
     ea6:	1e7b      	subs	r3, r7, #1
     ea8:	270d      	movs	r7, #13
     eaa:	435f      	muls	r7, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1884
	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
     eac:	4b2a      	ldr	r3, [pc, #168]	; (f58 <dir_find+0x140>)
     eae:	2101      	movs	r1, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1885
		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
     eb0:	f813 2b01 	ldrb.w	r2, [r3], #1
     eb4:	18a8      	adds	r0, r5, r2
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     eb6:	f815 9002 	ldrb.w	r9, [r5, r2]
     eba:	7840      	ldrb	r0, [r0, #1]
     ebc:	ea49 2900 	orr.w	r9, r9, r0, lsl #8
cmp_lfn():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1886
		if (wc != 0) {
     ec0:	b359      	cbz	r1, f1a <dir_find+0x102>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1887
			if (i >= FF_MAX_LFN || ff_wtoupper(uc) != ff_wtoupper(lfnbuf[i++])) {	/* Compare it */
     ec2:	2f7f      	cmp	r7, #127	; 0x7f
     ec4:	9303      	str	r3, [sp, #12]
     ec6:	d826      	bhi.n	f16 <dir_find+0xfe>
     ec8:	4648      	mov	r0, r9
     eca:	f000 fdd1 	bl	1a70 <ff_wtoupper>
     ece:	1c7a      	adds	r2, r7, #1
     ed0:	9002      	str	r0, [sp, #8]
     ed2:	f83b 0017 	ldrh.w	r0, [fp, r7, lsl #1]
     ed6:	9201      	str	r2, [sp, #4]
     ed8:	f000 fdca 	bl	1a70 <ff_wtoupper>
     edc:	9902      	ldr	r1, [sp, #8]
     ede:	4281      	cmp	r1, r0
     ee0:	d119      	bne.n	f16 <dir_find+0xfe>
     ee2:	9a01      	ldr	r2, [sp, #4]
     ee4:	9b03      	ldr	r3, [sp, #12]
ld_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     ee6:	4649      	mov	r1, r9
cmp_lfn():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1887
			if (i >= FF_MAX_LFN || ff_wtoupper(uc) != ff_wtoupper(lfnbuf[i++])) {	/* Compare it */
     ee8:	4617      	mov	r7, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1884
	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
     eea:	4a1c      	ldr	r2, [pc, #112]	; (f5c <dir_find+0x144>)
     eec:	429a      	cmp	r2, r3
     eee:	d1df      	bne.n	eb0 <dir_find+0x98>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1896
	if ((dir[LDIR_Ord] & LLEF) && wc && lfnbuf[i]) return 0;	/* Last segment matched but different length */
     ef0:	782b      	ldrb	r3, [r5, #0]
     ef2:	065b      	lsls	r3, r3, #25
     ef4:	d503      	bpl.n	efe <dir_find+0xe6>
     ef6:	b111      	cbz	r1, efe <dir_find+0xe6>
     ef8:	f83b 3017 	ldrh.w	r3, [fp, r7, lsl #1]
     efc:	b95b      	cbnz	r3, f16 <dir_find+0xfe>
dir_find():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2467 (discriminator 5)
					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0xFF;
     efe:	3e01      	subs	r6, #1
     f00:	b2f7      	uxtb	r7, r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2479
		res = dir_next(dp, 0);	/* Next entry */
     f02:	2100      	movs	r1, #0
     f04:	4620      	mov	r0, r4
     f06:	f7ff ff32 	bl	d6e <dir_next>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2480
	} while (res == FR_OK);
     f0a:	4681      	mov	r9, r0
     f0c:	2800      	cmp	r0, #0
     f0e:	d097      	beq.n	e40 <dir_find+0x28>
     f10:	e01b      	b.n	f4a <dir_find+0x132>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2467
					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0xFF;
     f12:	42b7      	cmp	r7, r6
     f14:	d0ba      	beq.n	e8c <dir_find+0x74>
     f16:	27ff      	movs	r7, #255	; 0xff
     f18:	e7f3      	b.n	f02 <dir_find+0xea>
cmp_lfn():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1892
			if (uc != 0xFFFF) return 0;		/* Check filler */
     f1a:	f64f 72ff 	movw	r2, #65535	; 0xffff
     f1e:	4591      	cmp	r9, r2
     f20:	d0e3      	beq.n	eea <dir_find+0xd2>
     f22:	e7f8      	b.n	f16 <dir_find+0xfe>
dir_find():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2470
				if (ord == 0 && sum == sum_sfn(dp->dir)) break;	/* LFN matched? */
     f24:	b927      	cbnz	r7, f30 <dir_find+0x118>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2470 (discriminator 1)
     f26:	4628      	mov	r0, r5
     f28:	f7ff fadb 	bl	4e2 <sum_sfn>
     f2c:	4550      	cmp	r0, sl
     f2e:	d00c      	beq.n	f4a <dir_find+0x132>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2471
				if (!(dp->fn[NSFLAG] & NS_LOSS) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* SFN matched? */
     f30:	f894 902b 	ldrb.w	r9, [r4, #43]	; 0x2b
     f34:	f019 0901 	ands.w	r9, r9, #1
     f38:	d197      	bne.n	e6a <dir_find+0x52>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2471 (discriminator 1)
     f3a:	220b      	movs	r2, #11
     f3c:	f104 0120 	add.w	r1, r4, #32
     f40:	4628      	mov	r0, r5
     f42:	f7ff fab5 	bl	4b0 <mem_cmp>
     f46:	2800      	cmp	r0, #0
     f48:	d18f      	bne.n	e6a <dir_find+0x52>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2483
}
     f4a:	4648      	mov	r0, r9
     f4c:	b005      	add	sp, #20
     f4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2453
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
     f52:	f04f 0904 	mov.w	r9, #4
     f56:	e7f8      	b.n	f4a <dir_find+0x132>
     f58:	0000a76c 	.word	0x0000a76c
     f5c:	0000a779 	.word	0x0000a779

00000f60 <follow_path>:
follow_path():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3028
{
     f60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
     f64:	b085      	sub	sp, #20
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3031
	FATFS *fs = dp->obj.fs;
     f66:	6803      	ldr	r3, [r0, #0]
     f68:	9301      	str	r3, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3028
{
     f6a:	4606      	mov	r6, r0
     f6c:	468a      	mov	sl, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3040 (discriminator 1)
		while (*path == '/' || *path == '\\') path++;	/* Strip heading separator */
     f6e:	f811 3b01 	ldrb.w	r3, [r1], #1
     f72:	2b2f      	cmp	r3, #47	; 0x2f
     f74:	d0fa      	beq.n	f6c <follow_path+0xc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3040 (discriminator 3)
     f76:	2b5c      	cmp	r3, #92	; 0x5c
     f78:	d0f8      	beq.n	f6c <follow_path+0xc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3041
		dp->obj.sclust = 0;					/* Start from root directory */
     f7a:	2100      	movs	r1, #0
     f7c:	60b1      	str	r1, [r6, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3060
	if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
     f7e:	f89a 3000 	ldrb.w	r3, [sl]
     f82:	2b1f      	cmp	r3, #31
     f84:	f200 80cd 	bhi.w	1122 <follow_path+0x1c2>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3061
		dp->fn[NSFLAG] = NS_NONAME;
     f88:	2380      	movs	r3, #128	; 0x80
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3062
		res = dir_sdi(dp, 0);
     f8a:	4630      	mov	r0, r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3061
		dp->fn[NSFLAG] = NS_NONAME;
     f8c:	f886 302b 	strb.w	r3, [r6, #43]	; 0x2b
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3102
}
     f90:	b005      	add	sp, #20
     f92:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3062
		res = dir_sdi(dp, 0);
     f96:	f7ff bd9d 	b.w	ad4 <dir_sdi>
create_name():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2848
		if (wc < 0x80 && chk_chr("\"*:<>\?|\x7F", wc)) return FR_INVALID_NAME;	/* Reject illegal characters for LFN */
     f9a:	287f      	cmp	r0, #127	; 0x7f
     f9c:	d807      	bhi.n	fae <follow_path+0x4e>
     f9e:	4a92      	ldr	r2, [pc, #584]	; (11e8 <follow_path+0x288>)
chk_chr():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:695
	while (*str && *str != chr) str++;
     fa0:	f812 3b01 	ldrb.w	r3, [r2], #1
     fa4:	b11b      	cbz	r3, fae <follow_path+0x4e>
     fa6:	4298      	cmp	r0, r3
     fa8:	d1fa      	bne.n	fa0 <follow_path+0x40>
create_name():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2892
				cf |= NS_LOSS | NS_LFN;
     faa:	2006      	movs	r0, #6
     fac:	e04e      	b.n	104c <follow_path+0xec>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2849
		if (di >= FF_MAX_LFN) return FR_INVALID_NAME;	/* Reject too long name */
     fae:	2d80      	cmp	r5, #128	; 0x80
     fb0:	d0fb      	beq.n	faa <follow_path+0x4a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2850
		lfn[di++] = wc;					/* Store the Unicode character */
     fb2:	f82b 0015 	strh.w	r0, [fp, r5, lsl #1]
     fb6:	3501      	adds	r5, #1
     fb8:	e0b7      	b.n	112a <follow_path+0x1ca>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2868
		wc = lfn[di - 1];
     fba:	f833 2d02 	ldrh.w	r2, [r3, #-2]!
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2869
		if (wc != ' ' && wc != '.') break;
     fbe:	2a20      	cmp	r2, #32
     fc0:	d002      	beq.n	fc8 <follow_path+0x68>
     fc2:	2a2e      	cmp	r2, #46	; 0x2e
     fc4:	f040 80d4 	bne.w	1170 <follow_path+0x210>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2870
		di--;
     fc8:	3d01      	subs	r5, #1
     fca:	e0ce      	b.n	116a <follow_path+0x20a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2876
	for (si = 0; lfn[si] == ' '; si++) ;	/* Remove leading spaces */
     fcc:	4602      	mov	r2, r0
     fce:	e0d7      	b.n	1180 <follow_path+0x220>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2890
		if (i >= ni || si == di) {		/* End of field? */
     fd0:	45c8      	cmp	r8, r9
     fd2:	d205      	bcs.n	fe0 <follow_path+0x80>
     fd4:	42ab      	cmp	r3, r5
     fd6:	d149      	bne.n	106c <follow_path+0x10c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2891
			if (ni == 11) {				/* Name extension overflow? */
     fd8:	f1b9 0f0b 	cmp.w	r9, #11
     fdc:	d13e      	bne.n	105c <follow_path+0xfc>
     fde:	e002      	b.n	fe6 <follow_path+0x86>
     fe0:	f1b9 0f0b 	cmp.w	r9, #11
     fe4:	d135      	bne.n	1052 <follow_path+0xf2>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2892
				cf |= NS_LOSS | NS_LFN;
     fe6:	f044 0403 	orr.w	r4, r4, #3
     fea:	f04f 090b 	mov.w	r9, #11
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2939
	if (dp->fn[0] == DDEM) dp->fn[0] = RDDEM;	/* If the first character collides with DDEM, replace it with RDDEM */
     fee:	f896 3020 	ldrb.w	r3, [r6, #32]
     ff2:	2be5      	cmp	r3, #229	; 0xe5
     ff4:	bf04      	itt	eq
     ff6:	2305      	moveq	r3, #5
     ff8:	f886 3020 	strbeq.w	r3, [r6, #32]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2941
	if (ni == 8) b <<= 2;				/* Shift capital flags if no extension */
     ffc:	f1b9 0f08 	cmp.w	r9, #8
    1000:	bf04      	itt	eq
    1002:	00bf      	lsleq	r7, r7, #2
    1004:	b2ff      	uxtbeq	r7, r7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2942
	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03) cf |= NS_LFN;	/* LFN entry needs to be created if composite capitals */
    1006:	f007 030c 	and.w	r3, r7, #12
    100a:	2b0c      	cmp	r3, #12
    100c:	d003      	beq.n	1016 <follow_path+0xb6>
    100e:	f007 0303 	and.w	r3, r7, #3
    1012:	2b03      	cmp	r3, #3
    1014:	d101      	bne.n	101a <follow_path+0xba>
    1016:	f044 0402 	orr.w	r4, r4, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2943
	if (!(cf & NS_LFN)) {				/* When LFN is in 8.3 format without extended character, NT flags are created */
    101a:	07a5      	lsls	r5, r4, #30
    101c:	d407      	bmi.n	102e <follow_path+0xce>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2944
		if (b & 0x01) cf |= NS_EXT;		/* NT flag (Extension has small capital letters only) */
    101e:	07f8      	lsls	r0, r7, #31
    1020:	bf48      	it	mi
    1022:	f044 0410 	orrmi.w	r4, r4, #16
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2945
		if (b & 0x04) cf |= NS_BODY;	/* NT flag (Body has small capital letters only) */
    1026:	0779      	lsls	r1, r7, #29
    1028:	bf48      	it	mi
    102a:	f044 0408 	orrmi.w	r4, r4, #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2948
	dp->fn[NSFLAG] = cf;	/* SFN is created into dp->fn[] */
    102e:	f886 402b 	strb.w	r4, [r6, #43]	; 0x2b
follow_path():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3068
			res = dir_find(dp);				/* Find an object with the segment name */
    1032:	4630      	mov	r0, r6
    1034:	f7ff fef0 	bl	e18 <dir_find>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3069
			ns = dp->fn[NSFLAG];
    1038:	f896 302b 	ldrb.w	r3, [r6, #43]	; 0x2b
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3070
			if (res != FR_OK) {				/* Failed to find the object */
    103c:	2800      	cmp	r0, #0
    103e:	d05f      	beq.n	1100 <follow_path+0x1a0>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3071
				if (res == FR_NO_FILE) {	/* Object is not found */
    1040:	2804      	cmp	r0, #4
    1042:	d103      	bne.n	104c <follow_path+0xec>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3077
						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
    1044:	f013 0f04 	tst.w	r3, #4
    1048:	bf08      	it	eq
    104a:	2005      	moveq	r0, #5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3102
}
    104c:	b005      	add	sp, #20
    104e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
create_name():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2895
			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Name body overflow? */
    1052:	42ab      	cmp	r3, r5
    1054:	d002      	beq.n	105c <follow_path+0xfc>
    1056:	f044 0403 	orr.w	r4, r4, #3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2896
			if (si > di) break;						/* No name extension? */
    105a:	d8c8      	bhi.n	fee <follow_path+0x8e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2897
			si = di; i = 8; ni = 11; b <<= 2;		/* Enter name extension */
    105c:	00bf      	lsls	r7, r7, #2
    105e:	b2ff      	uxtb	r7, r7
    1060:	462b      	mov	r3, r5
    1062:	f04f 090b 	mov.w	r9, #11
    1066:	f04f 0808 	mov.w	r8, #8
    106a:	e0b9      	b.n	11e0 <follow_path+0x280>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2901
		if (wc >= 0x80) {	/* Is this a non-ASCII character? */
    106c:	287f      	cmp	r0, #127	; 0x7f
    106e:	d912      	bls.n	1096 <follow_path+0x136>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2902
			cf |= NS_LFN;	/* LFN entry needs to be created */
    1070:	f044 0202 	orr.w	r2, r4, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2911
			wc = ff_uni2oem(wc, CODEPAGE);			/* Unicode ==> ANSI/OEM code */
    1074:	f240 11b5 	movw	r1, #437	; 0x1b5
    1078:	9303      	str	r3, [sp, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2902
			cf |= NS_LFN;	/* LFN entry needs to be created */
    107a:	9202      	str	r2, [sp, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2911
			wc = ff_uni2oem(wc, CODEPAGE);			/* Unicode ==> ANSI/OEM code */
    107c:	f000 fcc4 	bl	1a08 <ff_uni2oem>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2912
			if (wc & 0x80) wc = ExCvt[wc & 0x7F];	/* Convert extended character to upper (SBCS) */
    1080:	f010 0f80 	tst.w	r0, #128	; 0x80
    1084:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    1088:	d00f      	beq.n	10aa <follow_path+0x14a>
    108a:	f000 007f 	and.w	r0, r0, #127	; 0x7f
    108e:	4957      	ldr	r1, [pc, #348]	; (11ec <follow_path+0x28c>)
    1090:	5c08      	ldrb	r0, [r1, r0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2925
			if (wc == 0 || chk_chr("+,;=[]", wc)) {	/* Replace illegal characters for SFN if needed */
    1092:	4614      	mov	r4, r2
    1094:	b128      	cbz	r0, 10a2 <follow_path+0x142>
chk_chr():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:695
	while (*str && *str != chr) str++;
    1096:	4956      	ldr	r1, [pc, #344]	; (11f0 <follow_path+0x290>)
    1098:	f811 2b01 	ldrb.w	r2, [r1], #1
    109c:	b1f2      	cbz	r2, 10dc <follow_path+0x17c>
    109e:	4282      	cmp	r2, r0
    10a0:	d1fa      	bne.n	1098 <follow_path+0x138>
create_name():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2926
				wc = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
    10a2:	f044 0403 	orr.w	r4, r4, #3
    10a6:	205f      	movs	r0, #95	; 0x5f
    10a8:	e011      	b.n	10ce <follow_path+0x16e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2918
		if (wc >= 0x100) {				/* Is this a DBC? */
    10aa:	28ff      	cmp	r0, #255	; 0xff
    10ac:	d9f1      	bls.n	1092 <follow_path+0x132>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2919
			if (i >= ni - 1) {			/* Field overflow? */
    10ae:	f109 31ff 	add.w	r1, r9, #4294967295	; 0xffffffff
    10b2:	4588      	cmp	r8, r1
    10b4:	d303      	bcc.n	10be <follow_path+0x15e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2920
				cf |= NS_LOSS | NS_LFN;
    10b6:	f044 0403 	orr.w	r4, r4, #3
    10ba:	46c8      	mov	r8, r9
    10bc:	e090      	b.n	11e0 <follow_path+0x280>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2923
			dp->fn[i++] = (BYTE)(wc >> 8);	/* Put 1st byte */
    10be:	eb06 0108 	add.w	r1, r6, r8
    10c2:	0a04      	lsrs	r4, r0, #8
    10c4:	f881 4020 	strb.w	r4, [r1, #32]
    10c8:	f108 0801 	add.w	r8, r8, #1
    10cc:	4614      	mov	r4, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2936
		dp->fn[i++] = (BYTE)wc;
    10ce:	eb06 0208 	add.w	r2, r6, r8
    10d2:	f108 0801 	add.w	r8, r8, #1
    10d6:	f882 0020 	strb.w	r0, [r2, #32]
    10da:	e081      	b.n	11e0 <follow_path+0x280>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2928
				if (IsUpper(wc)) {		/* ASCII upper case? */
    10dc:	f1a0 0241 	sub.w	r2, r0, #65	; 0x41
    10e0:	b292      	uxth	r2, r2
    10e2:	2a19      	cmp	r2, #25
    10e4:	d802      	bhi.n	10ec <follow_path+0x18c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2929
					b |= 2;
    10e6:	f047 0702 	orr.w	r7, r7, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2931
				if (IsLower(wc)) {		/* ASCII lower case? */
    10ea:	e7f0      	b.n	10ce <follow_path+0x16e>
    10ec:	f1a0 0261 	sub.w	r2, r0, #97	; 0x61
    10f0:	b292      	uxth	r2, r2
    10f2:	2a19      	cmp	r2, #25
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2932
					b |= 1; wc -= 0x20;
    10f4:	bf9e      	ittt	ls
    10f6:	3820      	subls	r0, #32
    10f8:	f047 0701 	orrls.w	r7, r7, #1
    10fc:	b280      	uxthls	r0, r0
    10fe:	e7e6      	b.n	10ce <follow_path+0x16e>
follow_path():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3082
			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
    1100:	075a      	lsls	r2, r3, #29
    1102:	d4a3      	bmi.n	104c <follow_path+0xec>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3084
			if (!(dp->obj.attr & AM_DIR)) {		/* It is not a sub-directory and cannot follow */
    1104:	79b3      	ldrb	r3, [r6, #6]
    1106:	06db      	lsls	r3, r3, #27
    1108:	d56c      	bpl.n	11e4 <follow_path+0x284>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3096
				dp->obj.sclust = ld_clust(fs, fs->win + dp->dptr % SS(fs));	/* Open next directory */
    110a:	9b01      	ldr	r3, [sp, #4]
    110c:	f103 0138 	add.w	r1, r3, #56	; 0x38
    1110:	6933      	ldr	r3, [r6, #16]
    1112:	f3c3 0308 	ubfx	r3, r3, #0, #9
    1116:	4419      	add	r1, r3
    1118:	9b01      	ldr	r3, [sp, #4]
    111a:	7818      	ldrb	r0, [r3, #0]
    111c:	f7ff fa0e 	bl	53c <ld_clust.isra.3>
    1120:	60b0      	str	r0, [r6, #8]
create_name():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2841
	p = *path; lfn = dp->obj.fs->lfnbuf; di = 0;
    1122:	6833      	ldr	r3, [r6, #0]
    1124:	f8d3 b00c 	ldr.w	fp, [r3, #12]
    1128:	2500      	movs	r5, #0
tchar2uni():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:799
	wc = (BYTE)*p++;			/* Get a byte */
    112a:	f81a 0b01 	ldrb.w	r0, [sl], #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:805
	if (wc != 0) {
    112e:	b168      	cbz	r0, 114c <follow_path+0x1ec>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:806
		wc = ff_oem2uni(wc, CODEPAGE);	/* ANSI/OEM ==> Unicode */
    1130:	f240 11b5 	movw	r1, #437	; 0x1b5
    1134:	f000 fc88 	bl	1a48 <ff_oem2uni>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:807
		if (wc == 0) return 0xFFFFFFFF;	/* Invalid code? */
    1138:	2800      	cmp	r0, #0
    113a:	f43f af36 	beq.w	faa <follow_path+0x4a>
create_name():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2847
		if (wc < ' ' || wc == '/' || wc == '\\') break;	/* Break if end of the path or a separator is found */
    113e:	281f      	cmp	r0, #31
    1140:	d904      	bls.n	114c <follow_path+0x1ec>
    1142:	282f      	cmp	r0, #47	; 0x2f
    1144:	d002      	beq.n	114c <follow_path+0x1ec>
    1146:	285c      	cmp	r0, #92	; 0x5c
    1148:	f47f af27 	bne.w	f9a <follow_path+0x3a>
    114c:	4652      	mov	r2, sl
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2852
	while (*p == '/' || *p == '\\') p++;	/* Skip duplicated separators if exist */
    114e:	7813      	ldrb	r3, [r2, #0]
    1150:	2b2f      	cmp	r3, #47	; 0x2f
    1152:	4692      	mov	sl, r2
    1154:	f102 0201 	add.w	r2, r2, #1
    1158:	d0f9      	beq.n	114e <follow_path+0x1ee>
    115a:	2b5c      	cmp	r3, #92	; 0x5c
    115c:	d0f7      	beq.n	114e <follow_path+0x1ee>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2854
	cf = (wc < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
    115e:	2820      	cmp	r0, #32
    1160:	bf34      	ite	cc
    1162:	2404      	movcc	r4, #4
    1164:	2400      	movcs	r4, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2867
	while (di) {						/* Snip off trailing spaces and dots if exist */
    1166:	eb0b 0345 	add.w	r3, fp, r5, lsl #1
    116a:	2d00      	cmp	r5, #0
    116c:	f47f af25 	bne.w	fba <follow_path+0x5a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2872
	lfn[di] = 0;							/* LFN is created into the working buffer */
    1170:	2200      	movs	r2, #0
    1172:	eb0b 0345 	add.w	r3, fp, r5, lsl #1
    1176:	f82b 2015 	strh.w	r2, [fp, r5, lsl #1]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2873
	if (di == 0) return FR_INVALID_NAME;	/* Reject null name */
    117a:	2d00      	cmp	r5, #0
    117c:	f43f af15 	beq.w	faa <follow_path+0x4a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2876
	for (si = 0; lfn[si] == ' '; si++) ;	/* Remove leading spaces */
    1180:	f83b 1012 	ldrh.w	r1, [fp, r2, lsl #1]
    1184:	2920      	cmp	r1, #32
    1186:	f102 0001 	add.w	r0, r2, #1
    118a:	f43f af1f 	beq.w	fcc <follow_path+0x6c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2877
	if (si > 0 || lfn[si] == '.') cf |= NS_LOSS | NS_LFN;	/* Is there any leading space or dot? */
    118e:	b90a      	cbnz	r2, 1194 <follow_path+0x234>
    1190:	292e      	cmp	r1, #46	; 0x2e
    1192:	d101      	bne.n	1198 <follow_path+0x238>
    1194:	f044 0403 	orr.w	r4, r4, #3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2878
	while (di > 0 && lfn[di - 1] != '.') di--;	/* Find last dot (di<=si: no extension) */
    1198:	f833 1d02 	ldrh.w	r1, [r3, #-2]!
    119c:	292e      	cmp	r1, #46	; 0x2e
    119e:	d001      	beq.n	11a4 <follow_path+0x244>
    11a0:	3d01      	subs	r5, #1
    11a2:	d1f9      	bne.n	1198 <follow_path+0x238>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2880
	mem_set(dp->fn, ' ', 11);
    11a4:	f106 0320 	add.w	r3, r6, #32
mem_set():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:670
	BYTE *d = (BYTE*)dst;
    11a8:	f106 012b 	add.w	r1, r6, #43	; 0x2b
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:673
		*d++ = (BYTE)val;
    11ac:	2020      	movs	r0, #32
    11ae:	f803 0b01 	strb.w	r0, [r3], #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:674
	} while (--cnt);
    11b2:	4299      	cmp	r1, r3
    11b4:	d1fb      	bne.n	11ae <follow_path+0x24e>
create_name():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2881
	i = b = 0; ni = 8;
    11b6:	f04f 0800 	mov.w	r8, #0
    11ba:	f04f 0908 	mov.w	r9, #8
    11be:	4647      	mov	r7, r8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2883
		wc = lfn[si++];					/* Get an LFN character */
    11c0:	f83b 0012 	ldrh.w	r0, [fp, r2, lsl #1]
    11c4:	1c53      	adds	r3, r2, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2884
		if (wc == 0) break;				/* Break on end of the LFN */
    11c6:	2800      	cmp	r0, #0
    11c8:	f43f af11 	beq.w	fee <follow_path+0x8e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2885
		if (wc == ' ' || (wc == '.' && si != di)) {	/* Remove embedded spaces and dots */
    11cc:	2820      	cmp	r0, #32
    11ce:	d005      	beq.n	11dc <follow_path+0x27c>
    11d0:	282e      	cmp	r0, #46	; 0x2e
    11d2:	f47f aefd 	bne.w	fd0 <follow_path+0x70>
    11d6:	42ab      	cmp	r3, r5
    11d8:	f43f aefe 	beq.w	fd8 <follow_path+0x78>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2886
			cf |= NS_LOSS | NS_LFN;
    11dc:	f044 0403 	orr.w	r4, r4, #3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2936
		dp->fn[i++] = (BYTE)wc;
    11e0:	461a      	mov	r2, r3
    11e2:	e7ed      	b.n	11c0 <follow_path+0x260>
follow_path():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3077
						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
    11e4:	2005      	movs	r0, #5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3101
	return res;
    11e6:	e731      	b.n	104c <follow_path+0xec>
    11e8:	0000a783 	.word	0x0000a783
    11ec:	0000a6ec 	.word	0x0000a6ec
    11f0:	0000a78c 	.word	0x0000a78c

000011f4 <sync_fs>:
sync_fs():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1098
{
    11f4:	b570      	push	{r4, r5, r6, lr}
sync_window():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1049
	if (fs->wflag) {	/* Is the disk access window dirty */
    11f6:	78c3      	ldrb	r3, [r0, #3]
sync_fs():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1098
{
    11f8:	4604      	mov	r4, r0
sync_window():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1049
	if (fs->wflag) {	/* Is the disk access window dirty */
    11fa:	2b00      	cmp	r3, #0
    11fc:	d145      	bne.n	128a <sync_fs+0x96>
sync_fs():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1104
		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {	/* FAT32: Update FSInfo sector if needed */
    11fe:	7823      	ldrb	r3, [r4, #0]
    1200:	2b03      	cmp	r3, #3
    1202:	d139      	bne.n	1278 <sync_fs+0x84>
    1204:	7923      	ldrb	r3, [r4, #4]
    1206:	2b01      	cmp	r3, #1
    1208:	d136      	bne.n	1278 <sync_fs+0x84>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1106
			mem_set(fs->win, 0, sizeof fs->win);
    120a:	f104 0638 	add.w	r6, r4, #56	; 0x38
mem_set():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:670
	BYTE *d = (BYTE*)dst;
    120e:	f504 720e 	add.w	r2, r4, #568	; 0x238
    1212:	4633      	mov	r3, r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:673
		*d++ = (BYTE)val;
    1214:	2500      	movs	r5, #0
    1216:	f803 5b01 	strb.w	r5, [r3], #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:674
	} while (--cnt);
    121a:	4293      	cmp	r3, r2
    121c:	d1fb      	bne.n	1216 <sync_fs+0x22>
st_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:620
	*ptr++ = (BYTE)val; val >>= 8;
    121e:	2355      	movs	r3, #85	; 0x55
    1220:	f884 3236 	strb.w	r3, [r4, #566]	; 0x236
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:621
	*ptr++ = (BYTE)val;
    1224:	23aa      	movs	r3, #170	; 0xaa
    1226:	f884 3237 	strb.w	r3, [r4, #567]	; 0x237
st_dword():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:626
	*ptr++ = (BYTE)val; val >>= 8;
    122a:	2352      	movs	r3, #82	; 0x52
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:629
	*ptr++ = (BYTE)val;
    122c:	2241      	movs	r2, #65	; 0x41
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:626
	*ptr++ = (BYTE)val; val >>= 8;
    122e:	2172      	movs	r1, #114	; 0x72
    1230:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:627
	*ptr++ = (BYTE)val; val >>= 8;
    1234:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:628
	*ptr++ = (BYTE)val; val >>= 8;
    1238:	2361      	movs	r3, #97	; 0x61
    123a:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:629
	*ptr++ = (BYTE)val;
    123e:	f884 203b 	strb.w	r2, [r4, #59]	; 0x3b
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:628
	*ptr++ = (BYTE)val; val >>= 8;
    1242:	f884 221e 	strb.w	r2, [r4, #542]	; 0x21e
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:629
	*ptr++ = (BYTE)val;
    1246:	f884 321f 	strb.w	r3, [r4, #543]	; 0x21f
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:626
	*ptr++ = (BYTE)val; val >>= 8;
    124a:	f884 121c 	strb.w	r1, [r4, #540]	; 0x21c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:627
	*ptr++ = (BYTE)val; val >>= 8;
    124e:	f884 121d 	strb.w	r1, [r4, #541]	; 0x21d
sync_fs():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1110
			st_dword(fs->win + FSI_Free_Count, fs->free_clst);
    1252:	f504 7008 	add.w	r0, r4, #544	; 0x220
    1256:	69a1      	ldr	r1, [r4, #24]
    1258:	f7ff f922 	bl	4a0 <st_dword>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1111
			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
    125c:	6961      	ldr	r1, [r4, #20]
    125e:	f504 7009 	add.w	r0, r4, #548	; 0x224
    1262:	f7ff f91d 	bl	4a0 <st_dword>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1113
			fs->winsect = fs->volbase + 1;
    1266:	6a62      	ldr	r2, [r4, #36]	; 0x24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1114
			disk_write(fs->pdrv, fs->win, fs->winsect, 1);
    1268:	7860      	ldrb	r0, [r4, #1]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1113
			fs->winsect = fs->volbase + 1;
    126a:	3201      	adds	r2, #1
    126c:	6362      	str	r2, [r4, #52]	; 0x34
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1114
			disk_write(fs->pdrv, fs->win, fs->winsect, 1);
    126e:	2301      	movs	r3, #1
    1270:	4631      	mov	r1, r6
    1272:	f000 fc6a 	bl	1b4a <disk_write>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1115
			fs->fsi_flag = 0;
    1276:	7125      	strb	r5, [r4, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1118
		if (disk_ioctl(fs->pdrv, CTRL_SYNC, 0) != RES_OK) res = FR_DISK_ERR;
    1278:	2200      	movs	r2, #0
    127a:	4611      	mov	r1, r2
    127c:	7860      	ldrb	r0, [r4, #1]
    127e:	f000 fc78 	bl	1b72 <disk_ioctl>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1102
	res = sync_window(fs);
    1282:	3000      	adds	r0, #0
    1284:	bf18      	it	ne
    1286:	2001      	movne	r0, #1
    1288:	e003      	b.n	1292 <sync_fs+0x9e>
sync_window():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1102
    128a:	f7ff f971 	bl	570 <sync_window.part.6>
sync_fs():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1103
	if (res == FR_OK) {
    128e:	2800      	cmp	r0, #0
    1290:	d0b5      	beq.n	11fe <sync_fs+0xa>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1122
}
    1292:	bd70      	pop	{r4, r5, r6, pc}

00001294 <dir_register>:
dir_register():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2496
{
    1294:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2504
	if (dp->fn[NSFLAG] & (NS_DOT | NS_NONAME)) return FR_INVALID_NAME;	/* Check name validity */
    1298:	f890 402b 	ldrb.w	r4, [r0, #43]	; 0x2b
    129c:	f014 04a0 	ands.w	r4, r4, #160	; 0xa0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2496
{
    12a0:	b089      	sub	sp, #36	; 0x24
    12a2:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2504
	if (dp->fn[NSFLAG] & (NS_DOT | NS_NONAME)) return FR_INVALID_NAME;	/* Check name validity */
    12a4:	f040 808f 	bne.w	13c6 <dir_register+0x132>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2498
	FATFS *fs = dp->obj.fs;
    12a8:	6806      	ldr	r6, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2505
	for (nlen = 0; fs->lfnbuf[nlen]; nlen++) ;	/* Get lfn length */
    12aa:	68f2      	ldr	r2, [r6, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2505 (discriminator 1)
    12ac:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
    12b0:	2b00      	cmp	r3, #0
    12b2:	d166      	bne.n	1382 <dir_register+0xee>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2539
	mem_cpy(sn, dp->fn, 12);
    12b4:	f105 0720 	add.w	r7, r5, #32
mem_cpy():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:659
	if (cnt != 0) {
    12b8:	220c      	movs	r2, #12
    12ba:	4639      	mov	r1, r7
    12bc:	a805      	add	r0, sp, #20
    12be:	f7ff f934 	bl	52a <mem_cpy.part.0>
dir_register():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2540
	if (sn[NSFLAG] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
    12c2:	f89d 301f 	ldrb.w	r3, [sp, #31]
    12c6:	07db      	lsls	r3, r3, #31
    12c8:	f140 8086 	bpl.w	13d8 <dir_register+0x144>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2541
		dp->fn[NSFLAG] = NS_NOLFN;		/* Find only SFN */
    12cc:	2340      	movs	r3, #64	; 0x40
gen_numname():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2004
				if (sr & 0x10000) sr ^= 0x11021;
    12ce:	f8df 8244 	ldr.w	r8, [pc, #580]	; 1514 <dir_register+0x280>
dir_register():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2541
		dp->fn[NSFLAG] = NS_NOLFN;		/* Find only SFN */
    12d2:	f885 302b 	strb.w	r3, [r5, #43]	; 0x2b
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2542
		for (n = 1; n < 100; n++) {
    12d6:	f04f 0a01 	mov.w	sl, #1
mem_cpy():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2543
			gen_numname(dp->fn, sn, fs->lfnbuf, n);	/* Generate a numbered name */
    12da:	220b      	movs	r2, #11
    12dc:	a905      	add	r1, sp, #20
    12de:	4638      	mov	r0, r7
dir_register():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2543
    12e0:	f8d6 900c 	ldr.w	r9, [r6, #12]
mem_cpy():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:659
	if (cnt != 0) {
    12e4:	f7ff f921 	bl	52a <mem_cpy.part.0>
gen_numname():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1997
	if (seq > 5) {	/* In case of many collisions, generate a hash number instead of sequential number */
    12e8:	f1ba 0f05 	cmp.w	sl, #5
    12ec:	d95a      	bls.n	13a4 <dir_register+0x110>
    12ee:	f1a9 0102 	sub.w	r1, r9, #2
    12f2:	4653      	mov	r3, sl
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1999
		while (*lfn) {	/* Create a CRC as hash value */
    12f4:	f831 2f02 	ldrh.w	r2, [r1, #2]!
    12f8:	2a00      	cmp	r2, #0
    12fa:	d144      	bne.n	1386 <dir_register+0xf2>
    12fc:	f10d 0013 	add.w	r0, sp, #19
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1997
	if (seq > 5) {	/* In case of many collisions, generate a hash number instead of sequential number */
    1300:	2207      	movs	r2, #7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2013
		c = (BYTE)((seq % 16) + '0');
    1302:	f003 0c0f 	and.w	ip, r3, #15
    1306:	f10c 0130 	add.w	r1, ip, #48	; 0x30
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2014
		if (c > '9') c += 7;
    130a:	2939      	cmp	r1, #57	; 0x39
    130c:	bf88      	it	hi
    130e:	f10c 0137 	addhi.w	r1, ip, #55	; 0x37
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2017
	} while (seq);
    1312:	2b0f      	cmp	r3, #15
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2015
		ns[i--] = c;
    1314:	f800 1901 	strb.w	r1, [r0], #-1
    1318:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2016
		seq /= 16;
    131c:	ea4f 1113 	mov.w	r1, r3, lsr #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2017
	} while (seq);
    1320:	d842      	bhi.n	13a8 <dir_register+0x114>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2018
	ns[i] = '~';
    1322:	ab08      	add	r3, sp, #32
    1324:	4413      	add	r3, r2
    1326:	217e      	movs	r1, #126	; 0x7e
    1328:	f803 1c14 	strb.w	r1, [r3, #-20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2021
	for (j = 0; j < i && dst[j] != ' '; j++) {
    132c:	f105 011f 	add.w	r1, r5, #31
    1330:	4608      	mov	r0, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2018
	ns[i] = '~';
    1332:	2300      	movs	r3, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2021
	for (j = 0; j < i && dst[j] != ' '; j++) {
    1334:	4293      	cmp	r3, r2
    1336:	d006      	beq.n	1346 <dir_register+0xb2>
    1338:	f810 cf01 	ldrb.w	ip, [r0, #1]!
    133c:	f1bc 0f20 	cmp.w	ip, #32
    1340:	f103 0e01 	add.w	lr, r3, #1
    1344:	d132      	bne.n	13ac <dir_register+0x118>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2028
		dst[j++] = (i < 8) ? ns[i++] : ' ';
    1346:	2a07      	cmp	r2, #7
    1348:	bf9c      	itt	ls
    134a:	a808      	addls	r0, sp, #32
    134c:	1880      	addls	r0, r0, r2
    134e:	f103 0301 	add.w	r3, r3, #1
    1352:	bf96      	itet	ls
    1354:	f810 0c14 	ldrbls.w	r0, [r0, #-20]
    1358:	2020      	movhi	r0, #32
    135a:	3201      	addls	r2, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2029
	} while (j < 8);
    135c:	2b07      	cmp	r3, #7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2028
		dst[j++] = (i < 8) ? ns[i++] : ' ';
    135e:	54c8      	strb	r0, [r1, r3]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2029
	} while (j < 8);
    1360:	d9f1      	bls.n	1346 <dir_register+0xb2>
dir_register():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2544
			res = dir_find(dp);				/* Check if the name collides with existing SFN */
    1362:	4628      	mov	r0, r5
    1364:	f7ff fd58 	bl	e18 <dir_find>
    1368:	4681      	mov	r9, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2545
			if (res != FR_OK) break;
    136a:	bb78      	cbnz	r0, 13cc <dir_register+0x138>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2542 (discriminator 2)
		for (n = 1; n < 100; n++) {
    136c:	f10a 0a01 	add.w	sl, sl, #1
    1370:	f1ba 0f64 	cmp.w	sl, #100	; 0x64
    1374:	d1b1      	bne.n	12da <dir_register+0x46>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2547
		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
    1376:	f04f 0907 	mov.w	r9, #7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2588
}
    137a:	4648      	mov	r0, r9
    137c:	b009      	add	sp, #36	; 0x24
    137e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2505 (discriminator 3)
	for (nlen = 0; fs->lfnbuf[nlen]; nlen++) ;	/* Get lfn length */
    1382:	3401      	adds	r4, #1
    1384:	e792      	b.n	12ac <dir_register+0x18>
gen_numname():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1999
		while (*lfn) {	/* Create a CRC as hash value */
    1386:	2010      	movs	r0, #16
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2002
				sr = (sr << 1) + (wc & 1);
    1388:	f002 0c01 	and.w	ip, r2, #1
    138c:	eb0c 0343 	add.w	r3, ip, r3, lsl #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2004
				if (sr & 0x10000) sr ^= 0x11021;
    1390:	f413 3f80 	tst.w	r3, #65536	; 0x10000
    1394:	bf18      	it	ne
    1396:	ea83 0308 	eorne.w	r3, r3, r8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2001
			for (i = 0; i < 16; i++) {
    139a:	3801      	subs	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2003
				wc >>= 1;
    139c:	ea4f 0252 	mov.w	r2, r2, lsr #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2001
			for (i = 0; i < 16; i++) {
    13a0:	d1f2      	bne.n	1388 <dir_register+0xf4>
    13a2:	e7a7      	b.n	12f4 <dir_register+0x60>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1997
	if (seq > 5) {	/* In case of many collisions, generate a hash number instead of sequential number */
    13a4:	4653      	mov	r3, sl
    13a6:	e7a9      	b.n	12fc <dir_register+0x68>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2016
		seq /= 16;
    13a8:	460b      	mov	r3, r1
    13aa:	e7aa      	b.n	1302 <dir_register+0x6e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2021
	for (j = 0; j < i && dst[j] != ' '; j++) {
    13ac:	4673      	mov	r3, lr
    13ae:	e7c1      	b.n	1334 <dir_register+0xa0>
dir_alloc():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1815
				n = 0;					/* Not a blank entry. Restart to search */
    13b0:	4680      	mov	r8, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1817
			res = dir_next(dp, 1);
    13b2:	2101      	movs	r1, #1
    13b4:	4628      	mov	r0, r5
    13b6:	f7ff fcda 	bl	d6e <dir_next>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1818
		} while (res == FR_OK);	/* Next entry with table stretch enabled */
    13ba:	4681      	mov	r9, r0
    13bc:	b310      	cbz	r0, 1404 <dir_register+0x170>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1821
	if (res == FR_NO_FILE) res = FR_DENIED;	/* No directory entry to allocate */
    13be:	f1b9 0f04 	cmp.w	r9, #4
    13c2:	d0d8      	beq.n	1376 <dir_register+0xe2>
    13c4:	e7d9      	b.n	137a <dir_register+0xe6>
dir_register():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2504
	if (dp->fn[NSFLAG] & (NS_DOT | NS_NONAME)) return FR_INVALID_NAME;	/* Check name validity */
    13c6:	f04f 0906 	mov.w	r9, #6
    13ca:	e7d6      	b.n	137a <dir_register+0xe6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2548
		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
    13cc:	2804      	cmp	r0, #4
    13ce:	d1d4      	bne.n	137a <dir_register+0xe6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2549
		dp->fn[NSFLAG] = sn[NSFLAG];
    13d0:	f89d 301f 	ldrb.w	r3, [sp, #31]
    13d4:	f885 302b 	strb.w	r3, [r5, #43]	; 0x2b
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2553
	nent = (sn[NSFLAG] & NS_LFN) ? (nlen + 12) / 13 + 1 : 1;	/* Number of entries to allocate */
    13d8:	f89d 301f 	ldrb.w	r3, [sp, #31]
dir_alloc():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1799
	FATFS *fs = dp->obj.fs;
    13dc:	f8d5 a000 	ldr.w	sl, [r5]
dir_register():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2553
	nent = (sn[NSFLAG] & NS_LFN) ? (nlen + 12) / 13 + 1 : 1;	/* Number of entries to allocate */
    13e0:	079b      	lsls	r3, r3, #30
    13e2:	bf48      	it	mi
    13e4:	340c      	addmi	r4, #12
dir_alloc():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1802
	res = dir_sdi(dp, 0);
    13e6:	f04f 0100 	mov.w	r1, #0
    13ea:	4628      	mov	r0, r5
dir_register():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2553
	nent = (sn[NSFLAG] & NS_LFN) ? (nlen + 12) / 13 + 1 : 1;	/* Number of entries to allocate */
    13ec:	bf49      	itett	mi
    13ee:	230d      	movmi	r3, #13
    13f0:	2401      	movpl	r4, #1
    13f2:	fbb4 f4f3 	udivmi	r4, r4, r3
    13f6:	3401      	addmi	r4, #1
dir_alloc():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1802
	res = dir_sdi(dp, 0);
    13f8:	f7ff fb6c 	bl	ad4 <dir_sdi>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1803
	if (res == FR_OK) {
    13fc:	4681      	mov	r9, r0
    13fe:	2800      	cmp	r0, #0
    1400:	d1dd      	bne.n	13be <dir_register+0x12a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1804
		n = 0;
    1402:	4680      	mov	r8, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1806
			res = move_window(fs, dp->sect);
    1404:	69a9      	ldr	r1, [r5, #24]
    1406:	4650      	mov	r0, sl
    1408:	f7ff f8d2 	bl	5b0 <move_window>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1807
			if (res != FR_OK) break;
    140c:	4681      	mov	r9, r0
    140e:	2800      	cmp	r0, #0
    1410:	d1d5      	bne.n	13be <dir_register+0x12a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1811
			if (dp->dir[DIR_Name] == DDEM || dp->dir[DIR_Name] == 0) {
    1412:	69eb      	ldr	r3, [r5, #28]
    1414:	781b      	ldrb	r3, [r3, #0]
    1416:	2be5      	cmp	r3, #229	; 0xe5
    1418:	d001      	beq.n	141e <dir_register+0x18a>
    141a:	2b00      	cmp	r3, #0
    141c:	d1c8      	bne.n	13b0 <dir_register+0x11c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1813
				if (++n == nent) break;	/* A block of contiguous free entries is found */
    141e:	f108 0801 	add.w	r8, r8, #1
    1422:	4544      	cmp	r4, r8
    1424:	d1c5      	bne.n	13b2 <dir_register+0x11e>
dir_register():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2555
	if (res == FR_OK && --nent) {	/* Set LFN entry if needed */
    1426:	3c01      	subs	r4, #1
    1428:	d055      	beq.n	14d6 <dir_register+0x242>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2556
		res = dir_sdi(dp, dp->dptr - nent * SZDIRE);
    142a:	6929      	ldr	r1, [r5, #16]
    142c:	4628      	mov	r0, r5
    142e:	eba1 1144 	sub.w	r1, r1, r4, lsl #5
    1432:	f7ff fb4f 	bl	ad4 <dir_sdi>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2557
		if (res == FR_OK) {
    1436:	4681      	mov	r9, r0
    1438:	2800      	cmp	r0, #0
    143a:	d19e      	bne.n	137a <dir_register+0xe6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2558
			sum = sum_sfn(dp->fn);	/* Checksum value of the SFN tied to the LFN */
    143c:	4638      	mov	r0, r7
    143e:	f7ff f850 	bl	4e2 <sum_sfn>
put_lfn():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1964
		if (wc != 0xFFFF) wc = lfn[i++];	/* Get an effective character */
    1442:	f64f 78ff 	movw	r8, #65535	; 0xffff
dir_register():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2558
			sum = sum_sfn(dp->fn);	/* Checksum value of the SFN tied to the LFN */
    1446:	9001      	str	r0, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2560
				res = move_window(fs, dp->sect);
    1448:	69a9      	ldr	r1, [r5, #24]
    144a:	4630      	mov	r0, r6
    144c:	f7ff f8b0 	bl	5b0 <move_window>
    1450:	4681      	mov	r9, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2561
				if (res != FR_OK) break;
    1452:	2800      	cmp	r0, #0
    1454:	d191      	bne.n	137a <dir_register+0xe6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2562
				put_lfn(fs->lfnbuf, dp->dir, (BYTE)nent, sum);
    1456:	69eb      	ldr	r3, [r5, #28]
put_lfn():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1956
	dir[LDIR_Chksum] = sum;			/* Set checksum */
    1458:	9a01      	ldr	r2, [sp, #4]
dir_register():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2562
				put_lfn(fs->lfnbuf, dp->dir, (BYTE)nent, sum);
    145a:	f8d6 e00c 	ldr.w	lr, [r6, #12]
put_lfn():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1956
	dir[LDIR_Chksum] = sum;			/* Set checksum */
    145e:	735a      	strb	r2, [r3, #13]
    1460:	b2e1      	uxtb	r1, r4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1957
	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
    1462:	f04f 020f 	mov.w	r2, #15
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1961
	i = (ord - 1) * 13;				/* Get offset in the LFN working buffer */
    1466:	f04f 0c0d 	mov.w	ip, #13
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1957
	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
    146a:	72da      	strb	r2, [r3, #11]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1958
	dir[LDIR_Type] = 0;
    146c:	f8df a0a8 	ldr.w	sl, [pc, #168]	; 1518 <dir_register+0x284>
    1470:	7318      	strb	r0, [r3, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1961
	i = (ord - 1) * 13;				/* Get offset in the LFN working buffer */
    1472:	1e4a      	subs	r2, r1, #1
    1474:	fb0c f202 	mul.w	r2, ip, r2
st_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:620
	*ptr++ = (BYTE)val; val >>= 8;
    1478:	7698      	strb	r0, [r3, #26]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:621
	*ptr++ = (BYTE)val;
    147a:	76d8      	strb	r0, [r3, #27]
put_lfn():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1962
	s = wc = 0;
    147c:	4684      	mov	ip, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1964
		if (wc != 0xFFFF) wc = lfn[i++];	/* Get an effective character */
    147e:	4540      	cmp	r0, r8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1965
		st_word(dir + LfnOfs[s], wc);		/* Put it */
    1480:	f81a 9b01 	ldrb.w	r9, [sl], #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1964
		if (wc != 0xFFFF) wc = lfn[i++];	/* Get an effective character */
    1484:	bf18      	it	ne
    1486:	f83e 0012 	ldrhne.w	r0, [lr, r2, lsl #1]
st_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:620
	*ptr++ = (BYTE)val; val >>= 8;
    148a:	f803 0009 	strb.w	r0, [r3, r9]
put_lfn():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1965
		st_word(dir + LfnOfs[s], wc);		/* Put it */
    148e:	eb03 0b09 	add.w	fp, r3, r9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1967
	} while (++s < 13);
    1492:	f10c 0c01 	add.w	ip, ip, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1964
		if (wc != 0xFFFF) wc = lfn[i++];	/* Get an effective character */
    1496:	bf18      	it	ne
    1498:	3201      	addne	r2, #1
st_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:620
	*ptr++ = (BYTE)val; val >>= 8;
    149a:	ea4f 2910 	mov.w	r9, r0, lsr #8
put_lfn():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1966
		if (wc == 0) wc = 0xFFFF;		/* Padding characters for left locations */
    149e:	2800      	cmp	r0, #0
    14a0:	bf08      	it	eq
    14a2:	4640      	moveq	r0, r8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1967
	} while (++s < 13);
    14a4:	f1bc 0f0d 	cmp.w	ip, #13
st_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:621
	*ptr++ = (BYTE)val;
    14a8:	f88b 9001 	strb.w	r9, [fp, #1]
put_lfn():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1967
	} while (++s < 13);
    14ac:	d1e7      	bne.n	147e <dir_register+0x1ea>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1968
	if (wc == 0xFFFF || !lfn[i]) ord |= LLEF;	/* Last LFN part is the start of LFN sequence */
    14ae:	4540      	cmp	r0, r8
    14b0:	d002      	beq.n	14b8 <dir_register+0x224>
    14b2:	f83e 2012 	ldrh.w	r2, [lr, r2, lsl #1]
    14b6:	b90a      	cbnz	r2, 14bc <dir_register+0x228>
    14b8:	f041 0140 	orr.w	r1, r1, #64	; 0x40
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1969
	dir[LDIR_Ord] = ord;			/* Set the LFN order */
    14bc:	7019      	strb	r1, [r3, #0]
dir_register():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2563
				fs->wflag = 1;
    14be:	2301      	movs	r3, #1
    14c0:	70f3      	strb	r3, [r6, #3]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2564
				res = dir_next(dp, 0);	/* Next entry */
    14c2:	2100      	movs	r1, #0
    14c4:	4628      	mov	r0, r5
    14c6:	f7ff fc52 	bl	d6e <dir_next>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2565
			} while (res == FR_OK && --nent);
    14ca:	4681      	mov	r9, r0
    14cc:	2800      	cmp	r0, #0
    14ce:	f47f af54 	bne.w	137a <dir_register+0xe6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2565 (discriminator 1)
    14d2:	3c01      	subs	r4, #1
    14d4:	d1b8      	bne.n	1448 <dir_register+0x1b4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2576
		res = move_window(fs, dp->sect);
    14d6:	69a9      	ldr	r1, [r5, #24]
    14d8:	4630      	mov	r0, r6
    14da:	f7ff f869 	bl	5b0 <move_window>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2577
		if (res == FR_OK) {
    14de:	4681      	mov	r9, r0
    14e0:	2800      	cmp	r0, #0
    14e2:	f47f af4a 	bne.w	137a <dir_register+0xe6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2578
			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
    14e6:	69eb      	ldr	r3, [r5, #28]
mem_set():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:673
		*d++ = (BYTE)val;
    14e8:	4601      	mov	r1, r0
    14ea:	f103 0220 	add.w	r2, r3, #32
    14ee:	f803 1b01 	strb.w	r1, [r3], #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:674
	} while (--cnt);
    14f2:	4293      	cmp	r3, r2
    14f4:	d1fb      	bne.n	14ee <dir_register+0x25a>
mem_cpy():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:659
	if (cnt != 0) {
    14f6:	220b      	movs	r2, #11
    14f8:	4639      	mov	r1, r7
    14fa:	69e8      	ldr	r0, [r5, #28]
    14fc:	f7ff f815 	bl	52a <mem_cpy.part.0>
dir_register():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2581
			dp->dir[DIR_NTres] = dp->fn[NSFLAG] & (NS_BODY | NS_EXT);	/* Put NT flag */
    1500:	f895 302b 	ldrb.w	r3, [r5, #43]	; 0x2b
    1504:	69ea      	ldr	r2, [r5, #28]
    1506:	f003 0318 	and.w	r3, r3, #24
    150a:	7313      	strb	r3, [r2, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:2583
			fs->wflag = 1;
    150c:	2301      	movs	r3, #1
    150e:	70f3      	strb	r3, [r6, #3]
    1510:	e733      	b.n	137a <dir_register+0xe6>
    1512:	bf00      	nop
    1514:	00011021 	.word	0x00011021
    1518:	0000a76c 	.word	0x0000a76c

0000151c <f_mount>:
f_mount():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3502
FRESULT f_mount (
	FATFS* fs,			/* Pointer to the filesystem object (NULL:unmount)*/
	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
	BYTE opt			/* Mode option 0:Do not mount (delayed mount), 1:Mount immediately */
)
{
    151c:	b5f0      	push	{r4, r5, r6, r7, lr}
    151e:	b085      	sub	sp, #20
    1520:	e9cd 1000 	strd	r1, r0, [sp]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3510
	FRESULT res;
	const TCHAR *rp = path;


	/* Get logical drive number */
	vol = get_ldnumber(&rp);
    1524:	a803      	add	r0, sp, #12
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3502
{
    1526:	4614      	mov	r4, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3506
	const TCHAR *rp = path;
    1528:	9103      	str	r1, [sp, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3510
	vol = get_ldnumber(&rp);
    152a:	f7fe ffe9 	bl	500 <get_ldnumber>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3511
	if (vol < 0) return FR_INVALID_DRIVE;
    152e:	1e05      	subs	r5, r0, #0
    1530:	db28      	blt.n	1584 <f_mount+0x68>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3512
	cfs = FatFs[vol];					/* Pointer to fs object */
    1532:	4f15      	ldr	r7, [pc, #84]	; (1588 <f_mount+0x6c>)
    1534:	f857 6025 	ldr.w	r6, [r7, r5, lsl #2]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3514

	if (cfs) {
    1538:	b14e      	cbz	r6, 154e <f_mount+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3519
#if FF_FS_LOCK != 0
		clear_lock(cfs);
#endif
#if FF_FS_REENTRANT						/* Discard sync object of the current volume */
		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
    153a:	6930      	ldr	r0, [r6, #16]
    153c:	f000 fa50 	bl	19e0 <ff_del_syncobj>
    1540:	b918      	cbnz	r0, 154a <f_mount+0x2e>
    1542:	2402      	movs	r4, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3536 (discriminator 1)

	if (opt == 0) return FR_OK;			/* Do not mount now, it will be mounted later */

	res = find_volume(&path, &fs, 0);	/* Force mounted the volume */
	LEAVE_FF(fs, res);
}
    1544:	4620      	mov	r0, r4
    1546:	b005      	add	sp, #20
    1548:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3521
		cfs->fs_type = 0;				/* Clear old fs object */
    154a:	2300      	movs	r3, #0
    154c:	7033      	strb	r3, [r6, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3524
	if (fs) {
    154e:	9901      	ldr	r1, [sp, #4]
    1550:	b979      	cbnz	r1, 1572 <f_mount+0x56>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3530
	FatFs[vol] = fs;					/* Register new fs object */
    1552:	9b01      	ldr	r3, [sp, #4]
    1554:	f847 3025 	str.w	r3, [r7, r5, lsl #2]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3532
	if (opt == 0) return FR_OK;			/* Do not mount now, it will be mounted later */
    1558:	2c00      	cmp	r4, #0
    155a:	d0f3      	beq.n	1544 <f_mount+0x28>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3534
	res = find_volume(&path, &fs, 0);	/* Force mounted the volume */
    155c:	a901      	add	r1, sp, #4
    155e:	2200      	movs	r2, #0
    1560:	4668      	mov	r0, sp
    1562:	f7ff f881 	bl	668 <find_volume>
    1566:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3535
	LEAVE_FF(fs, res);
    1568:	4601      	mov	r1, r0
    156a:	9801      	ldr	r0, [sp, #4]
    156c:	f7ff fb9e 	bl	cac <unlock_fs>
    1570:	e7e8      	b.n	1544 <f_mount+0x28>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3525
		fs->fs_type = 0;				/* Clear new fs object */
    1572:	2300      	movs	r3, #0
    1574:	f801 3b10 	strb.w	r3, [r1], #16
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3527
		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
    1578:	b2e8      	uxtb	r0, r5
    157a:	f000 fa23 	bl	19c4 <ff_cre_syncobj>
    157e:	2800      	cmp	r0, #0
    1580:	d1e7      	bne.n	1552 <f_mount+0x36>
    1582:	e7de      	b.n	1542 <f_mount+0x26>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3511
	if (vol < 0) return FR_INVALID_DRIVE;
    1584:	240b      	movs	r4, #11
    1586:	e7dd      	b.n	1544 <f_mount+0x28>
    1588:	10000328 	.word	0x10000328

0000158c <f_open>:
f_open():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3550
FRESULT f_open (
	FIL* fp,			/* Pointer to the blank file object */
	const TCHAR* path,	/* Pointer to the file name */
	BYTE mode			/* Access mode and file open mode flags */
)
{
    158c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    1590:	b0d0      	sub	sp, #320	; 0x140
    1592:	4617      	mov	r7, r2
    1594:	9101      	str	r1, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3561
	FSIZE_t ofs;
#endif
	DEF_NAMBUF


	if (!fp) return FR_INVALID_OBJECT;
    1596:	4604      	mov	r4, r0
    1598:	2800      	cmp	r0, #0
    159a:	f000 80db 	beq.w	1754 <f_open+0x1c8>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3564

	/* Get logical drive number */
	mode &= FF_FS_READONLY ? FA_READ : FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_CREATE_NEW | FA_OPEN_ALWAYS | FA_OPEN_APPEND;
    159e:	f002 053f 	and.w	r5, r2, #63	; 0x3f
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3565
	res = find_volume(&path, &fs, mode);
    15a2:	462a      	mov	r2, r5
    15a4:	a902      	add	r1, sp, #8
    15a6:	a801      	add	r0, sp, #4
    15a8:	f7ff f85e 	bl	668 <find_volume>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3566
	if (res == FR_OK) {
    15ac:	4606      	mov	r6, r0
    15ae:	2800      	cmp	r0, #0
    15b0:	d14b      	bne.n	164a <f_open+0xbe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3567
		dj.obj.fs = fs;
    15b2:	9b02      	ldr	r3, [sp, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3569
		INIT_NAMBUF(fs);
		res = follow_path(&dj, path);	/* Follow the file path */
    15b4:	9901      	ldr	r1, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3567
		dj.obj.fs = fs;
    15b6:	9303      	str	r3, [sp, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3568
		INIT_NAMBUF(fs);
    15b8:	aa0f      	add	r2, sp, #60	; 0x3c
    15ba:	60da      	str	r2, [r3, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3569
		res = follow_path(&dj, path);	/* Follow the file path */
    15bc:	a803      	add	r0, sp, #12
    15be:	f7ff fccf 	bl	f60 <follow_path>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3571
#if !FF_FS_READONLY	/* Read/Write configuration */
		if (res == FR_OK) {
    15c2:	b920      	cbnz	r0, 15ce <f_open+0x42>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3572
			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
    15c4:	f99d 3037 	ldrsb.w	r3, [sp, #55]	; 0x37
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3573
				res = FR_INVALID_NAME;
    15c8:	2b00      	cmp	r3, #0
    15ca:	bfb8      	it	lt
    15cc:	2006      	movlt	r0, #6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3582
				res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);		/* Check if the file can be used */
			}
#endif
		}
		/* Create or Open a file */
		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
    15ce:	f017 0f1c 	tst.w	r7, #28
    15d2:	f000 809f 	beq.w	1714 <f_open+0x188>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3583
			if (res != FR_OK) {					/* No file, create new */
    15d6:	2800      	cmp	r0, #0
    15d8:	d042      	beq.n	1660 <f_open+0xd4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3584
				if (res == FR_NO_FILE) {		/* There is no file to open, create a new entry */
    15da:	2804      	cmp	r0, #4
    15dc:	d135      	bne.n	164a <f_open+0xbe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3588
#if FF_FS_LOCK != 0
					res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
#else
					res = dir_register(&dj);
    15de:	a803      	add	r0, sp, #12
    15e0:	f7ff fe58 	bl	1294 <dir_register>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3600
					res = FR_DENIED;
				} else {
					if (mode & FA_CREATE_NEW) res = FR_EXIST;	/* Cannot create as new file */
				}
			}
			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate the file if overwrite mode */
    15e4:	bb88      	cbnz	r0, 164a <f_open+0xbe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3591
				mode |= FA_CREATE_ALWAYS;		/* File is created */
    15e6:	f045 0508 	orr.w	r5, r5, #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3621
					}
				} else
#endif
				{
					/* Set directory entry initial state */
					cl = ld_clust(fs, dj.dir);			/* Get current cluster chain */
    15ea:	9b02      	ldr	r3, [sp, #8]
    15ec:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
    15f0:	7818      	ldrb	r0, [r3, #0]
    15f2:	4641      	mov	r1, r8
    15f4:	f7fe ffa2 	bl	53c <ld_clust.isra.3>
    15f8:	4607      	mov	r7, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3622
					st_dword(dj.dir + DIR_CrtTime, GET_FATTIME());	/* Set created time */
    15fa:	f000 facc 	bl	1b96 <get_fattime>
    15fe:	4601      	mov	r1, r0
    1600:	f108 000e 	add.w	r0, r8, #14
    1604:	f7fe ff4c 	bl	4a0 <st_dword>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3623
					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
    1608:	9b0a      	ldr	r3, [sp, #40]	; 0x28
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3624
					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
    160a:	9802      	ldr	r0, [sp, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3623
					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
    160c:	2220      	movs	r2, #32
    160e:	72da      	strb	r2, [r3, #11]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3624
					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
    1610:	990a      	ldr	r1, [sp, #40]	; 0x28
    1612:	2200      	movs	r2, #0
    1614:	f7fe ffa0 	bl	558 <st_clust.isra.4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3625
					st_dword(dj.dir + DIR_FileSize, 0);
    1618:	9b0a      	ldr	r3, [sp, #40]	; 0x28
st_dword():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:626
	*ptr++ = (BYTE)val; val >>= 8;
    161a:	2200      	movs	r2, #0
    161c:	771a      	strb	r2, [r3, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:627
	*ptr++ = (BYTE)val; val >>= 8;
    161e:	775a      	strb	r2, [r3, #29]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:628
	*ptr++ = (BYTE)val; val >>= 8;
    1620:	779a      	strb	r2, [r3, #30]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:629
	*ptr++ = (BYTE)val;
    1622:	77da      	strb	r2, [r3, #31]
f_open():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3626
					fs->wflag = 1;
    1624:	9b02      	ldr	r3, [sp, #8]
    1626:	2101      	movs	r1, #1
    1628:	70d9      	strb	r1, [r3, #3]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3627
					if (cl != 0) {						/* Remove the cluster chain if exist */
    162a:	b317      	cbz	r7, 1672 <f_open+0xe6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3629
						dw = fs->winsect;
						res = remove_chain(&dj.obj, cl, 0);
    162c:	4639      	mov	r1, r7
    162e:	a803      	add	r0, sp, #12
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3628
						dw = fs->winsect;
    1630:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3629
						res = remove_chain(&dj.obj, cl, 0);
    1634:	f7ff fb03 	bl	c3e <remove_chain>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3630
						if (res == FR_OK) {
    1638:	b938      	cbnz	r0, 164a <f_open+0xbe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3631
							res = move_window(fs, dw);
    163a:	4641      	mov	r1, r8
    163c:	9802      	ldr	r0, [sp, #8]
    163e:	f7fe ffb7 	bl	5b0 <move_window>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3632
							fs->last_clst = cl - 1;		/* Reuse the cluster hole */
    1642:	9b02      	ldr	r3, [sp, #8]
    1644:	3f01      	subs	r7, #1
    1646:	615f      	str	r7, [r3, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3649
						res = FR_DENIED;
					}
				}
			}
		}
		if (res == FR_OK) {
    1648:	b198      	cbz	r0, 1672 <f_open+0xe6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3723 (discriminator 1)
		}

		FREE_NAMBUF();
	}

	if (res != FR_OK) fp->obj.fs = 0;	/* Invalidate file object on error */
    164a:	2300      	movs	r3, #0
    164c:	6023      	str	r3, [r4, #0]
    164e:	4606      	mov	r6, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3725

	LEAVE_FF(fs, res);
    1650:	4631      	mov	r1, r6
    1652:	9802      	ldr	r0, [sp, #8]
    1654:	f7ff fb2a 	bl	cac <unlock_fs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3726 (discriminator 1)
}
    1658:	4630      	mov	r0, r6
    165a:	b050      	add	sp, #320	; 0x140
    165c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3594
				if (dj.obj.attr & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
    1660:	f89d 3012 	ldrb.w	r3, [sp, #18]
    1664:	f013 0f11 	tst.w	r3, #17
    1668:	d15e      	bne.n	1728 <f_open+0x19c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3597
					if (mode & FA_CREATE_NEW) res = FR_EXIST;	/* Cannot create as new file */
    166a:	0778      	lsls	r0, r7, #29
    166c:	d46c      	bmi.n	1748 <f_open+0x1bc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3600
			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate the file if overwrite mode */
    166e:	0739      	lsls	r1, r7, #28
    1670:	d4bb      	bmi.n	15ea <f_open+0x5e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3651
			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
    1672:	f8dd 8008 	ldr.w	r8, [sp, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3652
			fp->dir_ptr = dj.dir;
    1676:	9f0a      	ldr	r7, [sp, #40]	; 0x28
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3651
			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
    1678:	f8d8 3034 	ldr.w	r3, [r8, #52]	; 0x34
    167c:	6223      	str	r3, [r4, #32]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3652
			fp->dir_ptr = dj.dir;
    167e:	6267      	str	r7, [r4, #36]	; 0x24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3680
				fp->obj.sclust = ld_clust(fs, dj.dir);					/* Get object allocation info */
    1680:	f898 0000 	ldrb.w	r0, [r8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3650
			if (mode & FA_CREATE_ALWAYS) mode |= FA_MODIFIED;	/* Set file change flag if created or overwritten */
    1684:	0729      	lsls	r1, r5, #28
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3680
				fp->obj.sclust = ld_clust(fs, dj.dir);					/* Get object allocation info */
    1686:	4639      	mov	r1, r7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3650
			if (mode & FA_CREATE_ALWAYS) mode |= FA_MODIFIED;	/* Set file change flag if created or overwritten */
    1688:	bf48      	it	mi
    168a:	f045 0540 	orrmi.w	r5, r5, #64	; 0x40
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3680
				fp->obj.sclust = ld_clust(fs, dj.dir);					/* Get object allocation info */
    168e:	f7fe ff55 	bl	53c <ld_clust.isra.3>
    1692:	60a0      	str	r0, [r4, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3681
				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
    1694:	f107 001c 	add.w	r0, r7, #28
    1698:	f7fe fefa 	bl	490 <ld_dword>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3687
			fp->obj.id = fs->id;
    169c:	f8b8 3006 	ldrh.w	r3, [r8, #6]
    16a0:	80a3      	strh	r3, [r4, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3694
			mem_set(fp->buf, 0, sizeof fp->buf);	/* Clear sector buffer */
    16a2:	f104 0728 	add.w	r7, r4, #40	; 0x28
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3689
			fp->err = 0;			/* Clear error flag */
    16a6:	2300      	movs	r3, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3681
				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
    16a8:	60e0      	str	r0, [r4, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3686
			fp->obj.fs = fs;	 	/* Validate the file object */
    16aa:	f8c4 8000 	str.w	r8, [r4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3688
			fp->flag = mode;		/* Set file access mode */
    16ae:	7425      	strb	r5, [r4, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3689
			fp->err = 0;			/* Clear error flag */
    16b0:	7463      	strb	r3, [r4, #17]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3690
			fp->sect = 0;			/* Invalidate current data sector */
    16b2:	61e3      	str	r3, [r4, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3691
			fp->fptr = 0;			/* Set file pointer top of the file */
    16b4:	6163      	str	r3, [r4, #20]
mem_set():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:670
	BYTE *d = (BYTE*)dst;
    16b6:	f504 710a 	add.w	r1, r4, #552	; 0x228
    16ba:	463a      	mov	r2, r7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:673
		*d++ = (BYTE)val;
    16bc:	f802 3b01 	strb.w	r3, [r2], #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:674
	} while (--cnt);
    16c0:	4291      	cmp	r1, r2
    16c2:	d1fb      	bne.n	16bc <f_open+0x130>
f_open():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3696
			if ((mode & FA_SEEKEND) && fp->obj.objsize > 0) {	/* Seek to end of file if FA_OPEN_APPEND is specified */
    16c4:	06aa      	lsls	r2, r5, #26
    16c6:	d5c3      	bpl.n	1650 <f_open+0xc4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3696 (discriminator 1)
    16c8:	68e5      	ldr	r5, [r4, #12]
    16ca:	2d00      	cmp	r5, #0
    16cc:	d0c0      	beq.n	1650 <f_open+0xc4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3698
				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
    16ce:	f8b8 800a 	ldrh.w	r8, [r8, #10]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3699
				clst = fp->obj.sclust;				/* Follow the cluster chain */
    16d2:	68a1      	ldr	r1, [r4, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3697
				fp->fptr = fp->obj.objsize;			/* Offset to seek */
    16d4:	6165      	str	r5, [r4, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3698
				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
    16d6:	ea4f 2848 	mov.w	r8, r8, lsl #9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3700 (discriminator 3)
				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
    16da:	45a8      	cmp	r8, r5
    16dc:	d326      	bcc.n	172c <f_open+0x1a0>
    16de:	2000      	movs	r0, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3705
				fp->clust = clst;
    16e0:	61a1      	str	r1, [r4, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3706
				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
    16e2:	2800      	cmp	r0, #0
    16e4:	d1b1      	bne.n	164a <f_open+0xbe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3706 (discriminator 1)
    16e6:	f3c5 0308 	ubfx	r3, r5, #0, #9
    16ea:	2b00      	cmp	r3, #0
    16ec:	d0b0      	beq.n	1650 <f_open+0xc4>
    16ee:	f8dd 8008 	ldr.w	r8, [sp, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3707
					if ((sc = clst2sect(fs, clst)) == 0) {
    16f2:	4640      	mov	r0, r8
    16f4:	f7fe feea 	bl	4cc <clst2sect>
    16f8:	b350      	cbz	r0, 1750 <f_open+0x1c4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3710
						fp->sect = sc + (DWORD)(ofs / SS(fs));
    16fa:	eb00 2255 	add.w	r2, r0, r5, lsr #9
    16fe:	61e2      	str	r2, [r4, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3712
						if (disk_read(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) res = FR_DISK_ERR;
    1700:	2301      	movs	r3, #1
    1702:	4639      	mov	r1, r7
    1704:	f898 0001 	ldrb.w	r0, [r8, #1]
    1708:	f000 fa0b 	bl	1b22 <disk_read>
    170c:	2800      	cmp	r0, #0
    170e:	d09f      	beq.n	1650 <f_open+0xc4>
    1710:	2001      	movs	r0, #1
    1712:	e79a      	b.n	164a <f_open+0xbe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3639
			if (res == FR_OK) {					/* Is the object exsiting? */
    1714:	2800      	cmp	r0, #0
    1716:	d198      	bne.n	164a <f_open+0xbe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3640
				if (dj.obj.attr & AM_DIR) {		/* File open against a directory */
    1718:	f89d 3012 	ldrb.w	r3, [sp, #18]
    171c:	06da      	lsls	r2, r3, #27
    171e:	d415      	bmi.n	174c <f_open+0x1c0>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3643
					if ((mode & FA_WRITE) && (dj.obj.attr & AM_RDO)) { /* Write mode open against R/O file */
    1720:	07bf      	lsls	r7, r7, #30
    1722:	d5a6      	bpl.n	1672 <f_open+0xe6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3643 (discriminator 1)
    1724:	07d8      	lsls	r0, r3, #31
    1726:	d5a4      	bpl.n	1672 <f_open+0xe6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3595
					res = FR_DENIED;
    1728:	2007      	movs	r0, #7
    172a:	e78e      	b.n	164a <f_open+0xbe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3701
					clst = get_fat(&fp->obj, clst);
    172c:	6820      	ldr	r0, [r4, #0]
    172e:	f7ff f977 	bl	a20 <get_fat.isra.10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3702
					if (clst <= 1) res = FR_INT_ERR;
    1732:	2801      	cmp	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3701
					clst = get_fat(&fp->obj, clst);
    1734:	4601      	mov	r1, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3702
					if (clst <= 1) res = FR_INT_ERR;
    1736:	eba5 0508 	sub.w	r5, r5, r8
    173a:	d903      	bls.n	1744 <f_open+0x1b8>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3700
				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
    173c:	1c43      	adds	r3, r0, #1
    173e:	d1cc      	bne.n	16da <f_open+0x14e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3703
					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
    1740:	2001      	movs	r0, #1
    1742:	e7cd      	b.n	16e0 <f_open+0x154>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3702
					if (clst <= 1) res = FR_INT_ERR;
    1744:	2002      	movs	r0, #2
    1746:	e7cb      	b.n	16e0 <f_open+0x154>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3597
					if (mode & FA_CREATE_NEW) res = FR_EXIST;	/* Cannot create as new file */
    1748:	2008      	movs	r0, #8
    174a:	e77e      	b.n	164a <f_open+0xbe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3641
					res = FR_NO_FILE;
    174c:	2004      	movs	r0, #4
    174e:	e77c      	b.n	164a <f_open+0xbe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3708
						res = FR_INT_ERR;
    1750:	2002      	movs	r0, #2
    1752:	e77a      	b.n	164a <f_open+0xbe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3561
	if (!fp) return FR_INVALID_OBJECT;
    1754:	2609      	movs	r6, #9
    1756:	e77f      	b.n	1658 <f_open+0xcc>

00001758 <f_write>:
f_write():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3841
	FIL* fp,			/* Pointer to the file object */
	const void* buff,	/* Pointer to the data to be written */
	UINT btw,			/* Number of bytes to write */
	UINT* bw			/* Pointer to number of bytes written */
)
{
    1758:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    175c:	469b      	mov	fp, r3
    175e:	b085      	sub	sp, #20
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3849
	DWORD clst, sect;
	UINT wcnt, cc, csect;
	const BYTE *wbuff = (const BYTE*)buff;


	*bw = 0;	/* Clear write byte counter */
    1760:	2300      	movs	r3, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3841
{
    1762:	4689      	mov	r9, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3849
	*bw = 0;	/* Clear write byte counter */
    1764:	f8cb 3000 	str.w	r3, [fp]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3850
	res = validate(&fp->obj, &fs);			/* Check validity of the file object */
    1768:	a903      	add	r1, sp, #12
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3841
{
    176a:	4604      	mov	r4, r0
    176c:	4617      	mov	r7, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3850
	res = validate(&fp->obj, &fs);			/* Check validity of the file object */
    176e:	f7ff faa8 	bl	cc2 <validate>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3851
	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
    1772:	4605      	mov	r5, r0
    1774:	b908      	cbnz	r0, 177a <f_write+0x22>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3851 (discriminator 2)
    1776:	7c65      	ldrb	r5, [r4, #17]
    1778:	b10d      	cbz	r5, 177e <f_write+0x26>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3927
			}
#else
			if (fp->sect != sect && 		/* Fill sector cache with file data */
				fp->fptr < fp->obj.objsize &&
				disk_read(fs->pdrv, fp->buf, sect, 1) != RES_OK) {
					ABORT(fs, FR_DISK_ERR);
    177a:	4629      	mov	r1, r5
    177c:	e093      	b.n	18a6 <f_write+0x14e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3852 (discriminator 4)
	if (!(fp->flag & FA_WRITE)) LEAVE_FF(fs, FR_DENIED);	/* Check access mode */
    177e:	7c23      	ldrb	r3, [r4, #16]
    1780:	079a      	lsls	r2, r3, #30
    1782:	d408      	bmi.n	1796 <f_write+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3852 (discriminator 1)
    1784:	2107      	movs	r1, #7
    1786:	9803      	ldr	r0, [sp, #12]
    1788:	f7ff fa90 	bl	cac <unlock_fs>
    178c:	2507      	movs	r5, #7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3947 (discriminator 1)
	}

	fp->flag |= FA_MODIFIED;				/* Set file change flag */

	LEAVE_FF(fs, FR_OK);
}
    178e:	4628      	mov	r0, r5
    1790:	b005      	add	sp, #20
    1792:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3855 (discriminator 2)
	if ((!FF_FS_EXFAT || fs->fs_type != FS_EXFAT) && (DWORD)(fp->fptr + btw) < (DWORD)fp->fptr) {
    1796:	6963      	ldr	r3, [r4, #20]
    1798:	42fb      	cmn	r3, r7
    179a:	d300      	bcc.n	179e <f_write+0x46>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3856
		btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
    179c:	43df      	mvns	r7, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3939
		mem_cpy(fp->buf + fp->fptr % SS(fs), wbuff, wcnt);	/* Fit data to the sector */
    179e:	f104 0328 	add.w	r3, r4, #40	; 0x28
    17a2:	9300      	str	r3, [sp, #0]
    17a4:	e063      	b.n	186e <f_write+0x116>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3876
						clst = create_chain(&fp->obj, fp->clust);	/* Follow or stretch cluster chain on the FAT */
    17a6:	69a1      	ldr	r1, [r4, #24]
    17a8:	e073      	b.n	1892 <f_write+0x13a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3880
				if (clst == 1) ABORT(fs, FR_INT_ERR);
    17aa:	2801      	cmp	r0, #1
    17ac:	d102      	bne.n	17b4 <f_write+0x5c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3880 (discriminator 1)
    17ae:	2502      	movs	r5, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3927
					ABORT(fs, FR_DISK_ERR);
    17b0:	7465      	strb	r5, [r4, #17]
    17b2:	e7e2      	b.n	177a <f_write+0x22>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3881 (discriminator 2)
				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
    17b4:	1c43      	adds	r3, r0, #1
    17b6:	d101      	bne.n	17bc <f_write+0x64>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3927
					ABORT(fs, FR_DISK_ERR);
    17b8:	2501      	movs	r5, #1
    17ba:	e7f9      	b.n	17b0 <f_write+0x58>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3883 (discriminator 2)
				if (fp->obj.sclust == 0) fp->obj.sclust = clst;	/* Set start cluster if the first write */
    17bc:	68a3      	ldr	r3, [r4, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3882 (discriminator 2)
				fp->clust = clst;			/* Update current cluster */
    17be:	61a0      	str	r0, [r4, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3883 (discriminator 2)
				if (fp->obj.sclust == 0) fp->obj.sclust = clst;	/* Set start cluster if the first write */
    17c0:	b903      	cbnz	r3, 17c4 <f_write+0x6c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3883 (discriminator 1)
    17c2:	60a0      	str	r0, [r4, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3888
			if (fp->flag & FA_DIRTY) {		/* Write-back sector cache */
    17c4:	f994 3010 	ldrsb.w	r3, [r4, #16]
    17c8:	2b00      	cmp	r3, #0
    17ca:	da0c      	bge.n	17e6 <f_write+0x8e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3889
				if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
    17cc:	9803      	ldr	r0, [sp, #12]
    17ce:	69e2      	ldr	r2, [r4, #28]
    17d0:	9900      	ldr	r1, [sp, #0]
    17d2:	7840      	ldrb	r0, [r0, #1]
    17d4:	2301      	movs	r3, #1
    17d6:	f000 f9b8 	bl	1b4a <disk_write>
    17da:	2800      	cmp	r0, #0
    17dc:	d1ec      	bne.n	17b8 <f_write+0x60>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3890 (discriminator 2)
				fp->flag &= (BYTE)~FA_DIRTY;
    17de:	7c23      	ldrb	r3, [r4, #16]
    17e0:	f003 037f 	and.w	r3, r3, #127	; 0x7f
    17e4:	7423      	strb	r3, [r4, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3893
			sect = clst2sect(fs, fp->clust);	/* Get current sector */
    17e6:	f8dd a00c 	ldr.w	sl, [sp, #12]
    17ea:	69a1      	ldr	r1, [r4, #24]
    17ec:	4650      	mov	r0, sl
    17ee:	f7fe fe6d 	bl	4cc <clst2sect>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3894
			if (sect == 0) ABORT(fs, FR_INT_ERR);
    17f2:	b920      	cbnz	r0, 17fe <f_write+0xa6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3894 (discriminator 1)
    17f4:	2502      	movs	r5, #2
    17f6:	7465      	strb	r5, [r4, #17]
    17f8:	4629      	mov	r1, r5
    17fa:	4650      	mov	r0, sl
    17fc:	e054      	b.n	18a8 <f_write+0x150>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3895 (discriminator 2)
			sect += csect;
    17fe:	9b01      	ldr	r3, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3897 (discriminator 2)
			if (cc > 0) {					/* Write maximum contiguous sectors directly */
    1800:	f5b7 7f00 	cmp.w	r7, #512	; 0x200
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3895 (discriminator 2)
			sect += csect;
    1804:	eb03 0800 	add.w	r8, r3, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3897 (discriminator 2)
			if (cc > 0) {					/* Write maximum contiguous sectors directly */
    1808:	d351      	bcc.n	18ae <f_write+0x156>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3898
				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
    180a:	9a01      	ldr	r2, [sp, #4]
    180c:	f8ba 300a 	ldrh.w	r3, [sl, #10]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3901
				if (disk_write(fs->pdrv, wbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
    1810:	f89a 0001 	ldrb.w	r0, [sl, #1]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3896
			cc = btw / SS(fs);				/* When remaining bytes >= sector size, */
    1814:	0a7e      	lsrs	r6, r7, #9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3898
				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
    1816:	4432      	add	r2, r6
    1818:	429a      	cmp	r2, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3899
					cc = fs->csize - csect;
    181a:	bf84      	itt	hi
    181c:	9a01      	ldrhi	r2, [sp, #4]
    181e:	1a9e      	subhi	r6, r3, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3901
				if (disk_write(fs->pdrv, wbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
    1820:	4633      	mov	r3, r6
    1822:	4642      	mov	r2, r8
    1824:	4649      	mov	r1, r9
    1826:	f000 f990 	bl	1b4a <disk_write>
    182a:	2800      	cmp	r0, #0
    182c:	d1c4      	bne.n	17b8 <f_write+0x60>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3909 (discriminator 2)
				if (fp->sect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write */
    182e:	69e1      	ldr	r1, [r4, #28]
    1830:	eba1 0108 	sub.w	r1, r1, r8
    1834:	42b1      	cmp	r1, r6
    1836:	d20a      	bcs.n	184e <f_write+0xf6>
mem_cpy():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:659
	if (cnt != 0) {
    1838:	f44f 7200 	mov.w	r2, #512	; 0x200
    183c:	eb09 2141 	add.w	r1, r9, r1, lsl #9
    1840:	9800      	ldr	r0, [sp, #0]
    1842:	f7fe fe72 	bl	52a <mem_cpy.part.0>
f_write():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3911
					fp->flag &= (BYTE)~FA_DIRTY;
    1846:	7c23      	ldrb	r3, [r4, #16]
    1848:	f003 037f 	and.w	r3, r3, #127	; 0x7f
    184c:	7423      	strb	r3, [r4, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3915
				wcnt = SS(fs) * cc;		/* Number of bytes transferred */
    184e:	0276      	lsls	r6, r6, #9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3860
		btw -= wcnt, *bw += wcnt, wbuff += wcnt, fp->fptr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->obj.objsize) {
    1850:	f8db 3000 	ldr.w	r3, [fp]
    1854:	4433      	add	r3, r6
    1856:	f8cb 3000 	str.w	r3, [fp]
    185a:	6963      	ldr	r3, [r4, #20]
    185c:	1bbf      	subs	r7, r7, r6
    185e:	44b1      	add	r9, r6
    1860:	441e      	add	r6, r3
    1862:	68e3      	ldr	r3, [r4, #12]
    1864:	6166      	str	r6, [r4, #20]
    1866:	42b3      	cmp	r3, r6
    1868:	bf2c      	ite	cs
    186a:	60e3      	strcs	r3, [r4, #12]
    186c:	60e6      	strcc	r6, [r4, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3859
	for ( ;  btw;							/* Repeat until all data written */
    186e:	b1af      	cbz	r7, 189c <f_write+0x144>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3861
		if (fp->fptr % SS(fs) == 0) {		/* On the sector boundary? */
    1870:	6963      	ldr	r3, [r4, #20]
    1872:	f3c3 0208 	ubfx	r2, r3, #0, #9
    1876:	bb6a      	cbnz	r2, 18d4 <f_write+0x17c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3862
			csect = (UINT)(fp->fptr / SS(fs)) & (fs->csize - 1);	/* Sector offset in the cluster */
    1878:	9a03      	ldr	r2, [sp, #12]
    187a:	8952      	ldrh	r2, [r2, #10]
    187c:	3a01      	subs	r2, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3863
			if (csect == 0) {				/* On the cluster boundary? */
    187e:	ea12 2253 	ands.w	r2, r2, r3, lsr #9
    1882:	9201      	str	r2, [sp, #4]
    1884:	d19e      	bne.n	17c4 <f_write+0x6c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3864
				if (fp->fptr == 0) {		/* On the top of the file? */
    1886:	2b00      	cmp	r3, #0
    1888:	d18d      	bne.n	17a6 <f_write+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3865
					clst = fp->obj.sclust;	/* Follow from the origin */
    188a:	68a0      	ldr	r0, [r4, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3866
					if (clst == 0) {		/* If no cluster is allocated, */
    188c:	2800      	cmp	r0, #0
    188e:	d18c      	bne.n	17aa <f_write+0x52>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3867
						clst = create_chain(&fp->obj, 0);	/* create a new cluster chain */
    1890:	4601      	mov	r1, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3876
						clst = create_chain(&fp->obj, fp->clust);	/* Follow or stretch cluster chain on the FAT */
    1892:	4620      	mov	r0, r4
    1894:	f7ff f95f 	bl	b56 <create_chain>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3879
				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
    1898:	2800      	cmp	r0, #0
    189a:	d186      	bne.n	17aa <f_write+0x52>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3944
	fp->flag |= FA_MODIFIED;				/* Set file change flag */
    189c:	7c23      	ldrb	r3, [r4, #16]
    189e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    18a2:	7423      	strb	r3, [r4, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3946
	LEAVE_FF(fs, FR_OK);
    18a4:	2100      	movs	r1, #0
    18a6:	9803      	ldr	r0, [sp, #12]
    18a8:	f7ff fa00 	bl	cac <unlock_fs>
    18ac:	e76f      	b.n	178e <f_write+0x36>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3924
			if (fp->sect != sect && 		/* Fill sector cache with file data */
    18ae:	69e3      	ldr	r3, [r4, #28]
    18b0:	4543      	cmp	r3, r8
    18b2:	d00d      	beq.n	18d0 <f_write+0x178>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3924 (discriminator 1)
    18b4:	68e2      	ldr	r2, [r4, #12]
    18b6:	6963      	ldr	r3, [r4, #20]
    18b8:	429a      	cmp	r2, r3
    18ba:	d909      	bls.n	18d0 <f_write+0x178>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3926
				disk_read(fs->pdrv, fp->buf, sect, 1) != RES_OK) {
    18bc:	2301      	movs	r3, #1
    18be:	4642      	mov	r2, r8
    18c0:	9900      	ldr	r1, [sp, #0]
    18c2:	f89a 0001 	ldrb.w	r0, [sl, #1]
    18c6:	f000 f92c 	bl	1b22 <disk_read>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3925
				fp->fptr < fp->obj.objsize &&
    18ca:	2800      	cmp	r0, #0
    18cc:	f47f af74 	bne.w	17b8 <f_write+0x60>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3930
			fp->sect = sect;
    18d0:	f8c4 801c 	str.w	r8, [r4, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3932
		wcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
    18d4:	6960      	ldr	r0, [r4, #20]
mem_cpy():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3932
    18d6:	9b00      	ldr	r3, [sp, #0]
f_write():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3932
    18d8:	f3c0 0008 	ubfx	r0, r0, #0, #9
    18dc:	f5c0 7600 	rsb	r6, r0, #512	; 0x200
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3933
		if (wcnt > btw) wcnt = btw;					/* Clip it by btw if needed */
    18e0:	42be      	cmp	r6, r7
    18e2:	bf28      	it	cs
    18e4:	463e      	movcs	r6, r7
mem_cpy():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:659
	if (cnt != 0) {
    18e6:	4418      	add	r0, r3
    18e8:	4632      	mov	r2, r6
    18ea:	4649      	mov	r1, r9
    18ec:	f7fe fe1d 	bl	52a <mem_cpy.part.0>
f_write():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3940
		fp->flag |= FA_DIRTY;
    18f0:	7c23      	ldrb	r3, [r4, #16]
    18f2:	f063 037f 	orn	r3, r3, #127	; 0x7f
    18f6:	7423      	strb	r3, [r4, #16]
    18f8:	e7aa      	b.n	1850 <f_write+0xf8>

000018fa <f_sync>:
f_sync():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3959
/*-----------------------------------------------------------------------*/

FRESULT f_sync (
	FIL* fp		/* Pointer to the file object */
)
{
    18fa:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3966
	FATFS *fs;
	DWORD tm;
	BYTE *dir;


	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
    18fc:	a901      	add	r1, sp, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3959
{
    18fe:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3966
	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
    1900:	f7ff f9df 	bl	cc2 <validate>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3967
	if (res == FR_OK) {
    1904:	4605      	mov	r5, r0
    1906:	2800      	cmp	r0, #0
    1908:	d143      	bne.n	1992 <f_sync+0x98>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3968
		if (fp->flag & FA_MODIFIED) {	/* Is there any change to the file? */
    190a:	7c23      	ldrb	r3, [r4, #16]
    190c:	f013 0540 	ands.w	r5, r3, #64	; 0x40
    1910:	d03f      	beq.n	1992 <f_sync+0x98>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3970
#if !FF_FS_TINY
			if (fp->flag & FA_DIRTY) {	/* Write-back cached data if needed */
    1912:	061b      	lsls	r3, r3, #24
    1914:	d514      	bpl.n	1940 <f_sync+0x46>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3971
				if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
    1916:	9801      	ldr	r0, [sp, #4]
    1918:	69e2      	ldr	r2, [r4, #28]
    191a:	7840      	ldrb	r0, [r0, #1]
    191c:	2301      	movs	r3, #1
    191e:	f104 0128 	add.w	r1, r4, #40	; 0x28
    1922:	f000 f912 	bl	1b4a <disk_write>
    1926:	b138      	cbz	r0, 1938 <f_sync+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3971 (discriminator 1)
    1928:	2101      	movs	r1, #1
    192a:	9801      	ldr	r0, [sp, #4]
    192c:	f7ff f9be 	bl	cac <unlock_fs>
    1930:	2501      	movs	r5, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4026 (discriminator 1)
			}
		}
	}

	LEAVE_FF(fs, res);
}
    1932:	4628      	mov	r0, r5
    1934:	b003      	add	sp, #12
    1936:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3972 (discriminator 2)
				fp->flag &= (BYTE)~FA_DIRTY;
    1938:	7c23      	ldrb	r3, [r4, #16]
    193a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
    193e:	7423      	strb	r3, [r4, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3976
			tm = GET_FATTIME();				/* Modified time */
    1940:	f000 f929 	bl	1b96 <get_fattime>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4009
				res = move_window(fs, fp->dir_sect);
    1944:	6a21      	ldr	r1, [r4, #32]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3976
			tm = GET_FATTIME();				/* Modified time */
    1946:	4607      	mov	r7, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4009
				res = move_window(fs, fp->dir_sect);
    1948:	9801      	ldr	r0, [sp, #4]
    194a:	f7fe fe31 	bl	5b0 <move_window>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4010
				if (res == FR_OK) {
    194e:	4605      	mov	r5, r0
    1950:	b9f8      	cbnz	r0, 1992 <f_sync+0x98>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4011
					dir = fp->dir_ptr;
    1952:	6a66      	ldr	r6, [r4, #36]	; 0x24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4012
					dir[DIR_Attr] |= AM_ARC;						/* Set archive attribute to indicate that the file has been changed */
    1954:	7af3      	ldrb	r3, [r6, #11]
    1956:	f043 0320 	orr.w	r3, r3, #32
    195a:	72f3      	strb	r3, [r6, #11]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4013
					st_clust(fp->obj.fs, dir, fp->obj.sclust);		/* Update file allocation information  */
    195c:	68a2      	ldr	r2, [r4, #8]
    195e:	6820      	ldr	r0, [r4, #0]
    1960:	4631      	mov	r1, r6
    1962:	f7fe fdf9 	bl	558 <st_clust.isra.4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4014
					st_dword(dir + DIR_FileSize, (DWORD)fp->obj.objsize);	/* Update file size */
    1966:	68e1      	ldr	r1, [r4, #12]
    1968:	f106 001c 	add.w	r0, r6, #28
    196c:	f7fe fd98 	bl	4a0 <st_dword>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4015
					st_dword(dir + DIR_ModTime, tm);				/* Update modified time */
    1970:	4639      	mov	r1, r7
    1972:	f106 0016 	add.w	r0, r6, #22
    1976:	f7fe fd93 	bl	4a0 <st_dword>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4017
					fs->wflag = 1;
    197a:	9801      	ldr	r0, [sp, #4]
st_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:620
	*ptr++ = (BYTE)val; val >>= 8;
    197c:	74b5      	strb	r5, [r6, #18]
f_sync():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4017
					fs->wflag = 1;
    197e:	2301      	movs	r3, #1
st_word():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:621
	*ptr++ = (BYTE)val;
    1980:	74f5      	strb	r5, [r6, #19]
f_sync():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4017
					fs->wflag = 1;
    1982:	70c3      	strb	r3, [r0, #3]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4018
					res = sync_fs(fs);					/* Restore it to the directory */
    1984:	f7ff fc36 	bl	11f4 <sync_fs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4019
					fp->flag &= (BYTE)~FA_MODIFIED;
    1988:	7c23      	ldrb	r3, [r4, #16]
    198a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4018
					res = sync_fs(fs);					/* Restore it to the directory */
    198e:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4019
					fp->flag &= (BYTE)~FA_MODIFIED;
    1990:	7423      	strb	r3, [r4, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4025
	LEAVE_FF(fs, res);
    1992:	4629      	mov	r1, r5
    1994:	9801      	ldr	r0, [sp, #4]
    1996:	f7ff f989 	bl	cac <unlock_fs>
    199a:	e7ca      	b.n	1932 <f_sync+0x38>

0000199c <f_close>:
f_close():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4040
/*-----------------------------------------------------------------------*/

FRESULT f_close (
	FIL* fp		/* Pointer to the file object to be closed */
)
{
    199c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    199e:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4045
	FRESULT res;
	FATFS *fs;

#if !FF_FS_READONLY
	res = f_sync(fp);					/* Flush cached data */
    19a0:	f7ff ffab 	bl	18fa <f_sync>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4046
	if (res == FR_OK)
    19a4:	4604      	mov	r4, r0
    19a6:	b950      	cbnz	r0, 19be <f_close+0x22>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4049
#endif
	{
		res = validate(&fp->obj, &fs);	/* Lock volume */
    19a8:	a901      	add	r1, sp, #4
    19aa:	4628      	mov	r0, r5
    19ac:	f7ff f989 	bl	cc2 <validate>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4050
		if (res == FR_OK) {
    19b0:	4604      	mov	r4, r0
    19b2:	b920      	cbnz	r0, 19be <f_close+0x22>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4055
#if FF_FS_LOCK != 0
			res = dec_lock(fp->obj.lockid);		/* Decrement file open counter */
			if (res == FR_OK) fp->obj.fs = 0;	/* Invalidate file object */
#else
			fp->obj.fs = 0;	/* Invalidate file object */
    19b4:	6028      	str	r0, [r5, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4058
#endif
#if FF_FS_REENTRANT
			unlock_fs(fs, FR_OK);		/* Unlock volume */
    19b6:	4601      	mov	r1, r0
    19b8:	9801      	ldr	r0, [sp, #4]
    19ba:	f7ff f977 	bl	cac <unlock_fs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:4063
#endif
		}
	}
	return res;
}
    19be:	4620      	mov	r0, r4
    19c0:	b003      	add	sp, #12
    19c2:	bd30      	pop	{r4, r5, pc}

000019c4 <ff_cre_syncobj>:
ff_cre_syncobj():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:58

int ff_cre_syncobj (	/* 1:Function succeeded, 0:Could not create the sync object */
	BYTE vol,			/* Corresponding volume (logical drive number) */
	FF_SYNC_t* sobj		/* Pointer to return the created sync object */
)
{
    19c4:	b510      	push	{r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:75
//	*sobj = OSMutexCreate(0, &err);
//	return (int)(err == OS_NO_ERR);

	/* FreeRTOS */
	static StaticSemaphore_t mutex_struct;
	*sobj = xSemaphoreCreateMutexStatic(&mutex_struct);
    19c6:	2001      	movs	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:58
{
    19c8:	460c      	mov	r4, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:75
	*sobj = xSemaphoreCreateMutexStatic(&mutex_struct);
    19ca:	4904      	ldr	r1, [pc, #16]	; (19dc <ff_cre_syncobj+0x18>)
    19cc:	f001 fad2 	bl	2f74 <xQueueCreateMutexStatic>
    19d0:	6020      	str	r0, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:82
	return (int)(*sobj != NULL);

	/* CMSIS-RTOS */
//	*sobj = osMutexCreate(&Mutex[vol]);
//	return (int)(*sobj != NULL);
}
    19d2:	3000      	adds	r0, #0
    19d4:	bf18      	it	ne
    19d6:	2001      	movne	r0, #1
    19d8:	bd10      	pop	{r4, pc}
    19da:	bf00      	nop
    19dc:	10000330 	.word	0x10000330

000019e0 <ff_del_syncobj>:
ff_del_syncobj():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:96
*/

int ff_del_syncobj (	/* 1:Function succeeded, 0:Could not delete due to an error */
	FF_SYNC_t sobj		/* Sync object tied to the logical drive to be deleted */
)
{
    19e0:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:109
//	OS_ERR err;
//	OSMutexDel(sobj, OS_DEL_ALWAYS, &err);
//	return (int)(err == OS_NO_ERR);

	/* FreeRTOS */
    vSemaphoreDelete(sobj);
    19e2:	f001 fd39 	bl	3458 <vQueueDelete>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:114
	return 1;

	/* CMSIS-RTOS */
//	return (int)(osMutexDelete(sobj) == osOK);
}
    19e6:	2001      	movs	r0, #1
    19e8:	bd08      	pop	{r3, pc}

000019ea <ff_req_grant>:
ff_req_grant():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:127
*/

int ff_req_grant (	/* 1:Got a grant to access the volume, 0:Could not get a grant */
	FF_SYNC_t sobj	/* Sync object to wait */
)
{
    19ea:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:140
//	OS_ERR err;
//	OSMutexPend(sobj, FF_FS_TIMEOUT, &err));
//	return (int)(err == OS_NO_ERR);

	/* FreeRTOS */
	return (int)(xSemaphoreTake(sobj, FF_FS_TIMEOUT) == pdTRUE);
    19ec:	f640 31b8 	movw	r1, #3000	; 0xbb8
    19f0:	f001 fc24 	bl	323c <xQueueSemaphoreTake>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:144

	/* CMSIS-RTOS */
//	return (int)(osMutexWait(sobj, FF_FS_TIMEOUT) == osOK);
}
    19f4:	1e43      	subs	r3, r0, #1
    19f6:	4258      	negs	r0, r3
    19f8:	4158      	adcs	r0, r3
    19fa:	bd08      	pop	{r3, pc}

000019fc <ff_rel_grant>:
ff_rel_grant():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:167

	/* uC/OS-II */
//	OSMutexPost(sobj);

	/* FreeRTOS */
	xSemaphoreGive(sobj);
    19fc:	2300      	movs	r3, #0
    19fe:	461a      	mov	r2, r3
    1a00:	4619      	mov	r1, r3
    1a02:	f001 ba09 	b.w	2e18 <xQueueGenericSend>
    1a06:	Address 0x0000000000001a06 is out of bounds.


00001a08 <ff_uni2oem>:
ff_uni2oem():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15235
{
	WCHAR c = 0;
	const WCHAR *p = CVTBL(uc, FF_CODE_PAGE);


	if (uni < 0x80) {	/* ASCII? */
    1a08:	287f      	cmp	r0, #127	; 0x7f
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15230
{
    1a0a:	b510      	push	{r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15235
	if (uni < 0x80) {	/* ASCII? */
    1a0c:	d801      	bhi.n	1a12 <ff_uni2oem+0xa>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15236
		c = (WCHAR)uni;
    1a0e:	b280      	uxth	r0, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15246
			c = (c + 0x80) & 0xFF;
		}
	}

	return c;
}
    1a10:	bd10      	pop	{r4, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15239
		if (uni < 0x10000 && cp == FF_CODE_PAGE) {	/* Is it in BMP and valid code page? */
    1a12:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
    1a16:	d213      	bcs.n	1a40 <ff_uni2oem+0x38>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15239 (discriminator 1)
    1a18:	f240 13b5 	movw	r3, #437	; 0x1b5
    1a1c:	4299      	cmp	r1, r3
    1a1e:	d10f      	bne.n	1a40 <ff_uni2oem+0x38>
    1a20:	4908      	ldr	r1, [pc, #32]	; (1a44 <ff_uni2oem+0x3c>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15239
    1a22:	2200      	movs	r2, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15240 (discriminator 3)
			for (c = 0; c < 0x80 && uni != p[c]; c++) ;
    1a24:	f831 4b02 	ldrh.w	r4, [r1], #2
    1a28:	4284      	cmp	r4, r0
    1a2a:	b293      	uxth	r3, r2
    1a2c:	d103      	bne.n	1a36 <ff_uni2oem+0x2e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15241
			c = (c + 0x80) & 0xFF;
    1a2e:	f103 0080 	add.w	r0, r3, #128	; 0x80
    1a32:	b2c0      	uxtb	r0, r0
    1a34:	e7ec      	b.n	1a10 <ff_uni2oem+0x8>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15240 (discriminator 4)
			for (c = 0; c < 0x80 && uni != p[c]; c++) ;
    1a36:	3201      	adds	r2, #1
    1a38:	2a80      	cmp	r2, #128	; 0x80
    1a3a:	d1f3      	bne.n	1a24 <ff_uni2oem+0x1c>
    1a3c:	4613      	mov	r3, r2
    1a3e:	e7f6      	b.n	1a2e <ff_uni2oem+0x26>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15231
	WCHAR c = 0;
    1a40:	2000      	movs	r0, #0
    1a42:	e7e5      	b.n	1a10 <ff_uni2oem+0x8>
    1a44:	0000aa42 	.word	0x0000aa42

00001a48 <ff_oem2uni>:
ff_oem2uni():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15257
{
	WCHAR c = 0;
	const WCHAR *p = CVTBL(uc, FF_CODE_PAGE);


	if (oem < 0x80) {	/* ASCII? */
    1a48:	287f      	cmp	r0, #127	; 0x7f
    1a4a:	d90d      	bls.n	1a68 <ff_oem2uni+0x20>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15261
		c = oem;

	} else {			/* Extended char */
		if (cp == FF_CODE_PAGE) {	/* Is it a valid code page? */
    1a4c:	f240 13b5 	movw	r3, #437	; 0x1b5
    1a50:	4299      	cmp	r1, r3
    1a52:	d108      	bne.n	1a66 <ff_oem2uni+0x1e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15262
			if (oem < 0x100) c = p[oem - 0x80];
    1a54:	28ff      	cmp	r0, #255	; 0xff
    1a56:	d806      	bhi.n	1a66 <ff_oem2uni+0x1e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15262 (discriminator 1)
    1a58:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
    1a5c:	4b03      	ldr	r3, [pc, #12]	; (1a6c <ff_oem2uni+0x24>)
    1a5e:	3880      	subs	r0, #128	; 0x80
    1a60:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
    1a64:	4770      	bx	lr
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15253
	WCHAR c = 0;
    1a66:	2000      	movs	r0, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15267
		}
	}

	return c;
}
    1a68:	4770      	bx	lr
    1a6a:	bf00      	nop
    1a6c:	0000aa42 	.word	0x0000aa42

00001a70 <ff_wtoupper>:
ff_wtoupper():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15567

		0x0000	/* EOT */
	};


	if (uni < 0x10000) {	/* Is it in BMP? */
    1a70:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15471
{
    1a74:	b5f0      	push	{r4, r5, r6, r7, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15567
	if (uni < 0x10000) {	/* Is it in BMP? */
    1a76:	d221      	bcs.n	1abc <ff_wtoupper+0x4c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15569
		uc = (WORD)uni;
		p = uc < 0x1000 ? cvt1 : cvt2;
    1a78:	4a1e      	ldr	r2, [pc, #120]	; (1af4 <ff_wtoupper+0x84>)
    1a7a:	491f      	ldr	r1, [pc, #124]	; (1af8 <ff_wtoupper+0x88>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15568
		uc = (WORD)uni;
    1a7c:	b283      	uxth	r3, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15569
		p = uc < 0x1000 ? cvt1 : cvt2;
    1a7e:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
    1a82:	bf28      	it	cs
    1a84:	460a      	movcs	r2, r1
    1a86:	1d14      	adds	r4, r2, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15571
		for (;;) {
			bc = *p++;								/* Get the block base */
    1a88:	f834 2c04 	ldrh.w	r2, [r4, #-4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15572
			if (bc == 0 || uc < bc) break;			/* Not matched? */
    1a8c:	4621      	mov	r1, r4
    1a8e:	b1a2      	cbz	r2, 1aba <ff_wtoupper+0x4a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15572 (discriminator 1)
    1a90:	4293      	cmp	r3, r2
    1a92:	d312      	bcc.n	1aba <ff_wtoupper+0x4a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15573
			nc = *p++; cmd = nc >> 8; nc &= 0xFF;	/* Get processing command and block size */
    1a94:	f834 5c02 	ldrh.w	r5, [r4, #-2]
    1a98:	0a2e      	lsrs	r6, r5, #8
    1a9a:	b2ed      	uxtb	r5, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15574
			if (uc < bc + nc) {	/* In the block? */
    1a9c:	18af      	adds	r7, r5, r2
    1a9e:	42b8      	cmp	r0, r7
    1aa0:	da22      	bge.n	1ae8 <ff_wtoupper+0x78>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15575
				switch (cmd) {
    1aa2:	2e08      	cmp	r6, #8
    1aa4:	d809      	bhi.n	1aba <ff_wtoupper+0x4a>
    1aa6:	e8df f006 	tbb	[pc, r6]
    1aaa:	0a05      	.short	0x0a05
    1aac:	16141210 	.word	0x16141210
    1ab0:	1a18      	.short	0x1a18
    1ab2:	1c          	.byte	0x1c
    1ab3:	00          	.byte	0x00
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15576
				case 0:	uc = p[uc - bc]; break;		/* Table conversion */
    1ab4:	1a80      	subs	r0, r0, r2
    1ab6:	f834 3010 	ldrh.w	r3, [r4, r0, lsl #1]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15590
				}
				break;
			}
			if (cmd == 0) p += nc;	/* Skip table if needed */
		}
		uni = uc;
    1aba:	4618      	mov	r0, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15594
	}

	return uni;
}
    1abc:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15577
				case 1:	uc -= (uc - bc) & 1; break;	/* Case pairs */
    1abe:	1a98      	subs	r0, r3, r2
    1ac0:	f000 0001 	and.w	r0, r0, #1
    1ac4:	1a1b      	subs	r3, r3, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15584
				case 8:	uc -= 0x1C60; break;		/* Shift -0x1C60 */
    1ac6:	b29b      	uxth	r3, r3
    1ac8:	e7f7      	b.n	1aba <ff_wtoupper+0x4a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15578
				case 2: uc -= 16; break;			/* Shift -16 */
    1aca:	3b10      	subs	r3, #16
    1acc:	e7fb      	b.n	1ac6 <ff_wtoupper+0x56>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15579
				case 3:	uc -= 32; break;			/* Shift -32 */
    1ace:	3b20      	subs	r3, #32
    1ad0:	e7f9      	b.n	1ac6 <ff_wtoupper+0x56>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15580
				case 4:	uc -= 48; break;			/* Shift -48 */
    1ad2:	3b30      	subs	r3, #48	; 0x30
    1ad4:	e7f7      	b.n	1ac6 <ff_wtoupper+0x56>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15581
				case 5:	uc -= 26; break;			/* Shift -26 */
    1ad6:	3b1a      	subs	r3, #26
    1ad8:	e7f5      	b.n	1ac6 <ff_wtoupper+0x56>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15582
				case 6:	uc += 8; break;				/* Shift +8 */
    1ada:	3308      	adds	r3, #8
    1adc:	e7f3      	b.n	1ac6 <ff_wtoupper+0x56>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15583
				case 7: uc -= 80; break;			/* Shift -80 */
    1ade:	3b50      	subs	r3, #80	; 0x50
    1ae0:	e7f1      	b.n	1ac6 <ff_wtoupper+0x56>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15584
				case 8:	uc -= 0x1C60; break;		/* Shift -0x1C60 */
    1ae2:	f5a3 53e3 	sub.w	r3, r3, #7264	; 0x1c60
    1ae6:	e7ee      	b.n	1ac6 <ff_wtoupper+0x56>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15588
			if (cmd == 0) p += nc;	/* Skip table if needed */
    1ae8:	3404      	adds	r4, #4
    1aea:	2e00      	cmp	r6, #0
    1aec:	d1cc      	bne.n	1a88 <ff_wtoupper+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffunicode.c:15588 (discriminator 1)
    1aee:	eb01 0245 	add.w	r2, r1, r5, lsl #1
    1af2:	e7c8      	b.n	1a86 <ff_wtoupper+0x16>
    1af4:	0000a794 	.word	0x0000a794
    1af8:	0000a986 	.word	0x0000a986

00001afc <disk_initialize>:
disk_initialize():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:19
 */
typedef enum {
  DRIVE__SD_CARD = 0,
} drive_e;

DSTATUS disk_initialize(BYTE drv) {
    1afc:	b510      	push	{r4, lr}
    1afe:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:22
  DSTATUS status = RES_PARERR;

  spi2_mutex__acquire();
    1b00:	f000 fc94 	bl	242c <spi2_mutex__acquire>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:24
  {
    switch (drv) {
    1b04:	b934      	cbnz	r4, 1b14 <disk_initialize+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:26
    case DRIVE__SD_CARD:
      status = sd_card__initialize();
    1b06:	f000 f90f 	bl	1d28 <sd_card__initialize>
    1b0a:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:33
    default:
      status = RES_PARERR;
      break;
    }
  }
  spi2_mutex__release();
    1b0c:	f000 fca8 	bl	2460 <spi2_mutex__release>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:36

  return status;
}
    1b10:	4620      	mov	r0, r4
    1b12:	bd10      	pop	{r4, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:29
      status = RES_PARERR;
    1b14:	2404      	movs	r4, #4
    1b16:	e7f9      	b.n	1b0c <disk_initialize+0x10>

00001b18 <disk_status>:
disk_status():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:43
DSTATUS disk_status(BYTE drv) {
  DSTATUS status = RES_PARERR;

  // No mutex needed here
  {
    switch (drv) {
    1b18:	b908      	cbnz	r0, 1b1e <disk_status+0x6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:45
    case DRIVE__SD_CARD:
      status = sd_card__status();
    1b1a:	f000 b9a3 	b.w	1e64 <sd_card__status>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:54
      break;
    }
  }

  return status;
}
    1b1e:	2004      	movs	r0, #4
    1b20:	4770      	bx	lr

00001b22 <disk_read>:
disk_read():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:56

DRESULT disk_read(BYTE drv, BYTE *buff, DWORD sector, UINT count) {
    1b22:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1b24:	4607      	mov	r7, r0
    1b26:	460c      	mov	r4, r1
    1b28:	4615      	mov	r5, r2
    1b2a:	461e      	mov	r6, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:59
  DSTATUS status = RES_PARERR;

  spi2_mutex__acquire();
    1b2c:	f000 fc7e 	bl	242c <spi2_mutex__acquire>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:61
  {
    switch (drv) {
    1b30:	b94f      	cbnz	r7, 1b46 <disk_read+0x24>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:63
    case DRIVE__SD_CARD:
      status = sd_card__read(buff, sector, count);
    1b32:	4620      	mov	r0, r4
    1b34:	b2f2      	uxtb	r2, r6
    1b36:	4629      	mov	r1, r5
    1b38:	f000 f99c 	bl	1e74 <sd_card__read>
    1b3c:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:70
    default:
      status = RES_PARERR;
      break;
    }
  }
  spi2_mutex__release();
    1b3e:	f000 fc8f 	bl	2460 <spi2_mutex__release>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:73

  return status;
}
    1b42:	4620      	mov	r0, r4
    1b44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:66
      status = RES_PARERR;
    1b46:	2404      	movs	r4, #4
    1b48:	e7f9      	b.n	1b3e <disk_read+0x1c>

00001b4a <disk_write>:
disk_write():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:75

DRESULT disk_write(BYTE drv, const BYTE *buff, DWORD sector, UINT count) {
    1b4a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1b4c:	4607      	mov	r7, r0
    1b4e:	460c      	mov	r4, r1
    1b50:	4615      	mov	r5, r2
    1b52:	461e      	mov	r6, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:78
  DSTATUS status = RES_PARERR;

  spi2_mutex__acquire();
    1b54:	f000 fc6a 	bl	242c <spi2_mutex__acquire>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:80
  {
    switch (drv) {
    1b58:	b94f      	cbnz	r7, 1b6e <disk_write+0x24>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:82
    case DRIVE__SD_CARD:
      status = sd_card__write(buff, sector, count);
    1b5a:	4620      	mov	r0, r4
    1b5c:	b2f2      	uxtb	r2, r6
    1b5e:	4629      	mov	r1, r5
    1b60:	f000 f9ce 	bl	1f00 <sd_card__write>
    1b64:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:89
    default:
      status = RES_PARERR;
      break;
    }
  }
  spi2_mutex__release();
    1b66:	f000 fc7b 	bl	2460 <spi2_mutex__release>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:92

  return status;
}
    1b6a:	4620      	mov	r0, r4
    1b6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:85
      status = RES_PARERR;
    1b6e:	2404      	movs	r4, #4
    1b70:	e7f9      	b.n	1b66 <disk_write+0x1c>

00001b72 <disk_ioctl>:
disk_ioctl():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:94

DRESULT disk_ioctl(BYTE drv, BYTE ctrl, void *buff) {
    1b72:	b570      	push	{r4, r5, r6, lr}
    1b74:	4606      	mov	r6, r0
    1b76:	460c      	mov	r4, r1
    1b78:	4615      	mov	r5, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:97
  DSTATUS status = RES_PARERR;

  spi2_mutex__acquire();
    1b7a:	f000 fc57 	bl	242c <spi2_mutex__acquire>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:99
  {
    switch (drv) {
    1b7e:	b946      	cbnz	r6, 1b92 <disk_ioctl+0x20>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:101
    case DRIVE__SD_CARD:
      status = sd_card__ioctl(ctrl, buff);
    1b80:	4620      	mov	r0, r4
    1b82:	4629      	mov	r1, r5
    1b84:	f000 fa10 	bl	1fa8 <sd_card__ioctl>
    1b88:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:108
    default:
      status = RES_PARERR;
      break;
    }
  }
  spi2_mutex__release();
    1b8a:	f000 fc69 	bl	2460 <spi2_mutex__release>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:111

  return status;
}
    1b8e:	4620      	mov	r0, r4
    1b90:	bd70      	pop	{r4, r5, r6, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:104
      status = RES_PARERR;
    1b92:	2404      	movs	r4, #4
    1b94:	e7f9      	b.n	1b8a <disk_ioctl+0x18>

00001b96 <get_fattime>:
get_fattime():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/fatfs_time.c:20
            | ((DWORD) sysTime.hour << 11)
            | ((DWORD) sysTime.min << 5)
            | ((DWORD) sysTime.sec >> 1);
            #endif
            return 0;
    1b96:	2000      	movs	r0, #0
    1b98:	4770      	bx	lr

00001b9a <sd_card__wait_for_ready>:
sd_card__wait_for_ready():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:56
#endif

static volatile DSTATUS g_disk_status = STA_NOINIT; ///< Disk status
static BYTE g_card_type;                            ///< Card type flags

static BYTE sd_card__wait_for_ready(void) {
    1b9a:	b538      	push	{r3, r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:60
  BYTE res;

  /* Wait for ready in timeout of 500ms */
  const uint32_t timeout = SD_CARD__PLATFORM_GET_MS() + 500;
    1b9c:	f000 fcb0 	bl	2500 <sys_time__get_uptime_ms>
    1ba0:	f500 75fa 	add.w	r5, r0, #500	; 0x1f4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:61
  SD_CARD__RECEIVE_BYTE();
    1ba4:	20ff      	movs	r0, #255	; 0xff
    1ba6:	f002 fe81 	bl	48ac <ssp2__exchange_byte>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:64 (discriminator 2)

  do {
    res = SD_CARD__RECEIVE_BYTE();
    1baa:	20ff      	movs	r0, #255	; 0xff
    1bac:	f002 fe7e 	bl	48ac <ssp2__exchange_byte>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:65 (discriminator 2)
  } while ((res != 0xFF) && SD_CARD__PLATFORM_GET_MS() < timeout);
    1bb0:	28ff      	cmp	r0, #255	; 0xff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:64 (discriminator 2)
    res = SD_CARD__RECEIVE_BYTE();
    1bb2:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:65 (discriminator 2)
  } while ((res != 0xFF) && SD_CARD__PLATFORM_GET_MS() < timeout);
    1bb4:	d003      	beq.n	1bbe <sd_card__wait_for_ready+0x24>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:65 (discriminator 1)
    1bb6:	f000 fca3 	bl	2500 <sys_time__get_uptime_ms>
    1bba:	4285      	cmp	r5, r0
    1bbc:	d8f5      	bhi.n	1baa <sd_card__wait_for_ready+0x10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:68

  return res;
}
    1bbe:	4620      	mov	r0, r4
    1bc0:	bd38      	pop	{r3, r4, r5, pc}
    1bc2:	Address 0x0000000000001bc2 is out of bounds.


00001bc4 <sd_card__power_off>:
sd_card__power_off():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:74

static void sd_card__power_on(void) {
  // Power on the SD-Card Socket if hardware allows
}

static void sd_card__power_off(void) {
    1bc4:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:75
  SD_CARD__SELECT();
    1bc6:	f002 fa8f 	bl	40e8 <board_io__sd_card_cs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:76
  sd_card__wait_for_ready();
    1bca:	f7ff ffe6 	bl	1b9a <sd_card__wait_for_ready>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:77
  SD_CARD__DESELECT();
    1bce:	f002 fa93 	bl	40f8 <board_io__sd_card_ds>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:80

  // Power off the SD-Card Socket if hardware allows
  g_disk_status |= STA_NOINIT; // Set STA_NOINIT
    1bd2:	4a03      	ldr	r2, [pc, #12]	; (1be0 <sd_card__power_off+0x1c>)
    1bd4:	7813      	ldrb	r3, [r2, #0]
    1bd6:	f043 0301 	orr.w	r3, r3, #1
    1bda:	7013      	strb	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:81
}
    1bdc:	bd08      	pop	{r3, pc}
    1bde:	bf00      	nop
    1be0:	10000008 	.word	0x10000008

00001be4 <sd_card__transmit_datablock>:
sd_card__transmit_datablock():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:129
}

#if SD_CARD__READONLY == 0
static int sd_card__transmit_datablock(const BYTE *buff, /* 512 byte data block to be transmitted */
                                       BYTE token        /* Data/Stop token */
) {
    1be4:	b538      	push	{r3, r4, r5, lr}
    1be6:	4605      	mov	r5, r0
    1be8:	460c      	mov	r4, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:132
  BYTE resp;

  if (sd_card__wait_for_ready() != 0xFF) {
    1bea:	f7ff ffd6 	bl	1b9a <sd_card__wait_for_ready>
    1bee:	28ff      	cmp	r0, #255	; 0xff
    1bf0:	d121      	bne.n	1c36 <sd_card__transmit_datablock+0x52>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:136
    return 0;
  }

  SD_CARD__TRANSMIT_BYTE(token);
    1bf2:	4620      	mov	r0, r4
    1bf4:	f002 fe5a 	bl	48ac <ssp2__exchange_byte>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:138
  /* Xmit data token */
  if (token != 0xFD) { /* Is data token */
    1bf8:	2cfd      	cmp	r4, #253	; 0xfd
    1bfa:	d01e      	beq.n	1c3a <sd_card__transmit_datablock+0x56>
    1bfc:	1cac      	adds	r4, r5, #2
    1bfe:	f205 2502 	addw	r5, r5, #514	; 0x202
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:144 (discriminator 1)
#if OPTIMIZE_SSP_SPI_WRITE
    SD_CARD__WRITE_BLOCK(buff, 512);
#else
    unsigned char wc = 0;
    do { /* Xmit the 512 byte data block to MMC */
      SD_CARD__TRANSMIT_BYTE(*buff++);
    1c02:	f814 0c02 	ldrb.w	r0, [r4, #-2]
    1c06:	f002 fe51 	bl	48ac <ssp2__exchange_byte>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:145 (discriminator 1)
      SD_CARD__TRANSMIT_BYTE(*buff++);
    1c0a:	3402      	adds	r4, #2
    1c0c:	f814 0c03 	ldrb.w	r0, [r4, #-3]
    1c10:	f002 fe4c 	bl	48ac <ssp2__exchange_byte>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:146 (discriminator 1)
    } while (--wc);
    1c14:	42ac      	cmp	r4, r5
    1c16:	d1f4      	bne.n	1c02 <sd_card__transmit_datablock+0x1e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:149
#endif

    SD_CARD__TRANSMIT_BYTE(0xFF);
    1c18:	20ff      	movs	r0, #255	; 0xff
    1c1a:	f002 fe47 	bl	48ac <ssp2__exchange_byte>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:151
    /* CRC (Dummy) */
    SD_CARD__TRANSMIT_BYTE(0xFF);
    1c1e:	20ff      	movs	r0, #255	; 0xff
    1c20:	f002 fe44 	bl	48ac <ssp2__exchange_byte>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:152
    resp = SD_CARD__RECEIVE_BYTE(); /* Reveive data response */
    1c24:	20ff      	movs	r0, #255	; 0xff
    1c26:	f002 fe41 	bl	48ac <ssp2__exchange_byte>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:153
    if ((resp & 0x1F) != 0x05) {      /* If not accepted, return with error */
    1c2a:	f000 001f 	and.w	r0, r0, #31
    1c2e:	1f43      	subs	r3, r0, #5
    1c30:	4258      	negs	r0, r3
    1c32:	4158      	adcs	r0, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:159
      return 0;
    }
  }

  return 1;
}
    1c34:	bd38      	pop	{r3, r4, r5, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:133
    return 0;
    1c36:	2000      	movs	r0, #0
    1c38:	e7fc      	b.n	1c34 <sd_card__transmit_datablock+0x50>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:158
  return 1;
    1c3a:	2001      	movs	r0, #1
    1c3c:	e7fa      	b.n	1c34 <sd_card__transmit_datablock+0x50>

00001c3e <sd_card__send_command>:
sd_card__send_command():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:164
#endif /* SD_CARD__READONLY */

static BYTE sd_card__send_command(BYTE cmd, /* Command byte */
                                  DWORD arg /* Argument */
) {
    1c3e:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:167
  BYTE n, res;

  if (cmd & 0x80) { /* ACMD<n> is the command sequense of CMD55-CMD<n> */
    1c40:	0602      	lsls	r2, r0, #24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:164
) {
    1c42:	4604      	mov	r4, r0
    1c44:	460d      	mov	r5, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:167
  if (cmd & 0x80) { /* ACMD<n> is the command sequense of CMD55-CMD<n> */
    1c46:	d507      	bpl.n	1c58 <sd_card__send_command+0x1a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:169
    cmd &= 0x7F;
    res = sd_card__send_command(CMD55, 0);
    1c48:	2100      	movs	r1, #0
    1c4a:	2077      	movs	r0, #119	; 0x77
    1c4c:	f7ff fff7 	bl	1c3e <sd_card__send_command>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:170
    if (res > 1) {
    1c50:	2801      	cmp	r0, #1
    1c52:	d831      	bhi.n	1cb8 <sd_card__send_command+0x7a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:168
    cmd &= 0x7F;
    1c54:	f004 047f 	and.w	r4, r4, #127	; 0x7f
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:177
      return res;
    }
  }

  /* Select the card and wait for ready */
  SD_CARD__DESELECT();
    1c58:	f002 fa4e 	bl	40f8 <board_io__sd_card_ds>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:178
  SD_CARD__SELECT(); // Wait for card ready
    1c5c:	f002 fa44 	bl	40e8 <board_io__sd_card_cs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:180

  if (sd_card__wait_for_ready() != 0xFF) {
    1c60:	f7ff ff9b 	bl	1b9a <sd_card__wait_for_ready>
    1c64:	28ff      	cmp	r0, #255	; 0xff
    1c66:	d12b      	bne.n	1cc0 <sd_card__send_command+0x82>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:185
    SD_CARD__DEBUG_PRINTF("ERROR: sd_card__wait_for_ready() did not return 0xFF\n");
    return 0xFF;
  }

  if (cmd == CMD0) {
    1c68:	2c40      	cmp	r4, #64	; 0x40
    1c6a:	d027      	beq.n	1cbc <sd_card__send_command+0x7e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:191
    n = 0x95; /* Valid CRC for CMD0(0) */
  }
  else if (cmd == CMD8) {
    n = 0x87; /* Valid CRC for CMD8(0x1AA) */
  } else {
    n = 0x01; /* Dummy CRC + Stop */
    1c6c:	2c48      	cmp	r4, #72	; 0x48
    1c6e:	bf0c      	ite	eq
    1c70:	2387      	moveq	r3, #135	; 0x87
    1c72:	2301      	movne	r3, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:195
  }

  /* Start + Command index + 32-bit arguments */
  const uint8_t bytes_to_transmit[] = {cmd, (BYTE)(arg >> 24), (BYTE)(arg >> 16), (BYTE)(arg >> 8), (BYTE)(arg >> 0), n};
    1c74:	0e2a      	lsrs	r2, r5, #24
    1c76:	f88d 2001 	strb.w	r2, [sp, #1]
    1c7a:	0c2a      	lsrs	r2, r5, #16
    1c7c:	f88d 2002 	strb.w	r2, [sp, #2]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:196
  ssp2__dma_write_block(bytes_to_transmit, sizeof(bytes_to_transmit));
    1c80:	2106      	movs	r1, #6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:195
  const uint8_t bytes_to_transmit[] = {cmd, (BYTE)(arg >> 24), (BYTE)(arg >> 16), (BYTE)(arg >> 8), (BYTE)(arg >> 0), n};
    1c82:	0a2a      	lsrs	r2, r5, #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:196
  ssp2__dma_write_block(bytes_to_transmit, sizeof(bytes_to_transmit));
    1c84:	4668      	mov	r0, sp
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:195
  const uint8_t bytes_to_transmit[] = {cmd, (BYTE)(arg >> 24), (BYTE)(arg >> 16), (BYTE)(arg >> 8), (BYTE)(arg >> 0), n};
    1c86:	f88d 4000 	strb.w	r4, [sp]
    1c8a:	f88d 2003 	strb.w	r2, [sp, #3]
    1c8e:	f88d 5004 	strb.w	r5, [sp, #4]
    1c92:	f88d 3005 	strb.w	r3, [sp, #5]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:196
  ssp2__dma_write_block(bytes_to_transmit, sizeof(bytes_to_transmit));
    1c96:	f002 fe13 	bl	48c0 <ssp2__dma_write_block>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:199

  /* Receive command response */
  if (cmd == CMD12) {
    1c9a:	2c4c      	cmp	r4, #76	; 0x4c
    1c9c:	d102      	bne.n	1ca4 <sd_card__send_command+0x66>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:200
    SD_CARD__RECEIVE_BYTE(); /* Skip a stuff byte when stop reading */
    1c9e:	20ff      	movs	r0, #255	; 0xff
    1ca0:	f002 fe04 	bl	48ac <ssp2__exchange_byte>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:191
    n = 0x01; /* Dummy CRC + Stop */
    1ca4:	240a      	movs	r4, #10
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:205
  }
  
  n = 10; /* Wait for a valid response in timeout of 10 attempts */
  do {
    res = SD_CARD__RECEIVE_BYTE();
    1ca6:	20ff      	movs	r0, #255	; 0xff
    1ca8:	f002 fe00 	bl	48ac <ssp2__exchange_byte>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:206
  } while ((res & 0x80) && --n);
    1cac:	0603      	lsls	r3, r0, #24
    1cae:	d503      	bpl.n	1cb8 <sd_card__send_command+0x7a>
    1cb0:	3c01      	subs	r4, #1
    1cb2:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
    1cb6:	d1f6      	bne.n	1ca6 <sd_card__send_command+0x68>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:213
  if (n == 0) {
    SD_CARD__DEBUG_PRINTF("Timeout during card read\n");
  }

  return res; /* Return with the response value */
}
    1cb8:	b003      	add	sp, #12
    1cba:	bd30      	pop	{r4, r5, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:186
    n = 0x95; /* Valid CRC for CMD0(0) */
    1cbc:	2395      	movs	r3, #149	; 0x95
    1cbe:	e7d9      	b.n	1c74 <sd_card__send_command+0x36>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:182
    return 0xFF;
    1cc0:	20ff      	movs	r0, #255	; 0xff
    1cc2:	e7f9      	b.n	1cb8 <sd_card__send_command+0x7a>

00001cc4 <sd_card__read_datablock>:
sd_card__read_datablock():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:85
) {
    1cc4:	b570      	push	{r4, r5, r6, lr}
    1cc6:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:87
  const uint32_t time_now = SD_CARD__PLATFORM_GET_MS();
    1cc8:	f000 fc1a 	bl	2500 <sys_time__get_uptime_ms>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:88
  const uint32_t timeout = time_now + 100;
    1ccc:	f100 0664 	add.w	r6, r0, #100	; 0x64
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:92
    token = SD_CARD__RECEIVE_BYTE();
    1cd0:	20ff      	movs	r0, #255	; 0xff
    1cd2:	f002 fdeb 	bl	48ac <ssp2__exchange_byte>
    1cd6:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:95
    if (SD_CARD__PLATFORM_GET_MS() > timeout) {
    1cd8:	f000 fc12 	bl	2500 <sys_time__get_uptime_ms>
    1cdc:	4286      	cmp	r6, r0
    1cde:	d301      	bcc.n	1ce4 <sd_card__read_datablock+0x20>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:98
  } while (token == 0xFF);
    1ce0:	2cff      	cmp	r4, #255	; 0xff
    1ce2:	d0f5      	beq.n	1cd0 <sd_card__read_datablock+0xc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:100
  if (token != 0xFE) {
    1ce4:	2cfe      	cmp	r4, #254	; 0xfe
    1ce6:	d10c      	bne.n	1d02 <sd_card__read_datablock+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:109
    SD_CARD__READ_BLOCK(buff, 512);
    1ce8:	f44f 7100 	mov.w	r1, #512	; 0x200
    1cec:	4628      	mov	r0, r5
    1cee:	f002 fdea 	bl	48c6 <ssp2__dma_read_block>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:120
  SD_CARD__RECEIVE_BYTE(); /* Discard CRC */
    1cf2:	20ff      	movs	r0, #255	; 0xff
    1cf4:	f002 fdda 	bl	48ac <ssp2__exchange_byte>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:121
  SD_CARD__RECEIVE_BYTE();
    1cf8:	20ff      	movs	r0, #255	; 0xff
    1cfa:	f002 fdd7 	bl	48ac <ssp2__exchange_byte>
    1cfe:	2001      	movs	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:124
}
    1d00:	bd70      	pop	{r4, r5, r6, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:102
    return 0; /* If not valid data token, return with error */
    1d02:	2000      	movs	r0, #0
    1d04:	e7fc      	b.n	1d00 <sd_card__read_datablock+0x3c>
    1d06:	Address 0x0000000000001d06 is out of bounds.


00001d08 <sd_card__update_status>:
sd_card__update_status():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:527

  return res;
}
#endif /* SD_CARD__USE_IOCTL != 0 */

void sd_card__update_status(void) {
    1d08:	b538      	push	{r3, r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:528
  BYTE s = g_disk_status;
    1d0a:	4d06      	ldr	r5, [pc, #24]	; (1d24 <sd_card__update_status+0x1c>)
    1d0c:	782c      	ldrb	r4, [r5, #0]
    1d0e:	b2e4      	uxtb	r4, r4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:530

  if (SD_CARD__IS_PRESENT()) {
    1d10:	f002 f9fa 	bl	4108 <board_io__sd_card_is_present>
    1d14:	b118      	cbz	r0, 1d1e <sd_card__update_status+0x16>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:531
    s &= ~STA_NODISK;
    1d16:	f004 04fd 	and.w	r4, r4, #253	; 0xfd
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:536
  } else {
    s |= (STA_NODISK | STA_NOINIT);
  }

  g_disk_status = s;
    1d1a:	702c      	strb	r4, [r5, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:537
}
    1d1c:	bd38      	pop	{r3, r4, r5, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:533
    s |= (STA_NODISK | STA_NOINIT);
    1d1e:	f044 0403 	orr.w	r4, r4, #3
    1d22:	e7fa      	b.n	1d1a <sd_card__update_status+0x12>
    1d24:	10000008 	.word	0x10000008

00001d28 <sd_card__initialize>:
sd_card__initialize():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:215
DSTATUS sd_card__initialize() {
    1d28:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:218
  sd_card__update_status();
    1d2c:	f7ff ffec 	bl	1d08 <sd_card__update_status>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:220
  if (g_disk_status & STA_NODISK) {
    1d30:	4b4a      	ldr	r3, [pc, #296]	; (1e5c <sd_card__initialize+0x134>)
    1d32:	781a      	ldrb	r2, [r3, #0]
    1d34:	f012 0f02 	tst.w	r2, #2
    1d38:	461e      	mov	r6, r3
    1d3a:	d004      	beq.n	1d46 <sd_card__initialize+0x1e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:221
    return g_disk_status; /* No card in the socket */
    1d3c:	7818      	ldrb	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:292
  return g_disk_status;
    1d3e:	b2c0      	uxtb	r0, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:293
}
    1d40:	b002      	add	sp, #8
    1d42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:225
  SD_CARD__SET_SLOW_SPEED();
    1d46:	20c8      	movs	r0, #200	; 0xc8
    1d48:	f002 fd78 	bl	483c <ssp2__set_max_clock>
    1d4c:	250a      	movs	r5, #10
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:227 (discriminator 3)
    SD_CARD__RECEIVE_BYTE(); /* 80 dummy clocks */
    1d4e:	20ff      	movs	r0, #255	; 0xff
    1d50:	3d01      	subs	r5, #1
    1d52:	f002 fdab 	bl	48ac <ssp2__exchange_byte>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:226 (discriminator 3)
  for (n = 10; n; n--) {
    1d56:	f015 05ff 	ands.w	r5, r5, #255	; 0xff
    1d5a:	d1f8      	bne.n	1d4e <sd_card__initialize+0x26>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:230
  SD_CARD__SELECT();
    1d5c:	f002 f9c4 	bl	40e8 <board_io__sd_card_cs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:233
  if (sd_card__send_command(CMD0, 0) == 1) { /* Enter Idle state */
    1d60:	4629      	mov	r1, r5
    1d62:	2040      	movs	r0, #64	; 0x40
    1d64:	f7ff ff6b 	bl	1c3e <sd_card__send_command>
    1d68:	2801      	cmp	r0, #1
    1d6a:	4604      	mov	r4, r0
    1d6c:	d171      	bne.n	1e52 <sd_card__initialize+0x12a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:234
    const uint32_t timeout = SD_CARD__PLATFORM_GET_MS() + 1000;
    1d6e:	f000 fbc7 	bl	2500 <sys_time__get_uptime_ms>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:235
    if (sd_card__send_command(CMD8, 0x1AA) == 1) { /* SDHC */\
    1d72:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:234
    const uint32_t timeout = SD_CARD__PLATFORM_GET_MS() + 1000;
    1d76:	f500 777a 	add.w	r7, r0, #1000	; 0x3e8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:235
    if (sd_card__send_command(CMD8, 0x1AA) == 1) { /* SDHC */\
    1d7a:	2048      	movs	r0, #72	; 0x48
    1d7c:	f7ff ff5f 	bl	1c3e <sd_card__send_command>
    1d80:	2801      	cmp	r0, #1
    1d82:	d148      	bne.n	1e16 <sd_card__initialize+0xee>
    1d84:	ad01      	add	r5, sp, #4
    1d86:	46a8      	mov	r8, r5
    1d88:	2404      	movs	r4, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:239 (discriminator 3)
        ocr[n] = SD_CARD__RECEIVE_BYTE();     /* Get trailing return value of R7 resp */
    1d8a:	20ff      	movs	r0, #255	; 0xff
    1d8c:	f002 fd8e 	bl	48ac <ssp2__exchange_byte>
    1d90:	3c01      	subs	r4, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:238 (discriminator 3)
      for (n = 0; n < 4; n++)
    1d92:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:239 (discriminator 3)
        ocr[n] = SD_CARD__RECEIVE_BYTE();     /* Get trailing return value of R7 resp */
    1d96:	f808 0b01 	strb.w	r0, [r8], #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:238 (discriminator 3)
      for (n = 0; n < 4; n++)
    1d9a:	d1f6      	bne.n	1d8a <sd_card__initialize+0x62>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:240
      if (ocr[2] == 0x01 && ocr[3] == 0xAA) { /* The card can work at vdd range of 2.7-3.6V */
    1d9c:	f89d 3006 	ldrb.w	r3, [sp, #6]
    1da0:	2b01      	cmp	r3, #1
    1da2:	d156      	bne.n	1e52 <sd_card__initialize+0x12a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:240 (discriminator 1)
    1da4:	f89d 3007 	ldrb.w	r3, [sp, #7]
    1da8:	2baa      	cmp	r3, #170	; 0xaa
    1daa:	d152      	bne.n	1e52 <sd_card__initialize+0x12a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:243 (discriminator 2)
        while (SD_CARD__PLATFORM_GET_MS() < timeout && sd_card__send_command(ACMD41, 1UL << 30)) {
    1dac:	f000 fba8 	bl	2500 <sys_time__get_uptime_ms>
    1db0:	4287      	cmp	r7, r0
    1db2:	d906      	bls.n	1dc2 <sd_card__initialize+0x9a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:243 (discriminator 1)
    1db4:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    1db8:	20e9      	movs	r0, #233	; 0xe9
    1dba:	f7ff ff40 	bl	1c3e <sd_card__send_command>
    1dbe:	2800      	cmp	r0, #0
    1dc0:	d1f4      	bne.n	1dac <sd_card__initialize+0x84>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:247
        if (SD_CARD__PLATFORM_GET_MS() < timeout &&
    1dc2:	f000 fb9d 	bl	2500 <sys_time__get_uptime_ms>
    1dc6:	4287      	cmp	r7, r0
    1dc8:	d943      	bls.n	1e52 <sd_card__initialize+0x12a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:248 (discriminator 1)
            sd_card__send_command(CMD58, 0) == 0) { /* Check CCS bit in the OCR */
    1dca:	2100      	movs	r1, #0
    1dcc:	207a      	movs	r0, #122	; 0x7a
    1dce:	f7ff ff36 	bl	1c3e <sd_card__send_command>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:247 (discriminator 1)
        if (SD_CARD__PLATFORM_GET_MS() < timeout &&
    1dd2:	2800      	cmp	r0, #0
    1dd4:	d13d      	bne.n	1e52 <sd_card__initialize+0x12a>
    1dd6:	2404      	movs	r4, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:250 (discriminator 3)
            ocr[n] = SD_CARD__RECEIVE_BYTE();
    1dd8:	20ff      	movs	r0, #255	; 0xff
    1dda:	f002 fd67 	bl	48ac <ssp2__exchange_byte>
    1dde:	3c01      	subs	r4, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:249 (discriminator 3)
          for (n = 0; n < 4; n++) {
    1de0:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:250 (discriminator 3)
            ocr[n] = SD_CARD__RECEIVE_BYTE();
    1de4:	f805 0b01 	strb.w	r0, [r5], #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:249 (discriminator 3)
          for (n = 0; n < 4; n++) {
    1de8:	d1f6      	bne.n	1dd8 <sd_card__initialize+0xb0>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:252
          ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;
    1dea:	f89d 3004 	ldrb.w	r3, [sp, #4]
    1dee:	f013 0f40 	tst.w	r3, #64	; 0x40
    1df2:	bf14      	ite	ne
    1df4:	240c      	movne	r4, #12
    1df6:	2404      	moveq	r4, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:282
  g_card_type = ty;
    1df8:	4b19      	ldr	r3, [pc, #100]	; (1e60 <sd_card__initialize+0x138>)
    1dfa:	701c      	strb	r4, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:283
  SD_CARD__DESELECT();
    1dfc:	f002 f97c 	bl	40f8 <board_io__sd_card_ds>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:285
  if (ty) {                       /* Initialization succeded */
    1e00:	b34c      	cbz	r4, 1e56 <sd_card__initialize+0x12e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:286
    g_disk_status &= ~STA_NOINIT; /* Clear STA_NOINIT */
    1e02:	7833      	ldrb	r3, [r6, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:287
    SD_CARD__SET_FAST_SPEED();
    1e04:	f645 50c0 	movw	r0, #24000	; 0x5dc0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:286
    g_disk_status &= ~STA_NOINIT; /* Clear STA_NOINIT */
    1e08:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
    1e0c:	7033      	strb	r3, [r6, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:287
    SD_CARD__SET_FAST_SPEED();
    1e0e:	f002 fd15 	bl	483c <ssp2__set_max_clock>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:292
  return g_disk_status;
    1e12:	7830      	ldrb	r0, [r6, #0]
    1e14:	e793      	b.n	1d3e <sd_card__initialize+0x16>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:260
      if (sd_card__send_command(ACMD41, 0) <= 1) {
    1e16:	4629      	mov	r1, r5
    1e18:	20e9      	movs	r0, #233	; 0xe9
    1e1a:	f7ff ff10 	bl	1c3e <sd_card__send_command>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:265
        cmd = CMD1; /* MMC */
    1e1e:	2802      	cmp	r0, #2
    1e20:	bf36      	itet	cc
    1e22:	25e9      	movcc	r5, #233	; 0xe9
    1e24:	2541      	movcs	r5, #65	; 0x41
    1e26:	2402      	movcc	r4, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:267 (discriminator 2)
      while (SD_CARD__PLATFORM_GET_MS() < timeout && sd_card__send_command(cmd, 0)) {
    1e28:	f000 fb6a 	bl	2500 <sys_time__get_uptime_ms>
    1e2c:	4287      	cmp	r7, r0
    1e2e:	d905      	bls.n	1e3c <sd_card__initialize+0x114>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:267 (discriminator 1)
    1e30:	2100      	movs	r1, #0
    1e32:	4628      	mov	r0, r5
    1e34:	f7ff ff03 	bl	1c3e <sd_card__send_command>
    1e38:	2800      	cmp	r0, #0
    1e3a:	d1f5      	bne.n	1e28 <sd_card__initialize+0x100>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:271
      if ((SD_CARD__PLATFORM_GET_MS() < timeout) ||
    1e3c:	f000 fb60 	bl	2500 <sys_time__get_uptime_ms>
    1e40:	4287      	cmp	r7, r0
    1e42:	d806      	bhi.n	1e52 <sd_card__initialize+0x12a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:272 (discriminator 1)
          sd_card__send_command(CMD16, 512) != 0) /* Set R/W block length to 512 */
    1e44:	f44f 7100 	mov.w	r1, #512	; 0x200
    1e48:	2050      	movs	r0, #80	; 0x50
    1e4a:	f7ff fef8 	bl	1c3e <sd_card__send_command>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:271 (discriminator 1)
      if ((SD_CARD__PLATFORM_GET_MS() < timeout) ||
    1e4e:	2800      	cmp	r0, #0
    1e50:	d0d2      	beq.n	1df8 <sd_card__initialize+0xd0>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:275
        ty = 0;
    1e52:	2400      	movs	r4, #0
    1e54:	e7d0      	b.n	1df8 <sd_card__initialize+0xd0>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:289
    sd_card__power_off();
    1e56:	f7ff feb5 	bl	1bc4 <sd_card__power_off>
    1e5a:	e7da      	b.n	1e12 <sd_card__initialize+0xea>
    1e5c:	10000008 	.word	0x10000008
    1e60:	10000380 	.word	0x10000380

00001e64 <sd_card__status>:
sd_card__status():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:295
DSTATUS sd_card__status() {
    1e64:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:296
  sd_card__update_status();
    1e66:	f7ff ff4f 	bl	1d08 <sd_card__update_status>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:297
  return g_disk_status;
    1e6a:	4b01      	ldr	r3, [pc, #4]	; (1e70 <sd_card__status+0xc>)
    1e6c:	7818      	ldrb	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:298
}
    1e6e:	bd08      	pop	{r3, pc}
    1e70:	10000008 	.word	0x10000008

00001e74 <sd_card__read>:
sd_card__read():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:303
) {
    1e74:	b570      	push	{r4, r5, r6, lr}
    1e76:	4614      	mov	r4, r2
    1e78:	4605      	mov	r5, r0
    1e7a:	460e      	mov	r6, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:304
  sd_card__update_status();
    1e7c:	f7ff ff44 	bl	1d08 <sd_card__update_status>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:306
  if (!count) {
    1e80:	2c00      	cmp	r4, #0
    1e82:	d035      	beq.n	1ef0 <sd_card__read+0x7c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:310
  if (g_disk_status & STA_NOINIT) {
    1e84:	4b1c      	ldr	r3, [pc, #112]	; (1ef8 <sd_card__read+0x84>)
    1e86:	781b      	ldrb	r3, [r3, #0]
    1e88:	07da      	lsls	r2, r3, #31
    1e8a:	d433      	bmi.n	1ef4 <sd_card__read+0x80>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:315
  SD_CARD__SELECT();
    1e8c:	f002 f92c 	bl	40e8 <board_io__sd_card_cs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:316
  if (!(g_card_type & CT_BLOCK)) {
    1e90:	4b1a      	ldr	r3, [pc, #104]	; (1efc <sd_card__read+0x88>)
    1e92:	781b      	ldrb	r3, [r3, #0]
    1e94:	071b      	lsls	r3, r3, #28
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:317
    sector *= 512; /* Convert to byte address if needed */
    1e96:	bf58      	it	pl
    1e98:	0276      	lslpl	r6, r6, #9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:320
  if (count == 1) {                                 /* Single block read */
    1e9a:	2c01      	cmp	r4, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:321
    if ((sd_card__send_command(CMD17, sector) == 0)) {
    1e9c:	4631      	mov	r1, r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:320
  if (count == 1) {                                 /* Single block read */
    1e9e:	d111      	bne.n	1ec4 <sd_card__read+0x50>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:321
    if ((sd_card__send_command(CMD17, sector) == 0)) {
    1ea0:	2051      	movs	r0, #81	; 0x51
    1ea2:	f7ff fecc 	bl	1c3e <sd_card__send_command>
    1ea6:	b938      	cbnz	r0, 1eb8 <sd_card__read+0x44>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:322
      if (sd_card__read_datablock(buff, 512)) {
    1ea8:	f44f 7100 	mov.w	r1, #512	; 0x200
    1eac:	4628      	mov	r0, r5
    1eae:	f7ff ff09 	bl	1cc4 <sd_card__read_datablock>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:323
        count = 0;
    1eb2:	fab0 f480 	clz	r4, r0
    1eb6:	0964      	lsrs	r4, r4, #5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:340
  SD_CARD__DESELECT();
    1eb8:	f002 f91e 	bl	40f8 <board_io__sd_card_ds>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:342
  return count ? RES_ERROR : RES_OK;
    1ebc:	1c20      	adds	r0, r4, #0
    1ebe:	bf18      	it	ne
    1ec0:	2001      	movne	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:343
}
    1ec2:	bd70      	pop	{r4, r5, r6, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:331
    if (sd_card__send_command(CMD18, sector) == 0) { /* READ_MULTIPLE_BLOCK */
    1ec4:	2052      	movs	r0, #82	; 0x52
    1ec6:	f7ff feba 	bl	1c3e <sd_card__send_command>
    1eca:	2800      	cmp	r0, #0
    1ecc:	d1f4      	bne.n	1eb8 <sd_card__read+0x44>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:333
        if (!sd_card__read_datablock(buff, 512))
    1ece:	f44f 7100 	mov.w	r1, #512	; 0x200
    1ed2:	4628      	mov	r0, r5
    1ed4:	f7ff fef6 	bl	1cc4 <sd_card__read_datablock>
    1ed8:	b128      	cbz	r0, 1ee6 <sd_card__read+0x72>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:336
      } while (--count);
    1eda:	3c01      	subs	r4, #1
    1edc:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:335
        buff += 512;
    1ee0:	f505 7500 	add.w	r5, r5, #512	; 0x200
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:336
      } while (--count);
    1ee4:	d1f3      	bne.n	1ece <sd_card__read+0x5a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:337
      sd_card__send_command(CMD12, 0); /* STOP_TRANSMISSION */
    1ee6:	2100      	movs	r1, #0
    1ee8:	204c      	movs	r0, #76	; 0x4c
    1eea:	f7ff fea8 	bl	1c3e <sd_card__send_command>
    1eee:	e7e3      	b.n	1eb8 <sd_card__read+0x44>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:308
    return RES_PARERR;
    1ef0:	2004      	movs	r0, #4
    1ef2:	e7e6      	b.n	1ec2 <sd_card__read+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:312
    return RES_NOTRDY;
    1ef4:	2003      	movs	r0, #3
    1ef6:	e7e4      	b.n	1ec2 <sd_card__read+0x4e>
    1ef8:	10000008 	.word	0x10000008
    1efc:	10000380 	.word	0x10000380

00001f00 <sd_card__write>:
sd_card__write():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:349
) {
    1f00:	b570      	push	{r4, r5, r6, lr}
    1f02:	4614      	mov	r4, r2
    1f04:	4605      	mov	r5, r0
    1f06:	460e      	mov	r6, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:350
  sd_card__update_status();
    1f08:	f7ff fefe 	bl	1d08 <sd_card__update_status>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:352
  if (!count) {
    1f0c:	2c00      	cmp	r4, #0
    1f0e:	d041      	beq.n	1f94 <sd_card__write+0x94>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:355
  if (g_disk_status & STA_NOINIT) {
    1f10:	4b23      	ldr	r3, [pc, #140]	; (1fa0 <sd_card__write+0xa0>)
    1f12:	781a      	ldrb	r2, [r3, #0]
    1f14:	07d0      	lsls	r0, r2, #31
    1f16:	d43f      	bmi.n	1f98 <sd_card__write+0x98>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:358
  if (g_disk_status & STA_PROTECT) {
    1f18:	781b      	ldrb	r3, [r3, #0]
    1f1a:	0759      	lsls	r1, r3, #29
    1f1c:	d43e      	bmi.n	1f9c <sd_card__write+0x9c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:362
  SD_CARD__SELECT();
    1f1e:	f002 f8e3 	bl	40e8 <board_io__sd_card_cs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:363
  if (!(g_card_type & CT_BLOCK)) {
    1f22:	4b20      	ldr	r3, [pc, #128]	; (1fa4 <sd_card__write+0xa4>)
    1f24:	781b      	ldrb	r3, [r3, #0]
    1f26:	071a      	lsls	r2, r3, #28
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:364
    sector *= 512; /* Convert to byte address if needed */
    1f28:	bf58      	it	pl
    1f2a:	0276      	lslpl	r6, r6, #9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:367
  if (count == 1) { /* Single block write */
    1f2c:	2c01      	cmp	r4, #1
    1f2e:	d111      	bne.n	1f54 <sd_card__write+0x54>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:368
    if ((sd_card__send_command(CMD24, sector) == 0) && sd_card__transmit_datablock(buff, 0xFE)) {
    1f30:	4631      	mov	r1, r6
    1f32:	2058      	movs	r0, #88	; 0x58
    1f34:	f7ff fe83 	bl	1c3e <sd_card__send_command>
    1f38:	bb50      	cbnz	r0, 1f90 <sd_card__write+0x90>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:368 (discriminator 1)
    1f3a:	21fe      	movs	r1, #254	; 0xfe
    1f3c:	4628      	mov	r0, r5
    1f3e:	f7ff fe51 	bl	1be4 <sd_card__transmit_datablock>
    1f42:	fab0 f480 	clz	r4, r0
    1f46:	0964      	lsrs	r4, r4, #5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:388
  SD_CARD__DESELECT();
    1f48:	f002 f8d6 	bl	40f8 <board_io__sd_card_ds>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:390
  return count ? RES_ERROR : RES_OK;
    1f4c:	1c20      	adds	r0, r4, #0
    1f4e:	bf18      	it	ne
    1f50:	2001      	movne	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:391
}
    1f52:	bd70      	pop	{r4, r5, r6, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:372
    if (g_card_type & CT_SDC) {
    1f54:	f013 0f06 	tst.w	r3, #6
    1f58:	d003      	beq.n	1f62 <sd_card__write+0x62>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:373
      sd_card__send_command(ACMD23, count);
    1f5a:	4621      	mov	r1, r4
    1f5c:	20d7      	movs	r0, #215	; 0xd7
    1f5e:	f7ff fe6e 	bl	1c3e <sd_card__send_command>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:376
    if (sd_card__send_command(CMD25, sector) == 0) { /* WRITE_MULTIPLE_BLOCK */
    1f62:	4631      	mov	r1, r6
    1f64:	2059      	movs	r0, #89	; 0x59
    1f66:	f7ff fe6a 	bl	1c3e <sd_card__send_command>
    1f6a:	2800      	cmp	r0, #0
    1f6c:	d1ec      	bne.n	1f48 <sd_card__write+0x48>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:378
        if (!sd_card__transmit_datablock(buff, 0xFC)) {
    1f6e:	21fc      	movs	r1, #252	; 0xfc
    1f70:	4628      	mov	r0, r5
    1f72:	f7ff fe37 	bl	1be4 <sd_card__transmit_datablock>
    1f76:	b128      	cbz	r0, 1f84 <sd_card__write+0x84>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:382
      } while (--count);
    1f78:	3c01      	subs	r4, #1
    1f7a:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:381
        buff += 512;
    1f7e:	f505 7500 	add.w	r5, r5, #512	; 0x200
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:382
      } while (--count);
    1f82:	d1f4      	bne.n	1f6e <sd_card__write+0x6e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:383
      if (!sd_card__transmit_datablock(0, 0xFD)) {/* STOP_TRAN token */
    1f84:	21fd      	movs	r1, #253	; 0xfd
    1f86:	2000      	movs	r0, #0
    1f88:	f7ff fe2c 	bl	1be4 <sd_card__transmit_datablock>
    1f8c:	2800      	cmp	r0, #0
    1f8e:	d1db      	bne.n	1f48 <sd_card__write+0x48>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:384
        count = 1;
    1f90:	2401      	movs	r4, #1
    1f92:	e7d9      	b.n	1f48 <sd_card__write+0x48>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:353
    return RES_PARERR;
    1f94:	2004      	movs	r0, #4
    1f96:	e7dc      	b.n	1f52 <sd_card__write+0x52>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:356
    return RES_NOTRDY;
    1f98:	2003      	movs	r0, #3
    1f9a:	e7da      	b.n	1f52 <sd_card__write+0x52>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:359
    return RES_WRPRT;
    1f9c:	2002      	movs	r0, #2
    1f9e:	e7d8      	b.n	1f52 <sd_card__write+0x52>
    1fa0:	10000008 	.word	0x10000008
    1fa4:	10000380 	.word	0x10000380

00001fa8 <sd_card__ioctl>:
sd_card__ioctl():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:397
) {
    1fa8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    1faa:	4606      	mov	r6, r0
    1fac:	460d      	mov	r5, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:401
  sd_card__update_status();
    1fae:	f7ff feab 	bl	1d08 <sd_card__update_status>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:404
  if (ctrl == CTRL_POWER) {
    1fb2:	2e05      	cmp	r6, #5
    1fb4:	d115      	bne.n	1fe2 <sd_card__ioctl+0x3a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:405
    switch (*ptr) {
    1fb6:	782c      	ldrb	r4, [r5, #0]
    1fb8:	2c01      	cmp	r4, #1
    1fba:	d010      	beq.n	1fde <sd_card__ioctl+0x36>
    1fbc:	b12c      	cbz	r4, 1fca <sd_card__ioctl+0x22>
    1fbe:	2c02      	cmp	r4, #2
    1fc0:	d00a      	beq.n	1fd8 <sd_card__ioctl+0x30>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:424
      res = RES_PARERR;
    1fc2:	2404      	movs	r4, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:524
}
    1fc4:	4620      	mov	r0, r4
    1fc6:	b004      	add	sp, #16
    1fc8:	bd70      	pop	{r4, r5, r6, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:407
      if (SD_CARD__IS_PRESENT()) {
    1fca:	f002 f89d 	bl	4108 <board_io__sd_card_is_present>
    1fce:	2800      	cmp	r0, #0
    1fd0:	d0f8      	beq.n	1fc4 <sd_card__ioctl+0x1c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:408
        sd_card__power_off();
    1fd2:	f7ff fdf7 	bl	1bc4 <sd_card__power_off>
    1fd6:	e7f5      	b.n	1fc4 <sd_card__ioctl+0x1c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:419
      *(ptr + 1) = (BYTE)SD_CARD__IS_PRESENT();
    1fd8:	f002 f896 	bl	4108 <board_io__sd_card_is_present>
    1fdc:	7068      	strb	r0, [r5, #1]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:415
      res = RES_OK;
    1fde:	2400      	movs	r4, #0
    1fe0:	e7f0      	b.n	1fc4 <sd_card__ioctl+0x1c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:428
    if (g_disk_status & STA_NOINIT) {
    1fe2:	4b6f      	ldr	r3, [pc, #444]	; (21a0 <sd_card__ioctl+0x1f8>)
    1fe4:	781c      	ldrb	r4, [r3, #0]
    1fe6:	f014 0401 	ands.w	r4, r4, #1
    1fea:	f040 80d7 	bne.w	219c <sd_card__ioctl+0x1f4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:432
    switch (ctrl) {
    1fee:	2e0e      	cmp	r6, #14
    1ff0:	f200 80d2 	bhi.w	2198 <sd_card__ioctl+0x1f0>
    1ff4:	e8df f006 	tbb	[pc, r6]
    1ff8:	524e1308 	.word	0x524e1308
    1ffc:	d0d0d0d0 	.word	0xd0d0d0d0
    2000:	a19dd0d0 	.word	0xa19dd0d0
    2004:	b3b0      	.short	0xb3b0
    2006:	c4          	.byte	0xc4
    2007:	00          	.byte	0x00
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:434
      SD_CARD__SELECT();
    2008:	f002 f86e 	bl	40e8 <board_io__sd_card_cs>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:435
      if (sd_card__wait_for_ready() == 0xFF) {
    200c:	f7ff fdc5 	bl	1b9a <sd_card__wait_for_ready>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:436
        res = RES_OK;
    2010:	f1b0 04ff 	subs.w	r4, r0, #255	; 0xff
    2014:	bf18      	it	ne
    2016:	2401      	movne	r4, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:520
    SD_CARD__DESELECT();
    2018:	f002 f86e 	bl	40f8 <board_io__sd_card_ds>
    201c:	e7d2      	b.n	1fc4 <sd_card__ioctl+0x1c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:441
      if ((sd_card__send_command(CMD9, 0) == 0) && sd_card__read_datablock(csd, 16)) {
    201e:	2100      	movs	r1, #0
    2020:	2049      	movs	r0, #73	; 0x49
    2022:	f7ff fe0c 	bl	1c3e <sd_card__send_command>
    2026:	4604      	mov	r4, r0
    2028:	b108      	cbz	r0, 202e <sd_card__ioctl+0x86>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:402
  DRESULT res = RES_ERROR;
    202a:	2401      	movs	r4, #1
    202c:	e7f4      	b.n	2018 <sd_card__ioctl+0x70>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:441 (discriminator 1)
      if ((sd_card__send_command(CMD9, 0) == 0) && sd_card__read_datablock(csd, 16)) {
    202e:	2110      	movs	r1, #16
    2030:	4668      	mov	r0, sp
    2032:	f7ff fe47 	bl	1cc4 <sd_card__read_datablock>
    2036:	2800      	cmp	r0, #0
    2038:	d0f7      	beq.n	202a <sd_card__ioctl+0x82>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:442
        if ((csd[0] >> 6) == 1) { /* SDC ver 2.00 */
    203a:	f89d 3000 	ldrb.w	r3, [sp]
    203e:	f89d 1008 	ldrb.w	r1, [sp, #8]
    2042:	099b      	lsrs	r3, r3, #6
    2044:	2b01      	cmp	r3, #1
    2046:	f89d 3009 	ldrb.w	r3, [sp, #9]
    204a:	d106      	bne.n	205a <sd_card__ioctl+0xb2>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:443
          csize = csd[9] + ((WORD)csd[8] << 8) + 1;
    204c:	1c5a      	adds	r2, r3, #1
    204e:	eb02 2201 	add.w	r2, r2, r1, lsl #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:444
          *(DWORD *)buff = (DWORD)csize << 10;
    2052:	b292      	uxth	r2, r2
    2054:	0292      	lsls	r2, r2, #10
    2056:	602a      	str	r2, [r5, #0]
    2058:	e7de      	b.n	2018 <sd_card__ioctl+0x70>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:447
          csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
    205a:	f89d 2007 	ldrb.w	r2, [sp, #7]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:446
          n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
    205e:	f89d 000a 	ldrb.w	r0, [sp, #10]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:447
          csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
    2062:	0092      	lsls	r2, r2, #2
    2064:	eb02 1291 	add.w	r2, r2, r1, lsr #6
    2068:	f89d 1006 	ldrb.w	r1, [sp, #6]
    206c:	0289      	lsls	r1, r1, #10
    206e:	f401 6140 	and.w	r1, r1, #3072	; 0xc00
    2072:	3201      	adds	r2, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:448
          *(DWORD *)buff = (DWORD)csize << (n - 9);
    2074:	440a      	add	r2, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:446
          n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
    2076:	f89d 1005 	ldrb.w	r1, [sp, #5]
    207a:	005b      	lsls	r3, r3, #1
    207c:	f001 010f 	and.w	r1, r1, #15
    2080:	eb01 11d0 	add.w	r1, r1, r0, lsr #7
    2084:	f003 0306 	and.w	r3, r3, #6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:448
          *(DWORD *)buff = (DWORD)csize << (n - 9);
    2088:	440b      	add	r3, r1
    208a:	3b07      	subs	r3, #7
    208c:	fa02 f303 	lsl.w	r3, r2, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:466
            *(DWORD *)buff = 16UL << (csd[10] >> 4);
    2090:	602b      	str	r3, [r5, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:467
            res = RES_OK;
    2092:	e7c1      	b.n	2018 <sd_card__ioctl+0x70>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:455
      *(WORD *)buff = 512;
    2094:	f44f 7300 	mov.w	r3, #512	; 0x200
    2098:	802b      	strh	r3, [r5, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:457
      break;
    209a:	e7bd      	b.n	2018 <sd_card__ioctl+0x70>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:460
      if (g_card_type & CT_SD2) {                    /* SDC ver 2.00 */
    209c:	4e41      	ldr	r6, [pc, #260]	; (21a4 <sd_card__ioctl+0x1fc>)
    209e:	7831      	ldrb	r1, [r6, #0]
    20a0:	f011 0104 	ands.w	r1, r1, #4
    20a4:	d01c      	beq.n	20e0 <sd_card__ioctl+0x138>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:461
        if (sd_card__send_command(ACMD13, 0) == 0) { /* Read SD status */
    20a6:	2100      	movs	r1, #0
    20a8:	20cd      	movs	r0, #205	; 0xcd
    20aa:	f7ff fdc8 	bl	1c3e <sd_card__send_command>
    20ae:	2800      	cmp	r0, #0
    20b0:	d1bb      	bne.n	202a <sd_card__ioctl+0x82>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:462
          SD_CARD__RECEIVE_BYTE();
    20b2:	20ff      	movs	r0, #255	; 0xff
    20b4:	f002 fbfa 	bl	48ac <ssp2__exchange_byte>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:463
          if (sd_card__read_datablock(csd, 16)) { /* Read partial block */
    20b8:	2110      	movs	r1, #16
    20ba:	4668      	mov	r0, sp
    20bc:	f7ff fe02 	bl	1cc4 <sd_card__read_datablock>
    20c0:	2800      	cmp	r0, #0
    20c2:	d0b2      	beq.n	202a <sd_card__ioctl+0x82>
    20c4:	2430      	movs	r4, #48	; 0x30
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:465 (discriminator 3)
              SD_CARD__RECEIVE_BYTE(); /* Purge trailing data */
    20c6:	20ff      	movs	r0, #255	; 0xff
    20c8:	3c01      	subs	r4, #1
    20ca:	f002 fbef 	bl	48ac <ssp2__exchange_byte>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:464 (discriminator 3)
            for (n = 64 - 16; n; n--)
    20ce:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
    20d2:	d1f8      	bne.n	20c6 <sd_card__ioctl+0x11e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:466
            *(DWORD *)buff = 16UL << (csd[10] >> 4);
    20d4:	f89d 300a 	ldrb.w	r3, [sp, #10]
    20d8:	091a      	lsrs	r2, r3, #4
    20da:	2310      	movs	r3, #16
    20dc:	4093      	lsls	r3, r2
    20de:	e7d7      	b.n	2090 <sd_card__ioctl+0xe8>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:471
        if ((sd_card__send_command(CMD9, 0) == 0) && sd_card__read_datablock(csd, 16)) { /* Read CSD */
    20e0:	2049      	movs	r0, #73	; 0x49
    20e2:	f7ff fdac 	bl	1c3e <sd_card__send_command>
    20e6:	4604      	mov	r4, r0
    20e8:	2800      	cmp	r0, #0
    20ea:	d19e      	bne.n	202a <sd_card__ioctl+0x82>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:471 (discriminator 1)
    20ec:	2110      	movs	r1, #16
    20ee:	4668      	mov	r0, sp
    20f0:	f7ff fde8 	bl	1cc4 <sd_card__read_datablock>
    20f4:	2800      	cmp	r0, #0
    20f6:	d098      	beq.n	202a <sd_card__ioctl+0x82>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:472
          if (g_card_type & CT_SD1) {                                                    /* SDC ver 1.XX */
    20f8:	7832      	ldrb	r2, [r6, #0]
    20fa:	f89d 300a 	ldrb.w	r3, [sp, #10]
    20fe:	f89d 100b 	ldrb.w	r1, [sp, #11]
    2102:	0792      	lsls	r2, r2, #30
    2104:	d50a      	bpl.n	211c <sd_card__ioctl+0x174>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:473
            *(DWORD *)buff = (((csd[10] & 63) << 1) + ((WORD)(csd[11] & 128) >> 7) + 1) << ((csd[13] >> 6) - 1);
    2106:	005b      	lsls	r3, r3, #1
    2108:	f89d 200d 	ldrb.w	r2, [sp, #13]
    210c:	f003 037e 	and.w	r3, r3, #126	; 0x7e
    2110:	eb03 13d1 	add.w	r3, r3, r1, lsr #7
    2114:	0992      	lsrs	r2, r2, #6
    2116:	3301      	adds	r3, #1
    2118:	3a01      	subs	r2, #1
    211a:	e7df      	b.n	20dc <sd_card__ioctl+0x134>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:475
            *(DWORD *)buff = ((WORD)((csd[10] & 124) >> 2) + 1) * (((csd[11] & 3) << 3) + ((csd[11] & 224) >> 5) + 1);
    211c:	00ca      	lsls	r2, r1, #3
    211e:	f002 0218 	and.w	r2, r2, #24
    2122:	f3c3 0384 	ubfx	r3, r3, #2, #5
    2126:	eb02 1251 	add.w	r2, r2, r1, lsr #5
    212a:	3301      	adds	r3, #1
    212c:	fb02 3303 	mla	r3, r2, r3, r3
    2130:	e7ae      	b.n	2090 <sd_card__ioctl+0xe8>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:483
      *ptr = g_card_type;
    2132:	4b1c      	ldr	r3, [pc, #112]	; (21a4 <sd_card__ioctl+0x1fc>)
    2134:	781b      	ldrb	r3, [r3, #0]
    2136:	702b      	strb	r3, [r5, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:485
      break;
    2138:	e76e      	b.n	2018 <sd_card__ioctl+0x70>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:488
      if (sd_card__send_command(CMD9, 0) == 0 /* READ_CSD */
    213a:	2100      	movs	r1, #0
    213c:	2049      	movs	r0, #73	; 0x49
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:494
      if (sd_card__send_command(CMD10, 0) == 0 /* READ_CID */
    213e:	f7ff fd7e 	bl	1c3e <sd_card__send_command>
    2142:	2800      	cmp	r0, #0
    2144:	f47f af71 	bne.w	202a <sd_card__ioctl+0x82>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:495
          && sd_card__read_datablock(ptr, 16))
    2148:	2110      	movs	r1, #16
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:510
        if (sd_card__read_datablock(ptr, 64))
    214a:	4628      	mov	r0, r5
    214c:	f7ff fdba 	bl	1cc4 <sd_card__read_datablock>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:436
        res = RES_OK;
    2150:	fab0 f480 	clz	r4, r0
    2154:	0964      	lsrs	r4, r4, #5
    2156:	e75f      	b.n	2018 <sd_card__ioctl+0x70>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:494
      if (sd_card__send_command(CMD10, 0) == 0 /* READ_CID */
    2158:	2100      	movs	r1, #0
    215a:	204a      	movs	r0, #74	; 0x4a
    215c:	e7ef      	b.n	213e <sd_card__ioctl+0x196>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:500
      if (sd_card__send_command(CMD58, 0) == 0) { /* READ_OCR */
    215e:	2100      	movs	r1, #0
    2160:	207a      	movs	r0, #122	; 0x7a
    2162:	f7ff fd6c 	bl	1c3e <sd_card__send_command>
    2166:	4604      	mov	r4, r0
    2168:	2800      	cmp	r0, #0
    216a:	f47f af5e 	bne.w	202a <sd_card__ioctl+0x82>
    216e:	1d2e      	adds	r6, r5, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:502 (discriminator 3)
          *ptr++ = SD_CARD__RECEIVE_BYTE();
    2170:	20ff      	movs	r0, #255	; 0xff
    2172:	f002 fb9b 	bl	48ac <ssp2__exchange_byte>
    2176:	f805 0b01 	strb.w	r0, [r5], #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:501 (discriminator 3)
        for (n = 4; n; n--)
    217a:	42ae      	cmp	r6, r5
    217c:	d1f8      	bne.n	2170 <sd_card__ioctl+0x1c8>
    217e:	e74b      	b.n	2018 <sd_card__ioctl+0x70>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:508
      if (sd_card__send_command(ACMD13, 0) == 0) { /* SD_STATUS */
    2180:	2100      	movs	r1, #0
    2182:	20cd      	movs	r0, #205	; 0xcd
    2184:	f7ff fd5b 	bl	1c3e <sd_card__send_command>
    2188:	2800      	cmp	r0, #0
    218a:	f47f af4e 	bne.w	202a <sd_card__ioctl+0x82>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:509
        SD_CARD__RECEIVE_BYTE();
    218e:	20ff      	movs	r0, #255	; 0xff
    2190:	f002 fb8c 	bl	48ac <ssp2__exchange_byte>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:510
        if (sd_card__read_datablock(ptr, 64))
    2194:	2140      	movs	r1, #64	; 0x40
    2196:	e7d8      	b.n	214a <sd_card__ioctl+0x1a2>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:516
      res = RES_PARERR;
    2198:	2404      	movs	r4, #4
    219a:	e73d      	b.n	2018 <sd_card__ioctl+0x70>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:429
      return RES_NOTRDY;
    219c:	2403      	movs	r4, #3
    219e:	e711      	b.n	1fc4 <sd_card__ioctl+0x1c>
    21a0:	10000008 	.word	0x10000008
    21a4:	10000380 	.word	0x10000380

000021a8 <system_calls__print_and_halt>:
system_calls__print_and_halt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:46
  for (int i = 0; i < len; i++) {
    uart__polled_put(system_calls__uart_type, ptr[i]);
  }
}

static void system_calls__print_and_halt(const char *string) {
    21a8:	b508      	push	{r3, lr}
    21aa:	4606      	mov	r6, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:47
  system_calls__polled_put(string, strlen(string));
    21ac:	f004 fbe2 	bl	6974 <strlen>
system_calls__polled_put():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:41
  for (int i = 0; i < len; i++) {
    21b0:	2400      	movs	r4, #0
system_calls__print_and_halt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:47
  system_calls__polled_put(string, strlen(string));
    21b2:	4605      	mov	r5, r0
system_calls__polled_put():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:41
  for (int i = 0; i < len; i++) {
    21b4:	42a5      	cmp	r5, r4
    21b6:	dc00      	bgt.n	21ba <system_calls__print_and_halt+0x12>
system_calls__print_and_halt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:49 (discriminator 1)
  while (1) {
  }
    21b8:	e7fe      	b.n	21b8 <system_calls__print_and_halt+0x10>
system_calls__polled_put():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:42
    uart__polled_put(system_calls__uart_type, ptr[i]);
    21ba:	5d31      	ldrb	r1, [r6, r4]
    21bc:	2000      	movs	r0, #0
    21be:	f002 fc77 	bl	4ab0 <uart__polled_put>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:41
  for (int i = 0; i < len; i++) {
    21c2:	3401      	adds	r4, #1
    21c4:	e7f6      	b.n	21b4 <system_calls__print_and_halt+0xc>
system_calls__print_and_halt():
    21c6:	Address 0x00000000000021c6 is out of bounds.


000021c8 <_isatty>:
_isatty():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:87
 * libc.pdf: 'Query whether output stream is a terminal'
 */
int _isatty(int file_descriptor) {
  int is_atty = 0;

  switch (file_descriptor) {
    21c8:	2802      	cmp	r0, #2
    21ca:	d90c      	bls.n	21e6 <_isatty+0x1e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:97
    is_atty = 1;
    break;

  // Pointer based values defined by <stdio.h>
  default:
    if ((int)stdin == file_descriptor || (int)stdout == file_descriptor ||
    21cc:	4b07      	ldr	r3, [pc, #28]	; (21ec <_isatty+0x24>)
    21ce:	681b      	ldr	r3, [r3, #0]
    21d0:	685a      	ldr	r2, [r3, #4]
    21d2:	4282      	cmp	r2, r0
    21d4:	d007      	beq.n	21e6 <_isatty+0x1e>
    21d6:	689a      	ldr	r2, [r3, #8]
    21d8:	4282      	cmp	r2, r0
    21da:	d004      	beq.n	21e6 <_isatty+0x1e>
    21dc:	68db      	ldr	r3, [r3, #12]
    21de:	1a1b      	subs	r3, r3, r0
    21e0:	4258      	negs	r0, r3
    21e2:	4158      	adcs	r0, r3
    21e4:	4770      	bx	lr
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:99
        (int)stderr == file_descriptor) {
      is_atty = 1;
    21e6:	2001      	movs	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:104
    }
  }

  return is_atty;
}
    21e8:	4770      	bx	lr
    21ea:	bf00      	nop
    21ec:	10000150 	.word	0x10000150

000021f0 <_close>:
_close():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:117
}

/**
 * Low level function used by fclose()
 */
int _close(int file_descriptor) {
    21f0:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:118
  system_calls__print_and_halt("ERROR: Call to _close() not expected\n");
    21f2:	4801      	ldr	r0, [pc, #4]	; (21f8 <_close+0x8>)
    21f4:	f7ff ffd8 	bl	21a8 <system_calls__print_and_halt>
    21f8:	0000ab42 	.word	0x0000ab42

000021fc <_fstat>:
_fstat():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:122
  return 0;
}

int _fstat() { return 0; }
    21fc:	2000      	movs	r0, #0
    21fe:	4770      	bx	lr

00002200 <_lseek>:
_lseek():
    2200:	2000      	movs	r0, #0
    2202:	4770      	bx	lr

00002204 <_write>:
_write():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:129

/**
 * Low level write routine used by standard output (printf) and also file writes
 * after fopen() has been called
 */
int _write(int file_descriptor, const char *ptr, int bytes_to_write) {
    2204:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2206:	4604      	mov	r4, r0
    2208:	460e      	mov	r6, r1
    220a:	4615      	mov	r5, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:130
  if (_isatty(file_descriptor)) {
    220c:	f7ff ffdc 	bl	21c8 <_isatty>
    2210:	b348      	cbz	r0, 2266 <_write+0x62>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:132
    const bool is_standard_error =
        ((int)stderr == file_descriptor || file_id__stderr == file_descriptor);
    2212:	4b16      	ldr	r3, [pc, #88]	; (226c <_write+0x68>)
    2214:	681b      	ldr	r3, [r3, #0]
    2216:	68db      	ldr	r3, [r3, #12]
    2218:	42a3      	cmp	r3, r4
    221a:	d010      	beq.n	223e <_write+0x3a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:132 (discriminator 2)
    221c:	1ea3      	subs	r3, r4, #2
    221e:	425c      	negs	r4, r3
    2220:	415c      	adcs	r4, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:134
    const bool rtos_is_running =
        taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    2222:	f001 fda3 	bl	3d6c <xTaskGetSchedulerState>
    2226:	4607      	mov	r7, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:136
    const bool transmit_queue_enabled =
        uart__is_transmit_queue_initialized(system_calls__uart_type);
    2228:	2000      	movs	r0, #0
    222a:	f002 fbf5 	bl	4a18 <uart__is_transmit_queue_initialized>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:142

    /* If the RTOS is running with the UART queue enabled, AND it is not an
     * error printf, then queue the output and return quickly, otherwise there
     * is no choice but to use system_calls__polled_put()
     */
    if (rtos_is_running && transmit_queue_enabled && !is_standard_error) {
    222e:	2f02      	cmp	r7, #2
    2230:	d117      	bne.n	2262 <_write+0x5e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:142 (discriminator 1)
    2232:	b1b0      	cbz	r0, 2262 <_write+0x5e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:142 (discriminator 2)
    2234:	b9ac      	cbnz	r4, 2262 <_write+0x5e>
system_calls__queued_put():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:33
  for (int i = 0; i < len; i++) {
    2236:	42a5      	cmp	r5, r4
    2238:	dc03      	bgt.n	2242 <_write+0x3e>
_write():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:153
    system_calls__print_and_halt(
        "ERROR: Call to _write() with an unsupported handle");
  }

  return bytes_to_write;
}
    223a:	4628      	mov	r0, r5
    223c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:132
        ((int)stderr == file_descriptor || file_id__stderr == file_descriptor);
    223e:	2401      	movs	r4, #1
    2240:	e7ef      	b.n	2222 <_write+0x1e>
system_calls__queued_put():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:34
    uart__put(system_calls__uart_type, ptr[i], forever_timeout);
    2242:	5d31      	ldrb	r1, [r6, r4]
    2244:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    2248:	2000      	movs	r0, #0
    224a:	f002 fc93 	bl	4b74 <uart__put>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:33
  for (int i = 0; i < len; i++) {
    224e:	3401      	adds	r4, #1
    2250:	e7f1      	b.n	2236 <_write+0x32>
system_calls__polled_put():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:42
    uart__polled_put(system_calls__uart_type, ptr[i]);
    2252:	5d31      	ldrb	r1, [r6, r4]
    2254:	2000      	movs	r0, #0
    2256:	f002 fc2b 	bl	4ab0 <uart__polled_put>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:41
  for (int i = 0; i < len; i++) {
    225a:	3401      	adds	r4, #1
    225c:	42a5      	cmp	r5, r4
    225e:	dcf8      	bgt.n	2252 <_write+0x4e>
    2260:	e7eb      	b.n	223a <_write+0x36>
_write():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:41
    2262:	2400      	movs	r4, #0
    2264:	e7fa      	b.n	225c <_write+0x58>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:148
    system_calls__print_and_halt(
    2266:	4802      	ldr	r0, [pc, #8]	; (2270 <_write+0x6c>)
    2268:	f7ff ff9e 	bl	21a8 <system_calls__print_and_halt>
    226c:	10000150 	.word	0x10000150
    2270:	0000ab9a 	.word	0x0000ab9a

00002274 <_read>:
_read():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:159

/**
 * Low level read routine used by standard input (scanf) and also file reads
 * after fopen() has been called
 */
int _read(int file_descriptor, char *ptr, int len) {
    2274:	b538      	push	{r3, r4, r5, lr}
    2276:	460c      	mov	r4, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:162
  int bytes_read = 0;

  if (_isatty(file_descriptor)) {
    2278:	f7ff ffa6 	bl	21c8 <_isatty>
    227c:	b1a8      	cbz	r0, 22aa <_read+0x36>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:164
    const bool rtos_is_running =
        taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    227e:	f001 fd75 	bl	3d6c <xTaskGetSchedulerState>
    2282:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:166
    const bool receive_queue_enabled =
        uart__is_receive_queue_initialized(system_calls__uart_type);
    2284:	2000      	movs	r0, #0
    2286:	f002 fbd1 	bl	4a2c <uart__is_receive_queue_initialized>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:167
    if (rtos_is_running && receive_queue_enabled) {
    228a:	2d02      	cmp	r5, #2
    228c:	d108      	bne.n	22a0 <_read+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:167 (discriminator 1)
    228e:	b138      	cbz	r0, 22a0 <_read+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:168
      uart__get(system_calls__uart_type, &ptr[0], portMAX_DELAY);
    2290:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    2294:	4621      	mov	r1, r4
    2296:	2000      	movs	r0, #0
    2298:	f002 fc1c 	bl	4ad4 <uart__get>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:182
    system_calls__print_and_halt(
        "ERROR: Call to _read() with an unsupported handle");
  }

  return bytes_read;
}
    229c:	2001      	movs	r0, #1
    229e:	bd38      	pop	{r3, r4, r5, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:170
      uart__polled_get(system_calls__uart_type, &ptr[0]);
    22a0:	4621      	mov	r1, r4
    22a2:	2000      	movs	r0, #0
    22a4:	f002 fc3c 	bl	4b20 <uart__polled_get>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:181
  return bytes_read;
    22a8:	e7f8      	b.n	229c <_read+0x28>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:177
    system_calls__print_and_halt(
    22aa:	4801      	ldr	r0, [pc, #4]	; (22b0 <_read+0x3c>)
    22ac:	f7ff ff7c 	bl	21a8 <system_calls__print_and_halt>
    22b0:	0000ab68 	.word	0x0000ab68

000022b4 <delay__us>:
delay__us():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/delay.c:15
void delay__ms(uint32_t ms) {
  const uint64_t us = UINT64_C(1000) * ms;
  delay__us(us);
}

void delay__us(uint64_t us) {
    22b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    22b6:	4604      	mov	r4, r0
    22b8:	460d      	mov	r5, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/delay.c:16
  const uint64_t time_now_us = sys_time__get_uptime_us();
    22ba:	f000 f90b 	bl	24d4 <sys_time__get_uptime_us>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/delay.c:17
  const uint64_t time_to_wait_us = time_now_us + us;
    22be:	1906      	adds	r6, r0, r4
    22c0:	eb41 0705 	adc.w	r7, r1, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/delay.c:22

  // Use the RTOS for the larger delay period in milliseconds since this will
  // sleep the CPU
  const bool rtos_is_running =
      (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
    22c4:	f001 fd52 	bl	3d6c <xTaskGetSchedulerState>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/delay.c:25

  // TODO: This assumes 1Khz OS tick rate
  if (rtos_is_running && us > 1000) {
    22c8:	2802      	cmp	r0, #2
    22ca:	d10c      	bne.n	22e6 <delay__us+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/delay.c:25 (discriminator 1)
    22cc:	2300      	movs	r3, #0
    22ce:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    22d2:	42ab      	cmp	r3, r5
    22d4:	bf08      	it	eq
    22d6:	42a2      	cmpeq	r2, r4
    22d8:	d205      	bcs.n	22e6 <delay__us+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/delay.c:26
    const uint32_t ms = us / 1000;
    22da:	4620      	mov	r0, r4
    22dc:	4629      	mov	r1, r5
    22de:	f002 ff5f 	bl	51a0 <__aeabi_uldivmod>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/delay.c:27
    vTaskDelay(ms);
    22e2:	f001 fbb1 	bl	3a48 <vTaskDelay>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/delay.c:31 (discriminator 1)
  }

  // Eat the CPU for the remaining microseconds
  while (sys_time__get_uptime_us() < time_to_wait_us) {
    22e6:	f000 f8f5 	bl	24d4 <sys_time__get_uptime_us>
    22ea:	42b9      	cmp	r1, r7
    22ec:	bf08      	it	eq
    22ee:	42b0      	cmpeq	r0, r6
    22f0:	d3f9      	bcc.n	22e6 <delay__us+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/delay.c:33
  }
}
    22f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000022f4 <delay__ms>:
delay__ms():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/delay.c:12
  delay__us(us);
    22f4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    22f8:	fba0 0103 	umull	r0, r1, r0, r3
    22fc:	f7ff bfda 	b.w	22b4 <delay__us>

00002300 <peripherals_init>:
peripherals_init():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:17
static void peripherals_init__startup_sequence(void);
static const char *peripherals_init__mount_sd_card(void);
static void peripherals_init__uart0_init(void);
static void peripherals_init__i2c_init(void);

void peripherals_init(void) {
    2300:	b530      	push	{r4, r5, lr}
    2302:	b085      	sub	sp, #20
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:18
  board_io__initialize();
    2304:	f001 fe6e 	bl	3fe4 <board_io__initialize>
peripherals_init__startup_sequence():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:38

  peripherals_init__i2c_init();
}

static void peripherals_init__startup_sequence(void) {
  const gpio_s leds[] = {board_io__get_led0(), board_io__get_led1(),
    2308:	f001 ff08 	bl	411c <board_io__get_led0>
    230c:	f88d 000c 	strb.w	r0, [sp, #12]
    2310:	f001 ff0a 	bl	4128 <board_io__get_led1>
    2314:	f88d 000d 	strb.w	r0, [sp, #13]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:39
                         board_io__get_led2(), board_io__get_led3()};
    2318:	f001 ff0c 	bl	4134 <board_io__get_led2>
    231c:	f88d 000e 	strb.w	r0, [sp, #14]
    2320:	f001 ff0e 	bl	4140 <board_io__get_led3>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:40
  for (size_t number = 0; number < 32; number++) {
    2324:	2400      	movs	r4, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:39
                         board_io__get_led2(), board_io__get_led3()};
    2326:	f88d 000f 	strb.w	r0, [sp, #15]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:41
    gpio__toggle(leds[number % ARRAY_SIZE(leds)]);
    232a:	aa04      	add	r2, sp, #16
    232c:	f004 0303 	and.w	r3, r4, #3
    2330:	4413      	add	r3, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:40
  for (size_t number = 0; number < 32; number++) {
    2332:	3401      	adds	r4, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:41
    gpio__toggle(leds[number % ARRAY_SIZE(leds)]);
    2334:	f813 0c04 	ldrb.w	r0, [r3, #-4]
    2338:	f001 ffce 	bl	42d8 <gpio__toggle>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:42
    delay__ms(50);
    233c:	2032      	movs	r0, #50	; 0x32
    233e:	f7ff ffd9 	bl	22f4 <delay__ms>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:40
  for (size_t number = 0; number < 32; number++) {
    2342:	2c20      	cmp	r4, #32
    2344:	d1f1      	bne.n	232a <peripherals_init+0x2a>
peripherals_init__uart0_init():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:66
}

static void peripherals_init__uart0_init(void) {
  // Do not do any bufferring for standard input otherwise getchar(), scanf()
  // may not work
  setvbuf(stdin, 0, _IONBF, 0);
    2346:	4b29      	ldr	r3, [pc, #164]	; (23ec <peripherals_init+0xec>)
    2348:	6818      	ldr	r0, [r3, #0]
    234a:	2300      	movs	r3, #0
    234c:	4619      	mov	r1, r3
    234e:	2202      	movs	r2, #2
    2350:	6840      	ldr	r0, [r0, #4]
    2352:	f004 fa27 	bl	67a4 <setvbuf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:70

  // Note: PIN functions are initialized by board_io__initialize() for P0.2(Tx)
  // and P0.3(Rx)
  uart__init(UART__0, clock__get_peripheral_clock_hz(), 115200);
    2356:	f7fd ff65 	bl	224 <clock__get_peripheral_clock_hz>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:86
  static uint8_t rxq_storage[32];
  static uint8_t txq_storage[128];

  // Make UART more efficient by backing it with RTOS queues (optional but
  // highly recommended with RTOS)
  QueueHandle_t rxq_handle = xQueueCreateStatic(
    235a:	2500      	movs	r5, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:70
  uart__init(UART__0, clock__get_peripheral_clock_hz(), 115200);
    235c:	4601      	mov	r1, r0
    235e:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
    2362:	2000      	movs	r0, #0
    2364:	f002 fb14 	bl	4990 <uart__init>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:86
  QueueHandle_t rxq_handle = xQueueCreateStatic(
    2368:	9500      	str	r5, [sp, #0]
    236a:	4b21      	ldr	r3, [pc, #132]	; (23f0 <peripherals_init+0xf0>)
    236c:	4a21      	ldr	r2, [pc, #132]	; (23f4 <peripherals_init+0xf4>)
    236e:	2101      	movs	r1, #1
    2370:	4620      	mov	r0, r4
    2372:	f000 fce1 	bl	2d38 <xQueueGenericCreateStatic>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:88
      sizeof(rxq_storage), sizeof(char), rxq_storage, &rxq_struct);
  QueueHandle_t txq_handle = xQueueCreateStatic(
    2376:	4b20      	ldr	r3, [pc, #128]	; (23f8 <peripherals_init+0xf8>)
    2378:	9500      	str	r5, [sp, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:86
  QueueHandle_t rxq_handle = xQueueCreateStatic(
    237a:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:88
  QueueHandle_t txq_handle = xQueueCreateStatic(
    237c:	4a1f      	ldr	r2, [pc, #124]	; (23fc <peripherals_init+0xfc>)
    237e:	2101      	movs	r1, #1
    2380:	2080      	movs	r0, #128	; 0x80
    2382:	f000 fcd9 	bl	2d38 <xQueueGenericCreateStatic>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:91
      sizeof(txq_storage), sizeof(char), txq_storage, &txq_struct);

  uart__enable_queues(UART__0, txq_handle, rxq_handle);
    2386:	4622      	mov	r2, r4
    2388:	4601      	mov	r1, r0
    238a:	4628      	mov	r0, r5
    238c:	f002 fb58 	bl	4a40 <uart__enable_queues>
peripherals_init():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:26
  ssp2__initialize(spi_sd_max_speed_khz);
    2390:	f645 50c0 	movw	r0, #24000	; 0x5dc0
    2394:	f002 fa68 	bl	4868 <ssp2__initialize>
peripherals_init__mount_sd_card():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:54
  if (FR_OK == f_mount(&sd_card_drive, default_drive, option_mount_now)) {
    2398:	2201      	movs	r2, #1
    239a:	4919      	ldr	r1, [pc, #100]	; (2400 <peripherals_init+0x100>)
    239c:	4819      	ldr	r0, [pc, #100]	; (2404 <peripherals_init+0x104>)
    239e:	f7ff f8bd 	bl	151c <f_mount>
peripherals_init():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:32
  printf("\n%s\n%s(): Low level startup\n%s\n", line, __FUNCTION__, mount_info);
    23a2:	4a19      	ldr	r2, [pc, #100]	; (2408 <peripherals_init+0x108>)
    23a4:	4b19      	ldr	r3, [pc, #100]	; (240c <peripherals_init+0x10c>)
    23a6:	491a      	ldr	r1, [pc, #104]	; (2410 <peripherals_init+0x110>)
    23a8:	42a8      	cmp	r0, r5
    23aa:	bf08      	it	eq
    23ac:	4613      	moveq	r3, r2
    23ae:	4a19      	ldr	r2, [pc, #100]	; (2414 <peripherals_init+0x114>)
    23b0:	4819      	ldr	r0, [pc, #100]	; (2418 <peripherals_init+0x118>)
peripherals_init__i2c_init():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:107
  i2c__initialize(I2C__2, i2c_speed_hz, clock__get_peripheral_clock_hz(),
                  &binary_semaphore_struct, &mutex_struct);

  for (unsigned slave_address = 2; slave_address <= 254; slave_address += 2) {
    if (i2c__detect(I2C__2, slave_address)) {
      printf("I2C slave detected at address: 0x%02X\n", slave_address);
    23b2:	4d1a      	ldr	r5, [pc, #104]	; (241c <peripherals_init+0x11c>)
peripherals_init():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:32
  printf("\n%s\n%s(): Low level startup\n%s\n", line, __FUNCTION__, mount_info);
    23b4:	f004 f958 	bl	6668 <iprintf>
peripherals_init__i2c_init():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:102
  i2c__initialize(I2C__2, i2c_speed_hz, clock__get_peripheral_clock_hz(),
    23b8:	f7fd ff34 	bl	224 <clock__get_peripheral_clock_hz>
    23bc:	4b18      	ldr	r3, [pc, #96]	; (2420 <peripherals_init+0x120>)
    23be:	9300      	str	r3, [sp, #0]
    23c0:	4602      	mov	r2, r0
    23c2:	4b18      	ldr	r3, [pc, #96]	; (2424 <peripherals_init+0x124>)
    23c4:	4918      	ldr	r1, [pc, #96]	; (2428 <peripherals_init+0x128>)
    23c6:	2002      	movs	r0, #2
    23c8:	f002 f8be 	bl	4548 <i2c__initialize>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:105
  for (unsigned slave_address = 2; slave_address <= 254; slave_address += 2) {
    23cc:	2402      	movs	r4, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:106
    if (i2c__detect(I2C__2, slave_address)) {
    23ce:	b2e1      	uxtb	r1, r4
    23d0:	2002      	movs	r0, #2
    23d2:	f002 f977 	bl	46c4 <i2c__detect>
    23d6:	b118      	cbz	r0, 23e0 <peripherals_init+0xe0>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:107
      printf("I2C slave detected at address: 0x%02X\n", slave_address);
    23d8:	4621      	mov	r1, r4
    23da:	4628      	mov	r0, r5
    23dc:	f004 f944 	bl	6668 <iprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:105
  for (unsigned slave_address = 2; slave_address <= 254; slave_address += 2) {
    23e0:	3402      	adds	r4, #2
    23e2:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
    23e6:	d1f2      	bne.n	23ce <peripherals_init+0xce>
peripherals_init():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:35
}
    23e8:	b005      	add	sp, #20
    23ea:	bd30      	pop	{r4, r5, pc}
    23ec:	10000150 	.word	0x10000150
    23f0:	10000444 	.word	0x10000444
    23f4:	10000424 	.word	0x10000424
    23f8:	1000074c 	.word	0x1000074c
    23fc:	100006cc 	.word	0x100006cc
    2400:	0000a481 	.word	0x0000a481
    2404:	10000494 	.word	0x10000494
    2408:	0000abde 	.word	0x0000abde
    240c:	0000abfc 	.word	0x0000abfc
    2410:	0000ac23 	.word	0x0000ac23
    2414:	0000abcd 	.word	0x0000abcd
    2418:	0000ac74 	.word	0x0000ac74
    241c:	0000ac94 	.word	0x0000ac94
    2420:	100003d4 	.word	0x100003d4
    2424:	10000384 	.word	0x10000384
    2428:	00061a80 	.word	0x00061a80

0000242c <spi2_mutex__acquire>:
spi2_mutex__acquire():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:10
#include "task.h"

static StaticSemaphore_t spi2_mutex_memory;
static SemaphoreHandle_t spi2_mutex_handle;

void spi2_mutex__acquire(void) {
    242c:	b510      	push	{r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:11
  if (!spi2_mutex_handle) {
    242e:	4c0a      	ldr	r4, [pc, #40]	; (2458 <spi2_mutex__acquire+0x2c>)
    2430:	6823      	ldr	r3, [r4, #0]
    2432:	b923      	cbnz	r3, 243e <spi2_mutex__acquire+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:12
    spi2_mutex_handle = xSemaphoreCreateMutexStatic(&spi2_mutex_memory);
    2434:	4909      	ldr	r1, [pc, #36]	; (245c <spi2_mutex__acquire+0x30>)
    2436:	2001      	movs	r0, #1
    2438:	f000 fd9c 	bl	2f74 <xQueueCreateMutexStatic>
    243c:	6020      	str	r0, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:17
    vTraceSetMutexName(spi2_mutex_handle, "spi2_mutex");
  }

  // Only acquire the mutex if the FreeRTOS is running
  if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
    243e:	f001 fc95 	bl	3d6c <xTaskGetSchedulerState>
    2442:	2802      	cmp	r0, #2
    2444:	d106      	bne.n	2454 <spi2_mutex__acquire+0x28>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:18
    xSemaphoreTake(spi2_mutex_handle, portMAX_DELAY);
    2446:	6820      	ldr	r0, [r4, #0]
    2448:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:20
  }
}
    244c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:18
    xSemaphoreTake(spi2_mutex_handle, portMAX_DELAY);
    2450:	f000 bef4 	b.w	323c <xQueueSemaphoreTake>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:20
}
    2454:	bd10      	pop	{r4, pc}
    2456:	bf00      	nop
    2458:	1000079c 	.word	0x1000079c
    245c:	100007a0 	.word	0x100007a0

00002460 <spi2_mutex__release>:
spi2_mutex__release():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:22

void spi2_mutex__release(void) {
    2460:	b510      	push	{r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:23
  if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
    2462:	f001 fc83 	bl	3d6c <xTaskGetSchedulerState>
    2466:	2802      	cmp	r0, #2
    2468:	d108      	bne.n	247c <spi2_mutex__release+0x1c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:24
    xSemaphoreGive(spi2_mutex_handle);
    246a:	4805      	ldr	r0, [pc, #20]	; (2480 <spi2_mutex__release+0x20>)
    246c:	2300      	movs	r3, #0
    246e:	461a      	mov	r2, r3
    2470:	4619      	mov	r1, r3
    2472:	6800      	ldr	r0, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:26
  }
}
    2474:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:24
    xSemaphoreGive(spi2_mutex_handle);
    2478:	f000 bcce 	b.w	2e18 <xQueueGenericSend>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:26
}
    247c:	bd10      	pop	{r4, pc}
    247e:	bf00      	nop
    2480:	1000079c 	.word	0x1000079c

00002484 <sys_time__one_minute_isr>:
sys_time__one_minute_isr():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:13

static const uint32_t sys_time__us_per_sec = UINT32_C(1) * 1000 * 1000;
static volatile uint32_t sys_time__one_minute_counter = 0;

static void sys_time__one_minute_isr(void) {
  ++sys_time__one_minute_counter;
    2484:	4a07      	ldr	r2, [pc, #28]	; (24a4 <sys_time__one_minute_isr+0x20>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:12
static void sys_time__one_minute_isr(void) {
    2486:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:13
  ++sys_time__one_minute_counter;
    2488:	6813      	ldr	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:16

  // Reset the HW timer manually and then clear the interrupt
  hw_timer__set_value(sys_time__hw_timer, 0);
    248a:	2100      	movs	r1, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:13
  ++sys_time__one_minute_counter;
    248c:	3301      	adds	r3, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:16
  hw_timer__set_value(sys_time__hw_timer, 0);
    248e:	4608      	mov	r0, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:13
  ++sys_time__one_minute_counter;
    2490:	6013      	str	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:16
  hw_timer__set_value(sys_time__hw_timer, 0);
    2492:	f001 ff7b 	bl	438c <hw_timer__set_value>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:17
  hw_timer__acknowledge_interrupt(sys_time__hw_timer, sys_time__hw_timer_mr);
    2496:	2100      	movs	r1, #0
    2498:	4608      	mov	r0, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:18
}
    249a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:17
  hw_timer__acknowledge_interrupt(sys_time__hw_timer, sys_time__hw_timer_mr);
    249e:	f001 bf61 	b.w	4364 <hw_timer__acknowledge_interrupt>
    24a2:	bf00      	nop
    24a4:	100007f0 	.word	0x100007f0

000024a8 <sys_time__init>:
sys_time__init():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:26
 *
 *                      P U B L I C    F U N C T I O N S
 *
 ******************************************************************************/

void sys_time__init(uint32_t peripheral_clock_hz) {
    24a8:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:32
  const uint32_t prescalar_for_1us =
      (peripheral_clock_hz / sys_time__us_per_sec) - 1;
  const uint32_t one_minute_in_us = UINT32_C(60) * 1000 * 1000;

  // Enable the timer with 1uS resolution with an interrupt
  hw_timer__enable(sys_time__hw_timer, prescalar_for_1us,
    24aa:	4a07      	ldr	r2, [pc, #28]	; (24c8 <sys_time__init+0x20>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:28
      (peripheral_clock_hz / sys_time__us_per_sec) - 1;
    24ac:	4907      	ldr	r1, [pc, #28]	; (24cc <sys_time__init+0x24>)
    24ae:	fbb0 f1f1 	udiv	r1, r0, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:32
  hw_timer__enable(sys_time__hw_timer, prescalar_for_1us,
    24b2:	2000      	movs	r0, #0
    24b4:	3901      	subs	r1, #1
    24b6:	f001 ff1f 	bl	42f8 <hw_timer__enable>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:34
                   sys_time__one_minute_isr);
  hw_timer__enable_match_isr(sys_time__hw_timer, sys_time__hw_timer_mr,
    24ba:	2100      	movs	r1, #0
    24bc:	4a04      	ldr	r2, [pc, #16]	; (24d0 <sys_time__init+0x28>)
    24be:	4608      	mov	r0, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:36
                             one_minute_in_us);
}
    24c0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:34
  hw_timer__enable_match_isr(sys_time__hw_timer, sys_time__hw_timer_mr,
    24c4:	f001 bf3c 	b.w	4340 <hw_timer__enable_match_isr>
    24c8:	00002485 	.word	0x00002485
    24cc:	000f4240 	.word	0x000f4240
    24d0:	03938700 	.word	0x03938700

000024d4 <sys_time__get_uptime_us>:
sys_time__get_uptime_us():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:38

uint64_t sys_time__get_uptime_us(void) {
    24d4:	b570      	push	{r4, r5, r6, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:53
   * and simplifies the logic of reading sys_time__sec_counter and the 32-bit HW
   * timer value.
   */
  do {
    before_us = hw_timer__get_value(sys_time__hw_timer);
    minutes = sys_time__one_minute_counter;
    24d6:	4e08      	ldr	r6, [pc, #32]	; (24f8 <sys_time__get_uptime_us+0x24>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:52 (discriminator 1)
    before_us = hw_timer__get_value(sys_time__hw_timer);
    24d8:	2000      	movs	r0, #0
    24da:	f001 ff4f 	bl	437c <hw_timer__get_value>
    24de:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:54 (discriminator 1)
    after_us = hw_timer__get_value(sys_time__hw_timer);
    24e0:	2000      	movs	r0, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:53 (discriminator 1)
    minutes = sys_time__one_minute_counter;
    24e2:	6834      	ldr	r4, [r6, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:54 (discriminator 1)
    after_us = hw_timer__get_value(sys_time__hw_timer);
    24e4:	f001 ff4a 	bl	437c <hw_timer__get_value>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:55 (discriminator 1)
  } while (after_us < before_us);
    24e8:	4285      	cmp	r5, r0
    24ea:	d8f5      	bhi.n	24d8 <sys_time__get_uptime_us+0x4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:61

  uint64_t uptime_us = after_us;
  uptime_us += ((uint64_t)minutes * 60 * sys_time__us_per_sec);

  return uptime_us;
}
    24ec:	4b03      	ldr	r3, [pc, #12]	; (24fc <sys_time__get_uptime_us+0x28>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:58
  uptime_us += ((uint64_t)minutes * 60 * sys_time__us_per_sec);
    24ee:	2100      	movs	r1, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:61
}
    24f0:	fbe3 0104 	umlal	r0, r1, r3, r4
    24f4:	bd70      	pop	{r4, r5, r6, pc}
    24f6:	bf00      	nop
    24f8:	100007f0 	.word	0x100007f0
    24fc:	03938700 	.word	0x03938700

00002500 <sys_time__get_uptime_ms>:
sys_time__get_uptime_ms():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:63

uint64_t sys_time__get_uptime_ms(void) {
    2500:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:64
  const uint64_t us = sys_time__get_uptime_us();
    2502:	f7ff ffe7 	bl	24d4 <sys_time__get_uptime_us>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:65
  return (us / 1000);
    2506:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    250a:	2300      	movs	r3, #0
    250c:	f002 fe48 	bl	51a0 <__aeabi_uldivmod>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:66
}
    2510:	bd08      	pop	{r3, pc}

00002512 <uart_puts__polled>:
uart_puts__polled():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:55
  }

  return would_print;
}

void uart_puts__polled(uart_e uart, const char *message) {
    2512:	b570      	push	{r4, r5, r6, lr}
    2514:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:56
  const size_t message_length = strlen(message);
    2516:	4608      	mov	r0, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:55
void uart_puts__polled(uart_e uart, const char *message) {
    2518:	460c      	mov	r4, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:56
  const size_t message_length = strlen(message);
    251a:	f004 fa2b 	bl	6974 <strlen>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:57
  for (size_t byte = 0; byte < message_length; byte++) {
    251e:	1826      	adds	r6, r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:57 (discriminator 1)
    2520:	42b4      	cmp	r4, r6
    2522:	d105      	bne.n	2530 <uart_puts__polled+0x1e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:60
    uart__polled_put(uart, message[byte]);
  }
  uart__polled_put(uart, '\n');
    2524:	4628      	mov	r0, r5
    2526:	210a      	movs	r1, #10
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:61
    2528:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:60
  uart__polled_put(uart, '\n');
    252c:	f002 bac0 	b.w	4ab0 <uart__polled_put>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:58 (discriminator 3)
    uart__polled_put(uart, message[byte]);
    2530:	f814 1b01 	ldrb.w	r1, [r4], #1
    2534:	4628      	mov	r0, r5
    2536:	f002 fabb 	bl	4ab0 <uart__polled_put>
    253a:	e7f1      	b.n	2520 <uart_puts__polled+0xe>

0000253c <vApplicationStackOverflowHook>:
vApplicationStackOverflowHook():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:27
}

/// Invoked by FreeRTOS when it detects stack overflow: #if (0 !=
/// configCHECK_FOR_STACK_OVERFLOW)
void vApplicationStackOverflowHook(TaskHandle_t task_handle,
                                   signed char *task_name) {
    253c:	460c      	mov	r4, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:28
  uart_puts__polled(UART__0, "stack overflow by this task:");
    253e:	2000      	movs	r0, #0
    2540:	4904      	ldr	r1, [pc, #16]	; (2554 <vApplicationStackOverflowHook+0x18>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:27
                                   signed char *task_name) {
    2542:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:28
  uart_puts__polled(UART__0, "stack overflow by this task:");
    2544:	f7ff ffe5 	bl	2512 <uart_puts__polled>
halt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:19
  uart_puts__polled(UART__0, message);
    2548:	4621      	mov	r1, r4
    254a:	2000      	movs	r0, #0
    254c:	f7ff ffe1 	bl	2512 <uart_puts__polled>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:21
  }
    2550:	e7fe      	b.n	2550 <vApplicationStackOverflowHook+0x14>
    2552:	bf00      	nop
    2554:	0000aded 	.word	0x0000aded

00002558 <vApplicationMallocFailedHook>:
vApplicationMallocFailedHook():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:34
  halt((const char *)task_name);
}

// Invoked by FreeRTOS when there pvPortMalloc() function has encountered NULL
// pointer to memory request #if (0 != configUSE_MALLOC_FAILED_HOOK)
void vApplicationMallocFailedHook(void) {
    2558:	b508      	push	{r3, lr}
halt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:19
  uart_puts__polled(UART__0, message);
    255a:	4902      	ldr	r1, [pc, #8]	; (2564 <vApplicationMallocFailedHook+0xc>)
    255c:	2000      	movs	r0, #0
    255e:	f7ff ffd8 	bl	2512 <uart_puts__polled>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:21
  }
    2562:	e7fe      	b.n	2562 <vApplicationMallocFailedHook+0xa>
    2564:	0000adb3 	.word	0x0000adb3

00002568 <vApplicationIdleHook>:
vApplicationIdleHook():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:44
 * FreeRTOS note:
 * vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES, CALL A FUNCTION
 * THAT MIGHT BLOCK #if (0 != configUSE_IDLE_HOOK)
 */
void vApplicationIdleHook(void) {
  LPC_SC->PCON = 0; // Enter sleep mode
    2568:	4b02      	ldr	r3, [pc, #8]	; (2574 <vApplicationIdleHook+0xc>)
    256a:	2200      	movs	r2, #0
    256c:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:45
  __asm__("WFI");   // Wait for interrupt
    2570:	bf30      	wfi
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:46
}
    2572:	4770      	bx	lr
    2574:	400fc000 	.word	0x400fc000

00002578 <configASSERT_callback>:
configASSERT_callback():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:55
void vApplicationTickHook(void) {
  ; // This code is invoked during each RTOS tick interrupt
}

// This is needed when we use '#ifdef configASSERT'
void configASSERT_callback(unsigned line, const char *message) {
    2578:	b508      	push	{r3, lr}
    257a:	460c      	mov	r4, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:56
  uart_puts__polled(UART__0, "FreeRTOS ASSERT() occurred indicating an error "
    257c:	2000      	movs	r0, #0
    257e:	490a      	ldr	r1, [pc, #40]	; (25a8 <configASSERT_callback+0x30>)
    2580:	f7ff ffc7 	bl	2512 <uart_puts__polled>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:58
                             "condition that should NEVER happen");
  uart_puts__polled(
    2584:	4909      	ldr	r1, [pc, #36]	; (25ac <configASSERT_callback+0x34>)
    2586:	2000      	movs	r0, #0
    2588:	f7ff ffc3 	bl	2512 <uart_puts__polled>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:61
      UART__0,
      " - Did you call a blocking API or non FromISR() API inside an ISR?");
  uart_puts__polled(UART__0,
    258c:	4908      	ldr	r1, [pc, #32]	; (25b0 <configASSERT_callback+0x38>)
    258e:	2000      	movs	r0, #0
    2590:	f7ff ffbf 	bl	2512 <uart_puts__polled>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:63
                    " - Did you forget to use fprintf(stderr) in an ISR?");
  uart_puts__polled(UART__0, "Here is the line of code that halted the CPU: ");
    2594:	4907      	ldr	r1, [pc, #28]	; (25b4 <configASSERT_callback+0x3c>)
    2596:	2000      	movs	r0, #0
    2598:	f7ff ffbb 	bl	2512 <uart_puts__polled>
halt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:19
  uart_puts__polled(UART__0, message);
    259c:	4621      	mov	r1, r4
    259e:	2000      	movs	r0, #0
    25a0:	f7ff ffb7 	bl	2512 <uart_puts__polled>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:21
  }
    25a4:	e7fe      	b.n	25a4 <configASSERT_callback+0x2c>
    25a6:	bf00      	nop
    25a8:	0000acbb 	.word	0x0000acbb
    25ac:	0000ad0d 	.word	0x0000ad0d
    25b0:	0000ad50 	.word	0x0000ad50
    25b4:	0000ad84 	.word	0x0000ad84

000025b8 <vApplicationGetIdleTaskMemory>:
vApplicationGetIdleTaskMemory():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:75
                                   StackType_t **ppxIdleTaskStackBuffer,
                                   uint32_t *pulIdleTaskStackSize) {
  static StaticTask_t xIdleTaskTCB;
  static StackType_t uxIdleTaskStack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer = &xIdleTaskTCB;     // memory for the idle task
    25b8:	4b03      	ldr	r3, [pc, #12]	; (25c8 <vApplicationGetIdleTaskMemory+0x10>)
    25ba:	6003      	str	r3, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:76
  *ppxIdleTaskStackBuffer = uxIdleTaskStack; // stack memory for the idle task
    25bc:	4b03      	ldr	r3, [pc, #12]	; (25cc <vApplicationGetIdleTaskMemory+0x14>)
    25be:	600b      	str	r3, [r1, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:77
  *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE; // stack memory size
    25c0:	2364      	movs	r3, #100	; 0x64
    25c2:	6013      	str	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:78
}
    25c4:	4770      	bx	lr
    25c6:	bf00      	nop
    25c8:	10000990 	.word	0x10000990
    25cc:	10000800 	.word	0x10000800

000025d0 <freertos_hooks__get_run_time_counter_value>:
freertos_hooks__get_run_time_counter_value():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:81

// #if (0 != configGENERATE_RUN_TIME_STATS)
uint32_t freertos_hooks__get_run_time_counter_value(void) {
    25d0:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:82
  return (uint32_t)(sys_time__get_uptime_us() -
    25d2:	f7ff ff7f 	bl	24d4 <sys_time__get_uptime_us>
    25d6:	4b02      	ldr	r3, [pc, #8]	; (25e0 <freertos_hooks__get_run_time_counter_value+0x10>)
    25d8:	681b      	ldr	r3, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:84
                    freertos_run_time_counter_offset);
}
    25da:	1ac0      	subs	r0, r0, r3
    25dc:	bd08      	pop	{r3, pc}
    25de:	bf00      	nop
    25e0:	100007f8 	.word	0x100007f8

000025e4 <vPortSVCHandler_wrapper>:
invoke_function_in_wrapper():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/freertos_interrupt_handlers.c:25
 * Calling ISR in a wrapper causes RTOS crash when a task is using floating-point operations
 * We need to fully investigate it before re-enabling vRunTimeStatIsrEntry() and vRunTimeStatIsrExit()
 */
static void invoke_function_in_wrapper(function__void_f function) {
  // vRunTimeStatIsrEntry();
  function();
    25e4:	f000 b874 	b.w	26d0 <vPortSVCHandler>

000025e8 <xPortPendSVHandler_wrapper>:
    25e8:	f000 b8ba 	b.w	2760 <xPortPendSVHandler>

000025ec <xPortSysTickHandler_wrapper>:
    25ec:	f000 b8ea 	b.w	27c4 <xPortSysTickHandler>

000025f0 <pvPortMalloc>:
pvPortMalloc():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/mem_mang/heap_3.c.inc:59
#endif

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
    25f0:	b510      	push	{r4, lr}
    25f2:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/mem_mang/heap_3.c.inc:62
void *pvReturn;

	vTaskSuspendAll();
    25f4:	f001 f912 	bl	381c <vTaskSuspendAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/mem_mang/heap_3.c.inc:64
	{
		pvReturn = malloc( xWantedSize );
    25f8:	4620      	mov	r0, r4
    25fa:	f002 ffd7 	bl	55ac <malloc>
    25fe:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/mem_mang/heap_3.c.inc:67
		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
    2600:	f001 f9ac 	bl	395c <xTaskResumeAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/mem_mang/heap_3.c.inc:71

	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
	{
		if( pvReturn == NULL )
    2604:	b90c      	cbnz	r4, 260a <pvPortMalloc+0x1a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/mem_mang/heap_3.c.inc:74
		{
			extern void vApplicationMallocFailedHook( void );
			vApplicationMallocFailedHook();
    2606:	f7ff ffa7 	bl	2558 <vApplicationMallocFailedHook>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/mem_mang/heap_3.c.inc:80
		}
	}
	#endif

	return pvReturn;
}
    260a:	4620      	mov	r0, r4
    260c:	bd10      	pop	{r4, pc}

0000260e <vPortFree>:
vPortFree():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/mem_mang/heap_3.c.inc:84
/*-----------------------------------------------------------*/

void vPortFree( void *pv )
{
    260e:	b510      	push	{r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/mem_mang/heap_3.c.inc:85
	if( pv )
    2610:	4604      	mov	r4, r0
    2612:	b140      	cbz	r0, 2626 <vPortFree+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/mem_mang/heap_3.c.inc:87
	{
		vTaskSuspendAll();
    2614:	f001 f902 	bl	381c <vTaskSuspendAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/mem_mang/heap_3.c.inc:89
		{
			free( pv );
    2618:	4620      	mov	r0, r4
    261a:	f002 ffcf 	bl	55bc <free>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/mem_mang/heap_3.c.inc:94
			traceFREE( pv, 0 );
		}
		( void ) xTaskResumeAll();
	}
}
    261e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/mem_mang/heap_3.c.inc:92
		( void ) xTaskResumeAll();
    2622:	f001 b99b 	b.w	395c <xTaskResumeAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/mem_mang/heap_3.c.inc:94
}
    2626:	bd10      	pop	{r4, pc}

00002628 <prvPortStartFirstTask>:
prvPortStartFirstTask():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:279
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
    2628:	4808      	ldr	r0, [pc, #32]	; (264c <prvPortStartFirstTask+0x24>)
    262a:	6800      	ldr	r0, [r0, #0]
    262c:	6800      	ldr	r0, [r0, #0]
    262e:	f380 8808 	msr	MSP, r0
    2632:	f04f 0000 	mov.w	r0, #0
    2636:	f380 8814 	msr	CONTROL, r0
    263a:	b662      	cpsie	i
    263c:	b661      	cpsie	f
    263e:	f3bf 8f4f 	dsb	sy
    2642:	f3bf 8f6f 	isb	sy
    2646:	df00      	svc	0
    2648:	bf00      	nop
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:293
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
    264a:	0000      	.short	0x0000
    264c:	e000ed08 	.word	0xe000ed08

00002650 <vPortEnableVFP>:
vPortEnableVFP():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:715
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
    2650:	f8df 000c 	ldr.w	r0, [pc, #12]	; 2660 <vPortEnableVFP+0x10>
    2654:	6801      	ldr	r1, [r0, #0]
    2656:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
    265a:	6001      	str	r1, [r0, #0]
    265c:	4770      	bx	lr
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:724
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
    265e:	0000      	.short	0x0000
    2660:	e000ed88 	.word	0xe000ed88

00002664 <prvTaskExitError>:
prvTaskExitError():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:230
{
    2664:	b507      	push	{r0, r1, r2, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:231
volatile uint32_t ulDummy = 0;
    2666:	2300      	movs	r3, #0
    2668:	9301      	str	r3, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:239
	configASSERT( uxCriticalNesting == ~0UL );
    266a:	4b0b      	ldr	r3, [pc, #44]	; (2698 <prvTaskExitError+0x34>)
    266c:	681b      	ldr	r3, [r3, #0]
    266e:	3301      	adds	r3, #1
    2670:	d004      	beq.n	267c <prvTaskExitError+0x18>
    2672:	490a      	ldr	r1, [pc, #40]	; (269c <prvTaskExitError+0x38>)
    2674:	20ef      	movs	r0, #239	; 0xef
    2676:	f7ff ff7f 	bl	2578 <configASSERT_callback>
    267a:	e7fe      	b.n	267a <prvTaskExitError+0x16>
vPortRaiseBASEPRI():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:195

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
    267c:	f04f 0318 	mov.w	r3, #24
    2680:	f383 8811 	msr	BASEPRI, r3
    2684:	f3bf 8f6f 	isb	sy
    2688:	f3bf 8f4f 	dsb	sy
prvTaskExitError():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:241 (discriminator 1)
	while( ulDummy == 0 )
    268c:	9b01      	ldr	r3, [sp, #4]
    268e:	2b00      	cmp	r3, #0
    2690:	d0fc      	beq.n	268c <prvTaskExitError+0x28>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:251
}
    2692:	b003      	add	sp, #12
    2694:	f85d fb04 	ldr.w	pc, [sp], #4
    2698:	100009f4 	.word	0x100009f4
    269c:	0000ae0a 	.word	0x0000ae0a

000026a0 <pxPortInitialiseStack>:
pxPortInitialiseStack():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:208
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
    26a0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
    26a4:	f840 3c04 	str.w	r3, [r0, #-4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:212
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
    26a8:	4b07      	ldr	r3, [pc, #28]	; (26c8 <pxPortInitialiseStack+0x28>)
    26aa:	f840 3c0c 	str.w	r3, [r0, #-12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:210
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
    26ae:	f021 0101 	bic.w	r1, r1, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:221
	*pxTopOfStack = portINITIAL_EXC_RETURN;
    26b2:	f06f 0302 	mvn.w	r3, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:210
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
    26b6:	f840 1c08 	str.w	r1, [r0, #-8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:216
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
    26ba:	f840 2c20 	str.w	r2, [r0, #-32]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:221
	*pxTopOfStack = portINITIAL_EXC_RETURN;
    26be:	f840 3c24 	str.w	r3, [r0, #-36]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:226
}
    26c2:	3844      	subs	r0, #68	; 0x44
    26c4:	4770      	bx	lr
    26c6:	bf00      	nop
    26c8:	00002665 	.word	0x00002665
    26cc:	ffffffff 	.word	0xffffffff

000026d0 <vPortSVCHandler>:
vPortSVCHandler():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:256
	__asm volatile (
    26d0:	4b07      	ldr	r3, [pc, #28]	; (26f0 <pxCurrentTCBConst2>)
    26d2:	6819      	ldr	r1, [r3, #0]
    26d4:	6808      	ldr	r0, [r1, #0]
    26d6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    26da:	f380 8809 	msr	PSP, r0
    26de:	f3bf 8f6f 	isb	sy
    26e2:	f04f 0000 	mov.w	r0, #0
    26e6:	f380 8811 	msr	BASEPRI, r0
    26ea:	4770      	bx	lr
    26ec:	f3af 8000 	nop.w

000026f0 <pxCurrentTCBConst2>:
    26f0:	100009f8 	.word	0x100009f8

000026f4 <vPortEnterCritical>:
vPortEnterCritical():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:416
{
    26f4:	b508      	push	{r3, lr}
vPortRaiseBASEPRI():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:195
    26f6:	f04f 0318 	mov.w	r3, #24
    26fa:	f383 8811 	msr	BASEPRI, r3
    26fe:	f3bf 8f6f 	isb	sy
    2702:	f3bf 8f4f 	dsb	sy
vPortEnterCritical():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:418
	uxCriticalNesting++;
    2706:	4a09      	ldr	r2, [pc, #36]	; (272c <vPortEnterCritical+0x38>)
    2708:	6813      	ldr	r3, [r2, #0]
    270a:	3301      	adds	r3, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:425
	if( uxCriticalNesting == 1 )
    270c:	2b01      	cmp	r3, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:418
	uxCriticalNesting++;
    270e:	6013      	str	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:425
	if( uxCriticalNesting == 1 )
    2710:	d10a      	bne.n	2728 <vPortEnterCritical+0x34>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:427
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
    2712:	4b07      	ldr	r3, [pc, #28]	; (2730 <vPortEnterCritical+0x3c>)
    2714:	681b      	ldr	r3, [r3, #0]
    2716:	f013 0fff 	tst.w	r3, #255	; 0xff
    271a:	d005      	beq.n	2728 <vPortEnterCritical+0x34>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:427 (discriminator 1)
    271c:	4905      	ldr	r1, [pc, #20]	; (2734 <vPortEnterCritical+0x40>)
    271e:	f240 10ab 	movw	r0, #427	; 0x1ab
    2722:	f7ff ff29 	bl	2578 <configASSERT_callback>
    2726:	e7fe      	b.n	2726 <vPortEnterCritical+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:429
}
    2728:	bd08      	pop	{r3, pc}
    272a:	bf00      	nop
    272c:	100009f4 	.word	0x100009f4
    2730:	e000ed04 	.word	0xe000ed04
    2734:	0000ae24 	.word	0x0000ae24

00002738 <vPortExitCritical>:
vPortExitCritical():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:434
	configASSERT( uxCriticalNesting );
    2738:	4a07      	ldr	r2, [pc, #28]	; (2758 <vPortExitCritical+0x20>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:433
{
    273a:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:434
	configASSERT( uxCriticalNesting );
    273c:	6813      	ldr	r3, [r2, #0]
    273e:	b92b      	cbnz	r3, 274c <vPortExitCritical+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:434 (discriminator 1)
    2740:	4906      	ldr	r1, [pc, #24]	; (275c <vPortExitCritical+0x24>)
    2742:	f44f 70d9 	mov.w	r0, #434	; 0x1b2
    2746:	f7ff ff17 	bl	2578 <configASSERT_callback>
    274a:	e7fe      	b.n	274a <vPortExitCritical+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:435
	uxCriticalNesting--;
    274c:	3b01      	subs	r3, #1
    274e:	6013      	str	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:436
	if( uxCriticalNesting == 0 )
    2750:	b90b      	cbnz	r3, 2756 <vPortExitCritical+0x1e>
vPortSetBASEPRI():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
    2752:	f383 8811 	msr	BASEPRI, r3
vPortExitCritical():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:440
}
    2756:	bd08      	pop	{r3, pc}
    2758:	100009f4 	.word	0x100009f4
    275c:	0000ae59 	.word	0x0000ae59

00002760 <xPortPendSVHandler>:
xPortPendSVHandler():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:447
	__asm volatile
    2760:	f3ef 8009 	mrs	r0, PSP
    2764:	f3bf 8f6f 	isb	sy
    2768:	4b15      	ldr	r3, [pc, #84]	; (27c0 <pxCurrentTCBConst>)
    276a:	681a      	ldr	r2, [r3, #0]
    276c:	f01e 0f10 	tst.w	lr, #16
    2770:	bf08      	it	eq
    2772:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
    2776:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    277a:	6010      	str	r0, [r2, #0]
    277c:	e92d 0009 	stmdb	sp!, {r0, r3}
    2780:	f04f 0018 	mov.w	r0, #24
    2784:	f380 8811 	msr	BASEPRI, r0
    2788:	f3bf 8f4f 	dsb	sy
    278c:	f3bf 8f6f 	isb	sy
    2790:	f001 f97e 	bl	3a90 <vTaskSwitchContext>
    2794:	f04f 0000 	mov.w	r0, #0
    2798:	f380 8811 	msr	BASEPRI, r0
    279c:	bc09      	pop	{r0, r3}
    279e:	6819      	ldr	r1, [r3, #0]
    27a0:	6808      	ldr	r0, [r1, #0]
    27a2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    27a6:	f01e 0f10 	tst.w	lr, #16
    27aa:	bf08      	it	eq
    27ac:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
    27b0:	f380 8809 	msr	PSP, r0
    27b4:	f3bf 8f6f 	isb	sy
    27b8:	4770      	bx	lr
    27ba:	bf00      	nop
    27bc:	f3af 8000 	nop.w

000027c0 <pxCurrentTCBConst>:
    27c0:	100009f8 	.word	0x100009f8

000027c4 <xPortSysTickHandler>:
xPortSysTickHandler():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:501
{
    27c4:	b508      	push	{r3, lr}
vPortRaiseBASEPRI():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:195
	__asm volatile
    27c6:	f04f 0318 	mov.w	r3, #24
    27ca:	f383 8811 	msr	BASEPRI, r3
    27ce:	f3bf 8f6f 	isb	sy
    27d2:	f3bf 8f4f 	dsb	sy
xPortSysTickHandler():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:509
		if( xTaskIncrementTick() != pdFALSE )
    27d6:	f001 f82f 	bl	3838 <xTaskIncrementTick>
    27da:	b118      	cbz	r0, 27e4 <xPortSysTickHandler+0x20>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:513
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
    27dc:	4b03      	ldr	r3, [pc, #12]	; (27ec <xPortSysTickHandler+0x28>)
    27de:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    27e2:	601a      	str	r2, [r3, #0]
vPortSetBASEPRI():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
	__asm volatile
    27e4:	2300      	movs	r3, #0
    27e6:	f383 8811 	msr	BASEPRI, r3
xPortSysTickHandler():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:517
}
    27ea:	bd08      	pop	{r3, pc}
    27ec:	e000ed04 	.word	0xe000ed04

000027f0 <vPortSetupTimerInterrupt>:
vPortSetupTimerInterrupt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:692
{
    27f0:	b510      	push	{r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:704
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
    27f2:	4a08      	ldr	r2, [pc, #32]	; (2814 <vPortSetupTimerInterrupt+0x24>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:703
	portNVIC_SYSTICK_CTRL_REG = 0UL;
    27f4:	4c08      	ldr	r4, [pc, #32]	; (2818 <vPortSetupTimerInterrupt+0x28>)
    27f6:	2300      	movs	r3, #0
    27f8:	6023      	str	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:704
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
    27fa:	6013      	str	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:707
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
    27fc:	f7fd fd0e 	bl	21c <clock__get_core_clock_hz>
    2800:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    2804:	fbb0 f0f3 	udiv	r0, r0, r3
    2808:	4b04      	ldr	r3, [pc, #16]	; (281c <vPortSetupTimerInterrupt+0x2c>)
    280a:	3801      	subs	r0, #1
    280c:	6018      	str	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:708
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
    280e:	2307      	movs	r3, #7
    2810:	6023      	str	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:709
}
    2812:	bd10      	pop	{r4, pc}
    2814:	e000e018 	.word	0xe000e018
    2818:	e000e010 	.word	0xe000e010
    281c:	e000e014 	.word	0xe000e014

00002820 <xPortStartScheduler>:
xPortStartScheduler():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:308
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
    2820:	4b33      	ldr	r3, [pc, #204]	; (28f0 <xPortStartScheduler+0xd0>)
    2822:	4a34      	ldr	r2, [pc, #208]	; (28f4 <xPortStartScheduler+0xd4>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:300
{
    2824:	b513      	push	{r0, r1, r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:308
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
    2826:	6819      	ldr	r1, [r3, #0]
    2828:	4291      	cmp	r1, r2
    282a:	d105      	bne.n	2838 <xPortStartScheduler+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:308 (discriminator 1)
    282c:	4932      	ldr	r1, [pc, #200]	; (28f8 <xPortStartScheduler+0xd8>)
    282e:	f44f 709a 	mov.w	r0, #308	; 0x134
    2832:	f7ff fea1 	bl	2578 <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:308 (discriminator 2)
    2836:	e7fe      	b.n	2836 <xPortStartScheduler+0x16>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:309
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
    2838:	681a      	ldr	r2, [r3, #0]
    283a:	4b30      	ldr	r3, [pc, #192]	; (28fc <xPortStartScheduler+0xdc>)
    283c:	429a      	cmp	r2, r3
    283e:	d105      	bne.n	284c <xPortStartScheduler+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:309 (discriminator 1)
    2840:	492f      	ldr	r1, [pc, #188]	; (2900 <xPortStartScheduler+0xe0>)
    2842:	f240 1035 	movw	r0, #309	; 0x135
    2846:	f7ff fe97 	bl	2578 <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:309 (discriminator 3)
    284a:	e7fe      	b.n	284a <xPortStartScheduler+0x2a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:323
		ulOriginalPriority = *pucFirstUserPriorityRegister;
    284c:	4b2d      	ldr	r3, [pc, #180]	; (2904 <xPortStartScheduler+0xe4>)
    284e:	781a      	ldrb	r2, [r3, #0]
    2850:	b2d2      	uxtb	r2, r2
    2852:	9201      	str	r2, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:327
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
    2854:	22ff      	movs	r2, #255	; 0xff
    2856:	701a      	strb	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:330
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
    2858:	781b      	ldrb	r3, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:333
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
    285a:	4a2b      	ldr	r2, [pc, #172]	; (2908 <xPortStartScheduler+0xe8>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:330
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
    285c:	b2db      	uxtb	r3, r3
    285e:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:333
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
    2862:	f89d 3003 	ldrb.w	r3, [sp, #3]
    2866:	f003 0318 	and.w	r3, r3, #24
    286a:	7013      	strb	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:337
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
    286c:	4a27      	ldr	r2, [pc, #156]	; (290c <xPortStartScheduler+0xec>)
    286e:	2307      	movs	r3, #7
    2870:	6013      	str	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:338
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
    2872:	2100      	movs	r1, #0
    2874:	f89d 0003 	ldrb.w	r0, [sp, #3]
    2878:	0600      	lsls	r0, r0, #24
    287a:	f103 34ff 	add.w	r4, r3, #4294967295	; 0xffffffff
    287e:	d409      	bmi.n	2894 <xPortStartScheduler+0x74>
    2880:	b111      	cbz	r1, 2888 <xPortStartScheduler+0x68>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:349
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == __NVIC_PRIO_BITS );
    2882:	2b02      	cmp	r3, #2
    2884:	6013      	str	r3, [r2, #0]
    2886:	d00e      	beq.n	28a6 <xPortStartScheduler+0x86>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:349 (discriminator 1)
    2888:	4921      	ldr	r1, [pc, #132]	; (2910 <xPortStartScheduler+0xf0>)
    288a:	f240 105d 	movw	r0, #349	; 0x15d
    288e:	f7ff fe73 	bl	2578 <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:349 (discriminator 4)
    2892:	e7fe      	b.n	2892 <xPortStartScheduler+0x72>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:341
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
    2894:	f89d 3003 	ldrb.w	r3, [sp, #3]
    2898:	005b      	lsls	r3, r3, #1
    289a:	b2db      	uxtb	r3, r3
    289c:	f88d 3003 	strb.w	r3, [sp, #3]
    28a0:	2101      	movs	r1, #1
    28a2:	4623      	mov	r3, r4
    28a4:	e7e6      	b.n	2874 <xPortStartScheduler+0x54>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:365
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
    28a6:	f44f 7300 	mov.w	r3, #512	; 0x200
    28aa:	6013      	str	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:369
		*pucFirstUserPriorityRegister = ulOriginalPriority;
    28ac:	9b01      	ldr	r3, [sp, #4]
    28ae:	4a15      	ldr	r2, [pc, #84]	; (2904 <xPortStartScheduler+0xe4>)
    28b0:	b2db      	uxtb	r3, r3
    28b2:	7013      	strb	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:374
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
    28b4:	4b17      	ldr	r3, [pc, #92]	; (2914 <xPortStartScheduler+0xf4>)
    28b6:	681a      	ldr	r2, [r3, #0]
    28b8:	f442 0278 	orr.w	r2, r2, #16252928	; 0xf80000
    28bc:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:375
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
    28be:	681a      	ldr	r2, [r3, #0]
    28c0:	f042 4278 	orr.w	r2, r2, #4160749568	; 0xf8000000
    28c4:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:379
	vPortSetupTimerInterrupt();
    28c6:	f7ff ff93 	bl	27f0 <vPortSetupTimerInterrupt>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:382
	uxCriticalNesting = 0;
    28ca:	4b13      	ldr	r3, [pc, #76]	; (2918 <xPortStartScheduler+0xf8>)
    28cc:	2400      	movs	r4, #0
    28ce:	601c      	str	r4, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:385
	vPortEnableVFP();
    28d0:	f7ff febe 	bl	2650 <vPortEnableVFP>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:388
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
    28d4:	4a11      	ldr	r2, [pc, #68]	; (291c <xPortStartScheduler+0xfc>)
    28d6:	6813      	ldr	r3, [r2, #0]
    28d8:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
    28dc:	6013      	str	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:391
	prvPortStartFirstTask();
    28de:	f7ff fea3 	bl	2628 <prvPortStartFirstTask>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:399
	vTaskSwitchContext();
    28e2:	f001 f8d5 	bl	3a90 <vTaskSwitchContext>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:400
	prvTaskExitError();
    28e6:	f7ff febd 	bl	2664 <prvTaskExitError>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:404
}
    28ea:	4620      	mov	r0, r4
    28ec:	b002      	add	sp, #8
    28ee:	bd10      	pop	{r4, pc}
    28f0:	e000ed00 	.word	0xe000ed00
    28f4:	410fc271 	.word	0x410fc271
    28f8:	0000aed7 	.word	0x0000aed7
    28fc:	410fc270 	.word	0x410fc270
    2900:	0000aefa 	.word	0x0000aefa
    2904:	e000e400 	.word	0xe000e400
    2908:	100009ec 	.word	0x100009ec
    290c:	100009f0 	.word	0x100009f0
    2910:	0000af1d 	.word	0x0000af1d
    2914:	e000ed20 	.word	0xe000ed20
    2918:	100009f4 	.word	0x100009f4
    291c:	e000ef34 	.word	0xe000ef34

00002920 <vPortValidateInterruptPriority>:
vPortValidateInterruptPriority():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:730
/*-----------------------------------------------------------*/

#if( configASSERT_DEFINED == 1 )

	void vPortValidateInterruptPriority( void )
	{
    2920:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:735
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
    2922:	f3ef 8305 	mrs	r3, IPSR
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:738

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
    2926:	2b0f      	cmp	r3, #15
    2928:	d90b      	bls.n	2942 <vPortValidateInterruptPriority+0x22>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:741
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
    292a:	4a0d      	ldr	r2, [pc, #52]	; (2960 <vPortValidateInterruptPriority+0x40>)
    292c:	5c9b      	ldrb	r3, [r3, r2]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:766
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
    292e:	4a0d      	ldr	r2, [pc, #52]	; (2964 <vPortValidateInterruptPriority+0x44>)
    2930:	7812      	ldrb	r2, [r2, #0]
    2932:	429a      	cmp	r2, r3
    2934:	d905      	bls.n	2942 <vPortValidateInterruptPriority+0x22>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:766 (discriminator 1)
    2936:	490c      	ldr	r1, [pc, #48]	; (2968 <vPortValidateInterruptPriority+0x48>)
    2938:	f240 20fe 	movw	r0, #766	; 0x2fe
    293c:	f7ff fe1c 	bl	2578 <configASSERT_callback>
    2940:	e7fe      	b.n	2940 <vPortValidateInterruptPriority+0x20>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:782
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
    2942:	4b0a      	ldr	r3, [pc, #40]	; (296c <vPortValidateInterruptPriority+0x4c>)
    2944:	4a0a      	ldr	r2, [pc, #40]	; (2970 <vPortValidateInterruptPriority+0x50>)
    2946:	681b      	ldr	r3, [r3, #0]
    2948:	6812      	ldr	r2, [r2, #0]
    294a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
    294e:	4293      	cmp	r3, r2
    2950:	d905      	bls.n	295e <vPortValidateInterruptPriority+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:782 (discriminator 1)
    2952:	4908      	ldr	r1, [pc, #32]	; (2974 <vPortValidateInterruptPriority+0x54>)
    2954:	f240 300e 	movw	r0, #782	; 0x30e
    2958:	f7ff fe0e 	bl	2578 <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:782 (discriminator 2)
    295c:	e7fe      	b.n	295c <vPortValidateInterruptPriority+0x3c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:783
	}
    295e:	bd08      	pop	{r3, pc}
    2960:	e000e3f0 	.word	0xe000e3f0
    2964:	100009ec 	.word	0x100009ec
    2968:	0000ae6b 	.word	0x0000ae6b
    296c:	e000ed0c 	.word	0xe000ed0c
    2970:	100009f0 	.word	0x100009f0
    2974:	0000ae95 	.word	0x0000ae95

00002978 <xEventGroupCreate>:
xEventGroupCreate():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:146
/*-----------------------------------------------------------*/

#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )

	EventGroupHandle_t xEventGroupCreate( void )
	{
    2978:	b538      	push	{r3, r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:162
		TickType_t alignment requirements the cast is safe.  In other cases,
		where the natural word size of the architecture is less than
		sizeof( TickType_t ), the TickType_t variables will be accessed in two
		or more reads operations, and the alignment requirements is only that
		of each individual read. */
		pxEventBits = ( EventGroup_t * ) pvPortMalloc( sizeof( EventGroup_t ) ); /*lint !e9087 !e9079 see comment above. */
    297a:	2020      	movs	r0, #32
    297c:	f7ff fe38 	bl	25f0 <pvPortMalloc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:164

		if( pxEventBits != NULL )
    2980:	4604      	mov	r4, r0
    2982:	b128      	cbz	r0, 2990 <xEventGroupCreate+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:166
		{
			pxEventBits->uxEventBits = 0;
    2984:	2500      	movs	r5, #0
    2986:	f840 5b04 	str.w	r5, [r0], #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:167
			vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
    298a:	f000 f8c9 	bl	2b20 <vListInitialise>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:174
			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
			{
				/* Both static and dynamic allocation can be used, so note this
				event group was allocated statically in case the event group is
				later deleted. */
				pxEventBits->ucStaticallyAllocated = pdFALSE;
    298e:	7725      	strb	r5, [r4, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:186
		{
			traceEVENT_GROUP_CREATE_FAILED(); /*lint !e9063 Else branch only exists to allow tracing and does not generate code if trace macros are not defined. */
		}

		return pxEventBits;
	}
    2990:	4620      	mov	r0, r4
    2992:	bd38      	pop	{r3, r4, r5, pc}

00002994 <xEventGroupWaitBits>:
xEventGroupWaitBits():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:312
	return uxReturn;
}
/*-----------------------------------------------------------*/

EventBits_t xEventGroupWaitBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToWaitFor, const BaseType_t xClearOnExit, const BaseType_t xWaitForAllBits, TickType_t xTicksToWait )
{
    2994:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    2998:	9f08      	ldr	r7, [sp, #32]
    299a:	460c      	mov	r4, r1
    299c:	4690      	mov	r8, r2
    299e:	4699      	mov	r9, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:320
BaseType_t xWaitConditionMet, xAlreadyYielded;
BaseType_t xTimeoutOccurred = pdFALSE;

	/* Check the user is not attempting to wait on the bits used by the kernel
	itself, and that at least one bit is being requested. */
	configASSERT( xEventGroup );
    29a0:	4606      	mov	r6, r0
    29a2:	b928      	cbnz	r0, 29b0 <xEventGroupWaitBits+0x1c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:320 (discriminator 1)
    29a4:	4938      	ldr	r1, [pc, #224]	; (2a88 <xEventGroupWaitBits+0xf4>)
    29a6:	f44f 70a0 	mov.w	r0, #320	; 0x140
    29aa:	f7ff fde5 	bl	2578 <configASSERT_callback>
    29ae:	e7fe      	b.n	29ae <xEventGroupWaitBits+0x1a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:321
	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
    29b0:	f011 4a7f 	ands.w	sl, r1, #4278190080	; 0xff000000
    29b4:	d005      	beq.n	29c2 <xEventGroupWaitBits+0x2e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:321 (discriminator 1)
    29b6:	4935      	ldr	r1, [pc, #212]	; (2a8c <xEventGroupWaitBits+0xf8>)
    29b8:	f240 1041 	movw	r0, #321	; 0x141
    29bc:	f7ff fddc 	bl	2578 <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:321 (discriminator 2)
    29c0:	e7fe      	b.n	29c0 <xEventGroupWaitBits+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:322
	configASSERT( uxBitsToWaitFor != 0 );
    29c2:	b929      	cbnz	r1, 29d0 <xEventGroupWaitBits+0x3c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:322 (discriminator 1)
    29c4:	4932      	ldr	r1, [pc, #200]	; (2a90 <xEventGroupWaitBits+0xfc>)
    29c6:	f44f 70a1 	mov.w	r0, #322	; 0x142
    29ca:	f7ff fdd5 	bl	2578 <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:322 (discriminator 3)
    29ce:	e7fe      	b.n	29ce <xEventGroupWaitBits+0x3a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:325
	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
	{
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
    29d0:	f001 f9cc 	bl	3d6c <xTaskGetSchedulerState>
    29d4:	b930      	cbnz	r0, 29e4 <xEventGroupWaitBits+0x50>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:325 (discriminator 1)
    29d6:	b12f      	cbz	r7, 29e4 <xEventGroupWaitBits+0x50>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:325 (discriminator 2)
    29d8:	492e      	ldr	r1, [pc, #184]	; (2a94 <xEventGroupWaitBits+0x100>)
    29da:	f240 1045 	movw	r0, #325	; 0x145
    29de:	f7ff fdcb 	bl	2578 <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:325 (discriminator 4)
    29e2:	e7fe      	b.n	29e2 <xEventGroupWaitBits+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:329
	}
	#endif

	vTaskSuspendAll();
    29e4:	f000 ff1a 	bl	381c <vTaskSuspendAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:331
	{
		const EventBits_t uxCurrentEventBits = pxEventBits->uxEventBits;
    29e8:	6835      	ldr	r5, [r6, #0]
prvTestWaitCondition():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:675

static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits, const EventBits_t uxBitsToWaitFor, const BaseType_t xWaitForAllBits )
{
BaseType_t xWaitConditionMet = pdFALSE;

	if( xWaitForAllBits == pdFALSE )
    29ea:	ea04 0305 	and.w	r3, r4, r5
    29ee:	f1b9 0f00 	cmp.w	r9, #0
    29f2:	d114      	bne.n	2a1e <xEventGroupWaitBits+0x8a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:679
	{
		/* Task only has to wait for one bit within uxBitsToWaitFor to be
		set.  Is one already set? */
		if( ( uxCurrentEventBits & uxBitsToWaitFor ) != ( EventBits_t ) 0 )
    29f4:	b9ab      	cbnz	r3, 2a22 <xEventGroupWaitBits+0x8e>
xEventGroupWaitBits():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:353
		else if( xTicksToWait == ( TickType_t ) 0 )
    29f6:	b187      	cbz	r7, 2a1a <xEventGroupWaitBits+0x86>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:368
				uxControlBits |= eventCLEAR_EVENTS_ON_EXIT_BIT;
    29f8:	f1b8 0f00 	cmp.w	r8, #0
    29fc:	bf0c      	ite	eq
    29fe:	2100      	moveq	r1, #0
    2a00:	f04f 7180 	movne.w	r1, #16777216	; 0x1000000
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:375
			if( xWaitForAllBits != pdFALSE )
    2a04:	f1b9 0f00 	cmp.w	r9, #0
    2a08:	d001      	beq.n	2a0e <xEventGroupWaitBits+0x7a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:377
				uxControlBits |= eventWAIT_FOR_ALL_BITS;
    2a0a:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:387
			vTaskPlaceOnUnorderedEventList( &( pxEventBits->xTasksWaitingForBits ), ( uxBitsToWaitFor | uxControlBits ), xTicksToWait );
    2a0e:	463a      	mov	r2, r7
    2a10:	4321      	orrs	r1, r4
    2a12:	1d30      	adds	r0, r6, #4
    2a14:	f001 f8b2 	bl	3b7c <vTaskPlaceOnUnorderedEventList>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:392
			uxReturn = 0;
    2a18:	2500      	movs	r5, #0
    2a1a:	46ba      	mov	sl, r7
    2a1c:	e007      	b.n	2a2e <xEventGroupWaitBits+0x9a>
prvTestWaitCondition():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:692
	}
	else
	{
		/* Task has to wait for all the bits in uxBitsToWaitFor to be set.
		Are they set already? */
		if( ( uxCurrentEventBits & uxBitsToWaitFor ) == uxBitsToWaitFor )
    2a1e:	429c      	cmp	r4, r3
    2a20:	d1e9      	bne.n	29f6 <xEventGroupWaitBits+0x62>
xEventGroupWaitBits():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:344
			if( xClearOnExit != pdFALSE )
    2a22:	f1b8 0f00 	cmp.w	r8, #0
    2a26:	d002      	beq.n	2a2e <xEventGroupWaitBits+0x9a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:346
				pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
    2a28:	ea25 0304 	bic.w	r3, r5, r4
    2a2c:	6033      	str	r3, [r6, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:397
	xAlreadyYielded = xTaskResumeAll();
    2a2e:	f000 ff95 	bl	395c <xTaskResumeAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:399
	if( xTicksToWait != ( TickType_t ) 0 )
    2a32:	f1ba 0f00 	cmp.w	sl, #0
    2a36:	d01a      	beq.n	2a6e <xEventGroupWaitBits+0xda>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:401
		if( xAlreadyYielded == pdFALSE )
    2a38:	b938      	cbnz	r0, 2a4a <xEventGroupWaitBits+0xb6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:403
			portYIELD_WITHIN_API();
    2a3a:	4b17      	ldr	r3, [pc, #92]	; (2a98 <xEventGroupWaitBits+0x104>)
    2a3c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    2a40:	601a      	str	r2, [r3, #0]
    2a42:	f3bf 8f4f 	dsb	sy
    2a46:	f3bf 8f6f 	isb	sy
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:414
		uxReturn = uxTaskResetEventItemValue();
    2a4a:	f001 fa97 	bl	3f7c <uxTaskResetEventItemValue>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:416
		if( ( uxReturn & eventUNBLOCKED_DUE_TO_BIT_SET ) == ( EventBits_t ) 0 )
    2a4e:	0183      	lsls	r3, r0, #6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:414
		uxReturn = uxTaskResetEventItemValue();
    2a50:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:416
		if( ( uxReturn & eventUNBLOCKED_DUE_TO_BIT_SET ) == ( EventBits_t ) 0 )
    2a52:	d40a      	bmi.n	2a6a <xEventGroupWaitBits+0xd6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:418
			taskENTER_CRITICAL();
    2a54:	f7ff fe4e 	bl	26f4 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:421
				uxReturn = pxEventBits->uxEventBits;
    2a58:	6835      	ldr	r5, [r6, #0]
prvTestWaitCondition():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:675
	if( xWaitForAllBits == pdFALSE )
    2a5a:	ea04 0305 	and.w	r3, r4, r5
    2a5e:	f1b9 0f00 	cmp.w	r9, #0
    2a62:	d107      	bne.n	2a74 <xEventGroupWaitBits+0xe0>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:679
		if( ( uxCurrentEventBits & uxBitsToWaitFor ) != ( EventBits_t ) 0 )
    2a64:	b943      	cbnz	r3, 2a78 <xEventGroupWaitBits+0xe4>
xEventGroupWaitBits():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:442
			taskEXIT_CRITICAL();
    2a66:	f7ff fe67 	bl	2738 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:450
		uxReturn &= ~eventEVENT_BITS_CONTROL_BYTES;
    2a6a:	f025 457f 	bic.w	r5, r5, #4278190080	; 0xff000000
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:458
}
    2a6e:	4628      	mov	r0, r5
    2a70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
prvTestWaitCondition():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:692
		if( ( uxCurrentEventBits & uxBitsToWaitFor ) == uxBitsToWaitFor )
    2a74:	429c      	cmp	r4, r3
    2a76:	d1f6      	bne.n	2a66 <xEventGroupWaitBits+0xd2>
xEventGroupWaitBits():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:427
					if( xClearOnExit != pdFALSE )
    2a78:	f1b8 0f00 	cmp.w	r8, #0
    2a7c:	d0f3      	beq.n	2a66 <xEventGroupWaitBits+0xd2>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:429
						pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
    2a7e:	ea25 0404 	bic.w	r4, r5, r4
    2a82:	6034      	str	r4, [r6, #0]
    2a84:	e7ef      	b.n	2a66 <xEventGroupWaitBits+0xd2>
    2a86:	bf00      	nop
    2a88:	0000af95 	.word	0x0000af95
    2a8c:	0000afa1 	.word	0x0000afa1
    2a90:	0000afda 	.word	0x0000afda
    2a94:	0000afef 	.word	0x0000afef
    2a98:	e000ed04 	.word	0xe000ed04

00002a9c <xEventGroupSetBits>:
xEventGroupSetBits():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:520
{
    2a9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    2aa0:	460f      	mov	r7, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:530
	configASSERT( xEventGroup );
    2aa2:	4604      	mov	r4, r0
    2aa4:	b928      	cbnz	r0, 2ab2 <xEventGroupSetBits+0x16>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:530 (discriminator 1)
    2aa6:	491c      	ldr	r1, [pc, #112]	; (2b18 <xEventGroupSetBits+0x7c>)
    2aa8:	f240 2012 	movw	r0, #530	; 0x212
    2aac:	f7ff fd64 	bl	2578 <configASSERT_callback>
    2ab0:	e7fe      	b.n	2ab0 <xEventGroupSetBits+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:531
	configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
    2ab2:	f011 457f 	ands.w	r5, r1, #4278190080	; 0xff000000
    2ab6:	d005      	beq.n	2ac4 <xEventGroupSetBits+0x28>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:531 (discriminator 1)
    2ab8:	4918      	ldr	r1, [pc, #96]	; (2b1c <xEventGroupSetBits+0x80>)
    2aba:	f240 2013 	movw	r0, #531	; 0x213
    2abe:	f7ff fd5b 	bl	2578 <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:531 (discriminator 2)
    2ac2:	e7fe      	b.n	2ac2 <xEventGroupSetBits+0x26>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:534
	pxListEnd = listGET_END_MARKER( pxList ); /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
    2ac4:	f100 060c 	add.w	r6, r0, #12
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:535
	vTaskSuspendAll();
    2ac8:	f000 fea8 	bl	381c <vTaskSuspendAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:542
		pxEventBits->uxEventBits |= uxBitsToSet;
    2acc:	6823      	ldr	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:539
		pxListItem = listGET_HEAD_ENTRY( pxList );
    2ace:	6920      	ldr	r0, [r4, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:542
		pxEventBits->uxEventBits |= uxBitsToSet;
    2ad0:	433b      	orrs	r3, r7
    2ad2:	6023      	str	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:545
		while( pxListItem != pxListEnd )
    2ad4:	4286      	cmp	r6, r0
    2ad6:	6821      	ldr	r1, [r4, #0]
    2ad8:	d107      	bne.n	2aea <xEventGroupSetBits+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:605
		pxEventBits->uxEventBits &= ~uxBitsToClear;
    2ada:	ea21 0105 	bic.w	r1, r1, r5
    2ade:	6021      	str	r1, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:607
	( void ) xTaskResumeAll();
    2ae0:	f000 ff3c 	bl	395c <xTaskResumeAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:610
}
    2ae4:	6820      	ldr	r0, [r4, #0]
    2ae6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:548
			uxBitsWaitedFor = listGET_LIST_ITEM_VALUE( pxListItem );
    2aea:	e9d0 2800 	ldrd	r2, r8, [r0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:553
			uxBitsWaitedFor &= ~eventEVENT_BITS_CONTROL_BYTES;
    2aee:	f022 437f 	bic.w	r3, r2, #4278190080	; 0xff000000
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:555
			if( ( uxControlBits & eventWAIT_FOR_ALL_BITS ) == ( EventBits_t ) 0 )
    2af2:	f012 6f80 	tst.w	r2, #67108864	; 0x4000000
    2af6:	ea03 0701 	and.w	r7, r3, r1
    2afa:	d102      	bne.n	2b02 <xEventGroupSetBits+0x66>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:558
				if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) != ( EventBits_t ) 0 )
    2afc:	b91f      	cbnz	r7, 2b06 <xEventGroupSetBits+0x6a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:520
{
    2afe:	4640      	mov	r0, r8
    2b00:	e7e8      	b.n	2ad4 <xEventGroupSetBits+0x38>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:567
			else if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) == uxBitsWaitedFor )
    2b02:	42bb      	cmp	r3, r7
    2b04:	d1fb      	bne.n	2afe <xEventGroupSetBits+0x62>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:580
				if( ( uxControlBits & eventCLEAR_EVENTS_ON_EXIT_BIT ) != ( EventBits_t ) 0 )
    2b06:	01d2      	lsls	r2, r2, #7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:594
				vTaskRemoveFromUnorderedEventList( pxListItem, pxEventBits->uxEventBits | eventUNBLOCKED_DUE_TO_BIT_SET );
    2b08:	f041 7100 	orr.w	r1, r1, #33554432	; 0x2000000
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:582
					uxBitsToClear |= uxBitsWaitedFor;
    2b0c:	bf48      	it	mi
    2b0e:	431d      	orrmi	r5, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/event_groups.c:594
				vTaskRemoveFromUnorderedEventList( pxListItem, pxEventBits->uxEventBits | eventUNBLOCKED_DUE_TO_BIT_SET );
    2b10:	f001 f89e 	bl	3c50 <vTaskRemoveFromUnorderedEventList>
    2b14:	e7f3      	b.n	2afe <xEventGroupSetBits+0x62>
    2b16:	bf00      	nop
    2b18:	0000af95 	.word	0x0000af95
    2b1c:	0000af60 	.word	0x0000af60

00002b20 <vListInitialise>:
vListInitialise():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:42
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
    2b20:	f100 0308 	add.w	r3, r0, #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:46

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
    2b24:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:42
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
    2b28:	6043      	str	r3, [r0, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:50

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
    2b2a:	e9c0 2302 	strd	r2, r3, [r0, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:51
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
    2b2e:	6103      	str	r3, [r0, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:53

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
    2b30:	2300      	movs	r3, #0
    2b32:	6003      	str	r3, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:59

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
    2b34:	4770      	bx	lr

00002b36 <vListInitialiseItem>:
vListInitialiseItem():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:65
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
    2b36:	2300      	movs	r3, #0
    2b38:	6103      	str	r3, [r0, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:71

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
    2b3a:	4770      	bx	lr

00002b3c <vListInsertEnd>:
vListInsertEnd():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:76
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
    2b3c:	6843      	ldr	r3, [r0, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:87
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
    2b3e:	604b      	str	r3, [r1, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:88
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
    2b40:	689a      	ldr	r2, [r3, #8]
    2b42:	608a      	str	r2, [r1, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:93

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
    2b44:	689a      	ldr	r2, [r3, #8]
    2b46:	6051      	str	r1, [r2, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:94
	pxIndex->pxPrevious = pxNewListItem;
    2b48:	6099      	str	r1, [r3, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:99

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
    2b4a:	6803      	ldr	r3, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:97
	pxNewListItem->pxContainer = pxList;
    2b4c:	6108      	str	r0, [r1, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:99
	( pxList->uxNumberOfItems )++;
    2b4e:	3301      	adds	r3, #1
    2b50:	6003      	str	r3, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:100
}
    2b52:	4770      	bx	lr

00002b54 <vListInsert>:
vListInsert():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:106
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
    2b54:	680a      	ldr	r2, [r1, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:122
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
    2b56:	1c53      	adds	r3, r2, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:104
{
    2b58:	b530      	push	{r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:122
	if( xValueOfInsertion == portMAX_DELAY )
    2b5a:	d10a      	bne.n	2b72 <vListInsert+0x1e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:124
	{
		pxIterator = pxList->xListEnd.pxPrevious;
    2b5c:	6903      	ldr	r3, [r0, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:157
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
    2b5e:	685a      	ldr	r2, [r3, #4]
    2b60:	604a      	str	r2, [r1, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:158
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
    2b62:	6091      	str	r1, [r2, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:159
	pxNewListItem->pxPrevious = pxIterator;
    2b64:	608b      	str	r3, [r1, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:160
	pxIterator->pxNext = pxNewListItem;
    2b66:	6059      	str	r1, [r3, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:166

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
    2b68:	6803      	ldr	r3, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:164
	pxNewListItem->pxContainer = pxList;
    2b6a:	6108      	str	r0, [r1, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:166
	( pxList->uxNumberOfItems )++;
    2b6c:	3301      	adds	r3, #1
    2b6e:	6003      	str	r3, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:167
}
    2b70:	bd30      	pop	{r4, r5, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:150
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
    2b72:	f100 0308 	add.w	r3, r0, #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:150 (discriminator 1)
    2b76:	685c      	ldr	r4, [r3, #4]
    2b78:	6825      	ldr	r5, [r4, #0]
    2b7a:	4295      	cmp	r5, r2
    2b7c:	d8ef      	bhi.n	2b5e <vListInsert+0xa>
    2b7e:	4623      	mov	r3, r4
    2b80:	e7f9      	b.n	2b76 <vListInsert+0x22>

00002b82 <uxListRemove>:
uxListRemove():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:176
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
    2b82:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:174
List_t * const pxList = pxItemToRemove->pxContainer;
    2b86:	6903      	ldr	r3, [r0, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:176
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
    2b88:	608a      	str	r2, [r1, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:177
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
    2b8a:	6051      	str	r1, [r2, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:183

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
    2b8c:	6859      	ldr	r1, [r3, #4]
    2b8e:	4281      	cmp	r1, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:185
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
    2b90:	bf08      	it	eq
    2b92:	605a      	streq	r2, [r3, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:192
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
    2b94:	2200      	movs	r2, #0
    2b96:	6102      	str	r2, [r0, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:193
	( pxList->uxNumberOfItems )--;
    2b98:	681a      	ldr	r2, [r3, #0]
    2b9a:	3a01      	subs	r2, #1
    2b9c:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:195

	return pxList->uxNumberOfItems;
    2b9e:	6818      	ldr	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/list.c:196
}
    2ba0:	4770      	bx	lr

00002ba2 <prvIsQueueEmpty>:
prvIsQueueEmpty():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2288
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
    2ba2:	b510      	push	{r4, lr}
    2ba4:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2291
BaseType_t xReturn;

	taskENTER_CRITICAL();
    2ba6:	f7ff fda5 	bl	26f4 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2293
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
    2baa:	6ba4      	ldr	r4, [r4, #56]	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2302
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
    2bac:	f7ff fdc4 	bl	2738 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2305

	return xReturn;
}
    2bb0:	fab4 f084 	clz	r0, r4
    2bb4:	0940      	lsrs	r0, r0, #5
    2bb6:	bd10      	pop	{r4, pc}

00002bb8 <prvCopyDataToQueue>:
prvCopyDataToQueue():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2071
{
    2bb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2bba:	4615      	mov	r5, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2079
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
    2bbc:	6c02      	ldr	r2, [r0, #64]	; 0x40
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2077
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
    2bbe:	6b86      	ldr	r6, [r0, #56]	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2071
{
    2bc0:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2079
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
    2bc2:	b952      	cbnz	r2, 2bda <prvCopyDataToQueue+0x22>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2083
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
    2bc4:	6807      	ldr	r7, [r0, #0]
    2bc6:	bb47      	cbnz	r7, 2c1a <prvCopyDataToQueue+0x62>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2086
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
    2bc8:	6880      	ldr	r0, [r0, #8]
    2bca:	f001 f931 	bl	3e30 <xTaskPriorityDisinherit>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2087
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
    2bce:	60a7      	str	r7, [r4, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2086
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
    2bd0:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2143
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
    2bd2:	3601      	adds	r6, #1
    2bd4:	63a6      	str	r6, [r4, #56]	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2146
}
    2bd6:	4628      	mov	r0, r5
    2bd8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2096
	else if( xPosition == queueSEND_TO_BACK )
    2bda:	b965      	cbnz	r5, 2bf6 <prvCopyDataToQueue+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2098
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
    2bdc:	6840      	ldr	r0, [r0, #4]
    2bde:	f002 fcf5 	bl	55cc <memcpy>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2099
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
    2be2:	6863      	ldr	r3, [r4, #4]
    2be4:	6c22      	ldr	r2, [r4, #64]	; 0x40
    2be6:	4413      	add	r3, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2100
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
    2be8:	68a2      	ldr	r2, [r4, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2099
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
    2bea:	6063      	str	r3, [r4, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2100
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
    2bec:	4293      	cmp	r3, r2
    2bee:	d3f0      	bcc.n	2bd2 <prvCopyDataToQueue+0x1a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2102
			pxQueue->pcWriteTo = pxQueue->pcHead;
    2bf0:	6823      	ldr	r3, [r4, #0]
    2bf2:	6063      	str	r3, [r4, #4]
    2bf4:	e7ed      	b.n	2bd2 <prvCopyDataToQueue+0x1a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2111
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
    2bf6:	68c0      	ldr	r0, [r0, #12]
    2bf8:	f002 fce8 	bl	55cc <memcpy>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2112
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
    2bfc:	6c23      	ldr	r3, [r4, #64]	; 0x40
    2bfe:	68e2      	ldr	r2, [r4, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2113
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
    2c00:	6821      	ldr	r1, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2112
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
    2c02:	425b      	negs	r3, r3
    2c04:	441a      	add	r2, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2113
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
    2c06:	428a      	cmp	r2, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2112
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
    2c08:	60e2      	str	r2, [r4, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2115
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
    2c0a:	bf3e      	ittt	cc
    2c0c:	68a2      	ldrcc	r2, [r4, #8]
    2c0e:	189b      	addcc	r3, r3, r2
    2c10:	60e3      	strcc	r3, [r4, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2122
		if( xPosition == queueOVERWRITE )
    2c12:	2d02      	cmp	r5, #2
    2c14:	d101      	bne.n	2c1a <prvCopyDataToQueue+0x62>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2124
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
    2c16:	b116      	cbz	r6, 2c1e <prvCopyDataToQueue+0x66>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2130
				--uxMessagesWaiting;
    2c18:	3e01      	subs	r6, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2072
BaseType_t xReturn = pdFALSE;
    2c1a:	2500      	movs	r5, #0
    2c1c:	e7d9      	b.n	2bd2 <prvCopyDataToQueue+0x1a>
    2c1e:	4635      	mov	r5, r6
    2c20:	e7d7      	b.n	2bd2 <prvCopyDataToQueue+0x1a>

00002c22 <prvCopyDataFromQueue>:
prvCopyDataFromQueue():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2150
{
    2c22:	4603      	mov	r3, r0
    2c24:	b410      	push	{r4}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2151
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
    2c26:	6c1a      	ldr	r2, [r3, #64]	; 0x40
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2150
{
    2c28:	4608      	mov	r0, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2151
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
    2c2a:	b162      	cbz	r2, 2c46 <prvCopyDataFromQueue+0x24>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2153
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
    2c2c:	68d9      	ldr	r1, [r3, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2154
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
    2c2e:	689c      	ldr	r4, [r3, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2153
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
    2c30:	4411      	add	r1, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2154
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
    2c32:	42a1      	cmp	r1, r4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2153
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
    2c34:	60d9      	str	r1, [r3, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2156
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
    2c36:	bf24      	itt	cs
    2c38:	6819      	ldrcs	r1, [r3, #0]
    2c3a:	60d9      	strcs	r1, [r3, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2162
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
    2c3c:	68d9      	ldr	r1, [r3, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2164
}
    2c3e:	f85d 4b04 	ldr.w	r4, [sp], #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2162
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
    2c42:	f002 bcc3 	b.w	55cc <memcpy>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2164
}
    2c46:	f85d 4b04 	ldr.w	r4, [sp], #4
    2c4a:	4770      	bx	lr

00002c4c <prvUnlockQueue>:
prvUnlockQueue():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2168
{
    2c4c:	b570      	push	{r4, r5, r6, lr}
    2c4e:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2175
	taskENTER_CRITICAL();
    2c50:	f7ff fd50 	bl	26f4 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2177
		int8_t cTxLock = pxQueue->cTxLock;
    2c54:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2230
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
    2c58:	f104 0624 	add.w	r6, r4, #36	; 0x24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2177
		int8_t cTxLock = pxQueue->cTxLock;
    2c5c:	b26d      	sxtb	r5, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2180
		while( cTxLock > queueLOCKED_UNMODIFIED )
    2c5e:	2d00      	cmp	r5, #0
    2c60:	dc14      	bgt.n	2c8c <prvUnlockQueue+0x40>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2251
		pxQueue->cTxLock = queueUNLOCKED;
    2c62:	23ff      	movs	r3, #255	; 0xff
    2c64:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2253
	taskEXIT_CRITICAL();
    2c68:	f7ff fd66 	bl	2738 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2256
	taskENTER_CRITICAL();
    2c6c:	f7ff fd42 	bl	26f4 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2258
		int8_t cRxLock = pxQueue->cRxLock;
    2c70:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2264
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    2c74:	f104 0610 	add.w	r6, r4, #16
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2258
		int8_t cRxLock = pxQueue->cRxLock;
    2c78:	b26d      	sxtb	r5, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2260
		while( cRxLock > queueLOCKED_UNMODIFIED )
    2c7a:	2d00      	cmp	r5, #0
    2c7c:	dc12      	bgt.n	2ca4 <prvUnlockQueue+0x58>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2281
		pxQueue->cRxLock = queueUNLOCKED;
    2c7e:	23ff      	movs	r3, #255	; 0xff
    2c80:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2284
}
    2c84:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2283
	taskEXIT_CRITICAL();
    2c88:	f7ff bd56 	b.w	2738 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2228
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
    2c8c:	6a63      	ldr	r3, [r4, #36]	; 0x24
    2c8e:	2b00      	cmp	r3, #0
    2c90:	d0e7      	beq.n	2c62 <prvUnlockQueue+0x16>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2230
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
    2c92:	4630      	mov	r0, r6
    2c94:	f000 ff9c 	bl	3bd0 <xTaskRemoveFromEventList>
    2c98:	b108      	cbz	r0, 2c9e <prvUnlockQueue+0x52>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2234
						vTaskMissedYield();
    2c9a:	f001 f861 	bl	3d60 <vTaskMissedYield>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2248
			--cTxLock;
    2c9e:	3d01      	subs	r5, #1
    2ca0:	b26d      	sxtb	r5, r5
    2ca2:	e7dc      	b.n	2c5e <prvUnlockQueue+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2262
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
    2ca4:	6923      	ldr	r3, [r4, #16]
    2ca6:	2b00      	cmp	r3, #0
    2ca8:	d0e9      	beq.n	2c7e <prvUnlockQueue+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2264
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    2caa:	4630      	mov	r0, r6
    2cac:	f000 ff90 	bl	3bd0 <xTaskRemoveFromEventList>
    2cb0:	b108      	cbz	r0, 2cb6 <prvUnlockQueue+0x6a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2266
					vTaskMissedYield();
    2cb2:	f001 f855 	bl	3d60 <vTaskMissedYield>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2273
				--cRxLock;
    2cb6:	3d01      	subs	r5, #1
    2cb8:	b26d      	sxtb	r5, r5
    2cba:	e7de      	b.n	2c7a <prvUnlockQueue+0x2e>

00002cbc <xQueueGenericReset>:
xQueueGenericReset():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:256
{
    2cbc:	b538      	push	{r3, r4, r5, lr}
    2cbe:	460d      	mov	r5, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:259
	configASSERT( pxQueue );
    2cc0:	4604      	mov	r4, r0
    2cc2:	b928      	cbnz	r0, 2cd0 <xQueueGenericReset+0x14>
    2cc4:	491a      	ldr	r1, [pc, #104]	; (2d30 <xQueueGenericReset+0x74>)
    2cc6:	f240 1003 	movw	r0, #259	; 0x103
    2cca:	f7ff fc55 	bl	2578 <configASSERT_callback>
    2cce:	e7fe      	b.n	2cce <xQueueGenericReset+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:261
	taskENTER_CRITICAL();
    2cd0:	f7ff fd10 	bl	26f4 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:263
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
    2cd4:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	; 0x3c
    2cd8:	6822      	ldr	r2, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:265
		pxQueue->pcWriteTo = pxQueue->pcHead;
    2cda:	6062      	str	r2, [r4, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:263
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
    2cdc:	4343      	muls	r3, r0
    2cde:	18d1      	adds	r1, r2, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:266
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
    2ce0:	1a1b      	subs	r3, r3, r0
    2ce2:	4413      	add	r3, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:263
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
    2ce4:	60a1      	str	r1, [r4, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:266
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
    2ce6:	60e3      	str	r3, [r4, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:264
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
    2ce8:	2100      	movs	r1, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:267
		pxQueue->cRxLock = queueUNLOCKED;
    2cea:	23ff      	movs	r3, #255	; 0xff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:264
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
    2cec:	63a1      	str	r1, [r4, #56]	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:267
		pxQueue->cRxLock = queueUNLOCKED;
    2cee:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:268
		pxQueue->cTxLock = queueUNLOCKED;
    2cf2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:270
		if( xNewQueue == pdFALSE )
    2cf6:	b995      	cbnz	r5, 2d1e <xQueueGenericReset+0x62>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:277
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
    2cf8:	6923      	ldr	r3, [r4, #16]
    2cfa:	b163      	cbz	r3, 2d16 <xQueueGenericReset+0x5a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:279
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    2cfc:	f104 0010 	add.w	r0, r4, #16
    2d00:	f000 ff66 	bl	3bd0 <xTaskRemoveFromEventList>
    2d04:	b138      	cbz	r0, 2d16 <xQueueGenericReset+0x5a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:281
					queueYIELD_IF_USING_PREEMPTION();
    2d06:	4b0b      	ldr	r3, [pc, #44]	; (2d34 <xQueueGenericReset+0x78>)
    2d08:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    2d0c:	601a      	str	r2, [r3, #0]
    2d0e:	f3bf 8f4f 	dsb	sy
    2d12:	f3bf 8f6f 	isb	sy
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:300
	taskEXIT_CRITICAL();
    2d16:	f7ff fd0f 	bl	2738 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:305
}
    2d1a:	2001      	movs	r0, #1
    2d1c:	bd38      	pop	{r3, r4, r5, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:296
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
    2d1e:	f104 0010 	add.w	r0, r4, #16
    2d22:	f7ff fefd 	bl	2b20 <vListInitialise>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:297
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
    2d26:	f104 0024 	add.w	r0, r4, #36	; 0x24
    2d2a:	f7ff fef9 	bl	2b20 <vListInitialise>
    2d2e:	e7f2      	b.n	2d16 <xQueueGenericReset+0x5a>
    2d30:	0000b108 	.word	0x0000b108
    2d34:	e000ed04 	.word	0xe000ed04

00002d38 <xQueueGenericCreateStatic>:
xQueueGenericCreateStatic():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:311
	{
    2d38:	b513      	push	{r0, r1, r4, lr}
    2d3a:	461c      	mov	r4, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:314
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
    2d3c:	b928      	cbnz	r0, 2d4a <xQueueGenericCreateStatic+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:314 (discriminator 1)
    2d3e:	491e      	ldr	r1, [pc, #120]	; (2db8 <xQueueGenericCreateStatic+0x80>)
    2d40:	f44f 709d 	mov.w	r0, #314	; 0x13a
    2d44:	f7ff fc18 	bl	2578 <configASSERT_callback>
    2d48:	e7fe      	b.n	2d48 <xQueueGenericCreateStatic+0x10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:318
		configASSERT( pxStaticQueue != NULL );
    2d4a:	b92b      	cbnz	r3, 2d58 <xQueueGenericCreateStatic+0x20>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:318 (discriminator 1)
    2d4c:	491b      	ldr	r1, [pc, #108]	; (2dbc <xQueueGenericCreateStatic+0x84>)
    2d4e:	f44f 709f 	mov.w	r0, #318	; 0x13e
    2d52:	f7ff fc11 	bl	2578 <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:318 (discriminator 2)
    2d56:	e7fe      	b.n	2d56 <xQueueGenericCreateStatic+0x1e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:322
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
    2d58:	b132      	cbz	r2, 2d68 <xQueueGenericCreateStatic+0x30>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:322 (discriminator 1)
    2d5a:	b961      	cbnz	r1, 2d76 <xQueueGenericCreateStatic+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:322 (discriminator 2)
    2d5c:	4918      	ldr	r1, [pc, #96]	; (2dc0 <xQueueGenericCreateStatic+0x88>)
    2d5e:	f44f 70a1 	mov.w	r0, #322	; 0x142
    2d62:	f7ff fc09 	bl	2578 <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:322 (discriminator 3)
    2d66:	e7fe      	b.n	2d66 <xQueueGenericCreateStatic+0x2e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:323 (discriminator 1)
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
    2d68:	b129      	cbz	r1, 2d76 <xQueueGenericCreateStatic+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:323
    2d6a:	4916      	ldr	r1, [pc, #88]	; (2dc4 <xQueueGenericCreateStatic+0x8c>)
    2d6c:	f240 1043 	movw	r0, #323	; 0x143
    2d70:	f7ff fc02 	bl	2578 <configASSERT_callback>
    2d74:	e7fe      	b.n	2d74 <xQueueGenericCreateStatic+0x3c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:330
			volatile size_t xSize = sizeof( StaticQueue_t );
    2d76:	2350      	movs	r3, #80	; 0x50
    2d78:	9301      	str	r3, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:331
			configASSERT( xSize == sizeof( Queue_t ) );
    2d7a:	9b01      	ldr	r3, [sp, #4]
    2d7c:	2b50      	cmp	r3, #80	; 0x50
    2d7e:	d005      	beq.n	2d8c <xQueueGenericCreateStatic+0x54>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:331 (discriminator 1)
    2d80:	4911      	ldr	r1, [pc, #68]	; (2dc8 <xQueueGenericCreateStatic+0x90>)
    2d82:	f240 104b 	movw	r0, #331	; 0x14b
    2d86:	f7ff fbf7 	bl	2578 <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:331 (discriminator 5)
    2d8a:	e7fe      	b.n	2d8a <xQueueGenericCreateStatic+0x52>
prvInitialiseNewQueue():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:435
	if( uxItemSize == ( UBaseType_t ) 0 )
    2d8c:	2900      	cmp	r1, #0
    2d8e:	bf08      	it	eq
    2d90:	4622      	moveq	r2, r4
xQueueGenericCreateStatic():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:332
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
    2d92:	9b01      	ldr	r3, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:348
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
    2d94:	6022      	str	r2, [r4, #0]
    2d96:	2301      	movs	r3, #1
prvInitialiseNewQueue():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:452
	pxNewQueue->uxItemSize = uxItemSize;
    2d98:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
xQueueGenericCreateStatic():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:348
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
    2d9c:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
prvInitialiseNewQueue():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:453
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
    2da0:	4619      	mov	r1, r3
    2da2:	4620      	mov	r0, r4
    2da4:	f7ff ff8a 	bl	2cbc <xQueueGenericReset>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:457
		pxNewQueue->ucQueueType = ucQueueType;
    2da8:	f89d 3010 	ldrb.w	r3, [sp, #16]
    2dac:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
xQueueGenericCreateStatic():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:361
	}
    2db0:	4620      	mov	r0, r4
    2db2:	b002      	add	sp, #8
    2db4:	bd10      	pop	{r4, pc}
    2db6:	bf00      	nop
    2db8:	0000b045 	.word	0x0000b045
    2dbc:	0000b067 	.word	0x0000b067
    2dc0:	0000b07d 	.word	0x0000b07d
    2dc4:	0000b0b5 	.word	0x0000b0b5
    2dc8:	0000b0ed 	.word	0x0000b0ed

00002dcc <xQueueGenericCreate>:
xQueueGenericCreate():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:369
	{
    2dcc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2dce:	460d      	mov	r5, r1
    2dd0:	4617      	mov	r7, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:374
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
    2dd2:	4606      	mov	r6, r0
    2dd4:	b928      	cbnz	r0, 2de2 <xQueueGenericCreate+0x16>
    2dd6:	490f      	ldr	r1, [pc, #60]	; (2e14 <xQueueGenericCreate+0x48>)
    2dd8:	f44f 70bb 	mov.w	r0, #374	; 0x176
    2ddc:	f7ff fbcc 	bl	2578 <configASSERT_callback>
    2de0:	e7fe      	b.n	2de0 <xQueueGenericCreate+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:385
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    2de2:	4348      	muls	r0, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:397
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
    2de4:	3050      	adds	r0, #80	; 0x50
    2de6:	f7ff fc03 	bl	25f0 <pvPortMalloc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:399
		if( pxNewQueue != NULL )
    2dea:	4604      	mov	r4, r0
    2dec:	b170      	cbz	r0, 2e0c <xQueueGenericCreate+0x40>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:411
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
    2dee:	2300      	movs	r3, #0
    2df0:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
prvInitialiseNewQueue():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:435
	if( uxItemSize == ( UBaseType_t ) 0 )
    2df4:	b165      	cbz	r5, 2e10 <xQueueGenericCreate+0x44>
xQueueGenericCreate():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:404
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
    2df6:	f100 0350 	add.w	r3, r0, #80	; 0x50
prvInitialiseNewQueue():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:446
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
    2dfa:	6023      	str	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:452
	pxNewQueue->uxItemSize = uxItemSize;
    2dfc:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:453
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
    2e00:	2101      	movs	r1, #1
    2e02:	4620      	mov	r0, r4
    2e04:	f7ff ff5a 	bl	2cbc <xQueueGenericReset>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:457
		pxNewQueue->ucQueueType = ucQueueType;
    2e08:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
xQueueGenericCreate():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:424
	}
    2e0c:	4620      	mov	r0, r4
    2e0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
prvInitialiseNewQueue():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:435
	if( uxItemSize == ( UBaseType_t ) 0 )
    2e10:	4603      	mov	r3, r0
    2e12:	e7f2      	b.n	2dfa <xQueueGenericCreate+0x2e>
    2e14:	0000b045 	.word	0x0000b045

00002e18 <xQueueGenericSend>:
xQueueGenericSend():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:748
{
    2e18:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
    2e1c:	4688      	mov	r8, r1
    2e1e:	9201      	str	r2, [sp, #4]
    2e20:	461f      	mov	r7, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:753
	configASSERT( pxQueue );
    2e22:	4604      	mov	r4, r0
    2e24:	b928      	cbnz	r0, 2e32 <xQueueGenericSend+0x1a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:753 (discriminator 1)
    2e26:	494e      	ldr	r1, [pc, #312]	; (2f60 <xQueueGenericSend+0x148>)
    2e28:	f240 20f1 	movw	r0, #753	; 0x2f1
    2e2c:	f7ff fba4 	bl	2578 <configASSERT_callback>
    2e30:	e7fe      	b.n	2e30 <xQueueGenericSend+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:754
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
    2e32:	b939      	cbnz	r1, 2e44 <xQueueGenericSend+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:754 (discriminator 1)
    2e34:	6c03      	ldr	r3, [r0, #64]	; 0x40
    2e36:	b12b      	cbz	r3, 2e44 <xQueueGenericSend+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:754 (discriminator 2)
    2e38:	494a      	ldr	r1, [pc, #296]	; (2f64 <xQueueGenericSend+0x14c>)
    2e3a:	f240 20f2 	movw	r0, #754	; 0x2f2
    2e3e:	f7ff fb9b 	bl	2578 <configASSERT_callback>
    2e42:	e7fe      	b.n	2e42 <xQueueGenericSend+0x2a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:755
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
    2e44:	2f02      	cmp	r7, #2
    2e46:	d108      	bne.n	2e5a <xQueueGenericSend+0x42>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:755 (discriminator 1)
    2e48:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    2e4a:	2b01      	cmp	r3, #1
    2e4c:	d005      	beq.n	2e5a <xQueueGenericSend+0x42>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:755 (discriminator 2)
    2e4e:	4946      	ldr	r1, [pc, #280]	; (2f68 <xQueueGenericSend+0x150>)
    2e50:	f240 20f3 	movw	r0, #755	; 0x2f3
    2e54:	f7ff fb90 	bl	2578 <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:755 (discriminator 3)
    2e58:	e7fe      	b.n	2e58 <xQueueGenericSend+0x40>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:758
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
    2e5a:	f000 ff87 	bl	3d6c <xTaskGetSchedulerState>
    2e5e:	4606      	mov	r6, r0
    2e60:	b938      	cbnz	r0, 2e72 <xQueueGenericSend+0x5a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:758 (discriminator 1)
    2e62:	9b01      	ldr	r3, [sp, #4]
    2e64:	b133      	cbz	r3, 2e74 <xQueueGenericSend+0x5c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:758 (discriminator 2)
    2e66:	4941      	ldr	r1, [pc, #260]	; (2f6c <xQueueGenericSend+0x154>)
    2e68:	f240 20f6 	movw	r0, #758	; 0x2f6
    2e6c:	f7ff fb84 	bl	2578 <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:758 (discriminator 4)
    2e70:	e7fe      	b.n	2e70 <xQueueGenericSend+0x58>
    2e72:	2600      	movs	r6, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:910
		prvLockQueue( pxQueue );
    2e74:	f04f 0900 	mov.w	r9, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:934
					portYIELD_WITHIN_API();
    2e78:	f8df a0f4 	ldr.w	sl, [pc, #244]	; 2f70 <xQueueGenericSend+0x158>
    2e7c:	e037      	b.n	2eee <xQueueGenericSend+0xd6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:879
				if( xTicksToWait == ( TickType_t ) 0 )
    2e7e:	9d01      	ldr	r5, [sp, #4]
    2e80:	b91d      	cbnz	r5, 2e8a <xQueueGenericSend+0x72>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:883
					taskEXIT_CRITICAL();
    2e82:	f7ff fc59 	bl	2738 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:951
			return errQUEUE_FULL;
    2e86:	2000      	movs	r0, #0
    2e88:	e050      	b.n	2f2c <xQueueGenericSend+0x114>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:890
				else if( xEntryTimeSet == pdFALSE )
    2e8a:	b916      	cbnz	r6, 2e92 <xQueueGenericSend+0x7a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:894
					vTaskInternalSetTimeOutState( &xTimeOut );
    2e8c:	a802      	add	r0, sp, #8
    2e8e:	f000 ff21 	bl	3cd4 <vTaskInternalSetTimeOutState>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:904
		taskEXIT_CRITICAL();
    2e92:	f7ff fc51 	bl	2738 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:909
		vTaskSuspendAll();
    2e96:	f000 fcc1 	bl	381c <vTaskSuspendAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:910
		prvLockQueue( pxQueue );
    2e9a:	f7ff fc2b 	bl	26f4 <vPortEnterCritical>
    2e9e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
    2ea2:	2bff      	cmp	r3, #255	; 0xff
    2ea4:	bf08      	it	eq
    2ea6:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
    2eaa:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
    2eae:	2bff      	cmp	r3, #255	; 0xff
    2eb0:	bf08      	it	eq
    2eb2:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
    2eb6:	f7ff fc3f 	bl	2738 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:913
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
    2eba:	a901      	add	r1, sp, #4
    2ebc:	a802      	add	r0, sp, #8
    2ebe:	f000 ff15 	bl	3cec <xTaskCheckForTimeOut>
    2ec2:	2800      	cmp	r0, #0
    2ec4:	d146      	bne.n	2f54 <xQueueGenericSend+0x13c>
prvIsQueueFull():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2331

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
    2ec6:	f7ff fc15 	bl	26f4 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2333
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
    2eca:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    2ecc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    2ece:	429a      	cmp	r2, r3
    2ed0:	d12f      	bne.n	2f32 <xQueueGenericSend+0x11a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2342
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
    2ed2:	f7ff fc31 	bl	2738 <vPortExitCritical>
xQueueGenericSend():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:918
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
    2ed6:	9901      	ldr	r1, [sp, #4]
    2ed8:	f104 0010 	add.w	r0, r4, #16
    2edc:	f000 fe36 	bl	3b4c <vTaskPlaceOnEventList>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:925
				prvUnlockQueue( pxQueue );
    2ee0:	4620      	mov	r0, r4
    2ee2:	f7ff feb3 	bl	2c4c <prvUnlockQueue>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:932
				if( xTaskResumeAll() == pdFALSE )
    2ee6:	f000 fd39 	bl	395c <xTaskResumeAll>
    2eea:	b350      	cbz	r0, 2f42 <xQueueGenericSend+0x12a>
    2eec:	2601      	movs	r6, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:768
		taskENTER_CRITICAL();
    2eee:	f7ff fc01 	bl	26f4 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:774
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
    2ef2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    2ef4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    2ef6:	429a      	cmp	r2, r3
    2ef8:	d301      	bcc.n	2efe <xQueueGenericSend+0xe6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:774 (discriminator 1)
    2efa:	2f02      	cmp	r7, #2
    2efc:	d1bf      	bne.n	2e7e <xQueueGenericSend+0x66>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:840
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
    2efe:	463a      	mov	r2, r7
    2f00:	4641      	mov	r1, r8
    2f02:	4620      	mov	r0, r4
    2f04:	f7ff fe58 	bl	2bb8 <prvCopyDataToQueue>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:844
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
    2f08:	6a63      	ldr	r3, [r4, #36]	; 0x24
    2f0a:	b11b      	cbz	r3, 2f14 <xQueueGenericSend+0xfc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:846
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
    2f0c:	f104 0024 	add.w	r0, r4, #36	; 0x24
    2f10:	f000 fe5e 	bl	3bd0 <xTaskRemoveFromEventList>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:859
					else if( xYieldRequired != pdFALSE )
    2f14:	b138      	cbz	r0, 2f26 <xQueueGenericSend+0x10e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:865
						queueYIELD_IF_USING_PREEMPTION();
    2f16:	4b16      	ldr	r3, [pc, #88]	; (2f70 <xQueueGenericSend+0x158>)
    2f18:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    2f1c:	601a      	str	r2, [r3, #0]
    2f1e:	f3bf 8f4f 	dsb	sy
    2f22:	f3bf 8f6f 	isb	sy
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:874
				taskEXIT_CRITICAL();
    2f26:	f7ff fc07 	bl	2738 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:875
				return pdPASS;
    2f2a:	2001      	movs	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:954
}
    2f2c:	b004      	add	sp, #16
    2f2e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
prvIsQueueFull():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2342
	taskEXIT_CRITICAL();
    2f32:	f7ff fc01 	bl	2738 <vPortExitCritical>
xQueueGenericSend():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:940
				prvUnlockQueue( pxQueue );
    2f36:	4620      	mov	r0, r4
    2f38:	f7ff fe88 	bl	2c4c <prvUnlockQueue>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:941
				( void ) xTaskResumeAll();
    2f3c:	f000 fd0e 	bl	395c <xTaskResumeAll>
    2f40:	e7d4      	b.n	2eec <xQueueGenericSend+0xd4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:934
					portYIELD_WITHIN_API();
    2f42:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
    2f46:	f8ca 3000 	str.w	r3, [sl]
    2f4a:	f3bf 8f4f 	dsb	sy
    2f4e:	f3bf 8f6f 	isb	sy
    2f52:	e7cb      	b.n	2eec <xQueueGenericSend+0xd4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:947
			prvUnlockQueue( pxQueue );
    2f54:	4620      	mov	r0, r4
    2f56:	f7ff fe79 	bl	2c4c <prvUnlockQueue>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:948
			( void ) xTaskResumeAll();
    2f5a:	f000 fcff 	bl	395c <xTaskResumeAll>
    2f5e:	e792      	b.n	2e86 <xQueueGenericSend+0x6e>
    2f60:	0000b108 	.word	0x0000b108
    2f64:	0000b110 	.word	0x0000b110
    2f68:	0000b160 	.word	0x0000b160
    2f6c:	0000afef 	.word	0x0000afef
    2f70:	e000ed04 	.word	0xe000ed04

00002f74 <xQueueCreateMutexStatic>:
xQueueCreateMutexStatic():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:520
	{
    2f74:	b513      	push	{r0, r1, r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:528
		xNewQueue = xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQueue, ucQueueType );
    2f76:	2200      	movs	r2, #0
    2f78:	9000      	str	r0, [sp, #0]
    2f7a:	460b      	mov	r3, r1
    2f7c:	2001      	movs	r0, #1
    2f7e:	4611      	mov	r1, r2
    2f80:	f7ff feda 	bl	2d38 <xQueueGenericCreateStatic>
prvInitialiseMutex():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:475
		if( pxNewQueue != NULL )
    2f84:	4604      	mov	r4, r0
    2f86:	b138      	cbz	r0, 2f98 <xQueueCreateMutexStatic+0x24>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:481
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
    2f88:	2300      	movs	r3, #0
    2f8a:	6083      	str	r3, [r0, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:482
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
    2f8c:	6003      	str	r3, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:485
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
    2f8e:	60c3      	str	r3, [r0, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:490
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
    2f90:	461a      	mov	r2, r3
    2f92:	4619      	mov	r1, r3
    2f94:	f7ff ff40 	bl	2e18 <xQueueGenericSend>
xQueueCreateMutexStatic():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:532
	}
    2f98:	4620      	mov	r0, r4
    2f9a:	b002      	add	sp, #8
    2f9c:	bd10      	pop	{r4, pc}
    2f9e:	Address 0x0000000000002f9e is out of bounds.


00002fa0 <xQueueGenericSendFromISR>:
xQueueGenericSendFromISR():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:958
{
    2fa0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    2fa4:	4689      	mov	r9, r1
    2fa6:	4690      	mov	r8, r2
    2fa8:	461f      	mov	r7, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:963
	configASSERT( pxQueue );
    2faa:	4604      	mov	r4, r0
    2fac:	b928      	cbnz	r0, 2fba <xQueueGenericSendFromISR+0x1a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:963 (discriminator 1)
    2fae:	4928      	ldr	r1, [pc, #160]	; (3050 <xQueueGenericSendFromISR+0xb0>)
    2fb0:	f240 30c3 	movw	r0, #963	; 0x3c3
    2fb4:	f7ff fae0 	bl	2578 <configASSERT_callback>
    2fb8:	e7fe      	b.n	2fb8 <xQueueGenericSendFromISR+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:964
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
    2fba:	b939      	cbnz	r1, 2fcc <xQueueGenericSendFromISR+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:964 (discriminator 1)
    2fbc:	6c03      	ldr	r3, [r0, #64]	; 0x40
    2fbe:	b12b      	cbz	r3, 2fcc <xQueueGenericSendFromISR+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:964 (discriminator 2)
    2fc0:	4924      	ldr	r1, [pc, #144]	; (3054 <xQueueGenericSendFromISR+0xb4>)
    2fc2:	f44f 7071 	mov.w	r0, #964	; 0x3c4
    2fc6:	f7ff fad7 	bl	2578 <configASSERT_callback>
    2fca:	e7fe      	b.n	2fca <xQueueGenericSendFromISR+0x2a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:965
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
    2fcc:	2f02      	cmp	r7, #2
    2fce:	d108      	bne.n	2fe2 <xQueueGenericSendFromISR+0x42>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:965 (discriminator 1)
    2fd0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    2fd2:	2b01      	cmp	r3, #1
    2fd4:	d005      	beq.n	2fe2 <xQueueGenericSendFromISR+0x42>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:965 (discriminator 2)
    2fd6:	4920      	ldr	r1, [pc, #128]	; (3058 <xQueueGenericSendFromISR+0xb8>)
    2fd8:	f240 30c5 	movw	r0, #965	; 0x3c5
    2fdc:	f7ff facc 	bl	2578 <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:965 (discriminator 3)
    2fe0:	e7fe      	b.n	2fe0 <xQueueGenericSendFromISR+0x40>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:981
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
    2fe2:	f7ff fc9d 	bl	2920 <vPortValidateInterruptPriority>
ulPortRaiseBASEPRI():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:211
	__asm volatile
    2fe6:	f3ef 8611 	mrs	r6, BASEPRI
    2fea:	f04f 0318 	mov.w	r3, #24
    2fee:	f383 8811 	msr	BASEPRI, r3
    2ff2:	f3bf 8f6f 	isb	sy
    2ff6:	f3bf 8f4f 	dsb	sy
xQueueGenericSendFromISR():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:990
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
    2ffa:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    2ffc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    2ffe:	429a      	cmp	r2, r3
    3000:	d301      	bcc.n	3006 <xQueueGenericSendFromISR+0x66>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:990 (discriminator 1)
    3002:	2f02      	cmp	r7, #2
    3004:	d122      	bne.n	304c <xQueueGenericSendFromISR+0xac>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:992
			const int8_t cTxLock = pxQueue->cTxLock;
    3006:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1001
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
    300a:	463a      	mov	r2, r7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:992
			const int8_t cTxLock = pxQueue->cTxLock;
    300c:	b26d      	sxtb	r5, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1001
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
    300e:	4649      	mov	r1, r9
    3010:	4620      	mov	r0, r4
    3012:	f7ff fdd1 	bl	2bb8 <prvCopyDataToQueue>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1005
			if( cTxLock == queueUNLOCKED )
    3016:	1c6b      	adds	r3, r5, #1
    3018:	d113      	bne.n	3042 <xQueueGenericSendFromISR+0xa2>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1060
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
    301a:	6a63      	ldr	r3, [r4, #36]	; 0x24
    301c:	b90b      	cbnz	r3, 3022 <xQueueGenericSendFromISR+0x82>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1094
			xReturn = pdPASS;
    301e:	2001      	movs	r0, #1
    3020:	e00b      	b.n	303a <xQueueGenericSendFromISR+0x9a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1062
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
    3022:	f104 0024 	add.w	r0, r4, #36	; 0x24
    3026:	f000 fdd3 	bl	3bd0 <xTaskRemoveFromEventList>
    302a:	2800      	cmp	r0, #0
    302c:	d0f7      	beq.n	301e <xQueueGenericSendFromISR+0x7e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1066
							if( pxHigherPriorityTaskWoken != NULL )
    302e:	f1b8 0f00 	cmp.w	r8, #0
    3032:	d0f4      	beq.n	301e <xQueueGenericSendFromISR+0x7e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1068
								*pxHigherPriorityTaskWoken = pdTRUE;
    3034:	2001      	movs	r0, #1
    3036:	f8c8 0000 	str.w	r0, [r8]
vPortSetBASEPRI():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
	__asm volatile
    303a:	f386 8811 	msr	BASEPRI, r6
xQueueGenericSendFromISR():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1105
}
    303e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1091
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
    3042:	3501      	adds	r5, #1
    3044:	b26d      	sxtb	r5, r5
    3046:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
    304a:	e7e8      	b.n	301e <xQueueGenericSendFromISR+0x7e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1099
			xReturn = errQUEUE_FULL;
    304c:	2000      	movs	r0, #0
    304e:	e7f4      	b.n	303a <xQueueGenericSendFromISR+0x9a>
    3050:	0000b108 	.word	0x0000b108
    3054:	0000b110 	.word	0x0000b110
    3058:	0000b160 	.word	0x0000b160

0000305c <xQueueGiveFromISR>:
xQueueGiveFromISR():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1109
{
    305c:	b570      	push	{r4, r5, r6, lr}
    305e:	460d      	mov	r5, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1120
	configASSERT( pxQueue );
    3060:	4604      	mov	r4, r0
    3062:	b928      	cbnz	r0, 3070 <xQueueGiveFromISR+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1120 (discriminator 1)
    3064:	4923      	ldr	r1, [pc, #140]	; (30f4 <xQueueGiveFromISR+0x98>)
    3066:	f44f 608c 	mov.w	r0, #1120	; 0x460
    306a:	f7ff fa85 	bl	2578 <configASSERT_callback>
    306e:	e7fe      	b.n	306e <xQueueGiveFromISR+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1124
	configASSERT( pxQueue->uxItemSize == 0 );
    3070:	6c03      	ldr	r3, [r0, #64]	; 0x40
    3072:	b12b      	cbz	r3, 3080 <xQueueGiveFromISR+0x24>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1124 (discriminator 1)
    3074:	4920      	ldr	r1, [pc, #128]	; (30f8 <xQueueGiveFromISR+0x9c>)
    3076:	f240 4064 	movw	r0, #1124	; 0x464
    307a:	f7ff fa7d 	bl	2578 <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1124 (discriminator 2)
    307e:	e7fe      	b.n	307e <xQueueGiveFromISR+0x22>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1129
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
    3080:	6803      	ldr	r3, [r0, #0]
    3082:	b93b      	cbnz	r3, 3094 <xQueueGiveFromISR+0x38>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1129 (discriminator 1)
    3084:	6883      	ldr	r3, [r0, #8]
    3086:	b12b      	cbz	r3, 3094 <xQueueGiveFromISR+0x38>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1129 (discriminator 2)
    3088:	491c      	ldr	r1, [pc, #112]	; (30fc <xQueueGiveFromISR+0xa0>)
    308a:	f240 4069 	movw	r0, #1129	; 0x469
    308e:	f7ff fa73 	bl	2578 <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1129 (discriminator 3)
    3092:	e7fe      	b.n	3092 <xQueueGiveFromISR+0x36>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1145
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
    3094:	f7ff fc44 	bl	2920 <vPortValidateInterruptPriority>
ulPortRaiseBASEPRI():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:211
	__asm volatile
    3098:	f3ef 8611 	mrs	r6, BASEPRI
    309c:	f04f 0318 	mov.w	r3, #24
    30a0:	f383 8811 	msr	BASEPRI, r3
    30a4:	f3bf 8f6f 	isb	sy
    30a8:	f3bf 8f4f 	dsb	sy
xQueueGiveFromISR():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1149
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
    30ac:	6ba2      	ldr	r2, [r4, #56]	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1154
		if( uxMessagesWaiting < pxQueue->uxLength )
    30ae:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    30b0:	4293      	cmp	r3, r2
    30b2:	d91c      	bls.n	30ee <xQueueGiveFromISR+0x92>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1156
			const int8_t cTxLock = pxQueue->cTxLock;
    30b4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1166
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
    30b8:	3201      	adds	r2, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1156
			const int8_t cTxLock = pxQueue->cTxLock;
    30ba:	b25b      	sxtb	r3, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1166
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
    30bc:	63a2      	str	r2, [r4, #56]	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1170
			if( cTxLock == queueUNLOCKED )
    30be:	1c5a      	adds	r2, r3, #1
    30c0:	d110      	bne.n	30e4 <xQueueGiveFromISR+0x88>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1225
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
    30c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
    30c4:	b90b      	cbnz	r3, 30ca <xQueueGiveFromISR+0x6e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1259
			xReturn = pdPASS;
    30c6:	2001      	movs	r0, #1
    30c8:	e009      	b.n	30de <xQueueGiveFromISR+0x82>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1227
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
    30ca:	f104 0024 	add.w	r0, r4, #36	; 0x24
    30ce:	f000 fd7f 	bl	3bd0 <xTaskRemoveFromEventList>
    30d2:	2800      	cmp	r0, #0
    30d4:	d0f7      	beq.n	30c6 <xQueueGiveFromISR+0x6a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1231
							if( pxHigherPriorityTaskWoken != NULL )
    30d6:	2d00      	cmp	r5, #0
    30d8:	d0f5      	beq.n	30c6 <xQueueGiveFromISR+0x6a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1233
								*pxHigherPriorityTaskWoken = pdTRUE;
    30da:	2001      	movs	r0, #1
    30dc:	6028      	str	r0, [r5, #0]
vPortSetBASEPRI():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
	__asm volatile
    30de:	f386 8811 	msr	BASEPRI, r6
xQueueGiveFromISR():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1270
}
    30e2:	bd70      	pop	{r4, r5, r6, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1256
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
    30e4:	3301      	adds	r3, #1
    30e6:	b25b      	sxtb	r3, r3
    30e8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
    30ec:	e7eb      	b.n	30c6 <xQueueGiveFromISR+0x6a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1264
			xReturn = errQUEUE_FULL;
    30ee:	2000      	movs	r0, #0
    30f0:	e7f5      	b.n	30de <xQueueGiveFromISR+0x82>
    30f2:	bf00      	nop
    30f4:	0000b108 	.word	0x0000b108
    30f8:	0000b1a7 	.word	0x0000b1a7
    30fc:	0000b1c0 	.word	0x0000b1c0

00003100 <xQueueReceive>:
xQueueReceive():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1274
{
    3100:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    3104:	b085      	sub	sp, #20
    3106:	460f      	mov	r7, r1
    3108:	9201      	str	r2, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1280
	configASSERT( ( pxQueue ) );
    310a:	4604      	mov	r4, r0
    310c:	b928      	cbnz	r0, 311a <xQueueReceive+0x1a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1280 (discriminator 1)
    310e:	4947      	ldr	r1, [pc, #284]	; (322c <xQueueReceive+0x12c>)
    3110:	f44f 60a0 	mov.w	r0, #1280	; 0x500
    3114:	f7ff fa30 	bl	2578 <configASSERT_callback>
    3118:	e7fe      	b.n	3118 <xQueueReceive+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1284
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
    311a:	b939      	cbnz	r1, 312c <xQueueReceive+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1284 (discriminator 1)
    311c:	6c03      	ldr	r3, [r0, #64]	; 0x40
    311e:	b12b      	cbz	r3, 312c <xQueueReceive+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1284 (discriminator 2)
    3120:	4943      	ldr	r1, [pc, #268]	; (3230 <xQueueReceive+0x130>)
    3122:	f240 5004 	movw	r0, #1284	; 0x504
    3126:	f7ff fa27 	bl	2578 <configASSERT_callback>
    312a:	e7fe      	b.n	312a <xQueueReceive+0x2a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1289
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
    312c:	f000 fe1e 	bl	3d6c <xTaskGetSchedulerState>
    3130:	4606      	mov	r6, r0
    3132:	b938      	cbnz	r0, 3144 <xQueueReceive+0x44>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1289 (discriminator 1)
    3134:	9b01      	ldr	r3, [sp, #4]
    3136:	b133      	cbz	r3, 3146 <xQueueReceive+0x46>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1289 (discriminator 2)
    3138:	493e      	ldr	r1, [pc, #248]	; (3234 <xQueueReceive+0x134>)
    313a:	f240 5009 	movw	r0, #1289	; 0x509
    313e:	f7ff fa1b 	bl	2578 <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1289 (discriminator 3)
    3142:	e7fe      	b.n	3142 <xQueueReceive+0x42>
    3144:	2600      	movs	r6, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1364
		prvLockQueue( pxQueue );
    3146:	f04f 0800 	mov.w	r8, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1378
					portYIELD_WITHIN_API();
    314a:	f8df 90ec 	ldr.w	r9, [pc, #236]	; 3238 <xQueueReceive+0x138>
    314e:	e03b      	b.n	31c8 <xQueueReceive+0xc8>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1336
				if( xTicksToWait == ( TickType_t ) 0 )
    3150:	9d01      	ldr	r5, [sp, #4]
    3152:	b91d      	cbnz	r5, 315c <xQueueReceive+0x5c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1340
					taskEXIT_CRITICAL();
    3154:	f7ff faf0 	bl	2738 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1403
				return errQUEUE_EMPTY;
    3158:	2000      	movs	r0, #0
    315a:	e052      	b.n	3202 <xQueueReceive+0x102>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1344
				else if( xEntryTimeSet == pdFALSE )
    315c:	b916      	cbnz	r6, 3164 <xQueueReceive+0x64>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1348
					vTaskInternalSetTimeOutState( &xTimeOut );
    315e:	a802      	add	r0, sp, #8
    3160:	f000 fdb8 	bl	3cd4 <vTaskInternalSetTimeOutState>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1358
		taskEXIT_CRITICAL();
    3164:	f7ff fae8 	bl	2738 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1363
		vTaskSuspendAll();
    3168:	f000 fb58 	bl	381c <vTaskSuspendAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1364
		prvLockQueue( pxQueue );
    316c:	f7ff fac2 	bl	26f4 <vPortEnterCritical>
    3170:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
    3174:	2bff      	cmp	r3, #255	; 0xff
    3176:	bf08      	it	eq
    3178:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
    317c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
    3180:	2bff      	cmp	r3, #255	; 0xff
    3182:	bf08      	it	eq
    3184:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
    3188:	f7ff fad6 	bl	2738 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1367
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
    318c:	a901      	add	r1, sp, #4
    318e:	a802      	add	r0, sp, #8
    3190:	f000 fdac 	bl	3cec <xTaskCheckForTimeOut>
    3194:	2800      	cmp	r0, #0
    3196:	d13d      	bne.n	3214 <xQueueReceive+0x114>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1371
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
    3198:	4620      	mov	r0, r4
    319a:	f7ff fd02 	bl	2ba2 <prvIsQueueEmpty>
    319e:	b398      	cbz	r0, 3208 <xQueueReceive+0x108>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1374
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
    31a0:	9901      	ldr	r1, [sp, #4]
    31a2:	f104 0024 	add.w	r0, r4, #36	; 0x24
    31a6:	f000 fcd1 	bl	3b4c <vTaskPlaceOnEventList>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1375
				prvUnlockQueue( pxQueue );
    31aa:	4620      	mov	r0, r4
    31ac:	f7ff fd4e 	bl	2c4c <prvUnlockQueue>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1376
				if( xTaskResumeAll() == pdFALSE )
    31b0:	f000 fbd4 	bl	395c <xTaskResumeAll>
    31b4:	b938      	cbnz	r0, 31c6 <xQueueReceive+0xc6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1378
					portYIELD_WITHIN_API();
    31b6:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
    31ba:	f8c9 3000 	str.w	r3, [r9]
    31be:	f3bf 8f4f 	dsb	sy
    31c2:	f3bf 8f6f 	isb	sy
    31c6:	2601      	movs	r6, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1299
		taskENTER_CRITICAL();
    31c8:	f7ff fa94 	bl	26f4 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1301
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
    31cc:	6ba5      	ldr	r5, [r4, #56]	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1305
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
    31ce:	2d00      	cmp	r5, #0
    31d0:	d0be      	beq.n	3150 <xQueueReceive+0x50>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1308
				prvCopyDataFromQueue( pxQueue, pvBuffer );
    31d2:	4639      	mov	r1, r7
    31d4:	4620      	mov	r0, r4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1310
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
    31d6:	3d01      	subs	r5, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1308
				prvCopyDataFromQueue( pxQueue, pvBuffer );
    31d8:	f7ff fd23 	bl	2c22 <prvCopyDataFromQueue>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1310
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
    31dc:	63a5      	str	r5, [r4, #56]	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1315
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
    31de:	6923      	ldr	r3, [r4, #16]
    31e0:	b163      	cbz	r3, 31fc <xQueueReceive+0xfc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1317
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    31e2:	f104 0010 	add.w	r0, r4, #16
    31e6:	f000 fcf3 	bl	3bd0 <xTaskRemoveFromEventList>
    31ea:	b138      	cbz	r0, 31fc <xQueueReceive+0xfc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1319
						queueYIELD_IF_USING_PREEMPTION();
    31ec:	4b12      	ldr	r3, [pc, #72]	; (3238 <xQueueReceive+0x138>)
    31ee:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    31f2:	601a      	str	r2, [r3, #0]
    31f4:	f3bf 8f4f 	dsb	sy
    31f8:	f3bf 8f6f 	isb	sy
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1331
				taskEXIT_CRITICAL();
    31fc:	f7ff fa9c 	bl	2738 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1332
				return pdPASS;
    3200:	2001      	movs	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1411
}
    3202:	b005      	add	sp, #20
    3204:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1389
				prvUnlockQueue( pxQueue );
    3208:	4620      	mov	r0, r4
    320a:	f7ff fd1f 	bl	2c4c <prvUnlockQueue>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1390
				( void ) xTaskResumeAll();
    320e:	f000 fba5 	bl	395c <xTaskResumeAll>
    3212:	e7d8      	b.n	31c6 <xQueueReceive+0xc6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1397
			prvUnlockQueue( pxQueue );
    3214:	4620      	mov	r0, r4
    3216:	f7ff fd19 	bl	2c4c <prvUnlockQueue>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1398
			( void ) xTaskResumeAll();
    321a:	f000 fb9f 	bl	395c <xTaskResumeAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1400
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
    321e:	4620      	mov	r0, r4
    3220:	f7ff fcbf 	bl	2ba2 <prvIsQueueEmpty>
    3224:	2800      	cmp	r0, #0
    3226:	d0ce      	beq.n	31c6 <xQueueReceive+0xc6>
    3228:	e796      	b.n	3158 <xQueueReceive+0x58>
    322a:	bf00      	nop
    322c:	0000b227 	.word	0x0000b227
    3230:	0000b233 	.word	0x0000b233
    3234:	0000afef 	.word	0x0000afef
    3238:	e000ed04 	.word	0xe000ed04

0000323c <xQueueSemaphoreTake>:
xQueueSemaphoreTake():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1415
{
    323c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1425
	configASSERT( ( pxQueue ) );
    3240:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1415
{
    3242:	9101      	str	r1, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1425
	configASSERT( ( pxQueue ) );
    3244:	b928      	cbnz	r0, 3252 <xQueueSemaphoreTake+0x16>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1425 (discriminator 1)
    3246:	4958      	ldr	r1, [pc, #352]	; (33a8 <xQueueSemaphoreTake+0x16c>)
    3248:	f240 5091 	movw	r0, #1425	; 0x591
    324c:	f7ff f994 	bl	2578 <configASSERT_callback>
    3250:	e7fe      	b.n	3250 <xQueueSemaphoreTake+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1429
	configASSERT( pxQueue->uxItemSize == 0 );
    3252:	6c05      	ldr	r5, [r0, #64]	; 0x40
    3254:	b12d      	cbz	r5, 3262 <xQueueSemaphoreTake+0x26>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1429 (discriminator 1)
    3256:	4955      	ldr	r1, [pc, #340]	; (33ac <xQueueSemaphoreTake+0x170>)
    3258:	f240 5095 	movw	r0, #1429	; 0x595
    325c:	f7ff f98c 	bl	2578 <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1429 (discriminator 2)
    3260:	e7fe      	b.n	3260 <xQueueSemaphoreTake+0x24>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1434
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
    3262:	f000 fd83 	bl	3d6c <xTaskGetSchedulerState>
    3266:	4606      	mov	r6, r0
    3268:	b938      	cbnz	r0, 327a <xQueueSemaphoreTake+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1434 (discriminator 1)
    326a:	9b01      	ldr	r3, [sp, #4]
    326c:	b153      	cbz	r3, 3284 <xQueueSemaphoreTake+0x48>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1434 (discriminator 2)
    326e:	4950      	ldr	r1, [pc, #320]	; (33b0 <xQueueSemaphoreTake+0x174>)
    3270:	f240 509a 	movw	r0, #1434	; 0x59a
    3274:	f7ff f980 	bl	2578 <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1434 (discriminator 3)
    3278:	e7fe      	b.n	3278 <xQueueSemaphoreTake+0x3c>
    327a:	462e      	mov	r6, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1535
		prvLockQueue( pxQueue );
    327c:	2700      	movs	r7, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1569
					portYIELD_WITHIN_API();
    327e:	f8df 8138 	ldr.w	r8, [pc, #312]	; 33b8 <xQueueSemaphoreTake+0x17c>
    3282:	e04e      	b.n	3322 <xQueueSemaphoreTake+0xe6>
    3284:	4605      	mov	r5, r0
    3286:	e7f9      	b.n	327c <xQueueSemaphoreTake+0x40>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1498
				if( xTicksToWait == ( TickType_t ) 0 )
    3288:	9b01      	ldr	r3, [sp, #4]
    328a:	b94b      	cbnz	r3, 32a0 <xQueueSemaphoreTake+0x64>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1505
						configASSERT( xInheritanceOccurred == pdFALSE );
    328c:	b12d      	cbz	r5, 329a <xQueueSemaphoreTake+0x5e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1505 (discriminator 1)
    328e:	4949      	ldr	r1, [pc, #292]	; (33b4 <xQueueSemaphoreTake+0x178>)
    3290:	f240 50e1 	movw	r0, #1505	; 0x5e1
    3294:	f7ff f970 	bl	2578 <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1505 (discriminator 4)
    3298:	e7fe      	b.n	3298 <xQueueSemaphoreTake+0x5c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1511
					taskEXIT_CRITICAL();
    329a:	f7ff fa4d 	bl	2738 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1513
					return errQUEUE_EMPTY;
    329e:	e05e      	b.n	335e <xQueueSemaphoreTake+0x122>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1515
				else if( xEntryTimeSet == pdFALSE )
    32a0:	b916      	cbnz	r6, 32a8 <xQueueSemaphoreTake+0x6c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1519
					vTaskInternalSetTimeOutState( &xTimeOut );
    32a2:	a802      	add	r0, sp, #8
    32a4:	f000 fd16 	bl	3cd4 <vTaskInternalSetTimeOutState>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1529
		taskEXIT_CRITICAL();
    32a8:	f7ff fa46 	bl	2738 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1534
		vTaskSuspendAll();
    32ac:	f000 fab6 	bl	381c <vTaskSuspendAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1535
		prvLockQueue( pxQueue );
    32b0:	f7ff fa20 	bl	26f4 <vPortEnterCritical>
    32b4:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
    32b8:	2bff      	cmp	r3, #255	; 0xff
    32ba:	bf08      	it	eq
    32bc:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
    32c0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
    32c4:	2bff      	cmp	r3, #255	; 0xff
    32c6:	bf08      	it	eq
    32c8:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
    32cc:	f7ff fa34 	bl	2738 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1538
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
    32d0:	a901      	add	r1, sp, #4
    32d2:	a802      	add	r0, sp, #8
    32d4:	f000 fd0a 	bl	3cec <xTaskCheckForTimeOut>
    32d8:	2800      	cmp	r0, #0
    32da:	d14a      	bne.n	3372 <xQueueSemaphoreTake+0x136>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1544
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
    32dc:	4620      	mov	r0, r4
    32de:	f7ff fc60 	bl	2ba2 <prvIsQueueEmpty>
    32e2:	2800      	cmp	r0, #0
    32e4:	d03f      	beq.n	3366 <xQueueSemaphoreTake+0x12a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1550
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
    32e6:	6823      	ldr	r3, [r4, #0]
    32e8:	b93b      	cbnz	r3, 32fa <xQueueSemaphoreTake+0xbe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1552
						taskENTER_CRITICAL();
    32ea:	f7ff fa03 	bl	26f4 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1554
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
    32ee:	68a0      	ldr	r0, [r4, #8]
    32f0:	f000 fd4c 	bl	3d8c <xTaskPriorityInherit>
    32f4:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1556
						taskEXIT_CRITICAL();
    32f6:	f7ff fa1f 	bl	2738 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1565
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
    32fa:	9901      	ldr	r1, [sp, #4]
    32fc:	f104 0024 	add.w	r0, r4, #36	; 0x24
    3300:	f000 fc24 	bl	3b4c <vTaskPlaceOnEventList>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1566
				prvUnlockQueue( pxQueue );
    3304:	4620      	mov	r0, r4
    3306:	f7ff fca1 	bl	2c4c <prvUnlockQueue>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1567
				if( xTaskResumeAll() == pdFALSE )
    330a:	f000 fb27 	bl	395c <xTaskResumeAll>
    330e:	b938      	cbnz	r0, 3320 <xQueueSemaphoreTake+0xe4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1569
					portYIELD_WITHIN_API();
    3310:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
    3314:	f8c8 3000 	str.w	r3, [r8]
    3318:	f3bf 8f4f 	dsb	sy
    331c:	f3bf 8f6f 	isb	sy
    3320:	2601      	movs	r6, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1444
		taskENTER_CRITICAL();
    3322:	f7ff f9e7 	bl	26f4 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1448
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
    3326:	6ba3      	ldr	r3, [r4, #56]	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1452
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
    3328:	2b00      	cmp	r3, #0
    332a:	d0ad      	beq.n	3288 <xQueueSemaphoreTake+0x4c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1458
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
    332c:	3b01      	subs	r3, #1
    332e:	63a3      	str	r3, [r4, #56]	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1462
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
    3330:	6823      	ldr	r3, [r4, #0]
    3332:	b913      	cbnz	r3, 333a <xQueueSemaphoreTake+0xfe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1466
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
    3334:	f000 fe2e 	bl	3f94 <pvTaskIncrementMutexHeldCount>
    3338:	60a0      	str	r0, [r4, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1477
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
    333a:	6923      	ldr	r3, [r4, #16]
    333c:	b163      	cbz	r3, 3358 <xQueueSemaphoreTake+0x11c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1479
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    333e:	f104 0010 	add.w	r0, r4, #16
    3342:	f000 fc45 	bl	3bd0 <xTaskRemoveFromEventList>
    3346:	b138      	cbz	r0, 3358 <xQueueSemaphoreTake+0x11c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1481
						queueYIELD_IF_USING_PREEMPTION();
    3348:	4b1b      	ldr	r3, [pc, #108]	; (33b8 <xQueueSemaphoreTake+0x17c>)
    334a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    334e:	601a      	str	r2, [r3, #0]
    3350:	f3bf 8f4f 	dsb	sy
    3354:	f3bf 8f6f 	isb	sy
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1493
				taskEXIT_CRITICAL();
    3358:	f7ff f9ee 	bl	2738 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1494
				return pdPASS;
    335c:	2501      	movs	r5, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1629
}
    335e:	4628      	mov	r0, r5
    3360:	b004      	add	sp, #16
    3362:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1580
				prvUnlockQueue( pxQueue );
    3366:	4620      	mov	r0, r4
    3368:	f7ff fc70 	bl	2c4c <prvUnlockQueue>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1581
				( void ) xTaskResumeAll();
    336c:	f000 faf6 	bl	395c <xTaskResumeAll>
    3370:	e7d6      	b.n	3320 <xQueueSemaphoreTake+0xe4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1587
			prvUnlockQueue( pxQueue );
    3372:	4620      	mov	r0, r4
    3374:	f7ff fc6a 	bl	2c4c <prvUnlockQueue>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1588
			( void ) xTaskResumeAll();
    3378:	f000 faf0 	bl	395c <xTaskResumeAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1594
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
    337c:	4620      	mov	r0, r4
    337e:	f7ff fc10 	bl	2ba2 <prvIsQueueEmpty>
    3382:	2800      	cmp	r0, #0
    3384:	d0cc      	beq.n	3320 <xQueueSemaphoreTake+0xe4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1601
					if( xInheritanceOccurred != pdFALSE )
    3386:	2d00      	cmp	r5, #0
    3388:	d0e9      	beq.n	335e <xQueueSemaphoreTake+0x122>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1603
						taskENTER_CRITICAL();
    338a:	f7ff f9b3 	bl	26f4 <vPortEnterCritical>
prvGetDisinheritPriorityAfterTimeout():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2055
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
    338e:	6a61      	ldr	r1, [r4, #36]	; 0x24
    3390:	b119      	cbz	r1, 339a <xQueueSemaphoreTake+0x15e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2057
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
    3392:	6b23      	ldr	r3, [r4, #48]	; 0x30
    3394:	6819      	ldr	r1, [r3, #0]
    3396:	f1c1 010a 	rsb	r1, r1, #10
xQueueSemaphoreTake():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1613
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
    339a:	68a0      	ldr	r0, [r4, #8]
    339c:	f000 fd96 	bl	3ecc <vTaskPriorityDisinheritAfterTimeout>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1621
				return errQUEUE_EMPTY;
    33a0:	2500      	movs	r5, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1615
						taskEXIT_CRITICAL();
    33a2:	f7ff f9c9 	bl	2738 <vPortExitCritical>
    33a6:	e7da      	b.n	335e <xQueueSemaphoreTake+0x122>
    33a8:	0000b227 	.word	0x0000b227
    33ac:	0000b1a7 	.word	0x0000b1a7
    33b0:	0000afef 	.word	0x0000afef
    33b4:	0000b2d1 	.word	0x0000b2d1
    33b8:	e000ed04 	.word	0xe000ed04

000033bc <xQueueReceiveFromISR>:
xQueueReceiveFromISR():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1782
{
    33bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    33c0:	4689      	mov	r9, r1
    33c2:	4690      	mov	r8, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1787
	configASSERT( pxQueue );
    33c4:	4605      	mov	r5, r0
    33c6:	b928      	cbnz	r0, 33d4 <xQueueReceiveFromISR+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1787 (discriminator 1)
    33c8:	4921      	ldr	r1, [pc, #132]	; (3450 <xQueueReceiveFromISR+0x94>)
    33ca:	f240 60fb 	movw	r0, #1787	; 0x6fb
    33ce:	f7ff f8d3 	bl	2578 <configASSERT_callback>
    33d2:	e7fe      	b.n	33d2 <xQueueReceiveFromISR+0x16>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1788
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
    33d4:	b939      	cbnz	r1, 33e6 <xQueueReceiveFromISR+0x2a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1788 (discriminator 1)
    33d6:	6c03      	ldr	r3, [r0, #64]	; 0x40
    33d8:	b12b      	cbz	r3, 33e6 <xQueueReceiveFromISR+0x2a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1788 (discriminator 2)
    33da:	491e      	ldr	r1, [pc, #120]	; (3454 <xQueueReceiveFromISR+0x98>)
    33dc:	f240 60fc 	movw	r0, #1788	; 0x6fc
    33e0:	f7ff f8ca 	bl	2578 <configASSERT_callback>
    33e4:	e7fe      	b.n	33e4 <xQueueReceiveFromISR+0x28>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1804
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
    33e6:	f7ff fa9b 	bl	2920 <vPortValidateInterruptPriority>
ulPortRaiseBASEPRI():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:211
	__asm volatile
    33ea:	f3ef 8711 	mrs	r7, BASEPRI
    33ee:	f04f 0318 	mov.w	r3, #24
    33f2:	f383 8811 	msr	BASEPRI, r3
    33f6:	f3bf 8f6f 	isb	sy
    33fa:	f3bf 8f4f 	dsb	sy
xQueueReceiveFromISR():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1808
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
    33fe:	6bac      	ldr	r4, [r5, #56]	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1811
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
    3400:	b31c      	cbz	r4, 344a <xQueueReceiveFromISR+0x8e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1813
			const int8_t cRxLock = pxQueue->cRxLock;
    3402:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1817
			prvCopyDataFromQueue( pxQueue, pvBuffer );
    3406:	4649      	mov	r1, r9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1813
			const int8_t cRxLock = pxQueue->cRxLock;
    3408:	b276      	sxtb	r6, r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1817
			prvCopyDataFromQueue( pxQueue, pvBuffer );
    340a:	4628      	mov	r0, r5
    340c:	f7ff fc09 	bl	2c22 <prvCopyDataFromQueue>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1818
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
    3410:	3c01      	subs	r4, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1824
			if( cRxLock == queueUNLOCKED )
    3412:	1c73      	adds	r3, r6, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1818
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
    3414:	63ac      	str	r4, [r5, #56]	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1824
			if( cRxLock == queueUNLOCKED )
    3416:	d113      	bne.n	3440 <xQueueReceiveFromISR+0x84>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1826
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
    3418:	692b      	ldr	r3, [r5, #16]
    341a:	b90b      	cbnz	r3, 3420 <xQueueReceiveFromISR+0x64>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1858
			xReturn = pdPASS;
    341c:	2001      	movs	r0, #1
    341e:	e00b      	b.n	3438 <xQueueReceiveFromISR+0x7c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1828
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    3420:	f105 0010 	add.w	r0, r5, #16
    3424:	f000 fbd4 	bl	3bd0 <xTaskRemoveFromEventList>
    3428:	2800      	cmp	r0, #0
    342a:	d0f7      	beq.n	341c <xQueueReceiveFromISR+0x60>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1832
						if( pxHigherPriorityTaskWoken != NULL )
    342c:	f1b8 0f00 	cmp.w	r8, #0
    3430:	d0f4      	beq.n	341c <xQueueReceiveFromISR+0x60>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1834
							*pxHigherPriorityTaskWoken = pdTRUE;
    3432:	2001      	movs	r0, #1
    3434:	f8c8 0000 	str.w	r0, [r8]
vPortSetBASEPRI():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
	__asm volatile
    3438:	f387 8811 	msr	BASEPRI, r7
xQueueReceiveFromISR():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1869
}
    343c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1855
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
    3440:	3601      	adds	r6, #1
    3442:	b276      	sxtb	r6, r6
    3444:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
    3448:	e7e8      	b.n	341c <xQueueReceiveFromISR+0x60>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1862
			xReturn = pdFAIL;
    344a:	4620      	mov	r0, r4
    344c:	e7f4      	b.n	3438 <xQueueReceiveFromISR+0x7c>
    344e:	bf00      	nop
    3450:	0000b108 	.word	0x0000b108
    3454:	0000b286 	.word	0x0000b286

00003458 <vQueueDelete>:
vQueueDelete():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1972
{
    3458:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1975
	configASSERT( pxQueue );
    345a:	b928      	cbnz	r0, 3468 <vQueueDelete+0x10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1975 (discriminator 1)
    345c:	4906      	ldr	r1, [pc, #24]	; (3478 <vQueueDelete+0x20>)
    345e:	f240 70b7 	movw	r0, #1975	; 0x7b7
    3462:	f7ff f889 	bl	2578 <configASSERT_callback>
    3466:	e7fe      	b.n	3466 <vQueueDelete+0xe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1994
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
    3468:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
    346c:	b91b      	cbnz	r3, 3476 <vQueueDelete+0x1e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2010
}
    346e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1996
			vPortFree( pxQueue );
    3472:	f7ff b8cc 	b.w	260e <vPortFree>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2010
}
    3476:	bd08      	pop	{r3, pc}
    3478:	0000b108 	.word	0x0000b108

0000347c <prvAddNewTaskToReadyList>:
prvAddNewTaskToReadyList():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1073
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
    347c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    3480:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1076
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
    3482:	f7ff f937 	bl	26f4 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1078
	{
		uxCurrentNumberOfTasks++;
    3486:	4b2d      	ldr	r3, [pc, #180]	; (353c <prvAddNewTaskToReadyList+0xc0>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1079
		if( pxCurrentTCB == NULL )
    3488:	4d2d      	ldr	r5, [pc, #180]	; (3540 <prvAddNewTaskToReadyList+0xc4>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1078
		uxCurrentNumberOfTasks++;
    348a:	681a      	ldr	r2, [r3, #0]
    348c:	4f2d      	ldr	r7, [pc, #180]	; (3544 <prvAddNewTaskToReadyList+0xc8>)
    348e:	3201      	adds	r2, #1
    3490:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1079
		if( pxCurrentTCB == NULL )
    3492:	682e      	ldr	r6, [r5, #0]
    3494:	2e00      	cmp	r6, #0
    3496:	d146      	bne.n	3526 <prvAddNewTaskToReadyList+0xaa>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1083
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
    3498:	602c      	str	r4, [r5, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1085

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
    349a:	681b      	ldr	r3, [r3, #0]
    349c:	2b01      	cmp	r3, #1
    349e:	d11c      	bne.n	34da <prvAddNewTaskToReadyList+0x5e>
    34a0:	46b8      	mov	r8, r7
prvInitialiseTaskLists():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3552
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
    34a2:	4640      	mov	r0, r8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3550
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
    34a4:	3601      	adds	r6, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3552
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
    34a6:	f7ff fb3b 	bl	2b20 <vListInitialise>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3550
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
    34aa:	2e0a      	cmp	r6, #10
    34ac:	f108 0814 	add.w	r8, r8, #20
    34b0:	d1f7      	bne.n	34a2 <prvAddNewTaskToReadyList+0x26>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3555
	}

	vListInitialise( &xDelayedTaskList1 );
    34b2:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 356c <prvAddNewTaskToReadyList+0xf0>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3556
	vListInitialise( &xDelayedTaskList2 );
    34b6:	4e24      	ldr	r6, [pc, #144]	; (3548 <prvAddNewTaskToReadyList+0xcc>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3555
	vListInitialise( &xDelayedTaskList1 );
    34b8:	4640      	mov	r0, r8
    34ba:	f7ff fb31 	bl	2b20 <vListInitialise>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3556
	vListInitialise( &xDelayedTaskList2 );
    34be:	4630      	mov	r0, r6
    34c0:	f7ff fb2e 	bl	2b20 <vListInitialise>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3557
	vListInitialise( &xPendingReadyList );
    34c4:	4821      	ldr	r0, [pc, #132]	; (354c <prvAddNewTaskToReadyList+0xd0>)
    34c6:	f7ff fb2b 	bl	2b20 <vListInitialise>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3567
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
    34ca:	4821      	ldr	r0, [pc, #132]	; (3550 <prvAddNewTaskToReadyList+0xd4>)
    34cc:	f7ff fb28 	bl	2b20 <vListInitialise>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3573
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
    34d0:	4b20      	ldr	r3, [pc, #128]	; (3554 <prvAddNewTaskToReadyList+0xd8>)
    34d2:	f8c3 8000 	str.w	r8, [r3]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3574
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
    34d6:	4b20      	ldr	r3, [pc, #128]	; (3558 <prvAddNewTaskToReadyList+0xdc>)
    34d8:	601e      	str	r6, [r3, #0]
prvAddNewTaskToReadyList():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1119
		uxTaskNumber++;
    34da:	4a20      	ldr	r2, [pc, #128]	; (355c <prvAddNewTaskToReadyList+0xe0>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1129
		prvAddTaskToReadyList( pxNewTCB );
    34dc:	4920      	ldr	r1, [pc, #128]	; (3560 <prvAddNewTaskToReadyList+0xe4>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1119
		uxTaskNumber++;
    34de:	6813      	ldr	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1129
		prvAddTaskToReadyList( pxNewTCB );
    34e0:	6808      	ldr	r0, [r1, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1119
		uxTaskNumber++;
    34e2:	3301      	adds	r3, #1
    34e4:	6013      	str	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1129
		prvAddTaskToReadyList( pxNewTCB );
    34e6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1124
			pxNewTCB->uxTCBNumber = uxTaskNumber;
    34e8:	6423      	str	r3, [r4, #64]	; 0x40
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1129
		prvAddTaskToReadyList( pxNewTCB );
    34ea:	2301      	movs	r3, #1
    34ec:	4093      	lsls	r3, r2
    34ee:	4303      	orrs	r3, r0
    34f0:	2014      	movs	r0, #20
    34f2:	600b      	str	r3, [r1, #0]
    34f4:	fb00 7002 	mla	r0, r0, r2, r7
    34f8:	1d21      	adds	r1, r4, #4
    34fa:	f7ff fb1f 	bl	2b3c <vListInsertEnd>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1133
	taskEXIT_CRITICAL();
    34fe:	f7ff f91b 	bl	2738 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1135
	if( xSchedulerRunning != pdFALSE )
    3502:	4b18      	ldr	r3, [pc, #96]	; (3564 <prvAddNewTaskToReadyList+0xe8>)
    3504:	681b      	ldr	r3, [r3, #0]
    3506:	b163      	cbz	r3, 3522 <prvAddNewTaskToReadyList+0xa6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1139
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
    3508:	682b      	ldr	r3, [r5, #0]
    350a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    350c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    350e:	429a      	cmp	r2, r3
    3510:	d207      	bcs.n	3522 <prvAddNewTaskToReadyList+0xa6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1141
			taskYIELD_IF_USING_PREEMPTION();
    3512:	4b15      	ldr	r3, [pc, #84]	; (3568 <prvAddNewTaskToReadyList+0xec>)
    3514:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    3518:	601a      	str	r2, [r3, #0]
    351a:	f3bf 8f4f 	dsb	sy
    351e:	f3bf 8f6f 	isb	sy
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1152
}
    3522:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1102
			if( xSchedulerRunning == pdFALSE )
    3526:	4b0f      	ldr	r3, [pc, #60]	; (3564 <prvAddNewTaskToReadyList+0xe8>)
    3528:	681b      	ldr	r3, [r3, #0]
    352a:	2b00      	cmp	r3, #0
    352c:	d1d5      	bne.n	34da <prvAddNewTaskToReadyList+0x5e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1104
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
    352e:	682b      	ldr	r3, [r5, #0]
    3530:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    3532:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    3534:	429a      	cmp	r2, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1106
					pxCurrentTCB = pxNewTCB;
    3536:	bf98      	it	ls
    3538:	602c      	strls	r4, [r5, #0]
    353a:	e7ce      	b.n	34da <prvAddNewTaskToReadyList+0x5e>
    353c:	10000ad0 	.word	0x10000ad0
    3540:	100009f8 	.word	0x100009f8
    3544:	10000a04 	.word	0x10000a04
    3548:	10000af8 	.word	0x10000af8
    354c:	10000b18 	.word	0x10000b18
    3550:	10000b30 	.word	0x10000b30
    3554:	100009fc 	.word	0x100009fc
    3558:	10000a00 	.word	0x10000a00
    355c:	10000adc 	.word	0x10000adc
    3560:	10000ae0 	.word	0x10000ae0
    3564:	10000b2c 	.word	0x10000b2c
    3568:	e000ed04 	.word	0xe000ed04
    356c:	10000ae4 	.word	0x10000ae4

00003570 <prvIdleTask>:
prvIdleTask():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3335
{
    3570:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3374
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
    3572:	4c07      	ldr	r4, [pc, #28]	; (3590 <prvIdleTask+0x20>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3376
				taskYIELD();
    3574:	4d07      	ldr	r5, [pc, #28]	; (3594 <prvIdleTask+0x24>)
    3576:	f04f 5680 	mov.w	r6, #268435456	; 0x10000000
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3374
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
    357a:	6823      	ldr	r3, [r4, #0]
    357c:	2b01      	cmp	r3, #1
    357e:	d904      	bls.n	358a <prvIdleTask+0x1a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3376
				taskYIELD();
    3580:	602e      	str	r6, [r5, #0]
    3582:	f3bf 8f4f 	dsb	sy
    3586:	f3bf 8f6f 	isb	sy
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3394
			vApplicationIdleHook();
    358a:	f7fe ffed 	bl	2568 <vApplicationIdleHook>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3351
		prvCheckTasksWaitingTermination();
    358e:	e7f4      	b.n	357a <prvIdleTask+0xa>
    3590:	10000a04 	.word	0x10000a04
    3594:	e000ed04 	.word	0xe000ed04

00003598 <prvResetNextTaskUnblockTime>:
prvResetNextTaskUnblockTime():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3884

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
    3598:	4a06      	ldr	r2, [pc, #24]	; (35b4 <prvResetNextTaskUnblockTime+0x1c>)
    359a:	6813      	ldr	r3, [r2, #0]
    359c:	6819      	ldr	r1, [r3, #0]
    359e:	4b06      	ldr	r3, [pc, #24]	; (35b8 <prvResetNextTaskUnblockTime+0x20>)
    35a0:	b919      	cbnz	r1, 35aa <prvResetNextTaskUnblockTime+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3890
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
    35a2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3899
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
    35a6:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3901
	}
}
    35a8:	4770      	bx	lr
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3898
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    35aa:	6812      	ldr	r2, [r2, #0]
    35ac:	68d2      	ldr	r2, [r2, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3899
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
    35ae:	68d2      	ldr	r2, [r2, #12]
    35b0:	6852      	ldr	r2, [r2, #4]
    35b2:	e7f8      	b.n	35a6 <prvResetNextTaskUnblockTime+0xe>
    35b4:	100009fc 	.word	0x100009fc
    35b8:	10000b10 	.word	0x10000b10

000035bc <prvInitialiseNewTask.isra.2>:
prvInitialiseNewTask():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:821
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
    35bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    35c0:	e9dd 6409 	ldrd	r6, r4, [sp, #36]	; 0x24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:851
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
    35c4:	ea4f 0982 	mov.w	r9, r2, lsl #2
    35c8:	464a      	mov	r2, r9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:821
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
    35ca:	4607      	mov	r7, r0
    35cc:	460d      	mov	r5, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:851
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
    35ce:	6b20      	ldr	r0, [r4, #48]	; 0x30
    35d0:	21a5      	movs	r1, #165	; 0xa5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:821
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
    35d2:	4698      	mov	r8, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:851
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
    35d4:	f002 f822 	bl	561c <memset>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:861
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
    35d8:	6b23      	ldr	r3, [r4, #48]	; 0x30
    35da:	f1a9 0904 	sub.w	r9, r9, #4
    35de:	4499      	add	r9, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:862
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
    35e0:	f029 0907 	bic.w	r9, r9, #7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:889
	if( pcName != NULL )
    35e4:	b39d      	cbz	r5, 364e <prvInitialiseNewTask.isra.2+0x92>
    35e6:	1e6b      	subs	r3, r5, #1
    35e8:	f104 0234 	add.w	r2, r4, #52	; 0x34
    35ec:	350b      	adds	r5, #11
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:893
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
    35ee:	f813 1f01 	ldrb.w	r1, [r3, #1]!
    35f2:	f802 1b01 	strb.w	r1, [r2], #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:898
			if( pcName[ x ] == ( char ) 0x00 )
    35f6:	b109      	cbz	r1, 35fc <prvInitialiseNewTask.isra.2+0x40>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:891
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
    35f8:	42ab      	cmp	r3, r5
    35fa:	d1f8      	bne.n	35ee <prvInitialiseNewTask.isra.2+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:910
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
    35fc:	2300      	movs	r3, #0
    35fe:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:921
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
    3602:	9d08      	ldr	r5, [sp, #32]
    3604:	2d09      	cmp	r5, #9
    3606:	bf28      	it	cs
    3608:	2509      	movcs	r5, #9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:934
		pxNewTCB->uxMutexesHeld = 0;
    360a:	f04f 0a00 	mov.w	sl, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:930
	pxNewTCB->uxPriority = uxPriority;
    360e:	62e5      	str	r5, [r4, #44]	; 0x2c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:933
		pxNewTCB->uxBasePriority = uxPriority;
    3610:	64a5      	str	r5, [r4, #72]	; 0x48
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:938
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
    3612:	1d20      	adds	r0, r4, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:934
		pxNewTCB->uxMutexesHeld = 0;
    3614:	f8c4 a04c 	str.w	sl, [r4, #76]	; 0x4c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:938
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
    3618:	f7ff fa8d 	bl	2b36 <vListInitialiseItem>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:946
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    361c:	f1c5 050a 	rsb	r5, r5, #10
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:939
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
    3620:	f104 0018 	add.w	r0, r4, #24
    3624:	f7ff fa87 	bl	2b36 <vListInitialiseItem>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:989
		pxNewTCB->ulNotifiedValue = 0;
    3628:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:943
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
    362c:	6124      	str	r4, [r4, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:946
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    362e:	61a5      	str	r5, [r4, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:947
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
    3630:	6264      	str	r4, [r4, #36]	; 0x24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:963
		pxNewTCB->ulRunTimeCounter = 0UL;
    3632:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:990
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
    3636:	f884 a058 	strb.w	sl, [r4, #88]	; 0x58
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1053
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
    363a:	4642      	mov	r2, r8
    363c:	4639      	mov	r1, r7
    363e:	4648      	mov	r0, r9
    3640:	f7ff f82e 	bl	26a0 <pxPortInitialiseStack>
    3644:	6020      	str	r0, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1059
	if( pxCreatedTask != NULL )
    3646:	b106      	cbz	r6, 364a <prvInitialiseNewTask.isra.2+0x8e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1063
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
    3648:	6034      	str	r4, [r6, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1069
}
    364a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:916
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
    364e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
    3652:	e7d6      	b.n	3602 <prvInitialiseNewTask.isra.2+0x46>

00003654 <prvAddCurrentTaskToDelayedList>:
prvAddCurrentTaskToDelayedList():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5082
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
    3654:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5084
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
    3656:	4b1b      	ldr	r3, [pc, #108]	; (36c4 <prvAddCurrentTaskToDelayedList+0x70>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5097
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    3658:	4e1b      	ldr	r6, [pc, #108]	; (36c8 <prvAddCurrentTaskToDelayedList+0x74>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5084
const TickType_t xConstTickCount = xTickCount;
    365a:	681c      	ldr	r4, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5082
{
    365c:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5097
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    365e:	6830      	ldr	r0, [r6, #0]
    3660:	3004      	adds	r0, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5082
{
    3662:	460f      	mov	r7, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5097
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    3664:	f7ff fa8d 	bl	2b82 <uxListRemove>
    3668:	4633      	mov	r3, r6
    366a:	b940      	cbnz	r0, 367e <prvAddCurrentTaskToDelayedList+0x2a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5101
	{
		/* The current task must be in a ready list, so there is no need to
		check, and the port reset macro can be called directly. */
		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority ); /*lint !e931 pxCurrentTCB cannot change as it is the calling task.  pxCurrentTCB->uxPriority and uxTopReadyPriority cannot change as called with scheduler suspended or in a critical section. */
    366c:	6831      	ldr	r1, [r6, #0]
    366e:	4e17      	ldr	r6, [pc, #92]	; (36cc <prvAddCurrentTaskToDelayedList+0x78>)
    3670:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
    3672:	6832      	ldr	r2, [r6, #0]
    3674:	2001      	movs	r0, #1
    3676:	4088      	lsls	r0, r1
    3678:	ea22 0200 	bic.w	r2, r2, r0
    367c:	6032      	str	r2, [r6, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5110
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
    367e:	1c6a      	adds	r2, r5, #1
    3680:	d107      	bne.n	3692 <prvAddCurrentTaskToDelayedList+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5110 (discriminator 1)
    3682:	b137      	cbz	r7, 3692 <prvAddCurrentTaskToDelayedList+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5115
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
    3684:	6819      	ldr	r1, [r3, #0]
    3686:	4812      	ldr	r0, [pc, #72]	; (36d0 <prvAddCurrentTaskToDelayedList+0x7c>)
    3688:	3104      	adds	r1, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5190

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
    368a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5115
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
    368e:	f7ff ba55 	b.w	2b3c <vListInsertEnd>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5125
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
    3692:	681a      	ldr	r2, [r3, #0]
    3694:	1964      	adds	r4, r4, r5
    3696:	6054      	str	r4, [r2, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5127
			if( xTimeToWake < xConstTickCount )
    3698:	d307      	bcc.n	36aa <prvAddCurrentTaskToDelayedList+0x56>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5131
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
    369a:	4a0e      	ldr	r2, [pc, #56]	; (36d4 <prvAddCurrentTaskToDelayedList+0x80>)
    369c:	6810      	ldr	r0, [r2, #0]
    369e:	6819      	ldr	r1, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5190
}
    36a0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5131
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
    36a4:	3104      	adds	r1, #4
    36a6:	f7ff ba55 	b.w	2b54 <vListInsert>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5137
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
    36aa:	4a0b      	ldr	r2, [pc, #44]	; (36d8 <prvAddCurrentTaskToDelayedList+0x84>)
    36ac:	6810      	ldr	r0, [r2, #0]
    36ae:	6819      	ldr	r1, [r3, #0]
    36b0:	3104      	adds	r1, #4
    36b2:	f7ff fa4f 	bl	2b54 <vListInsert>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5142
				if( xTimeToWake < xNextTaskUnblockTime )
    36b6:	4b09      	ldr	r3, [pc, #36]	; (36dc <prvAddCurrentTaskToDelayedList+0x88>)
    36b8:	681a      	ldr	r2, [r3, #0]
    36ba:	42a2      	cmp	r2, r4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5144
					xNextTaskUnblockTime = xTimeToWake;
    36bc:	bf88      	it	hi
    36be:	601c      	strhi	r4, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5190
}
    36c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    36c2:	bf00      	nop
    36c4:	10000b44 	.word	0x10000b44
    36c8:	100009f8 	.word	0x100009f8
    36cc:	10000ae0 	.word	0x10000ae0
    36d0:	10000b30 	.word	0x10000b30
    36d4:	10000a00 	.word	0x10000a00
    36d8:	100009fc 	.word	0x100009fc
    36dc:	10000b10 	.word	0x10000b10

000036e0 <xTaskCreateStatic>:
xTaskCreateStatic():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:585
	{
    36e0:	b570      	push	{r4, r5, r6, lr}
    36e2:	b086      	sub	sp, #24
    36e4:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:589
		configASSERT( puxStackBuffer != NULL );
    36e8:	b92d      	cbnz	r5, 36f6 <xTaskCreateStatic+0x16>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:589 (discriminator 1)
    36ea:	4915      	ldr	r1, [pc, #84]	; (3740 <xTaskCreateStatic+0x60>)
    36ec:	f240 204d 	movw	r0, #589	; 0x24d
    36f0:	f7fe ff42 	bl	2578 <configASSERT_callback>
    36f4:	e7fe      	b.n	36f4 <xTaskCreateStatic+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:590
		configASSERT( pxTaskBuffer != NULL );
    36f6:	b92c      	cbnz	r4, 3704 <xTaskCreateStatic+0x24>
    36f8:	4912      	ldr	r1, [pc, #72]	; (3744 <xTaskCreateStatic+0x64>)
    36fa:	f240 204e 	movw	r0, #590	; 0x24e
    36fe:	f7fe ff3b 	bl	2578 <configASSERT_callback>
    3702:	e7fe      	b.n	3702 <xTaskCreateStatic+0x22>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:597
			volatile size_t xSize = sizeof( StaticTask_t );
    3704:	265c      	movs	r6, #92	; 0x5c
    3706:	9605      	str	r6, [sp, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:598
			configASSERT( xSize == sizeof( TCB_t ) );
    3708:	9e05      	ldr	r6, [sp, #20]
    370a:	2e5c      	cmp	r6, #92	; 0x5c
    370c:	d005      	beq.n	371a <xTaskCreateStatic+0x3a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:598 (discriminator 1)
    370e:	490e      	ldr	r1, [pc, #56]	; (3748 <xTaskCreateStatic+0x68>)
    3710:	f240 2056 	movw	r0, #598	; 0x256
    3714:	f7fe ff30 	bl	2578 <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:598 (discriminator 3)
    3718:	e7fe      	b.n	3718 <xTaskCreateStatic+0x38>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:609
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
    371a:	6325      	str	r5, [r4, #48]	; 0x30
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:615
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
    371c:	2502      	movs	r5, #2
    371e:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:619
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
    3722:	ad04      	add	r5, sp, #16
    3724:	9501      	str	r5, [sp, #4]
    3726:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    3728:	9402      	str	r4, [sp, #8]
    372a:	9500      	str	r5, [sp, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:599
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
    372c:	9e05      	ldr	r6, [sp, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:619
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
    372e:	f7ff ff45 	bl	35bc <prvInitialiseNewTask.isra.2>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:620
			prvAddNewTaskToReadyList( pxNewTCB );
    3732:	4620      	mov	r0, r4
    3734:	f7ff fea2 	bl	347c <prvAddNewTaskToReadyList>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:628
	}
    3738:	9804      	ldr	r0, [sp, #16]
    373a:	b006      	add	sp, #24
    373c:	bd70      	pop	{r4, r5, r6, pc}
    373e:	bf00      	nop
    3740:	0000b3f6 	.word	0x0000b3f6
    3744:	0000b40d 	.word	0x0000b40d
    3748:	0000b422 	.word	0x0000b422

0000374c <xTaskCreate>:
xTaskCreate():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:736
	{
    374c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    3750:	4607      	mov	r7, r0
    3752:	b085      	sub	sp, #20
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:770
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
    3754:	0090      	lsls	r0, r2, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:736
	{
    3756:	4688      	mov	r8, r1
    3758:	4616      	mov	r6, r2
    375a:	4699      	mov	r9, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:770
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
    375c:	f7fe ff48 	bl	25f0 <pvPortMalloc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:772
			if( pxStack != NULL )
    3760:	4605      	mov	r5, r0
    3762:	b1e8      	cbz	r0, 37a0 <xTaskCreate+0x54>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:775
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
    3764:	205c      	movs	r0, #92	; 0x5c
    3766:	f7fe ff43 	bl	25f0 <pvPortMalloc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:777
				if( pxNewTCB != NULL )
    376a:	4604      	mov	r4, r0
    376c:	b1a8      	cbz	r0, 379a <xTaskCreate+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:802
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
    376e:	2300      	movs	r3, #0
    3770:	f880 3059 	strb.w	r3, [r0, #89]	; 0x59
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:806
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
    3774:	9b0d      	ldr	r3, [sp, #52]	; 0x34
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:780
					pxNewTCB->pxStack = pxStack;
    3776:	6305      	str	r5, [r0, #48]	; 0x30
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:806
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
    3778:	9301      	str	r3, [sp, #4]
    377a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    377c:	9002      	str	r0, [sp, #8]
    377e:	9300      	str	r3, [sp, #0]
    3780:	4632      	mov	r2, r6
    3782:	464b      	mov	r3, r9
    3784:	4641      	mov	r1, r8
    3786:	4638      	mov	r0, r7
    3788:	f7ff ff18 	bl	35bc <prvInitialiseNewTask.isra.2>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:807
			prvAddNewTaskToReadyList( pxNewTCB );
    378c:	4620      	mov	r0, r4
    378e:	f7ff fe75 	bl	347c <prvAddNewTaskToReadyList>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:808
			xReturn = pdPASS;
    3792:	2001      	movs	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:816
	}
    3794:	b005      	add	sp, #20
    3796:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:786
					vPortFree( pxStack );
    379a:	4628      	mov	r0, r5
    379c:	f7fe ff37 	bl	260e <vPortFree>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:812
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
    37a0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:815
		return xReturn;
    37a4:	e7f6      	b.n	3794 <xTaskCreate+0x48>
    37a6:	Address 0x00000000000037a6 is out of bounds.


000037a8 <vTaskStartScheduler>:
vTaskStartScheduler():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1968
{
    37a8:	b510      	push	{r4, lr}
    37aa:	b088      	sub	sp, #32
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1974
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
    37ac:	2400      	movs	r4, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1980
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
    37ae:	aa07      	add	r2, sp, #28
    37b0:	a906      	add	r1, sp, #24
    37b2:	a805      	add	r0, sp, #20
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1975
		StackType_t *pxIdleTaskStackBuffer = NULL;
    37b4:	e9cd 4405 	strd	r4, r4, [sp, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1980
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
    37b8:	f7fe fefe 	bl	25b8 <vApplicationGetIdleTaskMemory>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1981
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
    37bc:	9b05      	ldr	r3, [sp, #20]
    37be:	9302      	str	r3, [sp, #8]
    37c0:	9b06      	ldr	r3, [sp, #24]
    37c2:	9a07      	ldr	r2, [sp, #28]
    37c4:	490f      	ldr	r1, [pc, #60]	; (3804 <vTaskStartScheduler+0x5c>)
    37c6:	4810      	ldr	r0, [pc, #64]	; (3808 <vTaskStartScheduler+0x60>)
    37c8:	e9cd 4300 	strd	r4, r3, [sp]
    37cc:	4623      	mov	r3, r4
    37ce:	f7ff ff87 	bl	36e0 <xTaskCreateStatic>
    37d2:	4b0e      	ldr	r3, [pc, #56]	; (380c <vTaskStartScheduler+0x64>)
    37d4:	6018      	str	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1989
		if( xIdleTaskHandle != NULL )
    37d6:	b190      	cbz	r0, 37fe <vTaskStartScheduler+0x56>
vPortRaiseBASEPRI():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:195
	__asm volatile
    37d8:	f04f 0318 	mov.w	r3, #24
    37dc:	f383 8811 	msr	BASEPRI, r3
    37e0:	f3bf 8f6f 	isb	sy
    37e4:	f3bf 8f4f 	dsb	sy
vTaskStartScheduler():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2049
		xNextTaskUnblockTime = portMAX_DELAY;
    37e8:	4b09      	ldr	r3, [pc, #36]	; (3810 <vTaskStartScheduler+0x68>)
    37ea:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    37ee:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2050
		xSchedulerRunning = pdTRUE;
    37f0:	4b08      	ldr	r3, [pc, #32]	; (3814 <vTaskStartScheduler+0x6c>)
    37f2:	2201      	movs	r2, #1
    37f4:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2051
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
    37f6:	4b08      	ldr	r3, [pc, #32]	; (3818 <vTaskStartScheduler+0x70>)
    37f8:	601c      	str	r4, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2065
		if( xPortStartScheduler() != pdFALSE )
    37fa:	f7ff f811 	bl	2820 <xPortStartScheduler>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2086
}
    37fe:	b008      	add	sp, #32
    3800:	bd10      	pop	{r4, pc}
    3802:	bf00      	nop
    3804:	0000b39c 	.word	0x0000b39c
    3808:	00003571 	.word	0x00003571
    380c:	10000b0c 	.word	0x10000b0c
    3810:	10000b10 	.word	0x10000b10
    3814:	10000b2c 	.word	0x10000b2c
    3818:	10000b44 	.word	0x10000b44

0000381c <vTaskSuspendAll>:
vTaskSuspendAll():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2106
	++uxSchedulerSuspended;
    381c:	4a02      	ldr	r2, [pc, #8]	; (3828 <vTaskSuspendAll+0xc>)
    381e:	6813      	ldr	r3, [r2, #0]
    3820:	3301      	adds	r3, #1
    3822:	6013      	str	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2108
}
    3824:	4770      	bx	lr
    3826:	bf00      	nop
    3828:	10000ad8 	.word	0x10000ad8

0000382c <xTaskGetTickCount>:
xTaskGetTickCount():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2291
		xTicks = xTickCount;
    382c:	4b01      	ldr	r3, [pc, #4]	; (3834 <xTaskGetTickCount+0x8>)
    382e:	6818      	ldr	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2296
}
    3830:	4770      	bx	lr
    3832:	bf00      	nop
    3834:	10000b44 	.word	0x10000b44

00003838 <xTaskIncrementTick>:
xTaskIncrementTick():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2666
{
    3838:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2675
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
    383c:	4b3b      	ldr	r3, [pc, #236]	; (392c <xTaskIncrementTick+0xf4>)
    383e:	681b      	ldr	r3, [r3, #0]
    3840:	2b00      	cmp	r3, #0
    3842:	d16b      	bne.n	391c <xTaskIncrementTick+0xe4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2679
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
    3844:	4b3a      	ldr	r3, [pc, #232]	; (3930 <xTaskIncrementTick+0xf8>)
    3846:	681c      	ldr	r4, [r3, #0]
    3848:	3401      	adds	r4, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2683
		xTickCount = xConstTickCount;
    384a:	601c      	str	r4, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2685
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
    384c:	b9a4      	cbnz	r4, 3878 <xTaskIncrementTick+0x40>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2687
			taskSWITCH_DELAYED_LISTS();
    384e:	4b39      	ldr	r3, [pc, #228]	; (3934 <xTaskIncrementTick+0xfc>)
    3850:	681a      	ldr	r2, [r3, #0]
    3852:	6812      	ldr	r2, [r2, #0]
    3854:	b12a      	cbz	r2, 3862 <xTaskIncrementTick+0x2a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2687 (discriminator 1)
    3856:	4938      	ldr	r1, [pc, #224]	; (3938 <xTaskIncrementTick+0x100>)
    3858:	f640 207f 	movw	r0, #2687	; 0xa7f
    385c:	f7fe fe8c 	bl	2578 <configASSERT_callback>
    3860:	e7fe      	b.n	3860 <xTaskIncrementTick+0x28>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2687 (discriminator 2)
    3862:	4a36      	ldr	r2, [pc, #216]	; (393c <xTaskIncrementTick+0x104>)
    3864:	6819      	ldr	r1, [r3, #0]
    3866:	6810      	ldr	r0, [r2, #0]
    3868:	6018      	str	r0, [r3, #0]
    386a:	6011      	str	r1, [r2, #0]
    386c:	4a34      	ldr	r2, [pc, #208]	; (3940 <xTaskIncrementTick+0x108>)
    386e:	6813      	ldr	r3, [r2, #0]
    3870:	3301      	adds	r3, #1
    3872:	6013      	str	r3, [r2, #0]
    3874:	f7ff fe90 	bl	3598 <prvResetNextTaskUnblockTime>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2698
		if( xConstTickCount >= xNextTaskUnblockTime )
    3878:	4d32      	ldr	r5, [pc, #200]	; (3944 <xTaskIncrementTick+0x10c>)
    387a:	4f33      	ldr	r7, [pc, #204]	; (3948 <xTaskIncrementTick+0x110>)
    387c:	682b      	ldr	r3, [r5, #0]
    387e:	42a3      	cmp	r3, r4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2669
BaseType_t xSwitchRequired = pdFALSE;
    3880:	f04f 0b00 	mov.w	fp, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2698
		if( xConstTickCount >= xNextTaskUnblockTime )
    3884:	d911      	bls.n	38aa <xTaskIncrementTick+0x72>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2781
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
    3886:	683a      	ldr	r2, [r7, #0]
    3888:	4b30      	ldr	r3, [pc, #192]	; (394c <xTaskIncrementTick+0x114>)
    388a:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
    388c:	2214      	movs	r2, #20
    388e:	434a      	muls	r2, r1
    3890:	589a      	ldr	r2, [r3, r2]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2783
				xSwitchRequired = pdTRUE;
    3892:	2a02      	cmp	r2, #2
    3894:	bf28      	it	cs
    3896:	f04f 0b01 	movcs.w	fp, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2822
		if( xYieldPending != pdFALSE )
    389a:	4a2d      	ldr	r2, [pc, #180]	; (3950 <xTaskIncrementTick+0x118>)
    389c:	6812      	ldr	r2, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2824
			xSwitchRequired = pdTRUE;
    389e:	2a00      	cmp	r2, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2834
}
    38a0:	bf0c      	ite	eq
    38a2:	4658      	moveq	r0, fp
    38a4:	2001      	movne	r0, #1
    38a6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2702
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
    38aa:	f8df a088 	ldr.w	sl, [pc, #136]	; 3934 <xTaskIncrementTick+0xfc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2752
					prvAddTaskToReadyList( pxTCB );
    38ae:	f8df 90a8 	ldr.w	r9, [pc, #168]	; 3958 <xTaskIncrementTick+0x120>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2702
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
    38b2:	f8da 2000 	ldr.w	r2, [sl]
    38b6:	6812      	ldr	r2, [r2, #0]
    38b8:	b91a      	cbnz	r2, 38c2 <xTaskIncrementTick+0x8a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2709
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    38ba:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    38be:	602a      	str	r2, [r5, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2710
					break;
    38c0:	e7e1      	b.n	3886 <xTaskIncrementTick+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2718
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    38c2:	f8da 2000 	ldr.w	r2, [sl]
    38c6:	68d2      	ldr	r2, [r2, #12]
    38c8:	68d6      	ldr	r6, [r2, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2719
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
    38ca:	6871      	ldr	r1, [r6, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2721
					if( xConstTickCount < xItemValue )
    38cc:	428c      	cmp	r4, r1
    38ce:	d201      	bcs.n	38d4 <xTaskIncrementTick+0x9c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2728
						xNextTaskUnblockTime = xItemValue;
    38d0:	6029      	str	r1, [r5, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2729
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
    38d2:	e7d8      	b.n	3886 <xTaskIncrementTick+0x4e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2737
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
    38d4:	f106 0804 	add.w	r8, r6, #4
    38d8:	4640      	mov	r0, r8
    38da:	f7ff f952 	bl	2b82 <uxListRemove>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2741
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
    38de:	6ab1      	ldr	r1, [r6, #40]	; 0x28
    38e0:	b119      	cbz	r1, 38ea <xTaskIncrementTick+0xb2>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2743
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
    38e2:	f106 0018 	add.w	r0, r6, #24
    38e6:	f7ff f94c 	bl	2b82 <uxListRemove>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2752
					prvAddTaskToReadyList( pxTCB );
    38ea:	6af0      	ldr	r0, [r6, #44]	; 0x2c
    38ec:	f8d9 3000 	ldr.w	r3, [r9]
    38f0:	2201      	movs	r2, #1
    38f2:	fa02 f100 	lsl.w	r1, r2, r0
    38f6:	4319      	orrs	r1, r3
    38f8:	4b14      	ldr	r3, [pc, #80]	; (394c <xTaskIncrementTick+0x114>)
    38fa:	f8c9 1000 	str.w	r1, [r9]
    38fe:	f04f 0c14 	mov.w	ip, #20
    3902:	4641      	mov	r1, r8
    3904:	fb0c 3000 	mla	r0, ip, r0, r3
    3908:	f7ff f918 	bl	2b3c <vListInsertEnd>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2762
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
    390c:	6838      	ldr	r0, [r7, #0]
    390e:	6af1      	ldr	r1, [r6, #44]	; 0x2c
    3910:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2764
							xSwitchRequired = pdTRUE;
    3912:	4291      	cmp	r1, r2
    3914:	bf28      	it	cs
    3916:	f04f 0b01 	movcs.w	fp, #1
    391a:	e7ca      	b.n	38b2 <xTaskIncrementTick+0x7a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2809
		++uxPendedTicks;
    391c:	4a0d      	ldr	r2, [pc, #52]	; (3954 <xTaskIncrementTick+0x11c>)
    391e:	6813      	ldr	r3, [r2, #0]
    3920:	3301      	adds	r3, #1
    3922:	6013      	str	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2669
BaseType_t xSwitchRequired = pdFALSE;
    3924:	f04f 0b00 	mov.w	fp, #0
    3928:	e7b7      	b.n	389a <xTaskIncrementTick+0x62>
    392a:	bf00      	nop
    392c:	10000ad8 	.word	0x10000ad8
    3930:	10000b44 	.word	0x10000b44
    3934:	100009fc 	.word	0x100009fc
    3938:	0000b43b 	.word	0x0000b43b
    393c:	10000a00 	.word	0x10000a00
    3940:	10000b14 	.word	0x10000b14
    3944:	10000b10 	.word	0x10000b10
    3948:	100009f8 	.word	0x100009f8
    394c:	10000a04 	.word	0x10000a04
    3950:	10000b48 	.word	0x10000b48
    3954:	10000ad4 	.word	0x10000ad4
    3958:	10000ae0 	.word	0x10000ae0

0000395c <xTaskResumeAll>:
xTaskResumeAll():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2175
{
    395c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2181
	configASSERT( uxSchedulerSuspended );
    3960:	4c2f      	ldr	r4, [pc, #188]	; (3a20 <xTaskResumeAll+0xc4>)
    3962:	6823      	ldr	r3, [r4, #0]
    3964:	b92b      	cbnz	r3, 3972 <xTaskResumeAll+0x16>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2181 (discriminator 1)
    3966:	492f      	ldr	r1, [pc, #188]	; (3a24 <xTaskResumeAll+0xc8>)
    3968:	f640 0085 	movw	r0, #2181	; 0x885
    396c:	f7fe fe04 	bl	2578 <configASSERT_callback>
    3970:	e7fe      	b.n	3970 <xTaskResumeAll+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2188
	taskENTER_CRITICAL();
    3972:	f7fe febf 	bl	26f4 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2190
		--uxSchedulerSuspended;
    3976:	6823      	ldr	r3, [r4, #0]
    3978:	3b01      	subs	r3, #1
    397a:	6023      	str	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2192
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
    397c:	6824      	ldr	r4, [r4, #0]
    397e:	b12c      	cbz	r4, 398c <xTaskResumeAll+0x30>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2177
BaseType_t xAlreadyYielded = pdFALSE;
    3980:	2400      	movs	r4, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2278
	taskEXIT_CRITICAL();
    3982:	f7fe fed9 	bl	2738 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2281
}
    3986:	4620      	mov	r0, r4
    3988:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2194
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
    398c:	4b26      	ldr	r3, [pc, #152]	; (3a28 <xTaskResumeAll+0xcc>)
    398e:	681b      	ldr	r3, [r3, #0]
    3990:	2b00      	cmp	r3, #0
    3992:	d0f5      	beq.n	3980 <xTaskResumeAll+0x24>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2198
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
    3994:	4d25      	ldr	r5, [pc, #148]	; (3a2c <xTaskResumeAll+0xd0>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2203
					prvAddTaskToReadyList( pxTCB );
    3996:	4e26      	ldr	r6, [pc, #152]	; (3a30 <xTaskResumeAll+0xd4>)
    3998:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 3a44 <xTaskResumeAll+0xe8>
    399c:	e01f      	b.n	39de <xTaskResumeAll+0x82>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2200
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    399e:	68eb      	ldr	r3, [r5, #12]
    39a0:	68dc      	ldr	r4, [r3, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2202
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
    39a2:	f104 0904 	add.w	r9, r4, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2201
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
    39a6:	f104 0018 	add.w	r0, r4, #24
    39aa:	f7ff f8ea 	bl	2b82 <uxListRemove>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2202
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
    39ae:	4648      	mov	r0, r9
    39b0:	f7ff f8e7 	bl	2b82 <uxListRemove>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2203
					prvAddTaskToReadyList( pxTCB );
    39b4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    39b6:	6831      	ldr	r1, [r6, #0]
    39b8:	2701      	movs	r7, #1
    39ba:	fa07 f302 	lsl.w	r3, r7, r2
    39be:	2014      	movs	r0, #20
    39c0:	430b      	orrs	r3, r1
    39c2:	fb00 8002 	mla	r0, r0, r2, r8
    39c6:	4649      	mov	r1, r9
    39c8:	6033      	str	r3, [r6, #0]
    39ca:	f7ff f8b7 	bl	2b3c <vListInsertEnd>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2207
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
    39ce:	4b19      	ldr	r3, [pc, #100]	; (3a34 <xTaskResumeAll+0xd8>)
    39d0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    39d2:	681b      	ldr	r3, [r3, #0]
    39d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    39d6:	429a      	cmp	r2, r3
    39d8:	d301      	bcc.n	39de <xTaskResumeAll+0x82>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2209
						xYieldPending = pdTRUE;
    39da:	4b17      	ldr	r3, [pc, #92]	; (3a38 <xTaskResumeAll+0xdc>)
    39dc:	601f      	str	r7, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2198
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
    39de:	682b      	ldr	r3, [r5, #0]
    39e0:	2b00      	cmp	r3, #0
    39e2:	d1dc      	bne.n	399e <xTaskResumeAll+0x42>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2217
				if( pxTCB != NULL )
    39e4:	b10c      	cbz	r4, 39ea <xTaskResumeAll+0x8e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2225
					prvResetNextTaskUnblockTime();
    39e6:	f7ff fdd7 	bl	3598 <prvResetNextTaskUnblockTime>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2233
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
    39ea:	4d14      	ldr	r5, [pc, #80]	; (3a3c <xTaskResumeAll+0xe0>)
    39ec:	682c      	ldr	r4, [r5, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2235
					if( uxPendedCounts > ( UBaseType_t ) 0U )
    39ee:	b144      	cbz	r4, 3a02 <xTaskResumeAll+0xa6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2241
								xYieldPending = pdTRUE;
    39f0:	4e11      	ldr	r6, [pc, #68]	; (3a38 <xTaskResumeAll+0xdc>)
    39f2:	2701      	movs	r7, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2239
							if( xTaskIncrementTick() != pdFALSE )
    39f4:	f7ff ff20 	bl	3838 <xTaskIncrementTick>
    39f8:	b100      	cbz	r0, 39fc <xTaskResumeAll+0xa0>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2241
								xYieldPending = pdTRUE;
    39fa:	6037      	str	r7, [r6, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2248
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
    39fc:	3c01      	subs	r4, #1
    39fe:	d1f9      	bne.n	39f4 <xTaskResumeAll+0x98>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2250
						uxPendedTicks = 0;
    3a00:	602c      	str	r4, [r5, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2258
				if( xYieldPending != pdFALSE )
    3a02:	4b0d      	ldr	r3, [pc, #52]	; (3a38 <xTaskResumeAll+0xdc>)
    3a04:	681b      	ldr	r3, [r3, #0]
    3a06:	2b00      	cmp	r3, #0
    3a08:	d0ba      	beq.n	3980 <xTaskResumeAll+0x24>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2265
					taskYIELD_IF_USING_PREEMPTION();
    3a0a:	4b0d      	ldr	r3, [pc, #52]	; (3a40 <xTaskResumeAll+0xe4>)
    3a0c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    3a10:	601a      	str	r2, [r3, #0]
    3a12:	f3bf 8f4f 	dsb	sy
    3a16:	f3bf 8f6f 	isb	sy
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2262
						xAlreadyYielded = pdTRUE;
    3a1a:	2401      	movs	r4, #1
    3a1c:	e7b1      	b.n	3982 <xTaskResumeAll+0x26>
    3a1e:	bf00      	nop
    3a20:	10000ad8 	.word	0x10000ad8
    3a24:	0000b4a0 	.word	0x0000b4a0
    3a28:	10000ad0 	.word	0x10000ad0
    3a2c:	10000b18 	.word	0x10000b18
    3a30:	10000ae0 	.word	0x10000ae0
    3a34:	100009f8 	.word	0x100009f8
    3a38:	10000b48 	.word	0x10000b48
    3a3c:	10000ad4 	.word	0x10000ad4
    3a40:	e000ed04 	.word	0xe000ed04
    3a44:	10000a04 	.word	0x10000a04

00003a48 <vTaskDelay>:
vTaskDelay():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1334
	{
    3a48:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1338
		if( xTicksToDelay > ( TickType_t ) 0U )
    3a4a:	b940      	cbnz	r0, 3a5e <vTaskDelay+0x16>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1365
			portYIELD_WITHIN_API();
    3a4c:	4b0d      	ldr	r3, [pc, #52]	; (3a84 <vTaskDelay+0x3c>)
    3a4e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    3a52:	601a      	str	r2, [r3, #0]
    3a54:	f3bf 8f4f 	dsb	sy
    3a58:	f3bf 8f6f 	isb	sy
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1371
	}
    3a5c:	bd08      	pop	{r3, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1340
			configASSERT( uxSchedulerSuspended == 0 );
    3a5e:	4b0a      	ldr	r3, [pc, #40]	; (3a88 <vTaskDelay+0x40>)
    3a60:	6819      	ldr	r1, [r3, #0]
    3a62:	b129      	cbz	r1, 3a70 <vTaskDelay+0x28>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1340 (discriminator 1)
    3a64:	4909      	ldr	r1, [pc, #36]	; (3a8c <vTaskDelay+0x44>)
    3a66:	f240 503c 	movw	r0, #1340	; 0x53c
    3a6a:	f7fe fd85 	bl	2578 <configASSERT_callback>
    3a6e:	e7fe      	b.n	3a6e <vTaskDelay+0x26>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1341
			vTaskSuspendAll();
    3a70:	f7ff fed4 	bl	381c <vTaskSuspendAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1352
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
    3a74:	f7ff fdee 	bl	3654 <prvAddCurrentTaskToDelayedList>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1354
			xAlreadyYielded = xTaskResumeAll();
    3a78:	f7ff ff70 	bl	395c <xTaskResumeAll>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1363
		if( xAlreadyYielded == pdFALSE )
    3a7c:	2800      	cmp	r0, #0
    3a7e:	d0e5      	beq.n	3a4c <vTaskDelay+0x4>
    3a80:	e7ec      	b.n	3a5c <vTaskDelay+0x14>
    3a82:	bf00      	nop
    3a84:	e000ed04 	.word	0xe000ed04
    3a88:	10000ad8 	.word	0x10000ad8
    3a8c:	0000b31c 	.word	0x0000b31c

00003a90 <vTaskSwitchContext>:
vTaskSwitchContext():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2948
{
    3a90:	b538      	push	{r3, r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2949
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
    3a92:	4b27      	ldr	r3, [pc, #156]	; (3b30 <vTaskSwitchContext+0xa0>)
    3a94:	681a      	ldr	r2, [r3, #0]
    3a96:	4b27      	ldr	r3, [pc, #156]	; (3b34 <vTaskSwitchContext+0xa4>)
    3a98:	b112      	cbz	r2, 3aa0 <vTaskSwitchContext+0x10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2953
		xYieldPending = pdTRUE;
    3a9a:	2201      	movs	r2, #1
    3a9c:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3017
}
    3a9e:	bd38      	pop	{r3, r4, r5, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2957
		xYieldPending = pdFALSE;
    3aa0:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2965
				ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
    3aa2:	f7fe fd95 	bl	25d0 <freertos_hooks__get_run_time_counter_value>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2975
			if( ulTotalRunTime > ulTaskSwitchedInTime )
    3aa6:	4a24      	ldr	r2, [pc, #144]	; (3b38 <vTaskSwitchContext+0xa8>)
    3aa8:	4c24      	ldr	r4, [pc, #144]	; (3b3c <vTaskSwitchContext+0xac>)
    3aaa:	6815      	ldr	r5, [r2, #0]
    3aac:	42a8      	cmp	r0, r5
    3aae:	d904      	bls.n	3aba <vTaskSwitchContext+0x2a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2977
				pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
    3ab0:	6821      	ldr	r1, [r4, #0]
    3ab2:	6d0b      	ldr	r3, [r1, #80]	; 0x50
    3ab4:	1b5b      	subs	r3, r3, r5
    3ab6:	4403      	add	r3, r0
    3ab8:	650b      	str	r3, [r1, #80]	; 0x50
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2988
		taskCHECK_FOR_STACK_OVERFLOW();
    3aba:	6823      	ldr	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2983
			ulTaskSwitchedInTime = ulTotalRunTime;
    3abc:	6010      	str	r0, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2988
		taskCHECK_FOR_STACK_OVERFLOW();
    3abe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    3ac0:	681a      	ldr	r2, [r3, #0]
    3ac2:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
    3ac6:	d10b      	bne.n	3ae0 <vTaskSwitchContext+0x50>
    3ac8:	685a      	ldr	r2, [r3, #4]
    3aca:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
    3ace:	d107      	bne.n	3ae0 <vTaskSwitchContext+0x50>
    3ad0:	689a      	ldr	r2, [r3, #8]
    3ad2:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
    3ad6:	d103      	bne.n	3ae0 <vTaskSwitchContext+0x50>
    3ad8:	68db      	ldr	r3, [r3, #12]
    3ada:	f1b3 3fa5 	cmp.w	r3, #2779096485	; 0xa5a5a5a5
    3ade:	d004      	beq.n	3aea <vTaskSwitchContext+0x5a>
    3ae0:	6820      	ldr	r0, [r4, #0]
    3ae2:	6821      	ldr	r1, [r4, #0]
    3ae4:	3134      	adds	r1, #52	; 0x34
    3ae6:	f7fe fd29 	bl	253c <vApplicationStackOverflowHook>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2999
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    3aea:	4b15      	ldr	r3, [pc, #84]	; (3b40 <vTaskSwitchContext+0xb0>)
    3aec:	681b      	ldr	r3, [r3, #0]
ucPortCountLeadingZeros():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:134
		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
    3aee:	fab3 f383 	clz	r3, r3
    3af2:	b2db      	uxtb	r3, r3
vTaskSwitchContext():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2999
    3af4:	f1c3 031f 	rsb	r3, r3, #31
    3af8:	2214      	movs	r2, #20
    3afa:	4912      	ldr	r1, [pc, #72]	; (3b44 <vTaskSwitchContext+0xb4>)
    3afc:	435a      	muls	r2, r3
    3afe:	1888      	adds	r0, r1, r2
    3b00:	588d      	ldr	r5, [r1, r2]
    3b02:	b92d      	cbnz	r5, 3b10 <vTaskSwitchContext+0x80>
    3b04:	4910      	ldr	r1, [pc, #64]	; (3b48 <vTaskSwitchContext+0xb8>)
    3b06:	f640 30b7 	movw	r0, #2999	; 0xbb7
    3b0a:	f7fe fd35 	bl	2578 <configASSERT_callback>
    3b0e:	e7fe      	b.n	3b0e <vTaskSwitchContext+0x7e>
    3b10:	6845      	ldr	r5, [r0, #4]
    3b12:	3208      	adds	r2, #8
    3b14:	686d      	ldr	r5, [r5, #4]
    3b16:	6045      	str	r5, [r0, #4]
    3b18:	440a      	add	r2, r1
    3b1a:	4295      	cmp	r5, r2
    3b1c:	bf04      	itt	eq
    3b1e:	686a      	ldreq	r2, [r5, #4]
    3b20:	6042      	streq	r2, [r0, #4]
    3b22:	2214      	movs	r2, #20
    3b24:	fb02 1303 	mla	r3, r2, r3, r1
    3b28:	685b      	ldr	r3, [r3, #4]
    3b2a:	68db      	ldr	r3, [r3, #12]
    3b2c:	6023      	str	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3017
}
    3b2e:	e7b6      	b.n	3a9e <vTaskSwitchContext+0xe>
    3b30:	10000ad8 	.word	0x10000ad8
    3b34:	10000b48 	.word	0x10000b48
    3b38:	10000acc 	.word	0x10000acc
    3b3c:	100009f8 	.word	0x100009f8
    3b40:	10000ae0 	.word	0x10000ae0
    3b44:	10000a04 	.word	0x10000a04
    3b48:	0000b3a1 	.word	0x0000b3a1

00003b4c <vTaskPlaceOnEventList>:
vTaskPlaceOnEventList():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3021
{
    3b4c:	b510      	push	{r4, lr}
    3b4e:	460c      	mov	r4, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3022
	configASSERT( pxEventList );
    3b50:	b928      	cbnz	r0, 3b5e <vTaskPlaceOnEventList+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3022 (discriminator 1)
    3b52:	4908      	ldr	r1, [pc, #32]	; (3b74 <vTaskPlaceOnEventList+0x28>)
    3b54:	f640 30ce 	movw	r0, #3022	; 0xbce
    3b58:	f7fe fd0e 	bl	2578 <configASSERT_callback>
    3b5c:	e7fe      	b.n	3b5c <vTaskPlaceOnEventList+0x10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3031
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
    3b5e:	4b06      	ldr	r3, [pc, #24]	; (3b78 <vTaskPlaceOnEventList+0x2c>)
    3b60:	6819      	ldr	r1, [r3, #0]
    3b62:	3118      	adds	r1, #24
    3b64:	f7fe fff6 	bl	2b54 <vListInsert>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3033
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
    3b68:	4620      	mov	r0, r4
    3b6a:	2101      	movs	r1, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3034
}
    3b6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3033
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
    3b70:	f7ff bd70 	b.w	3654 <prvAddCurrentTaskToDelayedList>
    3b74:	0000b336 	.word	0x0000b336
    3b78:	100009f8 	.word	0x100009f8

00003b7c <vTaskPlaceOnUnorderedEventList>:
vTaskPlaceOnUnorderedEventList():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3038
{
    3b7c:	b510      	push	{r4, lr}
    3b7e:	4614      	mov	r4, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3039
	configASSERT( pxEventList );
    3b80:	b928      	cbnz	r0, 3b8e <vTaskPlaceOnUnorderedEventList+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3039 (discriminator 1)
    3b82:	490f      	ldr	r1, [pc, #60]	; (3bc0 <vTaskPlaceOnUnorderedEventList+0x44>)
    3b84:	f640 30df 	movw	r0, #3039	; 0xbdf
    3b88:	f7fe fcf6 	bl	2578 <configASSERT_callback>
    3b8c:	e7fe      	b.n	3b8c <vTaskPlaceOnUnorderedEventList+0x10>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3043
	configASSERT( uxSchedulerSuspended != 0 );
    3b8e:	4b0d      	ldr	r3, [pc, #52]	; (3bc4 <vTaskPlaceOnUnorderedEventList+0x48>)
    3b90:	681b      	ldr	r3, [r3, #0]
    3b92:	b92b      	cbnz	r3, 3ba0 <vTaskPlaceOnUnorderedEventList+0x24>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3043 (discriminator 1)
    3b94:	490c      	ldr	r1, [pc, #48]	; (3bc8 <vTaskPlaceOnUnorderedEventList+0x4c>)
    3b96:	f640 30e3 	movw	r0, #3043	; 0xbe3
    3b9a:	f7fe fced 	bl	2578 <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3043 (discriminator 2)
    3b9e:	e7fe      	b.n	3b9e <vTaskPlaceOnUnorderedEventList+0x22>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3048
	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
    3ba0:	4b0a      	ldr	r3, [pc, #40]	; (3bcc <vTaskPlaceOnUnorderedEventList+0x50>)
    3ba2:	681a      	ldr	r2, [r3, #0]
    3ba4:	f041 4100 	orr.w	r1, r1, #2147483648	; 0x80000000
    3ba8:	6191      	str	r1, [r2, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3055
	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
    3baa:	6819      	ldr	r1, [r3, #0]
    3bac:	3118      	adds	r1, #24
    3bae:	f7fe ffc5 	bl	2b3c <vListInsertEnd>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3057
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
    3bb2:	4620      	mov	r0, r4
    3bb4:	2101      	movs	r1, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3058
}
    3bb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3057
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
    3bba:	f7ff bd4b 	b.w	3654 <prvAddCurrentTaskToDelayedList>
    3bbe:	bf00      	nop
    3bc0:	0000b336 	.word	0x0000b336
    3bc4:	10000ad8 	.word	0x10000ad8
    3bc8:	0000b342 	.word	0x0000b342
    3bcc:	100009f8 	.word	0x100009f8

00003bd0 <xTaskRemoveFromEventList>:
xTaskRemoveFromEventList():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3095
{
    3bd0:	b538      	push	{r3, r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3112
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    3bd2:	68c3      	ldr	r3, [r0, #12]
    3bd4:	68dc      	ldr	r4, [r3, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3113
	configASSERT( pxUnblockedTCB );
    3bd6:	b92c      	cbnz	r4, 3be4 <xTaskRemoveFromEventList+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3113 (discriminator 1)
    3bd8:	4916      	ldr	r1, [pc, #88]	; (3c34 <xTaskRemoveFromEventList+0x64>)
    3bda:	f640 4029 	movw	r0, #3113	; 0xc29
    3bde:	f7fe fccb 	bl	2578 <configASSERT_callback>
    3be2:	e7fe      	b.n	3be2 <xTaskRemoveFromEventList+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3114
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
    3be4:	f104 0518 	add.w	r5, r4, #24
    3be8:	4628      	mov	r0, r5
    3bea:	f7fe ffca 	bl	2b82 <uxListRemove>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3116
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
    3bee:	4b12      	ldr	r3, [pc, #72]	; (3c38 <xTaskRemoveFromEventList+0x68>)
    3bf0:	681b      	ldr	r3, [r3, #0]
    3bf2:	b9e3      	cbnz	r3, 3c2e <xTaskRemoveFromEventList+0x5e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3118
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
    3bf4:	1d25      	adds	r5, r4, #4
    3bf6:	4628      	mov	r0, r5
    3bf8:	f7fe ffc3 	bl	2b82 <uxListRemove>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3119
		prvAddTaskToReadyList( pxUnblockedTCB );
    3bfc:	490f      	ldr	r1, [pc, #60]	; (3c3c <xTaskRemoveFromEventList+0x6c>)
    3bfe:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    3c00:	6808      	ldr	r0, [r1, #0]
    3c02:	2301      	movs	r3, #1
    3c04:	4093      	lsls	r3, r2
    3c06:	4303      	orrs	r3, r0
    3c08:	600b      	str	r3, [r1, #0]
    3c0a:	4b0d      	ldr	r3, [pc, #52]	; (3c40 <xTaskRemoveFromEventList+0x70>)
    3c0c:	2014      	movs	r0, #20
    3c0e:	4629      	mov	r1, r5
    3c10:	fb00 3002 	mla	r0, r0, r2, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3139
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
    3c14:	f7fe ff92 	bl	2b3c <vListInsertEnd>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3142
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
    3c18:	4b0a      	ldr	r3, [pc, #40]	; (3c44 <xTaskRemoveFromEventList+0x74>)
    3c1a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    3c1c:	681b      	ldr	r3, [r3, #0]
    3c1e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    3c20:	429a      	cmp	r2, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3151
		xYieldPending = pdTRUE;
    3c22:	bf83      	ittte	hi
    3c24:	4b08      	ldrhi	r3, [pc, #32]	; (3c48 <xTaskRemoveFromEventList+0x78>)
    3c26:	2001      	movhi	r0, #1
    3c28:	6018      	strhi	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3155
		xReturn = pdFALSE;
    3c2a:	2000      	movls	r0, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3159
}
    3c2c:	bd38      	pop	{r3, r4, r5, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3139
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
    3c2e:	4629      	mov	r1, r5
    3c30:	4806      	ldr	r0, [pc, #24]	; (3c4c <xTaskRemoveFromEventList+0x7c>)
    3c32:	e7ef      	b.n	3c14 <xTaskRemoveFromEventList+0x44>
    3c34:	0000b491 	.word	0x0000b491
    3c38:	10000ad8 	.word	0x10000ad8
    3c3c:	10000ae0 	.word	0x10000ae0
    3c40:	10000a04 	.word	0x10000a04
    3c44:	100009f8 	.word	0x100009f8
    3c48:	10000b48 	.word	0x10000b48
    3c4c:	10000b18 	.word	0x10000b18

00003c50 <vTaskRemoveFromUnorderedEventList>:
vTaskRemoveFromUnorderedEventList():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3168
	configASSERT( uxSchedulerSuspended != pdFALSE );
    3c50:	4a19      	ldr	r2, [pc, #100]	; (3cb8 <vTaskRemoveFromUnorderedEventList+0x68>)
    3c52:	6812      	ldr	r2, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3163
{
    3c54:	b570      	push	{r4, r5, r6, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3168
	configASSERT( uxSchedulerSuspended != pdFALSE );
    3c56:	b92a      	cbnz	r2, 3c64 <vTaskRemoveFromUnorderedEventList+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3168 (discriminator 1)
    3c58:	4918      	ldr	r1, [pc, #96]	; (3cbc <vTaskRemoveFromUnorderedEventList+0x6c>)
    3c5a:	f44f 6046 	mov.w	r0, #3168	; 0xc60
    3c5e:	f7fe fc8b 	bl	2578 <configASSERT_callback>
    3c62:	e7fe      	b.n	3c62 <vTaskRemoveFromUnorderedEventList+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3175
	pxUnblockedTCB = listGET_LIST_ITEM_OWNER( pxEventListItem ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    3c64:	68c4      	ldr	r4, [r0, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3171
	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
    3c66:	f041 4100 	orr.w	r1, r1, #2147483648	; 0x80000000
    3c6a:	6001      	str	r1, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3176
	configASSERT( pxUnblockedTCB );
    3c6c:	b92c      	cbnz	r4, 3c7a <vTaskRemoveFromUnorderedEventList+0x2a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3176 (discriminator 1)
    3c6e:	4914      	ldr	r1, [pc, #80]	; (3cc0 <vTaskRemoveFromUnorderedEventList+0x70>)
    3c70:	f640 4068 	movw	r0, #3176	; 0xc68
    3c74:	f7fe fc80 	bl	2578 <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3176 (discriminator 2)
    3c78:	e7fe      	b.n	3c78 <vTaskRemoveFromUnorderedEventList+0x28>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3182
	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
    3c7a:	1d26      	adds	r6, r4, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3177
	( void ) uxListRemove( pxEventListItem );
    3c7c:	f7fe ff81 	bl	2b82 <uxListRemove>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3182
	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
    3c80:	4630      	mov	r0, r6
    3c82:	f7fe ff7e 	bl	2b82 <uxListRemove>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3183
	prvAddTaskToReadyList( pxUnblockedTCB );
    3c86:	490f      	ldr	r1, [pc, #60]	; (3cc4 <vTaskRemoveFromUnorderedEventList+0x74>)
    3c88:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    3c8a:	6808      	ldr	r0, [r1, #0]
    3c8c:	2501      	movs	r5, #1
    3c8e:	fa05 f302 	lsl.w	r3, r5, r2
    3c92:	4303      	orrs	r3, r0
    3c94:	600b      	str	r3, [r1, #0]
    3c96:	4b0c      	ldr	r3, [pc, #48]	; (3cc8 <vTaskRemoveFromUnorderedEventList+0x78>)
    3c98:	2014      	movs	r0, #20
    3c9a:	fb00 3002 	mla	r0, r0, r2, r3
    3c9e:	4631      	mov	r1, r6
    3ca0:	f7fe ff4c 	bl	2b3c <vListInsertEnd>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3185
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
    3ca4:	4b09      	ldr	r3, [pc, #36]	; (3ccc <vTaskRemoveFromUnorderedEventList+0x7c>)
    3ca6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    3ca8:	681b      	ldr	r3, [r3, #0]
    3caa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    3cac:	429a      	cmp	r2, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3191
		xYieldPending = pdTRUE;
    3cae:	bf84      	itt	hi
    3cb0:	4b07      	ldrhi	r3, [pc, #28]	; (3cd0 <vTaskRemoveFromUnorderedEventList+0x80>)
    3cb2:	601d      	strhi	r5, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3193
}
    3cb4:	bd70      	pop	{r4, r5, r6, pc}
    3cb6:	bf00      	nop
    3cb8:	10000ad8 	.word	0x10000ad8
    3cbc:	0000b372 	.word	0x0000b372
    3cc0:	0000b491 	.word	0x0000b491
    3cc4:	10000ae0 	.word	0x10000ae0
    3cc8:	10000a04 	.word	0x10000a04
    3ccc:	100009f8 	.word	0x100009f8
    3cd0:	10000b48 	.word	0x10000b48

00003cd4 <vTaskInternalSetTimeOutState>:
vTaskInternalSetTimeOutState():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3211
	pxTimeOut->xOverflowCount = xNumOfOverflows;
    3cd4:	4b03      	ldr	r3, [pc, #12]	; (3ce4 <vTaskInternalSetTimeOutState+0x10>)
    3cd6:	681b      	ldr	r3, [r3, #0]
    3cd8:	6003      	str	r3, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3212
	pxTimeOut->xTimeOnEntering = xTickCount;
    3cda:	4b03      	ldr	r3, [pc, #12]	; (3ce8 <vTaskInternalSetTimeOutState+0x14>)
    3cdc:	681b      	ldr	r3, [r3, #0]
    3cde:	6043      	str	r3, [r0, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3213
}
    3ce0:	4770      	bx	lr
    3ce2:	bf00      	nop
    3ce4:	10000b14 	.word	0x10000b14
    3ce8:	10000b44 	.word	0x10000b44

00003cec <xTaskCheckForTimeOut>:
xTaskCheckForTimeOut():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3217
{
    3cec:	b570      	push	{r4, r5, r6, lr}
    3cee:	460c      	mov	r4, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3220
	configASSERT( pxTimeOut );
    3cf0:	4605      	mov	r5, r0
    3cf2:	b928      	cbnz	r0, 3d00 <xTaskCheckForTimeOut+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3220 (discriminator 1)
    3cf4:	4916      	ldr	r1, [pc, #88]	; (3d50 <xTaskCheckForTimeOut+0x64>)
    3cf6:	f640 4094 	movw	r0, #3220	; 0xc94
    3cfa:	f7fe fc3d 	bl	2578 <configASSERT_callback>
    3cfe:	e7fe      	b.n	3cfe <xTaskCheckForTimeOut+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3221
	configASSERT( pxTicksToWait );
    3d00:	b929      	cbnz	r1, 3d0e <xTaskCheckForTimeOut+0x22>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3221 (discriminator 1)
    3d02:	4914      	ldr	r1, [pc, #80]	; (3d54 <xTaskCheckForTimeOut+0x68>)
    3d04:	f640 4095 	movw	r0, #3221	; 0xc95
    3d08:	f7fe fc36 	bl	2578 <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3221 (discriminator 2)
    3d0c:	e7fe      	b.n	3d0c <xTaskCheckForTimeOut+0x20>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3223
	taskENTER_CRITICAL();
    3d0e:	f7fe fcf1 	bl	26f4 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3226
		const TickType_t xConstTickCount = xTickCount;
    3d12:	4b11      	ldr	r3, [pc, #68]	; (3d58 <xTaskCheckForTimeOut+0x6c>)
    3d14:	6819      	ldr	r1, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3241
			if( *pxTicksToWait == portMAX_DELAY )
    3d16:	6823      	ldr	r3, [r4, #0]
    3d18:	1c5a      	adds	r2, r3, #1
    3d1a:	d010      	beq.n	3d3e <xTaskCheckForTimeOut+0x52>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3251
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
    3d1c:	480f      	ldr	r0, [pc, #60]	; (3d5c <xTaskCheckForTimeOut+0x70>)
    3d1e:	682e      	ldr	r6, [r5, #0]
    3d20:	6800      	ldr	r0, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3227
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
    3d22:	686a      	ldr	r2, [r5, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3251
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
    3d24:	4286      	cmp	r6, r0
    3d26:	d001      	beq.n	3d2c <xTaskCheckForTimeOut+0x40>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3251 (discriminator 1)
    3d28:	428a      	cmp	r2, r1
    3d2a:	d90f      	bls.n	3d4c <xTaskCheckForTimeOut+0x60>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3227
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
    3d2c:	1a88      	subs	r0, r1, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3260
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
    3d2e:	4283      	cmp	r3, r0
    3d30:	d90a      	bls.n	3d48 <xTaskCheckForTimeOut+0x5c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3263
			*pxTicksToWait -= xElapsedTime;
    3d32:	1a5b      	subs	r3, r3, r1
    3d34:	4413      	add	r3, r2
    3d36:	6023      	str	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3264
			vTaskInternalSetTimeOutState( pxTimeOut );
    3d38:	4628      	mov	r0, r5
    3d3a:	f7ff ffcb 	bl	3cd4 <vTaskInternalSetTimeOutState>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3246
				xReturn = pdFALSE;
    3d3e:	2400      	movs	r4, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3273
	taskEXIT_CRITICAL();
    3d40:	f7fe fcfa 	bl	2738 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3276
}
    3d44:	4620      	mov	r0, r4
    3d46:	bd70      	pop	{r4, r5, r6, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3269
			*pxTicksToWait = 0;
    3d48:	2300      	movs	r3, #0
    3d4a:	6023      	str	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3258
			xReturn = pdTRUE;
    3d4c:	2401      	movs	r4, #1
    3d4e:	e7f7      	b.n	3d40 <xTaskCheckForTimeOut+0x54>
    3d50:	0000b392 	.word	0x0000b392
    3d54:	0000b3e8 	.word	0x0000b3e8
    3d58:	10000b44 	.word	0x10000b44
    3d5c:	10000b14 	.word	0x10000b14

00003d60 <vTaskMissedYield>:
vTaskMissedYield():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3281
	xYieldPending = pdTRUE;
    3d60:	4b01      	ldr	r3, [pc, #4]	; (3d68 <vTaskMissedYield+0x8>)
    3d62:	2201      	movs	r2, #1
    3d64:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3282
}
    3d66:	4770      	bx	lr
    3d68:	10000b48 	.word	0x10000b48

00003d6c <xTaskGetSchedulerState>:
xTaskGetSchedulerState():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3927
		if( xSchedulerRunning == pdFALSE )
    3d6c:	4b05      	ldr	r3, [pc, #20]	; (3d84 <xTaskGetSchedulerState+0x18>)
    3d6e:	681b      	ldr	r3, [r3, #0]
    3d70:	b133      	cbz	r3, 3d80 <xTaskGetSchedulerState+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3933
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
    3d72:	4b05      	ldr	r3, [pc, #20]	; (3d88 <xTaskGetSchedulerState+0x1c>)
    3d74:	681b      	ldr	r3, [r3, #0]
    3d76:	2b00      	cmp	r3, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3939
				xReturn = taskSCHEDULER_SUSPENDED;
    3d78:	bf0c      	ite	eq
    3d7a:	2002      	moveq	r0, #2
    3d7c:	2000      	movne	r0, #0
    3d7e:	4770      	bx	lr
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3929
			xReturn = taskSCHEDULER_NOT_STARTED;
    3d80:	2001      	movs	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3944
	}
    3d82:	4770      	bx	lr
    3d84:	10000b2c 	.word	0x10000b2c
    3d88:	10000ad8 	.word	0x10000ad8

00003d8c <xTaskPriorityInherit>:
xTaskPriorityInherit():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3952
	{
    3d8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3959
		if( pxMutexHolder != NULL )
    3d90:	4604      	mov	r4, r0
    3d92:	2800      	cmp	r0, #0
    3d94:	d035      	beq.n	3e02 <xTaskPriorityInherit+0x76>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3964
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
    3d96:	4a23      	ldr	r2, [pc, #140]	; (3e24 <xTaskPriorityInherit+0x98>)
    3d98:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
    3d9a:	6811      	ldr	r1, [r2, #0]
    3d9c:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
    3d9e:	428b      	cmp	r3, r1
    3da0:	4617      	mov	r7, r2
    3da2:	d236      	bcs.n	3e12 <xTaskPriorityInherit+0x86>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3969
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
    3da4:	6982      	ldr	r2, [r0, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3980
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
    3da6:	4d20      	ldr	r5, [pc, #128]	; (3e28 <xTaskPriorityInherit+0x9c>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3969
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
    3da8:	2a00      	cmp	r2, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3971
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    3daa:	bfa1      	itttt	ge
    3dac:	683a      	ldrge	r2, [r7, #0]
    3dae:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
    3db0:	f1c2 020a 	rsbge	r2, r2, #10
    3db4:	6182      	strge	r2, [r0, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3980
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
    3db6:	2614      	movs	r6, #20
    3db8:	6942      	ldr	r2, [r0, #20]
    3dba:	fb06 5303 	mla	r3, r6, r3, r5
    3dbe:	429a      	cmp	r2, r3
    3dc0:	d121      	bne.n	3e06 <xTaskPriorityInherit+0x7a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3982
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    3dc2:	f100 0804 	add.w	r8, r0, #4
    3dc6:	4640      	mov	r0, r8
    3dc8:	f7fe fedb 	bl	2b82 <uxListRemove>
    3dcc:	4b17      	ldr	r3, [pc, #92]	; (3e2c <xTaskPriorityInherit+0xa0>)
    3dce:	b948      	cbnz	r0, 3de4 <xTaskPriorityInherit+0x58>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3984
						taskRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority );
    3dd0:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
    3dd2:	4346      	muls	r6, r0
    3dd4:	59aa      	ldr	r2, [r5, r6]
    3dd6:	b92a      	cbnz	r2, 3de4 <xTaskPriorityInherit+0x58>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3984 (discriminator 1)
    3dd8:	681a      	ldr	r2, [r3, #0]
    3dda:	2101      	movs	r1, #1
    3ddc:	4081      	lsls	r1, r0
    3dde:	ea22 0201 	bic.w	r2, r2, r1
    3de2:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3992
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
    3de4:	683a      	ldr	r2, [r7, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3993
					prvAddTaskToReadyList( pxMutexHolderTCB );
    3de6:	6819      	ldr	r1, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3992
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
    3de8:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
    3dea:	62e2      	str	r2, [r4, #44]	; 0x2c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3993
					prvAddTaskToReadyList( pxMutexHolderTCB );
    3dec:	2401      	movs	r4, #1
    3dee:	fa04 f002 	lsl.w	r0, r4, r2
    3df2:	4308      	orrs	r0, r1
    3df4:	6018      	str	r0, [r3, #0]
    3df6:	2014      	movs	r0, #20
    3df8:	4641      	mov	r1, r8
    3dfa:	fb00 5002 	mla	r0, r0, r2, r5
    3dfe:	f7fe fe9d 	bl	2b3c <vListInsertEnd>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3954
	BaseType_t xReturn = pdFALSE;
    3e02:	4620      	mov	r0, r4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4030
		return xReturn;
    3e04:	e003      	b.n	3e0e <xTaskPriorityInherit+0x82>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3998
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
    3e06:	683b      	ldr	r3, [r7, #0]
    3e08:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    3e0a:	62c3      	str	r3, [r0, #44]	; 0x2c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4004
				xReturn = pdTRUE;
    3e0c:	2001      	movs	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4031
	}
    3e0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4008
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
    3e12:	6813      	ldr	r3, [r2, #0]
    3e14:	6c80      	ldr	r0, [r0, #72]	; 0x48
    3e16:	6adc      	ldr	r4, [r3, #44]	; 0x2c
    3e18:	42a0      	cmp	r0, r4
    3e1a:	bf2c      	ite	cs
    3e1c:	2000      	movcs	r0, #0
    3e1e:	2001      	movcc	r0, #1
    3e20:	e7f5      	b.n	3e0e <xTaskPriorityInherit+0x82>
    3e22:	bf00      	nop
    3e24:	100009f8 	.word	0x100009f8
    3e28:	10000a04 	.word	0x10000a04
    3e2c:	10000ae0 	.word	0x10000ae0

00003e30 <xTaskPriorityDisinherit>:
xTaskPriorityDisinherit():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4039
	{
    3e30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4043
		if( pxMutexHolder != NULL )
    3e32:	4604      	mov	r4, r0
    3e34:	b908      	cbnz	r0, 3e3a <xTaskPriorityDisinherit+0xa>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4041
	BaseType_t xReturn = pdFALSE;
    3e36:	2000      	movs	r0, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4111
	}
    3e38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4049
			configASSERT( pxTCB == pxCurrentTCB );
    3e3a:	4b1f      	ldr	r3, [pc, #124]	; (3eb8 <xTaskPriorityDisinherit+0x88>)
    3e3c:	681b      	ldr	r3, [r3, #0]
    3e3e:	4283      	cmp	r3, r0
    3e40:	d005      	beq.n	3e4e <xTaskPriorityDisinherit+0x1e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4049 (discriminator 1)
    3e42:	491e      	ldr	r1, [pc, #120]	; (3ebc <xTaskPriorityDisinherit+0x8c>)
    3e44:	f640 70d1 	movw	r0, #4049	; 0xfd1
    3e48:	f7fe fb96 	bl	2578 <configASSERT_callback>
    3e4c:	e7fe      	b.n	3e4c <xTaskPriorityDisinherit+0x1c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4050
			configASSERT( pxTCB->uxMutexesHeld );
    3e4e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    3e50:	b92b      	cbnz	r3, 3e5e <xTaskPriorityDisinherit+0x2e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4050 (discriminator 1)
    3e52:	491b      	ldr	r1, [pc, #108]	; (3ec0 <xTaskPriorityDisinherit+0x90>)
    3e54:	f640 70d2 	movw	r0, #4050	; 0xfd2
    3e58:	f7fe fb8e 	bl	2578 <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4050 (discriminator 2)
    3e5c:	e7fe      	b.n	3e5c <xTaskPriorityDisinherit+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4055
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
    3e5e:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
    3e60:	6c82      	ldr	r2, [r0, #72]	; 0x48
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4051
			( pxTCB->uxMutexesHeld )--;
    3e62:	3b01      	subs	r3, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4055
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
    3e64:	4291      	cmp	r1, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4051
			( pxTCB->uxMutexesHeld )--;
    3e66:	64c3      	str	r3, [r0, #76]	; 0x4c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4055
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
    3e68:	d0e5      	beq.n	3e36 <xTaskPriorityDisinherit+0x6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4058
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
    3e6a:	2b00      	cmp	r3, #0
    3e6c:	d1e3      	bne.n	3e36 <xTaskPriorityDisinherit+0x6>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4065
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    3e6e:	1d05      	adds	r5, r0, #4
    3e70:	4628      	mov	r0, r5
    3e72:	f7fe fe86 	bl	2b82 <uxListRemove>
    3e76:	4e13      	ldr	r6, [pc, #76]	; (3ec4 <xTaskPriorityDisinherit+0x94>)
    3e78:	4a13      	ldr	r2, [pc, #76]	; (3ec8 <xTaskPriorityDisinherit+0x98>)
    3e7a:	b950      	cbnz	r0, 3e92 <xTaskPriorityDisinherit+0x62>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4067
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
    3e7c:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    3e7e:	2114      	movs	r1, #20
    3e80:	4379      	muls	r1, r7
    3e82:	5873      	ldr	r3, [r6, r1]
    3e84:	b92b      	cbnz	r3, 3e92 <xTaskPriorityDisinherit+0x62>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4067 (discriminator 1)
    3e86:	6813      	ldr	r3, [r2, #0]
    3e88:	2001      	movs	r0, #1
    3e8a:	40b8      	lsls	r0, r7
    3e8c:	ea23 0300 	bic.w	r3, r3, r0
    3e90:	6013      	str	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4077
					pxTCB->uxPriority = pxTCB->uxBasePriority;
    3e92:	6ca3      	ldr	r3, [r4, #72]	; 0x48
    3e94:	62e3      	str	r3, [r4, #44]	; 0x2c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4082
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    3e96:	f1c3 010a 	rsb	r1, r3, #10
    3e9a:	61a1      	str	r1, [r4, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4083
					prvAddTaskToReadyList( pxTCB );
    3e9c:	6811      	ldr	r1, [r2, #0]
    3e9e:	2401      	movs	r4, #1
    3ea0:	fa04 f003 	lsl.w	r0, r4, r3
    3ea4:	4308      	orrs	r0, r1
    3ea6:	6010      	str	r0, [r2, #0]
    3ea8:	2014      	movs	r0, #20
    3eaa:	fb00 6003 	mla	r0, r0, r3, r6
    3eae:	4629      	mov	r1, r5
    3eb0:	f7fe fe44 	bl	2b3c <vListInsertEnd>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4093
					xReturn = pdTRUE;
    3eb4:	4620      	mov	r0, r4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4110
		return xReturn;
    3eb6:	e7bf      	b.n	3e38 <xTaskPriorityDisinherit+0x8>
    3eb8:	100009f8 	.word	0x100009f8
    3ebc:	0000b466 	.word	0x0000b466
    3ec0:	0000b47c 	.word	0x0000b47c
    3ec4:	10000a04 	.word	0x10000a04
    3ec8:	10000ae0 	.word	0x10000ae0

00003ecc <vTaskPriorityDisinheritAfterTimeout>:
vTaskPriorityDisinheritAfterTimeout():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4119
	{
    3ecc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4124
		if( pxMutexHolder != NULL )
    3ece:	4604      	mov	r4, r0
    3ed0:	2800      	cmp	r0, #0
    3ed2:	d047      	beq.n	3f64 <vTaskPriorityDisinheritAfterTimeout+0x98>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4128
			configASSERT( pxTCB->uxMutexesHeld );
    3ed4:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
    3ed6:	b92a      	cbnz	r2, 3ee4 <vTaskPriorityDisinheritAfterTimeout+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4128 (discriminator 1)
    3ed8:	4923      	ldr	r1, [pc, #140]	; (3f68 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
    3eda:	f44f 5081 	mov.w	r0, #4128	; 0x1020
    3ede:	f7fe fb4b 	bl	2578 <configASSERT_callback>
    3ee2:	e7fe      	b.n	3ee2 <vTaskPriorityDisinheritAfterTimeout+0x16>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4134
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
    3ee4:	6c83      	ldr	r3, [r0, #72]	; 0x48
    3ee6:	4299      	cmp	r1, r3
    3ee8:	bf38      	it	cc
    3eea:	4619      	movcc	r1, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4144
			if( pxTCB->uxPriority != uxPriorityToUse )
    3eec:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
    3eee:	428b      	cmp	r3, r1
    3ef0:	d038      	beq.n	3f64 <vTaskPriorityDisinheritAfterTimeout+0x98>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4150
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
    3ef2:	2a01      	cmp	r2, #1
    3ef4:	d136      	bne.n	3f64 <vTaskPriorityDisinheritAfterTimeout+0x98>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4155
					configASSERT( pxTCB != pxCurrentTCB );
    3ef6:	4a1d      	ldr	r2, [pc, #116]	; (3f6c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
    3ef8:	6812      	ldr	r2, [r2, #0]
    3efa:	4282      	cmp	r2, r0
    3efc:	d105      	bne.n	3f0a <vTaskPriorityDisinheritAfterTimeout+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4155 (discriminator 1)
    3efe:	491c      	ldr	r1, [pc, #112]	; (3f70 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
    3f00:	f241 003b 	movw	r0, #4155	; 0x103b
    3f04:	f7fe fb38 	bl	2578 <configASSERT_callback>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4155 (discriminator 2)
    3f08:	e7fe      	b.n	3f08 <vTaskPriorityDisinheritAfterTimeout+0x3c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4166
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
    3f0a:	6982      	ldr	r2, [r0, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4181
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
    3f0c:	4d19      	ldr	r5, [pc, #100]	; (3f74 <vTaskPriorityDisinheritAfterTimeout+0xa8>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4162
					pxTCB->uxPriority = uxPriorityToUse;
    3f0e:	62c1      	str	r1, [r0, #44]	; 0x2c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4166
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
    3f10:	2a00      	cmp	r2, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4181
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
    3f12:	f04f 0614 	mov.w	r6, #20
    3f16:	6942      	ldr	r2, [r0, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4168
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    3f18:	bfa8      	it	ge
    3f1a:	f1c1 010a 	rsbge	r1, r1, #10
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4181
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
    3f1e:	fb06 5303 	mla	r3, r6, r3, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4168
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    3f22:	bfa8      	it	ge
    3f24:	6181      	strge	r1, [r0, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4181
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
    3f26:	429a      	cmp	r2, r3
    3f28:	d11c      	bne.n	3f64 <vTaskPriorityDisinheritAfterTimeout+0x98>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4183
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    3f2a:	1d07      	adds	r7, r0, #4
    3f2c:	4638      	mov	r0, r7
    3f2e:	f7fe fe28 	bl	2b82 <uxListRemove>
    3f32:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    3f34:	4c10      	ldr	r4, [pc, #64]	; (3f78 <vTaskPriorityDisinheritAfterTimeout+0xac>)
    3f36:	b940      	cbnz	r0, 3f4a <vTaskPriorityDisinheritAfterTimeout+0x7e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4185
							taskRESET_READY_PRIORITY( pxTCB->uxPriority );
    3f38:	4356      	muls	r6, r2
    3f3a:	59ab      	ldr	r3, [r5, r6]
    3f3c:	b92b      	cbnz	r3, 3f4a <vTaskPriorityDisinheritAfterTimeout+0x7e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4185 (discriminator 1)
    3f3e:	6823      	ldr	r3, [r4, #0]
    3f40:	2101      	movs	r1, #1
    3f42:	4091      	lsls	r1, r2
    3f44:	ea23 0301 	bic.w	r3, r3, r1
    3f48:	6023      	str	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4192
						prvAddTaskToReadyList( pxTCB );
    3f4a:	6821      	ldr	r1, [r4, #0]
    3f4c:	2301      	movs	r3, #1
    3f4e:	4093      	lsls	r3, r2
    3f50:	430b      	orrs	r3, r1
    3f52:	2014      	movs	r0, #20
    3f54:	6023      	str	r3, [r4, #0]
    3f56:	4639      	mov	r1, r7
    3f58:	fb00 5002 	mla	r0, r0, r2, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4213
	}
    3f5c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4192
						prvAddTaskToReadyList( pxTCB );
    3f60:	f7fe bdec 	b.w	2b3c <vListInsertEnd>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4213
	}
    3f64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    3f66:	bf00      	nop
    3f68:	0000b47c 	.word	0x0000b47c
    3f6c:	100009f8 	.word	0x100009f8
    3f70:	0000b35c 	.word	0x0000b35c
    3f74:	10000a04 	.word	0x10000a04
    3f78:	10000ae0 	.word	0x10000ae0

00003f7c <uxTaskResetEventItemValue>:
uxTaskResetEventItemValue():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4537
	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
    3f7c:	4b04      	ldr	r3, [pc, #16]	; (3f90 <uxTaskResetEventItemValue+0x14>)
    3f7e:	681a      	ldr	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4541
	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ) ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    3f80:	6819      	ldr	r1, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4537
	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
    3f82:	6990      	ldr	r0, [r2, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4541
	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ) ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    3f84:	681a      	ldr	r2, [r3, #0]
    3f86:	6acb      	ldr	r3, [r1, #44]	; 0x2c
    3f88:	f1c3 030a 	rsb	r3, r3, #10
    3f8c:	6193      	str	r3, [r2, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4544
}
    3f8e:	4770      	bx	lr
    3f90:	100009f8 	.word	0x100009f8

00003f94 <pvTaskIncrementMutexHeldCount>:
pvTaskIncrementMutexHeldCount():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4553
		if( pxCurrentTCB != NULL )
    3f94:	4b04      	ldr	r3, [pc, #16]	; (3fa8 <pvTaskIncrementMutexHeldCount+0x14>)
    3f96:	681a      	ldr	r2, [r3, #0]
    3f98:	b11a      	cbz	r2, 3fa2 <pvTaskIncrementMutexHeldCount+0xe>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4555
			( pxCurrentTCB->uxMutexesHeld )++;
    3f9a:	6819      	ldr	r1, [r3, #0]
    3f9c:	6cca      	ldr	r2, [r1, #76]	; 0x4c
    3f9e:	3201      	adds	r2, #1
    3fa0:	64ca      	str	r2, [r1, #76]	; 0x4c
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4558
		return pxCurrentTCB;
    3fa2:	6818      	ldr	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4559
	}
    3fa4:	4770      	bx	lr
    3fa6:	bf00      	nop
    3fa8:	100009f8 	.word	0x100009f8

00003fac <vRunTimeStatIsrEntry>:
vRunTimeStatIsrEntry():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:74
    portRESET_TIMER_FOR_RUN_TIME_STATS();
  }
  xTaskResumeAll();
}

void vRunTimeStatIsrEntry(void) {
    3fac:	b510      	push	{r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:75
  unsigned long ulTempCounter = portGET_RUN_TIME_COUNTER_VALUE();
    3fae:	f7fe fb0f 	bl	25d0 <freertos_hooks__get_run_time_counter_value>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:78

  // Add the time spent in the previously running task's counter.
  if (NULL != pxCurrentTCB) {
    3fb2:	4b06      	ldr	r3, [pc, #24]	; (3fcc <vRunTimeStatIsrEntry+0x20>)
    3fb4:	4a06      	ldr	r2, [pc, #24]	; (3fd0 <vRunTimeStatIsrEntry+0x24>)
    3fb6:	6819      	ldr	r1, [r3, #0]
    3fb8:	b129      	cbz	r1, 3fc6 <vRunTimeStatIsrEntry+0x1a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:79
    pxCurrentTCB->ulRunTimeCounter += (ulTempCounter - ulTaskSwitchedInTime);
    3fba:	6819      	ldr	r1, [r3, #0]
    3fbc:	6814      	ldr	r4, [r2, #0]
    3fbe:	6d0b      	ldr	r3, [r1, #80]	; 0x50
    3fc0:	1b1b      	subs	r3, r3, r4
    3fc2:	4403      	add	r3, r0
    3fc4:	650b      	str	r3, [r1, #80]	; 0x50
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:83
  }

  // Save the current time to log how long the ISR is going to take.
  ulTaskSwitchedInTime = ulTempCounter;
    3fc6:	6010      	str	r0, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:84
}
    3fc8:	bd10      	pop	{r4, pc}
    3fca:	bf00      	nop
    3fcc:	100009f8 	.word	0x100009f8
    3fd0:	10000acc 	.word	0x10000acc

00003fd4 <vRunTimeStatIsrExit>:
vRunTimeStatIsrExit():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:85
void vRunTimeStatIsrExit(void) {
    3fd4:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:86
  unsigned long ulTempCounter = portGET_RUN_TIME_COUNTER_VALUE();
    3fd6:	f7fe fafb 	bl	25d0 <freertos_hooks__get_run_time_counter_value>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:94
  // We don't need this because whatever is the "leftover" for the counters, that is
  // is the overhead itself!
  // ulISROverhead += ( ulTempCounter - ulTaskSwitchedInTime );

  // Save the current time so next time when task is switched out, it will use this time-stamp.
  ulTaskSwitchedInTime = ulTempCounter;
    3fda:	4b01      	ldr	r3, [pc, #4]	; (3fe0 <vRunTimeStatIsrExit+0xc>)
    3fdc:	6018      	str	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l1_freertos/customized_code/freertos_tasks.mods:95
}
    3fde:	bd08      	pop	{r3, pc}
    3fe0:	10000acc 	.word	0x10000acc

00003fe4 <board_io__initialize>:
board_io__initialize():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:36
static const uint32_t board_io__sd_card_cs_pin = (1 << 8);
static const uint32_t board_io__sd_card_detect_pin = (1 << 9);
static gpio_s board_io__led0, board_io__led1, board_io__led2, board_io__led3;
static gpio_s board_io__sw0, board_io__sw1, board_io__sw2, board_io__sw3;

void board_io__initialize(void) {
    3fe4:	b538      	push	{r3, r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:40
  // Note: return type of gpio__construct_with_function() because we do not need
  // GPIO instance after its configuration

  gpio__construct_with_function(GPIO__PORT_0, 2,
    3fe6:	2201      	movs	r2, #1
    3fe8:	2102      	movs	r1, #2
    3fea:	2000      	movs	r0, #0
    3fec:	f000 f8c3 	bl	4176 <gpio__construct_with_function>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:42
                                GPIO__FUNCTION_1); // P0.2 - Uart-0 Tx
  gpio__construct_with_function(GPIO__PORT_0, 3,
    3ff0:	2201      	movs	r2, #1
    3ff2:	2103      	movs	r1, #3
    3ff4:	2000      	movs	r0, #0
    3ff6:	f000 f8be 	bl	4176 <gpio__construct_with_function>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:46
                                GPIO__FUNCTION_1); // P0.3 - Uart-0 Rx

  // SPI bus 2 (SSP2)
  gpio__construct_with_function(GPIO__PORT_1, 0,
    3ffa:	2204      	movs	r2, #4
    3ffc:	2100      	movs	r1, #0
    3ffe:	2001      	movs	r0, #1
    4000:	f000 f8b9 	bl	4176 <gpio__construct_with_function>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:48
                                GPIO__FUNCTION_4); // P1.0 - SCK2
  gpio__construct_with_function(GPIO__PORT_1, 1,
    4004:	2101      	movs	r1, #1
    4006:	2204      	movs	r2, #4
    4008:	4608      	mov	r0, r1
    400a:	f000 f8b4 	bl	4176 <gpio__construct_with_function>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:50
                                GPIO__FUNCTION_4); // P1.1 - MOSI2
  gpio__construct_with_function(GPIO__PORT_1, 4,
    400e:	2204      	movs	r2, #4
    4010:	4611      	mov	r1, r2
    4012:	2001      	movs	r0, #1
    4014:	f000 f8af 	bl	4176 <gpio__construct_with_function>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:54
                                GPIO__FUNCTION_4); // P1.4 - MISO2

  // SD card
  gpio__construct_as_output(GPIO__PORT_1, 8); // SD card CS
    4018:	2108      	movs	r1, #8
    401a:	2001      	movs	r0, #1
    401c:	f000 f91a 	bl	4254 <gpio__construct_as_output>
board_io__sd_card_ds():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:87
  gpio__enable_pull_down_resistors(board_io__sw1);
}

// Note: Not using gpio.h API here to optimize the speed of SSP CS selection
void board_io__sd_card_cs(void) { LPC_GPIO1->CLR = board_io__sd_card_cs_pin; }
void board_io__sd_card_ds(void) { LPC_GPIO1->SET = board_io__sd_card_cs_pin; }
    4020:	4b28      	ldr	r3, [pc, #160]	; (40c4 <board_io__initialize+0xe0>)
    4022:	f44f 7280 	mov.w	r2, #256	; 0x100
    4026:	619a      	str	r2, [r3, #24]
board_io__initialize():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:56
  gpio__construct_as_input(GPIO__PORT_1, 9); // SD card detect
    4028:	2109      	movs	r1, #9
    402a:	2001      	movs	r0, #1
    402c:	f000 f8ee 	bl	420c <gpio__construct_as_input>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:59
  const gpio_s sda_2 = gpio__construct_with_function(
    4030:	2202      	movs	r2, #2
    4032:	210a      	movs	r1, #10
    4034:	2000      	movs	r0, #0
    4036:	f000 f89e 	bl	4176 <gpio__construct_with_function>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:61
  const gpio_s scl_2 = gpio__construct_with_function(
    403a:	2202      	movs	r2, #2
    403c:	210b      	movs	r1, #11
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:59
  const gpio_s sda_2 = gpio__construct_with_function(
    403e:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:61
  const gpio_s scl_2 = gpio__construct_with_function(
    4040:	2000      	movs	r0, #0
    4042:	f000 f898 	bl	4176 <gpio__construct_with_function>
    4046:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:63
  gpio__enable_open_drain(sda_2);
    4048:	4628      	mov	r0, r5
    404a:	f000 f8a9 	bl	41a0 <gpio__enable_open_drain>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:64
  gpio__enable_open_drain(scl_2);
    404e:	4620      	mov	r0, r4
    4050:	f000 f8a6 	bl	41a0 <gpio__enable_open_drain>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:67
  board_io__led0 = gpio__construct_as_output(GPIO__PORT_2, 3);
    4054:	2103      	movs	r1, #3
    4056:	2002      	movs	r0, #2
    4058:	f000 f8fc 	bl	4254 <gpio__construct_as_output>
    405c:	4b1a      	ldr	r3, [pc, #104]	; (40c8 <board_io__initialize+0xe4>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:73
  board_io__sw0 = gpio__construct_as_input(GPIO__PORT_1, 19);
    405e:	4d1b      	ldr	r5, [pc, #108]	; (40cc <board_io__initialize+0xe8>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:67
  board_io__led0 = gpio__construct_as_output(GPIO__PORT_2, 3);
    4060:	7018      	strb	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:68
  board_io__led1 = gpio__construct_as_output(GPIO__PORT_1, 26);
    4062:	211a      	movs	r1, #26
    4064:	2001      	movs	r0, #1
    4066:	f000 f8f5 	bl	4254 <gpio__construct_as_output>
    406a:	4b19      	ldr	r3, [pc, #100]	; (40d0 <board_io__initialize+0xec>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:74
  board_io__sw1 = gpio__construct_as_input(GPIO__PORT_1, 15);
    406c:	4c19      	ldr	r4, [pc, #100]	; (40d4 <board_io__initialize+0xf0>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:68
  board_io__led1 = gpio__construct_as_output(GPIO__PORT_1, 26);
    406e:	7018      	strb	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:69
  board_io__led2 = gpio__construct_as_output(GPIO__PORT_1, 24);
    4070:	2118      	movs	r1, #24
    4072:	2001      	movs	r0, #1
    4074:	f000 f8ee 	bl	4254 <gpio__construct_as_output>
    4078:	4b17      	ldr	r3, [pc, #92]	; (40d8 <board_io__initialize+0xf4>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:70
  board_io__led3 = gpio__construct_as_output(GPIO__PORT_1, 18);
    407a:	2112      	movs	r1, #18
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:69
  board_io__led2 = gpio__construct_as_output(GPIO__PORT_1, 24);
    407c:	7018      	strb	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:70
  board_io__led3 = gpio__construct_as_output(GPIO__PORT_1, 18);
    407e:	2001      	movs	r0, #1
    4080:	f000 f8e8 	bl	4254 <gpio__construct_as_output>
    4084:	4b15      	ldr	r3, [pc, #84]	; (40dc <board_io__initialize+0xf8>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:73
  board_io__sw0 = gpio__construct_as_input(GPIO__PORT_1, 19);
    4086:	2113      	movs	r1, #19
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:70
  board_io__led3 = gpio__construct_as_output(GPIO__PORT_1, 18);
    4088:	7018      	strb	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:73
  board_io__sw0 = gpio__construct_as_input(GPIO__PORT_1, 19);
    408a:	2001      	movs	r0, #1
    408c:	f000 f8be 	bl	420c <gpio__construct_as_input>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:74
  board_io__sw1 = gpio__construct_as_input(GPIO__PORT_1, 15);
    4090:	210f      	movs	r1, #15
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:73
  board_io__sw0 = gpio__construct_as_input(GPIO__PORT_1, 19);
    4092:	7028      	strb	r0, [r5, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:74
  board_io__sw1 = gpio__construct_as_input(GPIO__PORT_1, 15);
    4094:	2001      	movs	r0, #1
    4096:	f000 f8b9 	bl	420c <gpio__construct_as_input>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:75
  board_io__sw2 = gpio__construct_as_input(GPIO__PORT_0, 30);
    409a:	211e      	movs	r1, #30
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:74
  board_io__sw1 = gpio__construct_as_input(GPIO__PORT_1, 15);
    409c:	7020      	strb	r0, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:75
  board_io__sw2 = gpio__construct_as_input(GPIO__PORT_0, 30);
    409e:	2000      	movs	r0, #0
    40a0:	f000 f8b4 	bl	420c <gpio__construct_as_input>
    40a4:	4b0e      	ldr	r3, [pc, #56]	; (40e0 <board_io__initialize+0xfc>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:76
  board_io__sw3 = gpio__construct_as_input(GPIO__PORT_0, 29);
    40a6:	211d      	movs	r1, #29
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:75
  board_io__sw2 = gpio__construct_as_input(GPIO__PORT_0, 30);
    40a8:	7018      	strb	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:76
  board_io__sw3 = gpio__construct_as_input(GPIO__PORT_0, 29);
    40aa:	2000      	movs	r0, #0
    40ac:	f000 f8ae 	bl	420c <gpio__construct_as_input>
    40b0:	4b0c      	ldr	r3, [pc, #48]	; (40e4 <board_io__initialize+0x100>)
    40b2:	7018      	strb	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:81
  gpio__enable_pull_down_resistors(board_io__sw0);
    40b4:	7828      	ldrb	r0, [r5, #0]
    40b6:	f000 f883 	bl	41c0 <gpio__enable_pull_down_resistors>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:82
  gpio__enable_pull_down_resistors(board_io__sw1);
    40ba:	7820      	ldrb	r0, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:83
}
    40bc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:82
  gpio__enable_pull_down_resistors(board_io__sw1);
    40c0:	f000 b87e 	b.w	41c0 <gpio__enable_pull_down_resistors>
    40c4:	20098020 	.word	0x20098020
    40c8:	10000b4c 	.word	0x10000b4c
    40cc:	10000b50 	.word	0x10000b50
    40d0:	10000b4d 	.word	0x10000b4d
    40d4:	10000b51 	.word	0x10000b51
    40d8:	10000b4e 	.word	0x10000b4e
    40dc:	10000b4f 	.word	0x10000b4f
    40e0:	10000b52 	.word	0x10000b52
    40e4:	10000b53 	.word	0x10000b53

000040e8 <board_io__sd_card_cs>:
board_io__sd_card_cs():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:86
void board_io__sd_card_cs(void) { LPC_GPIO1->CLR = board_io__sd_card_cs_pin; }
    40e8:	4b02      	ldr	r3, [pc, #8]	; (40f4 <board_io__sd_card_cs+0xc>)
    40ea:	f44f 7280 	mov.w	r2, #256	; 0x100
    40ee:	61da      	str	r2, [r3, #28]
    40f0:	4770      	bx	lr
    40f2:	bf00      	nop
    40f4:	20098020 	.word	0x20098020

000040f8 <board_io__sd_card_ds>:
board_io__sd_card_ds():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:87
void board_io__sd_card_ds(void) { LPC_GPIO1->SET = board_io__sd_card_cs_pin; }
    40f8:	4b02      	ldr	r3, [pc, #8]	; (4104 <board_io__sd_card_ds+0xc>)
    40fa:	f44f 7280 	mov.w	r2, #256	; 0x100
    40fe:	619a      	str	r2, [r3, #24]
    4100:	4770      	bx	lr
    4102:	bf00      	nop
    4104:	20098020 	.word	0x20098020

00004108 <board_io__sd_card_is_present>:
board_io__sd_card_is_present():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:91

bool board_io__sd_card_is_present(void) {
  const uint32_t card_present_bitmask =
      (LPC_GPIO1->PIN & board_io__sd_card_detect_pin);
    4108:	4b03      	ldr	r3, [pc, #12]	; (4118 <board_io__sd_card_is_present+0x10>)
    410a:	6958      	ldr	r0, [r3, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:92
  return (0 == card_present_bitmask); // Signal is active low
    410c:	f480 7000 	eor.w	r0, r0, #512	; 0x200
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:93
}
    4110:	f3c0 2040 	ubfx	r0, r0, #9, #1
    4114:	4770      	bx	lr
    4116:	bf00      	nop
    4118:	20098020 	.word	0x20098020

0000411c <board_io__get_led0>:
board_io__get_led0():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:95

gpio_s board_io__get_led0(void) { return board_io__led0; }
    411c:	4b01      	ldr	r3, [pc, #4]	; (4124 <board_io__get_led0+0x8>)
    411e:	7818      	ldrb	r0, [r3, #0]
    4120:	4770      	bx	lr
    4122:	bf00      	nop
    4124:	10000b4c 	.word	0x10000b4c

00004128 <board_io__get_led1>:
board_io__get_led1():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:96
gpio_s board_io__get_led1(void) { return board_io__led1; }
    4128:	4b01      	ldr	r3, [pc, #4]	; (4130 <board_io__get_led1+0x8>)
    412a:	7818      	ldrb	r0, [r3, #0]
    412c:	4770      	bx	lr
    412e:	bf00      	nop
    4130:	10000b4d 	.word	0x10000b4d

00004134 <board_io__get_led2>:
board_io__get_led2():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:97
gpio_s board_io__get_led2(void) { return board_io__led2; }
    4134:	4b01      	ldr	r3, [pc, #4]	; (413c <board_io__get_led2+0x8>)
    4136:	7818      	ldrb	r0, [r3, #0]
    4138:	4770      	bx	lr
    413a:	bf00      	nop
    413c:	10000b4e 	.word	0x10000b4e

00004140 <board_io__get_led3>:
board_io__get_led3():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:98
gpio_s board_io__get_led3(void) { return board_io__led3; }
    4140:	4b01      	ldr	r3, [pc, #4]	; (4148 <board_io__get_led3+0x8>)
    4142:	7818      	ldrb	r0, [r3, #0]
    4144:	4770      	bx	lr
    4146:	bf00      	nop
    4148:	10000b4f 	.word	0x10000b4f

0000414c <gpio__set_function>:
gpio__get_iocon():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:23

  // Each port is offset by thirty-two 32-bit registers
  volatile uint32_t *port_offset = IOCON_base + (32 * gpio.port_number);

  // Each pin configuration is a single 32-bit
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    414c:	f3c0 03c4 	ubfx	r3, r0, #3, #5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:20
  volatile uint32_t *port_offset = IOCON_base + (32 * gpio.port_number);
    4150:	f000 0207 	and.w	r2, r0, #7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:23
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    4154:	009b      	lsls	r3, r3, #2
    4156:	eb03 13c2 	add.w	r3, r3, r2, lsl #7
    415a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
    415e:	f503 3330 	add.w	r3, r3, #180224	; 0x2c000
gpio__set_function():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:70
  volatile uint32_t *pin_iocon = gpio__get_iocon(gpio);

  // Reference chapter 7: table 83
  const uint32_t config_mask = UINT32_C(7);
  *pin_iocon &= ~(config_mask << 0);
  *pin_iocon |= ((uint32_t)function & config_mask);
    4162:	f001 0107 	and.w	r1, r1, #7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:69
  *pin_iocon &= ~(config_mask << 0);
    4166:	681a      	ldr	r2, [r3, #0]
    4168:	f022 0207 	bic.w	r2, r2, #7
    416c:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:70
  *pin_iocon |= ((uint32_t)function & config_mask);
    416e:	681a      	ldr	r2, [r3, #0]
    4170:	4311      	orrs	r1, r2
    4172:	6019      	str	r1, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:71
}
    4174:	4770      	bx	lr

00004176 <gpio__construct_with_function>:
gpio__construct_with_function():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:58
                                     gpio__function_e function) {
    4176:	b538      	push	{r3, r4, r5, lr}
gpio__construct():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:36
      .port_number = (uint8_t)port,
    4178:	f000 0507 	and.w	r5, r0, #7
gpio__construct_with_function():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:60
  gpio__set_function(gpio, function);
    417c:	f04f 0000 	mov.w	r0, #0
gpio__construct():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:35
  gpio_s gpio = {
    4180:	f001 041f 	and.w	r4, r1, #31
gpio__construct_with_function():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:60
  gpio__set_function(gpio, function);
    4184:	f365 0002 	bfi	r0, r5, #0, #3
    4188:	f364 00c7 	bfi	r0, r4, #3, #5
    418c:	4611      	mov	r1, r2
    418e:	f7ff ffdd 	bl	414c <gpio__set_function>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:61
  return gpio;
    4192:	f04f 0000 	mov.w	r0, #0
    4196:	f365 0002 	bfi	r0, r5, #0, #3
    419a:	f364 00c7 	bfi	r0, r4, #3, #5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:62
}
    419e:	bd38      	pop	{r3, r4, r5, pc}

000041a0 <gpio__enable_open_drain>:
gpio__get_iocon():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:23
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    41a0:	f3c0 03c4 	ubfx	r3, r0, #3, #5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:20
  volatile uint32_t *port_offset = IOCON_base + (32 * gpio.port_number);
    41a4:	f000 0207 	and.w	r2, r0, #7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:23
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    41a8:	009b      	lsls	r3, r3, #2
    41aa:	eb03 13c2 	add.w	r3, r3, r2, lsl #7
    41ae:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
    41b2:	f503 3330 	add.w	r3, r3, #180224	; 0x2c000
gpio__enable_open_drain():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:75

void gpio__enable_open_drain(gpio_s gpio) {
  volatile uint32_t *pin_iocon = gpio__get_iocon(gpio);
  *pin_iocon |= (UINT32_C(1) << 10);
    41b6:	681a      	ldr	r2, [r3, #0]
    41b8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
    41bc:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:76
}
    41be:	4770      	bx	lr

000041c0 <gpio__enable_pull_down_resistors>:
gpio__get_iocon():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:23
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    41c0:	f3c0 03c4 	ubfx	r3, r0, #3, #5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:20
  volatile uint32_t *port_offset = IOCON_base + (32 * gpio.port_number);
    41c4:	f000 0207 	and.w	r2, r0, #7
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:23
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    41c8:	009b      	lsls	r3, r3, #2
    41ca:	eb03 13c2 	add.w	r3, r3, r2, lsl #7
    41ce:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
    41d2:	f503 3330 	add.w	r3, r3, #180224	; 0x2c000
gpio__enable_pull_down_resistors():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:82

void gpio__enable_pull_down_resistors(gpio_s gpio) {
  volatile uint32_t *pin_iocon = gpio__get_iocon(gpio);

  const uint32_t mode_mask = UINT32_C(3);
  *pin_iocon &= ~(mode_mask << 3);
    41d6:	681a      	ldr	r2, [r3, #0]
    41d8:	f022 0218 	bic.w	r2, r2, #24
    41dc:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:83
  *pin_iocon |= (UINT32_C(1) << 3);
    41de:	681a      	ldr	r2, [r3, #0]
    41e0:	f042 0208 	orr.w	r2, r2, #8
    41e4:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:84
}
    41e6:	4770      	bx	lr

000041e8 <gpio__set_as_input>:
gpio__get_struct():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    41e8:	f000 0207 	and.w	r2, r0, #7
    41ec:	4b06      	ldr	r3, [pc, #24]	; (4208 <gpio__set_as_input+0x20>)
    41ee:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
gpio__get_pin_mask():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    41f2:	f3c0 00c4 	ubfx	r0, r0, #3, #5
gpio__set_as_input():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:87

void gpio__set_as_input(gpio_s gpio) {
  gpio__get_struct(gpio)->DIR &= ~gpio__get_pin_mask(gpio);
    41f6:	680b      	ldr	r3, [r1, #0]
gpio__get_pin_mask():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    41f8:	2201      	movs	r2, #1
    41fa:	fa02 f000 	lsl.w	r0, r2, r0
gpio__set_as_input():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:87
  gpio__get_struct(gpio)->DIR &= ~gpio__get_pin_mask(gpio);
    41fe:	ea23 0300 	bic.w	r3, r3, r0
    4202:	600b      	str	r3, [r1, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:88
}
    4204:	4770      	bx	lr
    4206:	bf00      	nop
    4208:	0000b4b8 	.word	0x0000b4b8

0000420c <gpio__construct_as_input>:
gpio__construct_as_input():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:43
gpio_s gpio__construct_as_input(gpio__port_e port, uint8_t pin_number_0_to_31) {
    420c:	b538      	push	{r3, r4, r5, lr}
gpio__construct():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:36
      .port_number = (uint8_t)port,
    420e:	f000 0507 	and.w	r5, r0, #7
gpio__construct_as_input():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:45
  gpio__set_as_input(gpio);
    4212:	f04f 0000 	mov.w	r0, #0
gpio__construct():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:35
  gpio_s gpio = {
    4216:	f001 041f 	and.w	r4, r1, #31
gpio__construct_as_input():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:45
  gpio__set_as_input(gpio);
    421a:	f365 0002 	bfi	r0, r5, #0, #3
    421e:	f364 00c7 	bfi	r0, r4, #3, #5
    4222:	f7ff ffe1 	bl	41e8 <gpio__set_as_input>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:46
  return gpio;
    4226:	f04f 0000 	mov.w	r0, #0
    422a:	f365 0002 	bfi	r0, r5, #0, #3
    422e:	f364 00c7 	bfi	r0, r4, #3, #5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:47
}
    4232:	bd38      	pop	{r3, r4, r5, pc}

00004234 <gpio__set_as_output>:
gpio__get_struct():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    4234:	f000 0207 	and.w	r2, r0, #7
    4238:	4b05      	ldr	r3, [pc, #20]	; (4250 <gpio__set_as_output+0x1c>)
    423a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
gpio__get_pin_mask():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    423e:	f3c0 03c4 	ubfx	r3, r0, #3, #5
gpio__set_as_output():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:91

void gpio__set_as_output(gpio_s gpio) {
  gpio__get_struct(gpio)->DIR |= gpio__get_pin_mask(gpio);
    4242:	6811      	ldr	r1, [r2, #0]
gpio__get_pin_mask():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    4244:	2001      	movs	r0, #1
    4246:	4098      	lsls	r0, r3
gpio__set_as_output():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:91
  gpio__get_struct(gpio)->DIR |= gpio__get_pin_mask(gpio);
    4248:	4308      	orrs	r0, r1
    424a:	6010      	str	r0, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:92
}
    424c:	4770      	bx	lr
    424e:	bf00      	nop
    4250:	0000b4b8 	.word	0x0000b4b8

00004254 <gpio__construct_as_output>:
gpio__construct_as_output():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:50
                                 uint8_t pin_number_0_to_31) {
    4254:	b538      	push	{r3, r4, r5, lr}
gpio__construct():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:36
      .port_number = (uint8_t)port,
    4256:	f000 0507 	and.w	r5, r0, #7
gpio__construct_as_output():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:52
  gpio__set_as_output(gpio);
    425a:	f04f 0000 	mov.w	r0, #0
gpio__construct():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:35
  gpio_s gpio = {
    425e:	f001 041f 	and.w	r4, r1, #31
gpio__construct_as_output():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:52
  gpio__set_as_output(gpio);
    4262:	f365 0002 	bfi	r0, r5, #0, #3
    4266:	f364 00c7 	bfi	r0, r4, #3, #5
    426a:	f7ff ffe3 	bl	4234 <gpio__set_as_output>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:53
  return gpio;
    426e:	f04f 0000 	mov.w	r0, #0
    4272:	f365 0002 	bfi	r0, r5, #0, #3
    4276:	f364 00c7 	bfi	r0, r4, #3, #5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:54
}
    427a:	bd38      	pop	{r3, r4, r5, pc}

0000427c <gpio__get>:
gpio__get_struct():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    427c:	f000 0207 	and.w	r2, r0, #7
    4280:	4b06      	ldr	r3, [pc, #24]	; (429c <gpio__get+0x20>)
    4282:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
gpio__get_pin_mask():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    4286:	f3c0 00c4 	ubfx	r0, r0, #3, #5
gpio__get():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:95

bool gpio__get(gpio_s gpio) {
  return (gpio__get_struct(gpio)->PIN & gpio__get_pin_mask(gpio));
    428a:	695a      	ldr	r2, [r3, #20]
gpio__get_pin_mask():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    428c:	2301      	movs	r3, #1
    428e:	fa03 f000 	lsl.w	r0, r3, r0
gpio__get():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:95
  return (gpio__get_struct(gpio)->PIN & gpio__get_pin_mask(gpio));
    4292:	4210      	tst	r0, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:96
}
    4294:	bf14      	ite	ne
    4296:	4618      	movne	r0, r3
    4298:	2000      	moveq	r0, #0
    429a:	4770      	bx	lr
    429c:	0000b4b8 	.word	0x0000b4b8

000042a0 <gpio__set>:
gpio__get_struct():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    42a0:	f000 0207 	and.w	r2, r0, #7
    42a4:	4b04      	ldr	r3, [pc, #16]	; (42b8 <gpio__set+0x18>)
gpio__get_pin_mask():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    42a6:	f3c0 00c4 	ubfx	r0, r0, #3, #5
gpio__get_struct():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    42aa:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
gpio__get_pin_mask():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    42ae:	2301      	movs	r3, #1
    42b0:	fa03 f000 	lsl.w	r0, r3, r0
gpio__set():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:99

void gpio__set(gpio_s gpio) {
  gpio__get_struct(gpio)->SET = gpio__get_pin_mask(gpio);
    42b4:	6190      	str	r0, [r2, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:100
}
    42b6:	4770      	bx	lr
    42b8:	0000b4b8 	.word	0x0000b4b8

000042bc <gpio__reset>:
gpio__get_struct():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    42bc:	f000 0207 	and.w	r2, r0, #7
    42c0:	4b04      	ldr	r3, [pc, #16]	; (42d4 <gpio__reset+0x18>)
gpio__get_pin_mask():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    42c2:	f3c0 00c4 	ubfx	r0, r0, #3, #5
gpio__get_struct():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    42c6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
gpio__get_pin_mask():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    42ca:	2301      	movs	r3, #1
    42cc:	fa03 f000 	lsl.w	r0, r3, r0
gpio__reset():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:103

void gpio__reset(gpio_s gpio) {
  gpio__get_struct(gpio)->CLR = gpio__get_pin_mask(gpio);
    42d0:	61d0      	str	r0, [r2, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:104
}
    42d2:	4770      	bx	lr
    42d4:	0000b4b8 	.word	0x0000b4b8

000042d8 <gpio__toggle>:
gpio__toggle():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:106

void gpio__toggle(gpio_s gpio) {
    42d8:	b508      	push	{r3, lr}
    42da:	4601      	mov	r1, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:108
  // Avoiding XOR logic with PIN register to make it thread safe
  if (gpio__get(gpio)) {
    42dc:	f7ff ffce 	bl	427c <gpio__get>
    42e0:	b120      	cbz	r0, 42ec <gpio__toggle+0x14>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:109
    gpio__reset(gpio);
    42e2:	4608      	mov	r0, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:113
  } else {
    gpio__set(gpio);
  }
}
    42e4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:109
    gpio__reset(gpio);
    42e8:	f7ff bfe8 	b.w	42bc <gpio__reset>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:111
    gpio__set(gpio);
    42ec:	4608      	mov	r0, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:113
}
    42ee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:111
    gpio__set(gpio);
    42f2:	f7ff bfd5 	b.w	42a0 <gpio__set>
    42f6:	Address 0x00000000000042f6 is out of bounds.


000042f8 <hw_timer__enable>:
hw_timer__enable():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:20
    {LPC_TIM2, LPC_PERIPHERAL__TIMER2, "HW_T2"},
    {LPC_TIM3, LPC_PERIPHERAL__TIMER3, "HW_T3"},
};

void hw_timer__enable(lpc_timer_e timer, const uint32_t prescalar_divider,
                      function__void_f isr_callback) {
    42f8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:22
  // Peripheral must be turned on before accessing its registers
  lpc_peripheral__turn_on_power_to(hw_timers[timer].peripheral_id);
    42fc:	4f0f      	ldr	r7, [pc, #60]	; (433c <hw_timer__enable+0x44>)
    42fe:	240c      	movs	r4, #12
    4300:	4344      	muls	r4, r0
    4302:	193e      	adds	r6, r7, r4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:20
                      function__void_f isr_callback) {
    4304:	4688      	mov	r8, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:22
  lpc_peripheral__turn_on_power_to(hw_timers[timer].peripheral_id);
    4306:	7935      	ldrb	r5, [r6, #4]
    4308:	4628      	mov	r0, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:20
                      function__void_f isr_callback) {
    430a:	4691      	mov	r9, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:22
  lpc_peripheral__turn_on_power_to(hw_timers[timer].peripheral_id);
    430c:	f000 fa0e 	bl	472c <lpc_peripheral__turn_on_power_to>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:24

  hw_timers[timer].registers->TCR = 0;
    4310:	593c      	ldr	r4, [r7, r4]
    4312:	2300      	movs	r3, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:27
  hw_timers[timer].registers->TC = 0;

  hw_timers[timer].registers->IR = 0x3F; // Clear all interrupts
    4314:	223f      	movs	r2, #63	; 0x3f
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:24
  hw_timers[timer].registers->TCR = 0;
    4316:	6063      	str	r3, [r4, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:37
  hw_timers[timer].registers->MR3 = 0;

  /* Interrupt can be enabled because we can assume the timer is not setup
   * for interrupt yet through hw_timer__enable_match_isr()
   */
  lpc_peripheral__enable_interrupt(hw_timers[timer].peripheral_id, isr_callback,
    4318:	4649      	mov	r1, r9
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:25
  hw_timers[timer].registers->TC = 0;
    431a:	60a3      	str	r3, [r4, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:37
  lpc_peripheral__enable_interrupt(hw_timers[timer].peripheral_id, isr_callback,
    431c:	4628      	mov	r0, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:27
  hw_timers[timer].registers->IR = 0x3F; // Clear all interrupts
    431e:	6022      	str	r2, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:28
  hw_timers[timer].registers->MCR = 0;   // Clear all match register settings
    4320:	6163      	str	r3, [r4, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:37
  lpc_peripheral__enable_interrupt(hw_timers[timer].peripheral_id, isr_callback,
    4322:	68b2      	ldr	r2, [r6, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:29
  hw_timers[timer].registers->MR0 = 0;
    4324:	61a3      	str	r3, [r4, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:30
  hw_timers[timer].registers->MR1 = 0;
    4326:	61e3      	str	r3, [r4, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:31
  hw_timers[timer].registers->MR2 = 0;
    4328:	6223      	str	r3, [r4, #32]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:32
  hw_timers[timer].registers->MR3 = 0;
    432a:	6263      	str	r3, [r4, #36]	; 0x24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:37
  lpc_peripheral__enable_interrupt(hw_timers[timer].peripheral_id, isr_callback,
    432c:	f000 fa22 	bl	4774 <lpc_peripheral__enable_interrupt>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:41
                                   hw_timers[timer].rtos_isr_trace_name);

  hw_timers[timer].registers->PR = prescalar_divider;
  hw_timers[timer].registers->TCR = 1; // Enable
    4330:	2301      	movs	r3, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:40
  hw_timers[timer].registers->PR = prescalar_divider;
    4332:	f8c4 800c 	str.w	r8, [r4, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:41
  hw_timers[timer].registers->TCR = 1; // Enable
    4336:	6063      	str	r3, [r4, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:42
}
    4338:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    433c:	0000b4d0 	.word	0x0000b4d0

00004340 <hw_timer__enable_match_isr>:
hw_timer__enable_match_isr():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:47

void hw_timer__enable_match_isr(lpc_timer_e timer, lpc_timer__mr_e mr_type,
                                const uint32_t mr_value) {
  const uint32_t interrupt_on_match = (uint32_t)mr_type * 3; // 3 bits per MR
  hw_timers[timer].registers->MCR |= (1 << interrupt_on_match);
    4340:	230c      	movs	r3, #12
    4342:	4358      	muls	r0, r3
    4344:	4b06      	ldr	r3, [pc, #24]	; (4360 <hw_timer__enable_match_isr+0x20>)
    4346:	581b      	ldr	r3, [r3, r0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:45
                                const uint32_t mr_value) {
    4348:	b530      	push	{r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:47
  hw_timers[timer].registers->MCR |= (1 << interrupt_on_match);
    434a:	2001      	movs	r0, #1
    434c:	695c      	ldr	r4, [r3, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:46
  const uint32_t interrupt_on_match = (uint32_t)mr_type * 3; // 3 bits per MR
    434e:	eb01 0541 	add.w	r5, r1, r1, lsl #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:47
  hw_timers[timer].registers->MCR |= (1 << interrupt_on_match);
    4352:	40a8      	lsls	r0, r5
    4354:	4320      	orrs	r0, r4
    4356:	6158      	str	r0, [r3, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:50

  // Four MR registers are contiguous and they start from &MR0
  volatile uint32_t *mr_base = &(hw_timers[timer].registers->MR0);
    4358:	3318      	adds	r3, #24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:53
  volatile uint32_t *mr_register = mr_base + mr_type;

  *mr_register = mr_value;
    435a:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:54
}
    435e:	bd30      	pop	{r4, r5, pc}
    4360:	0000b4d0 	.word	0x0000b4d0

00004364 <hw_timer__acknowledge_interrupt>:
hw_timer__acknowledge_interrupt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:58

void hw_timer__acknowledge_interrupt(lpc_timer_e timer,
                                     lpc_timer__mr_e mr_type) {
  hw_timers[timer].registers->IR = (1 << (uint32_t)mr_type);
    4364:	230c      	movs	r3, #12
    4366:	4358      	muls	r0, r3
    4368:	4b03      	ldr	r3, [pc, #12]	; (4378 <hw_timer__acknowledge_interrupt+0x14>)
    436a:	581a      	ldr	r2, [r3, r0]
    436c:	2301      	movs	r3, #1
    436e:	fa03 f101 	lsl.w	r1, r3, r1
    4372:	6011      	str	r1, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:59
}
    4374:	4770      	bx	lr
    4376:	bf00      	nop
    4378:	0000b4d0 	.word	0x0000b4d0

0000437c <hw_timer__get_value>:
hw_timer__get_value():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:62

uint32_t hw_timer__get_value(lpc_timer_e timer) {
  return hw_timers[timer].registers->TC;
    437c:	230c      	movs	r3, #12
    437e:	4358      	muls	r0, r3
    4380:	4b01      	ldr	r3, [pc, #4]	; (4388 <hw_timer__get_value+0xc>)
    4382:	581b      	ldr	r3, [r3, r0]
    4384:	6898      	ldr	r0, [r3, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:63
}
    4386:	4770      	bx	lr
    4388:	0000b4d0 	.word	0x0000b4d0

0000438c <hw_timer__set_value>:
hw_timer__set_value():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:66

void hw_timer__set_value(lpc_timer_e timer, uint32_t tc_value) {
  hw_timers[timer].registers->TC = tc_value;
    438c:	230c      	movs	r3, #12
    438e:	4358      	muls	r0, r3
    4390:	4b01      	ldr	r3, [pc, #4]	; (4398 <hw_timer__set_value+0xc>)
    4392:	581b      	ldr	r3, [r3, r0]
    4394:	6099      	str	r1, [r3, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:67
}
    4396:	4770      	bx	lr
    4398:	0000b4d0 	.word	0x0000b4d0

0000439c <i2c__transfer_unprotected>:
i2c__transfer_unprotected():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:269

static bool i2c__transfer_unprotected(i2c_s *i2c, uint8_t slave_address,
                                      uint8_t starting_slave_memory_address,
                                      uint8_t *input_byte_pointer,
                                      const uint8_t *output_byte_pointer,
                                      uint32_t number_of_bytes_to_transfer) {
    439c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    43a0:	4604      	mov	r4, r0
    43a2:	4617      	mov	r7, r2
    43a4:	461e      	mov	r6, r3
    43a6:	4688      	mov	r8, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:273
  bool status = false;
  const uint32_t timeout_ms = 3000;
  const bool rtos_is_running =
      (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
    43a8:	f7ff fce0 	bl	3d6c <xTaskGetSchedulerState>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:275

  xSemaphoreTake(i2c->transfer_complete_signal,
    43ac:	2100      	movs	r1, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:273
      (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
    43ae:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:275
  xSemaphoreTake(i2c->transfer_complete_signal,
    43b0:	68a0      	ldr	r0, [r4, #8]
    43b2:	f7fe ff43 	bl	323c <xQueueSemaphoreTake>
i2c__kick_off_transfer():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:304
static void i2c__kick_off_transfer(i2c_s *i2c, uint8_t slave_address,
                                   uint8_t starting_slave_memory_address,
                                   uint8_t *input_byte_pointer,
                                   const uint8_t *output_byte_pointer,
                                   uint32_t number_of_bytes_to_transfer) {
  i2c->error_code = 0;
    43b6:	2300      	movs	r3, #0
    43b8:	7423      	strb	r3, [r4, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:309
  i2c->slave_address = slave_address;
  i2c->starting_slave_memory_address = starting_slave_memory_address;

  i2c->input_byte_pointer = input_byte_pointer;
  i2c->output_byte_pointer = output_byte_pointer;
    43ba:	9b06      	ldr	r3, [sp, #24]
    43bc:	61a3      	str	r3, [r4, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:310
  i2c->number_of_bytes_to_transfer = number_of_bytes_to_transfer;
    43be:	9b07      	ldr	r3, [sp, #28]
    43c0:	61e3      	str	r3, [r4, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:316

  // Send START, I2C State Machine will finish the rest through interrupts; @see
  // i2c__handle_state_machine()
  I2C__DEBUG_PRINTF("Starting transfer with device address: 0x%02X",
                    (unsigned)slave_address);
  i2c__set_start_flag(i2c->registers);
    43c2:	6823      	ldr	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:305
  i2c->slave_address = slave_address;
    43c4:	f884 8011 	strb.w	r8, [r4, #17]
i2c__set_start_flag():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:111
static void i2c__set_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONSET = 0x20; }
    43c8:	2220      	movs	r2, #32
i2c__transfer_unprotected():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:283
  if (rtos_is_running) {
    43ca:	2d02      	cmp	r5, #2
i2c__kick_off_transfer():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:306
  i2c->starting_slave_memory_address = starting_slave_memory_address;
    43cc:	74a7      	strb	r7, [r4, #18]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:308
  i2c->input_byte_pointer = input_byte_pointer;
    43ce:	6166      	str	r6, [r4, #20]
i2c__set_start_flag():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:111
static void i2c__set_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONSET = 0x20; }
    43d0:	601a      	str	r2, [r3, #0]
i2c__transfer_unprotected():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:283
  if (rtos_is_running) {
    43d2:	d10b      	bne.n	43ec <i2c__transfer_unprotected+0x50>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:285
    if (xSemaphoreTake(i2c->transfer_complete_signal, timeout_ms)) {
    43d4:	f640 31b8 	movw	r1, #3000	; 0xbb8
    43d8:	68a0      	ldr	r0, [r4, #8]
    43da:	f7fe ff2f 	bl	323c <xQueueSemaphoreTake>
    43de:	b118      	cbz	r0, 43e8 <i2c__transfer_unprotected+0x4c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:293
    status = (0 == i2c->error_code);
    43e0:	7c20      	ldrb	r0, [r4, #16]
    43e2:	fab0 f080 	clz	r0, r0
    43e6:	0940      	lsrs	r0, r0, #5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:297
}
    43e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:291 (discriminator 1)
    while (!xSemaphoreTake(i2c->transfer_complete_signal, 0)) {
    43ec:	2100      	movs	r1, #0
    43ee:	68a0      	ldr	r0, [r4, #8]
    43f0:	f7fe ff24 	bl	323c <xQueueSemaphoreTake>
    43f4:	2800      	cmp	r0, #0
    43f6:	d0f9      	beq.n	43ec <i2c__transfer_unprotected+0x50>
    43f8:	e7f2      	b.n	43e0 <i2c__transfer_unprotected+0x44>
    43fa:	Address 0x00000000000043fa is out of bounds.


000043fc <i2c__handle_interrupt>:
i2c__handle_state_machine():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:359
   * I2C__STATE_MR_SLAVE_NACK_SENT --> (stop) For 1  byte :
   *I2C__STATE_MR_SLAVE_NACK_SENT --> (stop)
   ***********************************************************************************************************
   */

  LPC_I2C_TypeDef *lpc_i2c = i2c->registers;
    43fc:	6803      	ldr	r3, [r0, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:360
  const unsigned i2c_state = lpc_i2c->STAT;
    43fe:	685a      	ldr	r2, [r3, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:363
  I2C__DEBUG_PRINTF("  HW State: 0x%02X", i2c_state);

  switch (i2c_state) {
    4400:	2a28      	cmp	r2, #40	; 0x28
i2c__handle_interrupt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:483
  }

  return true;
}

static void i2c__handle_interrupt(i2c_s *i2c) {
    4402:	b513      	push	{r0, r1, r4, lr}
i2c__handle_state_machine():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:363
  switch (i2c_state) {
    4404:	d057      	beq.n	44b6 <i2c__handle_interrupt+0xba>
    4406:	d80a      	bhi.n	441e <i2c__handle_interrupt+0x22>
    4408:	2a10      	cmp	r2, #16
    440a:	d02c      	beq.n	4466 <i2c__handle_interrupt+0x6a>
    440c:	2a18      	cmp	r2, #24
    440e:	d032      	beq.n	4476 <i2c__handle_interrupt+0x7a>
    4410:	2a08      	cmp	r2, #8
    4412:	d109      	bne.n	4428 <i2c__handle_interrupt+0x2c>
i2c__write_address():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:93
  return (slave_address & 0xFE);
    4414:	7c41      	ldrb	r1, [r0, #17]
i2c__handle_state_machine():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:366
    lpc_i2c->DAT = i2c__write_address(i2c->slave_address);
    4416:	f001 01fe 	and.w	r1, r1, #254	; 0xfe
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:383
      lpc_i2c->DAT = i2c->starting_slave_memory_address;
    441a:	6099      	str	r1, [r3, #8]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:109
  i2c->CONCLR = 0x08;
    441c:	e028      	b.n	4470 <i2c__handle_interrupt+0x74>
i2c__handle_state_machine():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:363
  switch (i2c_state) {
    441e:	2a40      	cmp	r2, #64	; 0x40
    4420:	d063      	beq.n	44ea <i2c__handle_interrupt+0xee>
    4422:	d80d      	bhi.n	4440 <i2c__handle_interrupt+0x44>
    4424:	2a38      	cmp	r2, #56	; 0x38
    4426:	d077      	beq.n	4518 <i2c__handle_interrupt+0x11c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:463
    i2c->error_code = lpc_i2c->STAT;
    4428:	685a      	ldr	r2, [r3, #4]
    442a:	7402      	strb	r2, [r0, #16]
i2c__clear_start_flag():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:112
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    442c:	2220      	movs	r2, #32
    442e:	619a      	str	r2, [r3, #24]
i2c__set_stop():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:474
  i2c->CONSET = stop_bit;
    4430:	2210      	movs	r2, #16
    4432:	601a      	str	r2, [r3, #0]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:109
  i2c->CONCLR = 0x08;
    4434:	2208      	movs	r2, #8
    4436:	619a      	str	r2, [r3, #24]
i2c__set_stop():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:477
  while (i2c->CONSET & stop_bit) {
    4438:	681a      	ldr	r2, [r3, #0]
    443a:	06d2      	lsls	r2, r2, #27
    443c:	d4fc      	bmi.n	4438 <i2c__handle_interrupt+0x3c>
    443e:	e026      	b.n	448e <i2c__handle_interrupt+0x92>
i2c__handle_state_machine():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:363
  switch (i2c_state) {
    4440:	2a50      	cmp	r2, #80	; 0x50
    4442:	d05b      	beq.n	44fc <i2c__handle_interrupt+0x100>
    4444:	2a58      	cmp	r2, #88	; 0x58
    4446:	d1ef      	bne.n	4428 <i2c__handle_interrupt+0x2c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:446
    *(i2c->input_byte_pointer) = lpc_i2c->DAT;
    4448:	6942      	ldr	r2, [r0, #20]
    444a:	6899      	ldr	r1, [r3, #8]
    444c:	7011      	strb	r1, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:447
    i2c->number_of_bytes_to_transfer = 0;
    444e:	2200      	movs	r2, #0
    4450:	61c2      	str	r2, [r0, #28]
i2c__clear_start_flag():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:112
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    4452:	2220      	movs	r2, #32
    4454:	619a      	str	r2, [r3, #24]
i2c__set_stop():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:474
  i2c->CONSET = stop_bit;
    4456:	2210      	movs	r2, #16
    4458:	601a      	str	r2, [r3, #0]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:109
  i2c->CONCLR = 0x08;
    445a:	2208      	movs	r2, #8
    445c:	619a      	str	r2, [r3, #24]
i2c__set_stop():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:477
  while (i2c->CONSET & stop_bit) {
    445e:	681a      	ldr	r2, [r3, #0]
    4460:	06d1      	lsls	r1, r2, #27
    4462:	d4fc      	bmi.n	445e <i2c__handle_interrupt+0x62>
    4464:	e013      	b.n	448e <i2c__handle_interrupt+0x92>
i2c__read_address():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:90
  return (slave_address | 0x01);
    4466:	7c42      	ldrb	r2, [r0, #17]
i2c__handle_state_machine():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:371
    lpc_i2c->DAT = i2c__read_address(i2c->slave_address);
    4468:	f042 0201 	orr.w	r2, r2, #1
    446c:	609a      	str	r2, [r3, #8]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:109
  i2c->CONCLR = 0x08;
    446e:	2208      	movs	r2, #8
    4470:	619a      	str	r2, [r3, #24]
i2c__handle_interrupt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:492
    long higher_priority_task_woke = 0;
    xSemaphoreGiveFromISR(i2c->transfer_complete_signal,
                          &higher_priority_task_woke);
    portEND_SWITCHING_ISR(higher_priority_task_woke);
  }
}
    4472:	b002      	add	sp, #8
    4474:	bd10      	pop	{r4, pc}
i2c__handle_state_machine():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:380
    if (0 == i2c->number_of_bytes_to_transfer) {
    4476:	69c4      	ldr	r4, [r0, #28]
i2c__clear_start_flag():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:112
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    4478:	2120      	movs	r1, #32
    447a:	6199      	str	r1, [r3, #24]
i2c__handle_state_machine():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:380
    if (0 == i2c->number_of_bytes_to_transfer) {
    447c:	2208      	movs	r2, #8
    447e:	b9c4      	cbnz	r4, 44b2 <i2c__handle_interrupt+0xb6>
i2c__clear_start_flag():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:112
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    4480:	6199      	str	r1, [r3, #24]
i2c__set_stop():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:474
  i2c->CONSET = stop_bit;
    4482:	2110      	movs	r1, #16
    4484:	6019      	str	r1, [r3, #0]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:109
  i2c->CONCLR = 0x08;
    4486:	619a      	str	r2, [r3, #24]
i2c__set_stop():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:477
  while (i2c->CONSET & stop_bit) {
    4488:	681a      	ldr	r2, [r3, #0]
    448a:	06d1      	lsls	r1, r2, #27
    448c:	d4fc      	bmi.n	4488 <i2c__handle_interrupt+0x8c>
i2c__handle_interrupt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:487
    long higher_priority_task_woke = 0;
    448e:	2300      	movs	r3, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:488
    xSemaphoreGiveFromISR(i2c->transfer_complete_signal,
    4490:	a901      	add	r1, sp, #4
    4492:	6880      	ldr	r0, [r0, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:487
    long higher_priority_task_woke = 0;
    4494:	9301      	str	r3, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:488
    xSemaphoreGiveFromISR(i2c->transfer_complete_signal,
    4496:	f7fe fde1 	bl	305c <xQueueGiveFromISR>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:490
    portEND_SWITCHING_ISR(higher_priority_task_woke);
    449a:	9b01      	ldr	r3, [sp, #4]
    449c:	2b00      	cmp	r3, #0
    449e:	d0e8      	beq.n	4472 <i2c__handle_interrupt+0x76>
    44a0:	4b1f      	ldr	r3, [pc, #124]	; (4520 <i2c__handle_interrupt+0x124>)
    44a2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    44a6:	601a      	str	r2, [r3, #0]
    44a8:	f3bf 8f4f 	dsb	sy
    44ac:	f3bf 8f6f 	isb	sy
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:492
}
    44b0:	e7df      	b.n	4472 <i2c__handle_interrupt+0x76>
i2c__handle_state_machine():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:383
      lpc_i2c->DAT = i2c->starting_slave_memory_address;
    44b2:	7c81      	ldrb	r1, [r0, #18]
    44b4:	e7b1      	b.n	441a <i2c__handle_interrupt+0x1e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:392
    if (i2c__is_read_address(i2c->slave_address)) {
    44b6:	7c42      	ldrb	r2, [r0, #17]
    44b8:	07d2      	lsls	r2, r2, #31
    44ba:	d502      	bpl.n	44c2 <i2c__handle_interrupt+0xc6>
i2c__set_start_flag():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:111
static void i2c__set_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONSET = 0x20; }
    44bc:	2220      	movs	r2, #32
i2c__set_ack_flag():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:113
static void i2c__set_ack_flag(LPC_I2C_TypeDef *i2c) { i2c->CONSET = 0x04; }
    44be:	601a      	str	r2, [r3, #0]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:109
  i2c->CONCLR = 0x08;
    44c0:	e7d5      	b.n	446e <i2c__handle_interrupt+0x72>
i2c__handle_state_machine():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:396
      if (0 == i2c->number_of_bytes_to_transfer) {
    44c2:	69c2      	ldr	r2, [r0, #28]
    44c4:	b94a      	cbnz	r2, 44da <i2c__handle_interrupt+0xde>
i2c__clear_start_flag():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:112
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    44c6:	2220      	movs	r2, #32
    44c8:	619a      	str	r2, [r3, #24]
i2c__set_stop():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:474
  i2c->CONSET = stop_bit;
    44ca:	2210      	movs	r2, #16
    44cc:	601a      	str	r2, [r3, #0]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:109
  i2c->CONCLR = 0x08;
    44ce:	2208      	movs	r2, #8
    44d0:	619a      	str	r2, [r3, #24]
i2c__set_stop():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:477
  while (i2c->CONSET & stop_bit) {
    44d2:	681a      	ldr	r2, [r3, #0]
    44d4:	06d4      	lsls	r4, r2, #27
    44d6:	d4fc      	bmi.n	44d2 <i2c__handle_interrupt+0xd6>
    44d8:	e7d9      	b.n	448e <i2c__handle_interrupt+0x92>
i2c__handle_state_machine():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:399
        lpc_i2c->DAT = *(i2c->output_byte_pointer);
    44da:	6981      	ldr	r1, [r0, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:401
        --(i2c->number_of_bytes_to_transfer);
    44dc:	3a01      	subs	r2, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:399
        lpc_i2c->DAT = *(i2c->output_byte_pointer);
    44de:	f811 4b01 	ldrb.w	r4, [r1], #1
    44e2:	609c      	str	r4, [r3, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:400
        ++(i2c->output_byte_pointer);
    44e4:	6181      	str	r1, [r0, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:401
        --(i2c->number_of_bytes_to_transfer);
    44e6:	61c2      	str	r2, [r0, #28]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:109
  i2c->CONCLR = 0x08;
    44e8:	e7c1      	b.n	446e <i2c__handle_interrupt+0x72>
i2c__clear_start_flag():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:112
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    44ea:	2220      	movs	r2, #32
    44ec:	619a      	str	r2, [r3, #24]
i2c__handle_state_machine():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:416
    if (i2c->number_of_bytes_to_transfer > 1) {
    44ee:	69c2      	ldr	r2, [r0, #28]
    44f0:	2a01      	cmp	r2, #1
    44f2:	f04f 0204 	mov.w	r2, #4
    44f6:	d8e2      	bhi.n	44be <i2c__handle_interrupt+0xc2>
i2c__set_nack_flag():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:114
static void i2c__set_nack_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x04; }
    44f8:	619a      	str	r2, [r3, #24]
    44fa:	e7b8      	b.n	446e <i2c__handle_interrupt+0x72>
i2c__handle_state_machine():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:429
    *(i2c->input_byte_pointer) = lpc_i2c->DAT;
    44fc:	6942      	ldr	r2, [r0, #20]
    44fe:	6899      	ldr	r1, [r3, #8]
    4500:	7011      	strb	r1, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:430
    ++(i2c->input_byte_pointer);
    4502:	6942      	ldr	r2, [r0, #20]
    4504:	3201      	adds	r2, #1
    4506:	6142      	str	r2, [r0, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:431
    --(i2c->number_of_bytes_to_transfer);
    4508:	69c2      	ldr	r2, [r0, #28]
    450a:	3a01      	subs	r2, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:433
    if (1 == i2c->number_of_bytes_to_transfer) { // Only 1 more byte remaining
    450c:	2a01      	cmp	r2, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:431
    --(i2c->number_of_bytes_to_transfer);
    450e:	61c2      	str	r2, [r0, #28]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:433
    if (1 == i2c->number_of_bytes_to_transfer) { // Only 1 more byte remaining
    4510:	f04f 0204 	mov.w	r2, #4
    4514:	d1d3      	bne.n	44be <i2c__handle_interrupt+0xc2>
    4516:	e7ef      	b.n	44f8 <i2c__handle_interrupt+0xfc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:455
    i2c->error_code = lpc_i2c->STAT;
    4518:	685b      	ldr	r3, [r3, #4]
    451a:	7403      	strb	r3, [r0, #16]
i2c__handle_interrupt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:486
  if (stop_sent) {
    451c:	e7b7      	b.n	448e <i2c__handle_interrupt+0x92>
    451e:	bf00      	nop
    4520:	e000ed04 	.word	0xe000ed04

00004524 <i2c2_isr>:
i2c2_isr():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:118
static void i2c2_isr(void) { i2c__handle_interrupt(&i2c_structs[I2C__2]); }
    4524:	4801      	ldr	r0, [pc, #4]	; (452c <i2c2_isr+0x8>)
    4526:	f7ff bf69 	b.w	43fc <i2c__handle_interrupt>
    452a:	bf00      	nop
    452c:	1000004c 	.word	0x1000004c

00004530 <i2c1_isr>:
i2c1_isr():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:117
static void i2c1_isr(void) { i2c__handle_interrupt(&i2c_structs[I2C__1]); }
    4530:	4801      	ldr	r0, [pc, #4]	; (4538 <i2c1_isr+0x8>)
    4532:	f7ff bf63 	b.w	43fc <i2c__handle_interrupt>
    4536:	bf00      	nop
    4538:	1000002c 	.word	0x1000002c

0000453c <i2c0_isr>:
i2c0_isr():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:116
static void i2c0_isr(void) { i2c__handle_interrupt(&i2c_structs[I2C__0]); }
    453c:	4801      	ldr	r0, [pc, #4]	; (4544 <i2c0_isr+0x8>)
    453e:	f7ff bf5d 	b.w	43fc <i2c__handle_interrupt>
    4542:	bf00      	nop
    4544:	1000000c 	.word	0x1000000c

00004548 <i2c__initialize>:
i2c__initialize():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:129
                     StaticSemaphore_t *mutex_struct) {
    4548:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    454c:	4615      	mov	r5, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:130
  const function__void_f isrs[] = {i2c0_isr, i2c1_isr, i2c2_isr};
    454e:	4a28      	ldr	r2, [pc, #160]	; (45f0 <i2c__initialize+0xa8>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:129
                     StaticSemaphore_t *mutex_struct) {
    4550:	4606      	mov	r6, r0
    4552:	4689      	mov	r9, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:130
  const function__void_f isrs[] = {i2c0_isr, i2c1_isr, i2c2_isr};
    4554:	ca07      	ldmia	r2, {r0, r1, r2}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:129
                     StaticSemaphore_t *mutex_struct) {
    4556:	b086      	sub	sp, #24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:130
  const function__void_f isrs[] = {i2c0_isr, i2c1_isr, i2c2_isr};
    4558:	ac06      	add	r4, sp, #24
    455a:	e904 0007 	stmdb	r4, {r0, r1, r2}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:131
  const lpc_peripheral_e peripheral_ids[] = {
    455e:	f640 320a 	movw	r2, #2826	; 0xb0a
    4562:	f8ad 2008 	strh.w	r2, [sp, #8]
    4566:	220c      	movs	r2, #12
    4568:	f88d 200a 	strb.w	r2, [sp, #10]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:140
  LPC_I2C_TypeDef *lpc_i2c = i2c->registers;
    456c:	4921      	ldr	r1, [pc, #132]	; (45f4 <i2c__initialize+0xac>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:129
                     StaticSemaphore_t *mutex_struct) {
    456e:	f8dd a038 	ldr.w	sl, [sp, #56]	; 0x38
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:140
  LPC_I2C_TypeDef *lpc_i2c = i2c->registers;
    4572:	0172      	lsls	r2, r6, #5
    4574:	188f      	adds	r7, r1, r2
    4576:	588c      	ldr	r4, [r1, r2]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:141
  const lpc_peripheral_e peripheral_id = peripheral_ids[i2c_number];
    4578:	aa06      	add	r2, sp, #24
    457a:	4432      	add	r2, r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:147
      xSemaphoreCreateBinaryStatic(binary_sem_struct);
    457c:	2001      	movs	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:141
  const lpc_peripheral_e peripheral_id = peripheral_ids[i2c_number];
    457e:	f812 8c10 	ldrb.w	r8, [r2, #-16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:147
      xSemaphoreCreateBinaryStatic(binary_sem_struct);
    4582:	2203      	movs	r2, #3
    4584:	9200      	str	r2, [sp, #0]
    4586:	2200      	movs	r2, #0
    4588:	4611      	mov	r1, r2
    458a:	f7fe fbd5 	bl	2d38 <xQueueGenericCreateStatic>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:149
  i2c->mutex = xSemaphoreCreateMutexStatic(mutex_struct);
    458e:	4651      	mov	r1, sl
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:146
  i2c->transfer_complete_signal =
    4590:	60b8      	str	r0, [r7, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:149
  i2c->mutex = xSemaphoreCreateMutexStatic(mutex_struct);
    4592:	2001      	movs	r0, #1
    4594:	f7fe fcee 	bl	2f74 <xQueueCreateMutexStatic>
    4598:	60f8      	str	r0, [r7, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:156
  lpc_peripheral__turn_on_power_to(peripheral_id);
    459a:	4640      	mov	r0, r8
    459c:	f000 f8c6 	bl	472c <lpc_peripheral__turn_on_power_to>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:157
  lpc_i2c->CONCLR = 0x6C; // Clear ALL I2C Flags
    45a0:	236c      	movs	r3, #108	; 0x6c
    45a2:	61a3      	str	r3, [r4, #24]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:175
                               : desired_i2c_bus_speed_in_hz;
    45a4:	4a14      	ldr	r2, [pc, #80]	; (45f8 <i2c__initialize+0xb0>)
    45a6:	4b15      	ldr	r3, [pc, #84]	; (45fc <i2c__initialize+0xb4>)
    45a8:	4591      	cmp	r9, r2
    45aa:	bf88      	it	hi
    45ac:	4699      	movhi	r9, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:179
  lpc_i2c->SCLH = ((half_clock_divider * percent_high) / 100) / 2;
    45ae:	2328      	movs	r3, #40	; 0x28
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:176
  const uint32_t half_clock_divider = (peripheral_clock_hz / freq_hz) / 2;
    45b0:	fbb5 f2f9 	udiv	r2, r5, r9
    45b4:	0852      	lsrs	r2, r2, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:179
  lpc_i2c->SCLH = ((half_clock_divider * percent_high) / 100) / 2;
    45b6:	21c8      	movs	r1, #200	; 0xc8
    45b8:	4353      	muls	r3, r2
    45ba:	fbb3 f3f1 	udiv	r3, r3, r1
    45be:	6123      	str	r3, [r4, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:180
  lpc_i2c->SCLL = ((half_clock_divider * percent_low) / 100) / 2;
    45c0:	233c      	movs	r3, #60	; 0x3c
    45c2:	435a      	muls	r2, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:183
  lpc_i2c->ADR0 = lpc_i2c->ADR1 = lpc_i2c->ADR2 = lpc_i2c->ADR3 = 0;
    45c4:	2300      	movs	r3, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:180
  lpc_i2c->SCLL = ((half_clock_divider * percent_low) / 100) / 2;
    45c6:	fbb2 f2f1 	udiv	r2, r2, r1
    45ca:	6162      	str	r2, [r4, #20]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:183
  lpc_i2c->ADR0 = lpc_i2c->ADR1 = lpc_i2c->ADR2 = lpc_i2c->ADR3 = 0;
    45cc:	62a3      	str	r3, [r4, #40]	; 0x28
    45ce:	6263      	str	r3, [r4, #36]	; 0x24
    45d0:	6223      	str	r3, [r4, #32]
    45d2:	60e3      	str	r3, [r4, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:186
  lpc_i2c->CONSET = 0x40;
    45d4:	2340      	movs	r3, #64	; 0x40
    45d6:	6023      	str	r3, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:187
  lpc_peripheral__enable_interrupt(peripheral_id, isrs[i2c_number],
    45d8:	ab06      	add	r3, sp, #24
    45da:	eb03 0686 	add.w	r6, r3, r6, lsl #2
    45de:	687a      	ldr	r2, [r7, #4]
    45e0:	f856 1c0c 	ldr.w	r1, [r6, #-12]
    45e4:	4640      	mov	r0, r8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:189
}
    45e6:	b006      	add	sp, #24
    45e8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:187
  lpc_peripheral__enable_interrupt(peripheral_id, isrs[i2c_number],
    45ec:	f000 b8c2 	b.w	4774 <lpc_peripheral__enable_interrupt>
    45f0:	0000b518 	.word	0x0000b518
    45f4:	1000000c 	.word	0x1000000c
    45f8:	000f4240 	.word	0x000f4240
    45fc:	000186a0 	.word	0x000186a0

00004600 <i2c__read_slave_data>:
i2c__read_slave_data():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:213
                          uint32_t number_of_bytes_to_transfer) {
    4600:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    4604:	460f      	mov	r7, r1
    4606:	4690      	mov	r8, r2
i2c__transfer():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:252
  if ((NULL != input_byte_pointer) ^ (NULL != output_byte_pointer)) {
    4608:	461d      	mov	r5, r3
    460a:	b923      	cbnz	r3, 4616 <i2c__read_slave_data+0x16>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:249
  bool status = false;
    460c:	2500      	movs	r5, #0
i2c__read_slave_data():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:219
}
    460e:	4628      	mov	r0, r5
    4610:	b002      	add	sp, #8
    4612:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
i2c__transfer():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:253
    if (xSemaphoreTake(i2c->mutex, portMAX_DELAY)) {
    4616:	4c0e      	ldr	r4, [pc, #56]	; (4650 <i2c__read_slave_data+0x50>)
    4618:	eb04 1440 	add.w	r4, r4, r0, lsl #5
    461c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
    4620:	68e0      	ldr	r0, [r4, #12]
    4622:	f7fe fe0b 	bl	323c <xQueueSemaphoreTake>
    4626:	2800      	cmp	r0, #0
    4628:	d0f0      	beq.n	460c <i2c__read_slave_data+0xc>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:254
      status = i2c__transfer_unprotected(
    462a:	2600      	movs	r6, #0
    462c:	9b08      	ldr	r3, [sp, #32]
    462e:	9301      	str	r3, [sp, #4]
    4630:	4642      	mov	r2, r8
    4632:	462b      	mov	r3, r5
    4634:	f047 0101 	orr.w	r1, r7, #1
    4638:	9600      	str	r6, [sp, #0]
    463a:	4620      	mov	r0, r4
    463c:	f7ff feae 	bl	439c <i2c__transfer_unprotected>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:257
      xSemaphoreGive(i2c->mutex);
    4640:	4633      	mov	r3, r6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:254
      status = i2c__transfer_unprotected(
    4642:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:257
      xSemaphoreGive(i2c->mutex);
    4644:	4632      	mov	r2, r6
    4646:	4631      	mov	r1, r6
    4648:	68e0      	ldr	r0, [r4, #12]
    464a:	f7fe fbe5 	bl	2e18 <xQueueGenericSend>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:262
  return status;
    464e:	e7de      	b.n	460e <i2c__read_slave_data+0xe>
    4650:	1000000c 	.word	0x1000000c

00004654 <i2c__read_single>:
i2c__read_single():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:203
                         uint8_t slave_memory_address) {
    4654:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:204
  uint8_t byte = 0;
    4656:	2300      	movs	r3, #0
    4658:	f88d 300f 	strb.w	r3, [sp, #15]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:205
  i2c__read_slave_data(i2c_number, slave_address, slave_memory_address, &byte,
    465c:	2301      	movs	r3, #1
    465e:	9300      	str	r3, [sp, #0]
    4660:	f10d 030f 	add.w	r3, sp, #15
    4664:	f7ff ffcc 	bl	4600 <i2c__read_slave_data>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:208
}
    4668:	f89d 000f 	ldrb.w	r0, [sp, #15]
    466c:	b005      	add	sp, #20
    466e:	f85d fb04 	ldr.w	pc, [sp], #4
    4672:	Address 0x0000000000004672 is out of bounds.


00004674 <i2c__write_slave_data>:
i2c__write_slave_data():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:230
                           uint32_t number_of_bytes_to_transfer) {
    4674:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    4676:	460e      	mov	r6, r1
    4678:	4617      	mov	r7, r2
i2c__transfer():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:252
  if ((NULL != input_byte_pointer) ^ (NULL != output_byte_pointer)) {
    467a:	461d      	mov	r5, r3
    467c:	b91b      	cbnz	r3, 4686 <i2c__write_slave_data+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:249
  bool status = false;
    467e:	2500      	movs	r5, #0
i2c__write_slave_data():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:236
}
    4680:	4628      	mov	r0, r5
    4682:	b003      	add	sp, #12
    4684:	bdf0      	pop	{r4, r5, r6, r7, pc}
i2c__transfer():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:253
    if (xSemaphoreTake(i2c->mutex, portMAX_DELAY)) {
    4686:	4c0e      	ldr	r4, [pc, #56]	; (46c0 <i2c__write_slave_data+0x4c>)
    4688:	eb04 1440 	add.w	r4, r4, r0, lsl #5
    468c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
    4690:	68e0      	ldr	r0, [r4, #12]
    4692:	f7fe fdd3 	bl	323c <xQueueSemaphoreTake>
    4696:	2800      	cmp	r0, #0
    4698:	d0f1      	beq.n	467e <i2c__write_slave_data+0xa>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:254
      status = i2c__transfer_unprotected(
    469a:	9b08      	ldr	r3, [sp, #32]
    469c:	463a      	mov	r2, r7
    469e:	e9cd 5300 	strd	r5, r3, [sp]
    46a2:	f006 01fe 	and.w	r1, r6, #254	; 0xfe
    46a6:	2300      	movs	r3, #0
    46a8:	4620      	mov	r0, r4
    46aa:	f7ff fe77 	bl	439c <i2c__transfer_unprotected>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:257
      xSemaphoreGive(i2c->mutex);
    46ae:	2300      	movs	r3, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:254
      status = i2c__transfer_unprotected(
    46b0:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:257
      xSemaphoreGive(i2c->mutex);
    46b2:	461a      	mov	r2, r3
    46b4:	4619      	mov	r1, r3
    46b6:	68e0      	ldr	r0, [r4, #12]
    46b8:	f7fe fbae 	bl	2e18 <xQueueGenericSend>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:262
  return status;
    46bc:	e7e0      	b.n	4680 <i2c__write_slave_data+0xc>
    46be:	bf00      	nop
    46c0:	1000000c 	.word	0x1000000c

000046c4 <i2c__detect>:
i2c__detect():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:191
bool i2c__detect(i2c_e i2c_number, uint8_t slave_address) {
    46c4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:196
  uint8_t unused = 0;
    46c6:	2200      	movs	r2, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:198
  return i2c__write_slave_data(i2c_number, slave_address, dummy_register,
    46c8:	9200      	str	r2, [sp, #0]
    46ca:	f10d 030f 	add.w	r3, sp, #15
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:196
  uint8_t unused = 0;
    46ce:	f88d 200f 	strb.w	r2, [sp, #15]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:198
  return i2c__write_slave_data(i2c_number, slave_address, dummy_register,
    46d2:	f7ff ffcf 	bl	4674 <i2c__write_slave_data>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:200
}
    46d6:	b005      	add	sp, #20
    46d8:	f85d fb04 	ldr.w	pc, [sp], #4

000046dc <i2c__write_single>:
i2c__write_single():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:222
                       uint8_t slave_memory_address, uint8_t value) {
    46dc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    46de:	f88d 300f 	strb.w	r3, [sp, #15]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:223
  return i2c__write_slave_data(i2c_number, slave_address, slave_memory_address,
    46e2:	2301      	movs	r3, #1
    46e4:	9300      	str	r3, [sp, #0]
    46e6:	f10d 030f 	add.w	r3, sp, #15
    46ea:	f7ff ffc3 	bl	4674 <i2c__write_slave_data>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:225
}
    46ee:	b005      	add	sp, #20
    46f0:	f85d fb04 	ldr.w	pc, [sp], #4

000046f4 <lpc_peripheral__halt_handler>:
lpc_peripheral__halt_handler():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:44 (discriminator 1)
// clang-format on

/// An unregistered interrupt handler is a forever loop
static void lpc_peripheral__halt_handler(void) {
  while (1) {
  }
    46f4:	e7fe      	b.n	46f4 <lpc_peripheral__halt_handler>
    46f6:	Address 0x00000000000046f6 is out of bounds.


000046f8 <lpc_peripheral__interrupt_dispatcher>:
lpc_peripheral__interrupt_dispatcher():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:115
/**
 * This function is intentionally not declared at the header file
 * This is registered by the startup code and registered as the interrupt
 * callback for each peripheral
 */
void lpc_peripheral__interrupt_dispatcher(void) {
    46f8:	b508      	push	{r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:116
  vRunTimeStatIsrEntry();
    46fa:	f7ff fc57 	bl	3fac <vRunTimeStatIsrEntry>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:122

  /* Get the IRQ number we are in.  Note that ICSR's real ISR bits are offset
   * by 16. We can read ICSR register too, but let's just read 8-bits directly.
   */
  const uint8_t isr_num =
      (*((uint8_t *)0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
    46fe:	4b08      	ldr	r3, [pc, #32]	; (4720 <lpc_peripheral__interrupt_dispatcher+0x28>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:129
  /* Lookup the function pointer we want to call and make the call */
  function__void_f isr_to_service = lpc_peripheral__isr_registrations[isr_num];

#if (0 != configUSE_TRACE_FACILITY)
  vTraceStoreISRBegin(lpc_peripheral__trace_handles[isr_num]);
  isr_to_service();
    4700:	4a08      	ldr	r2, [pc, #32]	; (4724 <lpc_peripheral__interrupt_dispatcher+0x2c>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:121
  const uint8_t isr_num =
    4702:	781b      	ldrb	r3, [r3, #0]
    4704:	3b10      	subs	r3, #16
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:125
  function__void_f isr_to_service = lpc_peripheral__isr_registrations[isr_num];
    4706:	b2db      	uxtb	r3, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:129
  isr_to_service();
    4708:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
    470c:	4798      	blx	r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:137
  isr_to_service();
#endif

  // http://www.keil.com/support/docs/3928.htm
  static volatile int memory_write_to_avoid_spurious_interrupt;
  memory_write_to_avoid_spurious_interrupt = 0;
    470e:	4b06      	ldr	r3, [pc, #24]	; (4728 <lpc_peripheral__interrupt_dispatcher+0x30>)
    4710:	2200      	movs	r2, #0
    4712:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:138
  (void)memory_write_to_avoid_spurious_interrupt; // Avoid 'variable set but not
    4714:	681b      	ldr	r3, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:142
                                                  // used' warning

  vRunTimeStatIsrExit();
}
    4716:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:141
  vRunTimeStatIsrExit();
    471a:	f7ff bc5b 	b.w	3fd4 <vRunTimeStatIsrExit>
    471e:	bf00      	nop
    4720:	e000ed04 	.word	0xe000ed04
    4724:	1000006c 	.word	0x1000006c
    4728:	10000b54 	.word	0x10000b54

0000472c <lpc_peripheral__turn_on_power_to>:
lpc_peripheral__turn_on_power_to():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:145

void lpc_peripheral__turn_on_power_to(lpc_peripheral_e peripheral) {
  if (peripheral < sizeof(lpc_peripheral_pconp_bit_map)) {
    472c:	2859      	cmp	r0, #89	; 0x59
    472e:	d809      	bhi.n	4744 <lpc_peripheral__turn_on_power_to+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:147
    const uint32_t power_on_bit =
        (uint32_t)lpc_peripheral_pconp_bit_map[peripheral];
    4730:	4b05      	ldr	r3, [pc, #20]	; (4748 <lpc_peripheral__turn_on_power_to+0x1c>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:148
    LPC_SC->PCONP |= (UINT32_C(1) << power_on_bit);
    4732:	4a06      	ldr	r2, [pc, #24]	; (474c <lpc_peripheral__turn_on_power_to+0x20>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:146
    const uint32_t power_on_bit =
    4734:	5c18      	ldrb	r0, [r3, r0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:148
    LPC_SC->PCONP |= (UINT32_C(1) << power_on_bit);
    4736:	f8d2 10c4 	ldr.w	r1, [r2, #196]	; 0xc4
    473a:	2301      	movs	r3, #1
    473c:	4083      	lsls	r3, r0
    473e:	430b      	orrs	r3, r1
    4740:	f8c2 30c4 	str.w	r3, [r2, #196]	; 0xc4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:150
  }
}
    4744:	4770      	bx	lr
    4746:	bf00      	nop
    4748:	0000b533 	.word	0x0000b533
    474c:	400fc000 	.word	0x400fc000

00004750 <lpc_peripheral__is_powered_on>:
lpc_peripheral__is_powered_on():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:155

bool lpc_peripheral__is_powered_on(lpc_peripheral_e peripheral) {
  bool powered_on = false;

  if (peripheral < sizeof(lpc_peripheral_pconp_bit_map)) {
    4750:	2859      	cmp	r0, #89	; 0x59
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:158
    const uint32_t power_on_bit =
        (uint32_t)lpc_peripheral_pconp_bit_map[peripheral];
    powered_on = 0 != (LPC_SC->PCONP & (UINT32_C(1) << power_on_bit));
    4752:	bf9f      	itttt	ls
    4754:	4b05      	ldrls	r3, [pc, #20]	; (476c <lpc_peripheral__is_powered_on+0x1c>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:157
        (uint32_t)lpc_peripheral_pconp_bit_map[peripheral];
    4756:	4a06      	ldrls	r2, [pc, #24]	; (4770 <lpc_peripheral__is_powered_on+0x20>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:158
    powered_on = 0 != (LPC_SC->PCONP & (UINT32_C(1) << power_on_bit));
    4758:	f8d3 30c4 	ldrls.w	r3, [r3, #196]	; 0xc4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:156
    const uint32_t power_on_bit =
    475c:	5c10      	ldrbls	r0, [r2, r0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:158
    powered_on = 0 != (LPC_SC->PCONP & (UINT32_C(1) << power_on_bit));
    475e:	bf9a      	itte	ls
    4760:	fa23 f000 	lsrls.w	r0, r3, r0
    4764:	f000 0001 	andls.w	r0, r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:153
  bool powered_on = false;
    4768:	2000      	movhi	r0, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:162
  }

  return powered_on;
}
    476a:	4770      	bx	lr
    476c:	400fc000 	.word	0x400fc000
    4770:	0000b533 	.word	0x0000b533

00004774 <lpc_peripheral__enable_interrupt>:
lpc_peripheral__enable_interrupt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:169
void lpc_peripheral__enable_interrupt(lpc_peripheral_e peripheral,
                                      function__void_f isr_callback,
                                      const char *name_for_rtos_trace) {
  // Sorry: Nasty hack because CAN1 shares interrupt with CAN0
  if (LPC_PERIPHERAL__CAN1 == peripheral) {
    peripheral = LPC_PERIPHERAL__CAN0;
    4774:	2859      	cmp	r0, #89	; 0x59
    4776:	bf08      	it	eq
    4778:	2019      	moveq	r0, #25
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:171
  }
  lpc_peripheral__isr_registrations[peripheral] = isr_callback;
    477a:	4b08      	ldr	r3, [pc, #32]	; (479c <lpc_peripheral__enable_interrupt+0x28>)
    477c:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:195
   *
   * Unless you really know what you are doing, never call NVIC_SetPriority()
   * with a priority other than: NVIC_SetPriority(peripheral,
   * RTOS_HIGHEST_INTERRUPT_PRIORITY + 1);
   */
  const IRQn_Type irq_type = (IRQn_Type)peripheral;
    4780:	b243      	sxtb	r3, r0
__NVIC_EnableIRQ():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1681
  if ((int32_t)(IRQn) >= 0)
    4782:	2b00      	cmp	r3, #0
    4784:	db08      	blt.n	4798 <lpc_peripheral__enable_interrupt+0x24>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1684
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    4786:	2201      	movs	r2, #1
    4788:	f000 001f 	and.w	r0, r0, #31
    478c:	fa02 f000 	lsl.w	r0, r2, r0
    4790:	095b      	lsrs	r3, r3, #5
    4792:	4a03      	ldr	r2, [pc, #12]	; (47a0 <lpc_peripheral__enable_interrupt+0x2c>)
    4794:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
lpc_peripheral__enable_interrupt():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:197
  NVIC_EnableIRQ(irq_type); // Use CMS API
}
    4798:	4770      	bx	lr
    479a:	bf00      	nop
    479c:	1000006c 	.word	0x1000006c
    47a0:	e000e100 	.word	0xe000e100

000047a4 <ssp2__dma_transfer_block>:
ssp2__dma_transfer_block():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:123
  // (uint32_t)(&(LPC_SSP2->DR)); ssp2__dma_rx->CSrcAddr =
  // (uint32_t)(&(LPC_SSP2->DR));
}

ssp_dma_error_e ssp2__dma_transfer_block(unsigned char *buffer_pointer,
                                         uint32_t num_bytes, bool is_write_op) {
    47a4:	b573      	push	{r0, r1, r4, r5, r6, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:124
  uint32_t dummyBuffer = 0xffffffff;
    47a6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:127

  // DMA is limited to 12-bit transfer size
  if (num_bytes >= 0x1000) {
    47aa:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:124
  uint32_t dummyBuffer = 0xffffffff;
    47ae:	9301      	str	r3, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:127
  if (num_bytes >= 0x1000) {
    47b0:	d236      	bcs.n	4820 <ssp2__dma_transfer_block+0x7c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:132
    return SSP_DMA__ERROR_LENGTH;
  }

  // DMA channels should not be busy
  if ((ssp2__dma_tx->CConfig & 1) || (ssp2__dma_rx->CConfig & 1)) {
    47b2:	4c1d      	ldr	r4, [pc, #116]	; (4828 <ssp2__dma_transfer_block+0x84>)
    47b4:	6923      	ldr	r3, [r4, #16]
    47b6:	07de      	lsls	r6, r3, #31
    47b8:	d434      	bmi.n	4824 <ssp2__dma_transfer_block+0x80>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:132 (discriminator 1)
    47ba:	4b1c      	ldr	r3, [pc, #112]	; (482c <ssp2__dma_transfer_block+0x88>)
    47bc:	691d      	ldr	r5, [r3, #16]
    47be:	07ed      	lsls	r5, r5, #31
    47c0:	d430      	bmi.n	4824 <ssp2__dma_transfer_block+0x80>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:182

  /**
   * Clear existing terminal count and error interrupts otherwise
   * DMA will not start.
   */
  LPC_GPDMA->IntTCClear =
    47c2:	4d1b      	ldr	r5, [pc, #108]	; (4830 <ssp2__dma_transfer_block+0x8c>)
    47c4:	2603      	movs	r6, #3
    47c6:	60ae      	str	r6, [r5, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:184
      (1 << SSP2__DMA_RX_CHANNEL) | (1 << SSP2__DMA_TX_CHANNEL);
  LPC_GPDMA->IntErrClr =
    47c8:	612e      	str	r6, [r5, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:199
   *      - Increment destination
   *
   * Note: Setting destination burst of 2 or 4 bytes makes no difference (1 <<
   * 15)
   */
  ssp2__dma_rx->CSrcAddr = (uint32_t)(&(LPC_SSP2->DR));
    47ca:	4d1a      	ldr	r5, [pc, #104]	; (4834 <ssp2__dma_transfer_block+0x90>)
    47cc:	601d      	str	r5, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:200
  if (is_write_op) {
    47ce:	b302      	cbz	r2, 4812 <ssp2__dma_transfer_block+0x6e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:201
    ssp2__dma_rx->CDestAddr = (uint32_t)(&dummyBuffer);
    47d0:	ae01      	add	r6, sp, #4
    47d2:	605e      	str	r6, [r3, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:202
    ssp2__dma_rx->CControl = num_bytes | terminal_count_interrupt_enable;
    47d4:	f041 4600 	orr.w	r6, r1, #2147483648	; 0x80000000
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:205
  } else {
    ssp2__dma_rx->CDestAddr = (uint32_t)buffer_pointer;
    ssp2__dma_rx->CControl = num_bytes | increment_destination_address |
    47d8:	60de      	str	r6, [r3, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:208
                             terminal_count_interrupt_enable;
  }
  ssp2__dma_rx->CConfig =
    47da:	f241 060f 	movw	r6, #4111	; 0x100f
    47de:	611e      	str	r6, [r3, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:220
   *      - Increment source data
   * For read operation:
   *      - Source data is buffer with 0xFF
   *      - Don't increment source data
   */
  if (is_write_op) {
    47e0:	b1da      	cbz	r2, 481a <ssp2__dma_transfer_block+0x76>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:221
    ssp2__dma_tx->CSrcAddr = (uint32_t)(buffer_pointer);
    47e2:	6020      	str	r0, [r4, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:222
    ssp2__dma_tx->CControl = num_bytes | increment_source_address;
    47e4:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:228
  } else {
    ssp2__dma_tx->CSrcAddr = (uint32_t)(&dummyBuffer);
    ssp2__dma_tx->CControl = num_bytes;
  }
  ssp2__dma_tx->CDestAddr = (uint32_t)(&(LPC_SSP2->DR));
  ssp2__dma_tx->CConfig =
    47e8:	f640 1281 	movw	r2, #2433	; 0x981
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:225
    ssp2__dma_tx->CControl = num_bytes;
    47ec:	60e1      	str	r1, [r4, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:227
  ssp2__dma_tx->CDestAddr = (uint32_t)(&(LPC_SSP2->DR));
    47ee:	6065      	str	r5, [r4, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:228
  ssp2__dma_tx->CConfig =
    47f0:	6122      	str	r2, [r4, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:236
  /**
   * Channel must be fully configured and then enabled separately.
   * Setting DMACR's Rx/Tx bits should trigger the DMA
   */
  static const uint32_t enable_rx_tx_dma_triggers = 0x03;
  LPC_SSP2->DMACR |= enable_rx_tx_dma_triggers;
    47f2:	4a11      	ldr	r2, [pc, #68]	; (4838 <ssp2__dma_transfer_block+0x94>)
    47f4:	6a51      	ldr	r1, [r2, #36]	; 0x24
    47f6:	f041 0103 	orr.w	r1, r1, #3
    47fa:	6251      	str	r1, [r2, #36]	; 0x24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:238 (discriminator 1)

  while ((ssp2__dma_rx->CControl & 0xfff)) {
    47fc:	68d8      	ldr	r0, [r3, #12]
    47fe:	f3c0 000b 	ubfx	r0, r0, #0, #12
    4802:	2800      	cmp	r0, #0
    4804:	d1fa      	bne.n	47fc <ssp2__dma_transfer_block+0x58>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:241
    ; // Poll for DMA transfer to complete
  }
  LPC_SSP2->DMACR &= ~enable_rx_tx_dma_triggers;
    4806:	6a53      	ldr	r3, [r2, #36]	; 0x24
    4808:	f023 0303 	bic.w	r3, r3, #3
    480c:	6253      	str	r3, [r2, #36]	; 0x24
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:244

  return SSP_DMA__ERROR_NONE;
    480e:	b002      	add	sp, #8
    4810:	bd70      	pop	{r4, r5, r6, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:204
    ssp2__dma_rx->CDestAddr = (uint32_t)buffer_pointer;
    4812:	6058      	str	r0, [r3, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:205
    ssp2__dma_rx->CControl = num_bytes | increment_destination_address |
    4814:	f041 4608 	orr.w	r6, r1, #2281701376	; 0x88000000
    4818:	e7de      	b.n	47d8 <ssp2__dma_transfer_block+0x34>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:224
    ssp2__dma_tx->CSrcAddr = (uint32_t)(&dummyBuffer);
    481a:	aa01      	add	r2, sp, #4
    481c:	6022      	str	r2, [r4, #0]
    481e:	e7e3      	b.n	47e8 <ssp2__dma_transfer_block+0x44>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:128
    return SSP_DMA__ERROR_LENGTH;
    4820:	2001      	movs	r0, #1
    4822:	e7f4      	b.n	480e <ssp2__dma_transfer_block+0x6a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:133
    return SSP_DMA__ERROR_BUSY;
    4824:	2002      	movs	r0, #2
    4826:	e7f2      	b.n	480e <ssp2__dma_transfer_block+0x6a>
    4828:	20080100 	.word	0x20080100
    482c:	20080120 	.word	0x20080120
    4830:	20080000 	.word	0x20080000
    4834:	400ac008 	.word	0x400ac008
    4838:	400ac000 	.word	0x400ac000

0000483c <ssp2__set_max_clock>:
ssp2__set_max_clock():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:69
void ssp2__set_max_clock(uint32_t max_clock_khz) {
    483c:	b510      	push	{r4, lr}
    483e:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:71
  const uint32_t cpu_clock_khz = clock__get_core_clock_hz() / 1000UL;
    4840:	f7fb fcec 	bl	21c <clock__get_core_clock_hz>
    4844:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    4848:	fbb0 f0f3 	udiv	r0, r0, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:70
  uint8_t divider = 2;
    484c:	2302      	movs	r3, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:74
  while (max_clock_khz < (cpu_clock_khz / divider) && divider <= 254) {
    484e:	fbb0 f2f3 	udiv	r2, r0, r3
    4852:	42a2      	cmp	r2, r4
    4854:	d802      	bhi.n	485c <ssp2__set_max_clock+0x20>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:78
  LPC_SSP2->CPSR = divider;
    4856:	4a03      	ldr	r2, [pc, #12]	; (4864 <ssp2__set_max_clock+0x28>)
    4858:	6113      	str	r3, [r2, #16]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:79
}
    485a:	bd10      	pop	{r4, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:75
    divider += 2;
    485c:	3302      	adds	r3, #2
    485e:	b2db      	uxtb	r3, r3
    4860:	e7f5      	b.n	484e <ssp2__set_max_clock+0x12>
    4862:	bf00      	nop
    4864:	400ac000 	.word	0x400ac000

00004868 <ssp2__initialize>:
ssp2__initialize():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:59
void ssp2__initialize(uint32_t max_clock_khz) {
    4868:	b510      	push	{r4, lr}
    486a:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:60
  lpc_peripheral__turn_on_power_to(LPC_PERIPHERAL__SSP2);
    486c:	2024      	movs	r0, #36	; 0x24
    486e:	f7ff ff5d 	bl	472c <lpc_peripheral__turn_on_power_to>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:62
  LPC_SSP2->CR0 = 7;        // 8-bit mode
    4872:	4b0b      	ldr	r3, [pc, #44]	; (48a0 <ssp2__initialize+0x38>)
    4874:	2207      	movs	r2, #7
    4876:	601a      	str	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:63
  LPC_SSP2->CR1 = (1 << 1); // Enable SSP as Master
    4878:	2202      	movs	r2, #2
    487a:	605a      	str	r2, [r3, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:64
  ssp2__set_max_clock(max_clock_khz);
    487c:	4620      	mov	r0, r4
    487e:	f7ff ffdd 	bl	483c <ssp2__set_max_clock>
ssp2__dma_init():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:104
  lpc_peripheral__turn_on_power_to(LPC_PERIPHERAL__GPDMA);
    4882:	201a      	movs	r0, #26
    4884:	f7ff ff52 	bl	472c <lpc_peripheral__turn_on_power_to>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:107
  LPC_GPDMA->Config = enable_bitmask;
    4888:	4b06      	ldr	r3, [pc, #24]	; (48a4 <ssp2__initialize+0x3c>)
    488a:	2201      	movs	r2, #1
    488c:	631a      	str	r2, [r3, #48]	; 0x30
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:108
  while (!(LPC_GPDMA->Config & enable_bitmask)) {
    488e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
    4890:	07d2      	lsls	r2, r2, #31
    4892:	d5fc      	bpl.n	488e <ssp2__initialize+0x26>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:113
  ssp2__dma_rx->CLLI = 0;
    4894:	4a04      	ldr	r2, [pc, #16]	; (48a8 <ssp2__initialize+0x40>)
    4896:	2300      	movs	r3, #0
    4898:	6093      	str	r3, [r2, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:114
  ssp2__dma_tx->CLLI = 0;
    489a:	f842 3c18 	str.w	r3, [r2, #-24]
ssp2__initialize():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:67
}
    489e:	bd10      	pop	{r4, pc}
    48a0:	400ac000 	.word	0x400ac000
    48a4:	20080000 	.word	0x20080000
    48a8:	20080120 	.word	0x20080120

000048ac <ssp2__exchange_byte>:
ssp2__exchange_byte():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:82
  LPC_SSP2->DR = byte_to_transmit;
    48ac:	4b03      	ldr	r3, [pc, #12]	; (48bc <ssp2__exchange_byte+0x10>)
    48ae:	6098      	str	r0, [r3, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:84 (discriminator 1)
  while (LPC_SSP2->SR & (1 << 4)) {
    48b0:	68da      	ldr	r2, [r3, #12]
    48b2:	06d2      	lsls	r2, r2, #27
    48b4:	d4fc      	bmi.n	48b0 <ssp2__exchange_byte+0x4>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:88
  return (uint8_t)(LPC_SSP2->DR & 0xFF);
    48b6:	6898      	ldr	r0, [r3, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:89
}
    48b8:	b2c0      	uxtb	r0, r0
    48ba:	4770      	bx	lr
    48bc:	400ac000 	.word	0x400ac000

000048c0 <ssp2__dma_write_block>:
ssp2__dma_write_block():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:94
  ssp2__dma_transfer_block((unsigned char *)output_block, number_of_bytes,
    48c0:	2201      	movs	r2, #1
    48c2:	f7ff bf6f 	b.w	47a4 <ssp2__dma_transfer_block>

000048c6 <ssp2__dma_read_block>:
ssp2__dma_read_block():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:100
  ssp2__dma_transfer_block(input_block, number_of_bytes, !is_write_operation);
    48c6:	2200      	movs	r2, #0
    48c8:	f7ff bf6c 	b.w	47a4 <ssp2__dma_transfer_block>

000048cc <uart__isr_common>:
uart__isr_common():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:146
    receive_data_available = (2 << 0),
    receive_data_available_timeout = (6 << 0),
  } interrupt_reason_e;

  const interrupt_reason_e interrupt_reason =
      (interrupt_reason_e)((uart_type->registers->IIR & 0xE) >> 1);
    48cc:	6802      	ldr	r2, [r0, #0]
    48ce:	6893      	ldr	r3, [r2, #8]
    48d0:	f3c3 0342 	ubfx	r3, r3, #1, #3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:148

  switch (interrupt_reason) {
    48d4:	2b02      	cmp	r3, #2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:135
static void uart__isr_common(uart_s *uart_type) {
    48d6:	b573      	push	{r0, r1, r4, r5, r6, lr}
    48d8:	4606      	mov	r6, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:148
  switch (interrupt_reason) {
    48da:	d023      	beq.n	4924 <uart__isr_common+0x58>
    48dc:	2b06      	cmp	r3, #6
    48de:	d021      	beq.n	4924 <uart__isr_common+0x58>
    48e0:	2b01      	cmp	r3, #1
    48e2:	d134      	bne.n	494e <uart__isr_common+0x82>
uart__load_pending_transmit_bytes():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:77
  char transmit_byte = 0;
    48e4:	2400      	movs	r4, #0
    48e6:	f88d 4003 	strb.w	r4, [sp, #3]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:79
  BaseType_t higher_priority_task_woke = 0;
    48ea:	9401      	str	r4, [sp, #4]
    48ec:	2510      	movs	r5, #16
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:82
    if (xQueueReceiveFromISR(uart_type->queue_transmit, &transmit_byte,
    48ee:	aa01      	add	r2, sp, #4
    48f0:	f10d 0103 	add.w	r1, sp, #3
    48f4:	68b0      	ldr	r0, [r6, #8]
    48f6:	f7fe fd61 	bl	33bc <xQueueReceiveFromISR>
    48fa:	b148      	cbz	r0, 4910 <uart__isr_common+0x44>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:84
      uart_type->registers->THR = transmit_byte;
    48fc:	6833      	ldr	r3, [r6, #0]
    48fe:	f89d 2003 	ldrb.w	r2, [sp, #3]
    4902:	701a      	strb	r2, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:85
      if (higher_priority_task_woke) {
    4904:	9b01      	ldr	r3, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:86
        context_switch_required = true;
    4906:	2b00      	cmp	r3, #0
    4908:	bf18      	it	ne
    490a:	2401      	movne	r4, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:81
  for (size_t counter = 0; counter < hw_fifo_size; counter++) {
    490c:	3d01      	subs	r5, #1
    490e:	d1ee      	bne.n	48ee <uart__isr_common+0x22>
uart__isr_common():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:165
    (void)unused_to_clear_isr;
    break;
  }
  }

  portEND_SWITCHING_ISR(context_switch_required);
    4910:	b30c      	cbz	r4, 4956 <uart__isr_common+0x8a>
    4912:	4b12      	ldr	r3, [pc, #72]	; (495c <uart__isr_common+0x90>)
    4914:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    4918:	601a      	str	r2, [r3, #0]
    491a:	f3bf 8f4f 	dsb	sy
    491e:	f3bf 8f6f 	isb	sy
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:166
}
    4922:	e018      	b.n	4956 <uart__isr_common+0x8a>
uart__clear_receive_fifo():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:100
  BaseType_t higher_priority_task_woke = 0;
    4924:	2400      	movs	r4, #0
    4926:	9401      	str	r4, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:107
  while (uart_type->registers->LSR & char_available_bitmask) {
    4928:	6833      	ldr	r3, [r6, #0]
    492a:	7d1a      	ldrb	r2, [r3, #20]
    492c:	07d2      	lsls	r2, r2, #31
    492e:	d5ef      	bpl.n	4910 <uart__isr_common+0x44>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:108
    const char received_byte = uart_type->registers->RBR;
    4930:	781b      	ldrb	r3, [r3, #0]
    4932:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:109
    xQueueSendFromISR(uart_type->queue_receive, &received_byte,
    4936:	aa01      	add	r2, sp, #4
    4938:	2300      	movs	r3, #0
    493a:	f10d 0103 	add.w	r1, sp, #3
    493e:	68f0      	ldr	r0, [r6, #12]
    4940:	f7fe fb2e 	bl	2fa0 <xQueueGenericSendFromISR>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:112
    if (higher_priority_task_woke) {
    4944:	9b01      	ldr	r3, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:113
      context_switch_required = true;
    4946:	2b00      	cmp	r3, #0
    4948:	bf18      	it	ne
    494a:	2401      	movne	r4, #1
    494c:	e7ec      	b.n	4928 <uart__isr_common+0x5c>
uart__isr_common():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:159
    volatile const uint32_t unused_to_clear_isr = uart_type->registers->LSR;
    494e:	7d13      	ldrb	r3, [r2, #20]
    4950:	b2db      	uxtb	r3, r3
    4952:	9301      	str	r3, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:160
    (void)unused_to_clear_isr;
    4954:	9b01      	ldr	r3, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:166
}
    4956:	b002      	add	sp, #8
    4958:	bd70      	pop	{r4, r5, r6, pc}
    495a:	bf00      	nop
    495c:	e000ed04 	.word	0xe000ed04

00004960 <uart3_isr>:
uart3_isr():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:133
static void uart3_isr(void) { uart__isr_common(&uarts[UART__3]); }
    4960:	4801      	ldr	r0, [pc, #4]	; (4968 <uart3_isr+0x8>)
    4962:	f7ff bfb3 	b.w	48cc <uart__isr_common>
    4966:	bf00      	nop
    4968:	10000140 	.word	0x10000140

0000496c <uart2_isr>:
uart2_isr():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:132
static void uart2_isr(void) { uart__isr_common(&uarts[UART__2]); }
    496c:	4801      	ldr	r0, [pc, #4]	; (4974 <uart2_isr+0x8>)
    496e:	f7ff bfad 	b.w	48cc <uart__isr_common>
    4972:	bf00      	nop
    4974:	10000130 	.word	0x10000130

00004978 <uart1_isr>:
uart1_isr():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:131
static void uart1_isr(void) { uart__isr_common(&uarts[UART__1]); }
    4978:	4801      	ldr	r0, [pc, #4]	; (4980 <uart1_isr+0x8>)
    497a:	f7ff bfa7 	b.w	48cc <uart__isr_common>
    497e:	bf00      	nop
    4980:	10000120 	.word	0x10000120

00004984 <uart0_isr>:
uart0_isr():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:130
static void uart0_isr(void) { uart__isr_common(&uarts[UART__0]); }
    4984:	4801      	ldr	r0, [pc, #4]	; (498c <uart0_isr+0x8>)
    4986:	f7ff bfa1 	b.w	48cc <uart__isr_common>
    498a:	bf00      	nop
    498c:	10000110 	.word	0x10000110

00004990 <uart__init>:
uart__init():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:175
 *                      P U B L I C    F U N C T I O N S
 *
 ******************************************************************************/

void uart__init(uart_e uart, uint32_t peripheral_clock, uint32_t baud_rate) {
  lpc_peripheral__turn_on_power_to(uart_peripheral_ids[uart]);
    4990:	4b15      	ldr	r3, [pc, #84]	; (49e8 <uart__init+0x58>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:174
void uart__init(uart_e uart, uint32_t peripheral_clock, uint32_t baud_rate) {
    4992:	b570      	push	{r4, r5, r6, lr}
    4994:	4616      	mov	r6, r2
    4996:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:175
  lpc_peripheral__turn_on_power_to(uart_peripheral_ids[uart]);
    4998:	5c18      	ldrb	r0, [r3, r0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:174
void uart__init(uart_e uart, uint32_t peripheral_clock, uint32_t baud_rate) {
    499a:	460c      	mov	r4, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:179

  const float roundup_offset = 0.5;
  const uint16_t divider =
      (uint16_t)((peripheral_clock / (16 * baud_rate)) + roundup_offset);
    499c:	0136      	lsls	r6, r6, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:175
  lpc_peripheral__turn_on_power_to(uart_peripheral_ids[uart]);
    499e:	f7ff fec5 	bl	472c <lpc_peripheral__turn_on_power_to>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:179
      (uint16_t)((peripheral_clock / (16 * baud_rate)) + roundup_offset);
    49a2:	fbb4 f3f6 	udiv	r3, r4, r6
    49a6:	ee07 3a90 	vmov	s15, r3
    49aa:	eef8 7a67 	vcvt.f32.u32	s15, s15
    49ae:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
    49b2:	ee77 7a87 	vadd.f32	s15, s15, s14
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:183
  const uint8_t dlab_bit = (1 << 7);
  const uint8_t eight_bit_datalen = 3;

  lpc_uart *uart_regs = uarts[uart].registers;
    49b6:	012d      	lsls	r5, r5, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:178
  const uint16_t divider =
    49b8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:183
  lpc_uart *uart_regs = uarts[uart].registers;
    49bc:	4a0b      	ldr	r2, [pc, #44]	; (49ec <uart__init+0x5c>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:178
  const uint16_t divider =
    49be:	ee17 3a90 	vmov	r3, s15
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:183
  lpc_uart *uart_regs = uarts[uart].registers;
    49c2:	5952      	ldr	r2, [r2, r5]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:178
  const uint16_t divider =
    49c4:	b29b      	uxth	r3, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:185

  uart_regs->LCR = dlab_bit; // Set DLAB bit to access DLM & DLL
    49c6:	2180      	movs	r1, #128	; 0x80
    49c8:	7311      	strb	r1, [r2, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:186
  uart_regs->DLM = (divider >> 8) & 0xFF;
    49ca:	0a19      	lsrs	r1, r3, #8
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:187
  uart_regs->DLL = (divider >> 0) & 0xFF;
    49cc:	b2db      	uxtb	r3, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:186
  uart_regs->DLM = (divider >> 8) & 0xFF;
    49ce:	7111      	strb	r1, [r2, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:187
  uart_regs->DLL = (divider >> 0) & 0xFF;
    49d0:	7013      	strb	r3, [r2, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:193

  /* Bootloader uses Uart0 fractional dividers and can wreck havoc in our baud
   * rate code, so re-initialize it Lesson learned: DO NOT RELY ON RESET VALUES
   */
  const uint32_t default_reset_fdr_value = (1 << 4);
  uart_regs->FDR = default_reset_fdr_value;
    49d2:	2310      	movs	r3, #16
    49d4:	f882 3028 	strb.w	r3, [r2, #40]	; 0x28
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:199

  // Important: Set FCR value before enable UART by writing the LCR register
  // Important: FCR is a write-only register, and we cannot use R/M/W such as |=
  const uint8_t enable_fifo = (1 << 0); // Must be done!
  const uint8_t eight_char_timeout = (2 << 6);
  uart_regs->FCR = enable_fifo;
    49d8:	2301      	movs	r3, #1
    49da:	7213      	strb	r3, [r2, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:200
  uart_regs->FCR = enable_fifo | eight_char_timeout;
    49dc:	2381      	movs	r3, #129	; 0x81
    49de:	7213      	strb	r3, [r2, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:202

  uart_regs->LCR = eight_bit_datalen; // DLAB is reset back to zero also
    49e0:	2303      	movs	r3, #3
    49e2:	7313      	strb	r3, [r2, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:203
}
    49e4:	bd70      	pop	{r4, r5, r6, pc}
    49e6:	bf00      	nop
    49e8:	0000b5b8 	.word	0x0000b5b8
    49ec:	10000110 	.word	0x10000110

000049f0 <uart__is_initialized>:
uart__is_initialized():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:206

bool uart__is_initialized(uart_e uart) {
  return lpc_peripheral__is_powered_on(uart_peripheral_ids[uart]) &&
    49f0:	4b07      	ldr	r3, [pc, #28]	; (4a10 <uart__is_initialized+0x20>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:205
bool uart__is_initialized(uart_e uart) {
    49f2:	b510      	push	{r4, lr}
    49f4:	4604      	mov	r4, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:206
  return lpc_peripheral__is_powered_on(uart_peripheral_ids[uart]) &&
    49f6:	5c18      	ldrb	r0, [r3, r0]
    49f8:	f7ff feaa 	bl	4750 <lpc_peripheral__is_powered_on>
    49fc:	b130      	cbz	r0, 4a0c <uart__is_initialized+0x1c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:207 (discriminator 1)
         (0 != uarts[uart].registers->LCR);
    49fe:	0124      	lsls	r4, r4, #4
    4a00:	4b04      	ldr	r3, [pc, #16]	; (4a14 <uart__is_initialized+0x24>)
    4a02:	591b      	ldr	r3, [r3, r4]
    4a04:	7b18      	ldrb	r0, [r3, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:206 (discriminator 1)
  return lpc_peripheral__is_powered_on(uart_peripheral_ids[uart]) &&
    4a06:	3000      	adds	r0, #0
    4a08:	bf18      	it	ne
    4a0a:	2001      	movne	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:208 (discriminator 6)
}
    4a0c:	bd10      	pop	{r4, pc}
    4a0e:	bf00      	nop
    4a10:	0000b5b8 	.word	0x0000b5b8
    4a14:	10000110 	.word	0x10000110

00004a18 <uart__is_transmit_queue_initialized>:
uart__is_transmit_queue_initialized():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:211

bool uart__is_transmit_queue_initialized(uart_e uart) {
  return (NULL != uarts[uart].queue_transmit);
    4a18:	4b03      	ldr	r3, [pc, #12]	; (4a28 <uart__is_transmit_queue_initialized+0x10>)
    4a1a:	eb03 1000 	add.w	r0, r3, r0, lsl #4
    4a1e:	6880      	ldr	r0, [r0, #8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:212
}
    4a20:	3000      	adds	r0, #0
    4a22:	bf18      	it	ne
    4a24:	2001      	movne	r0, #1
    4a26:	4770      	bx	lr
    4a28:	10000110 	.word	0x10000110

00004a2c <uart__is_receive_queue_initialized>:
uart__is_receive_queue_initialized():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:215

bool uart__is_receive_queue_initialized(uart_e uart) {
  return (NULL != uarts[uart].queue_receive);
    4a2c:	4b03      	ldr	r3, [pc, #12]	; (4a3c <uart__is_receive_queue_initialized+0x10>)
    4a2e:	eb03 1000 	add.w	r0, r3, r0, lsl #4
    4a32:	68c0      	ldr	r0, [r0, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:216
}
    4a34:	3000      	adds	r0, #0
    4a36:	bf18      	it	ne
    4a38:	2001      	movne	r0, #1
    4a3a:	4770      	bx	lr
    4a3c:	10000110 	.word	0x10000110

00004a40 <uart__enable_queues>:
uart__enable_queues():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:219

bool uart__enable_queues(uart_e uart, QueueHandle_t queue_receive,
                         QueueHandle_t queue_transmit) {
    4a40:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    4a44:	4607      	mov	r7, r0
    4a46:	4689      	mov	r9, r1
    4a48:	4690      	mov	r8, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:224
  bool status = false;
  uart_s *uart_type = &uarts[uart];

  // We can only access UART registers after its power has been enabled
  if (uart__is_initialized(uart)) {
    4a4a:	f7ff ffd1 	bl	49f0 <uart__is_initialized>
    4a4e:	4606      	mov	r6, r0
    4a50:	b918      	cbnz	r0, 4a5a <uart__enable_queues+0x1a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:220
  bool status = false;
    4a52:	2600      	movs	r6, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:249
      uart__enable_receive_and_transmit_interrupts(uart);
    }
  }

  return status;
}
    4a54:	4630      	mov	r0, r6
    4a56:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
uart__is_receive_queue_initialized():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:215
  return (NULL != uarts[uart].queue_receive);
    4a5a:	4c12      	ldr	r4, [pc, #72]	; (4aa4 <uart__enable_queues+0x64>)
    4a5c:	013d      	lsls	r5, r7, #4
    4a5e:	1963      	adds	r3, r4, r5
uart__enable_queues():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:226
    if (!uart__is_receive_queue_initialized(uart) && NULL != queue_receive) {
    4a60:	68da      	ldr	r2, [r3, #12]
    4a62:	b922      	cbnz	r2, 4a6e <uart__enable_queues+0x2e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:226 (discriminator 1)
    4a64:	f1b9 0f00 	cmp.w	r9, #0
    4a68:	d001      	beq.n	4a6e <uart__enable_queues+0x2e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:227
      uart_type->queue_receive = queue_receive;
    4a6a:	f8c3 900c 	str.w	r9, [r3, #12]
uart__is_transmit_queue_initialized():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:211
  return (NULL != uarts[uart].queue_transmit);
    4a6e:	1963      	adds	r3, r4, r5
uart__enable_queues():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:233
    if (!uart__is_transmit_queue_initialized(uart) && NULL != queue_transmit) {
    4a70:	689a      	ldr	r2, [r3, #8]
    4a72:	b922      	cbnz	r2, 4a7e <uart__enable_queues+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:233 (discriminator 1)
    4a74:	f1b8 0f00 	cmp.w	r8, #0
    4a78:	d001      	beq.n	4a7e <uart__enable_queues+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:234
      uart_type->queue_transmit = queue_transmit;
    4a7a:	f8c3 8008 	str.w	r8, [r3, #8]
uart__is_receive_queue_initialized():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:215
  return (NULL != uarts[uart].queue_receive);
    4a7e:	1963      	adds	r3, r4, r5
uart__enable_queues():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:241
    status = uart__is_receive_queue_initialized(uart) &&
    4a80:	68da      	ldr	r2, [r3, #12]
    4a82:	2a00      	cmp	r2, #0
    4a84:	d0e5      	beq.n	4a52 <uart__enable_queues+0x12>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:243
    if (status) {
    4a86:	689a      	ldr	r2, [r3, #8]
    4a88:	2a00      	cmp	r2, #0
    4a8a:	d0e2      	beq.n	4a52 <uart__enable_queues+0x12>
uart__enable_receive_and_transmit_interrupts():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:122
  lpc_peripheral__enable_interrupt(uart_peripheral_ids[uart], uart__isrs[uart],
    4a8c:	685a      	ldr	r2, [r3, #4]
    4a8e:	4b06      	ldr	r3, [pc, #24]	; (4aa8 <uart__enable_queues+0x68>)
    4a90:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
    4a94:	4b05      	ldr	r3, [pc, #20]	; (4aac <uart__enable_queues+0x6c>)
    4a96:	5dd8      	ldrb	r0, [r3, r7]
    4a98:	f7ff fe6c 	bl	4774 <lpc_peripheral__enable_interrupt>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:127
  uart_type->registers->IER = enable_rx_tx_interrupts;
    4a9c:	5963      	ldr	r3, [r4, r5]
    4a9e:	2207      	movs	r2, #7
    4aa0:	605a      	str	r2, [r3, #4]
    4aa2:	e7d7      	b.n	4a54 <uart__enable_queues+0x14>
    4aa4:	10000110 	.word	0x10000110
    4aa8:	0000b5a8 	.word	0x0000b5a8
    4aac:	0000b5b8 	.word	0x0000b5b8

00004ab0 <uart__polled_put>:
uart__polled_put():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:282
  }

  return status;
}

bool uart__polled_put(uart_e uart, char output_byte) {
    4ab0:	b538      	push	{r3, r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:284
  bool status = false;
  lpc_uart *uart_regs = uarts[uart].registers;
    4ab2:	4a07      	ldr	r2, [pc, #28]	; (4ad0 <uart__polled_put+0x20>)
    4ab4:	0103      	lsls	r3, r0, #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:282
bool uart__polled_put(uart_e uart, char output_byte) {
    4ab6:	460d      	mov	r5, r1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:284
  lpc_uart *uart_regs = uarts[uart].registers;
    4ab8:	58d4      	ldr	r4, [r2, r3]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:286

  if (uart__is_initialized(uart)) {
    4aba:	f7ff ff99 	bl	49f0 <uart__is_initialized>
    4abe:	b130      	cbz	r0, 4ace <uart__polled_put+0x1e>
uart__wait_for_transmit_to_complete():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:70
  while (!(uart_regs->LSR & transmitter_empty)) {
    4ac0:	7d23      	ldrb	r3, [r4, #20]
    4ac2:	069a      	lsls	r2, r3, #26
    4ac4:	d5fc      	bpl.n	4ac0 <uart__polled_put+0x10>
uart__polled_put():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:291
    status = true;

    // Wait for any prior transmission to complete
    uart__wait_for_transmit_to_complete(uart_regs);
    uart_regs->THR = output_byte;
    4ac6:	7025      	strb	r5, [r4, #0]
uart__wait_for_transmit_to_complete():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:70
  while (!(uart_regs->LSR & transmitter_empty)) {
    4ac8:	7d23      	ldrb	r3, [r4, #20]
    4aca:	069b      	lsls	r3, r3, #26
    4acc:	d5fc      	bpl.n	4ac8 <uart__polled_put+0x18>
uart__polled_put():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:296
    uart__wait_for_transmit_to_complete(uart_regs);
  }

  return status;
}
    4ace:	bd38      	pop	{r3, r4, r5, pc}
    4ad0:	10000110 	.word	0x10000110

00004ad4 <uart__get>:
uart__get():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:298

bool uart__get(uart_e uart, char *input_byte, uint32_t timeout_ms) {
    4ad4:	b570      	push	{r4, r5, r6, lr}
    4ad6:	4604      	mov	r4, r0
    4ad8:	460e      	mov	r6, r1
    4ada:	4615      	mov	r5, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:301
  bool status = false;
  const bool rtos_is_running =
      taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    4adc:	f7ff f946 	bl	3d6c <xTaskGetSchedulerState>
uart__is_receive_queue_initialized():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:215
  return (NULL != uarts[uart].queue_receive);
    4ae0:	4b0e      	ldr	r3, [pc, #56]	; (4b1c <uart__get+0x48>)
    4ae2:	eb03 1304 	add.w	r3, r3, r4, lsl #4
    4ae6:	68dc      	ldr	r4, [r3, #12]
uart__get():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:307

  /* If a user calls this function without the RTOS running, we fail gracefully.
   * We do not desire to perform polling because that would involve time keeping
   * without an RTOS which increases the driver complexity.
   */
  if (uart__is_receive_queue_initialized(uart) && rtos_is_running) {
    4ae8:	b1b4      	cbz	r4, 4b18 <uart__get+0x44>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:307 (discriminator 1)
    4aea:	2802      	cmp	r0, #2
    4aec:	d114      	bne.n	4b18 <uart__get+0x44>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:308
    status = xQueueReceive(uarts[uart].queue_receive, input_byte,
    4aee:	1c6b      	adds	r3, r5, #1
    4af0:	d009      	beq.n	4b06 <uart__get+0x32>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:309 (discriminator 1)
                           RTOS_MS_TO_TICKS(timeout_ms));
    4af2:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
    4af6:	fba5 0100 	umull	r0, r1, r5, r0
    4afa:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    4afe:	2300      	movs	r3, #0
    4b00:	f000 fb4e 	bl	51a0 <__aeabi_uldivmod>
    4b04:	4605      	mov	r5, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:308 (discriminator 4)
    status = xQueueReceive(uarts[uart].queue_receive, input_byte,
    4b06:	462a      	mov	r2, r5
    4b08:	4631      	mov	r1, r6
    4b0a:	4620      	mov	r0, r4
    4b0c:	f7fe faf8 	bl	3100 <xQueueReceive>
    4b10:	3000      	adds	r0, #0
    4b12:	bf18      	it	ne
    4b14:	2001      	movne	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:313
  }

  return status;
}
    4b16:	bd70      	pop	{r4, r5, r6, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:299
  bool status = false;
    4b18:	2000      	movs	r0, #0
    4b1a:	e7fc      	b.n	4b16 <uart__get+0x42>
    4b1c:	10000110 	.word	0x10000110

00004b20 <uart__polled_get>:
uart__polled_get():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:251
bool uart__polled_get(uart_e uart, char *input_byte) {
    4b20:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    4b24:	4605      	mov	r5, r0
    4b26:	460e      	mov	r6, r1
uart__is_receive_queue_initialized():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:215
  return (NULL != uarts[uart].queue_receive);
    4b28:	4c11      	ldr	r4, [pc, #68]	; (4b70 <uart__polled_get+0x50>)
uart__polled_get():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:255
      taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    4b2a:	f7ff f91f 	bl	3d6c <xTaskGetSchedulerState>
uart__is_receive_queue_initialized():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:215
  return (NULL != uarts[uart].queue_receive);
    4b2e:	012f      	lsls	r7, r5, #4
    4b30:	19e3      	adds	r3, r4, r7
uart__polled_get():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:255
      taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    4b32:	4681      	mov	r9, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:258
  if (uart__is_initialized(uart)) {
    4b34:	4628      	mov	r0, r5
uart__is_receive_queue_initialized():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:215
  return (NULL != uarts[uart].queue_receive);
    4b36:	f8d3 800c 	ldr.w	r8, [r3, #12]
uart__polled_get():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:258
  if (uart__is_initialized(uart)) {
    4b3a:	f7ff ff59 	bl	49f0 <uart__is_initialized>
    4b3e:	b198      	cbz	r0, 4b68 <uart__polled_get+0x48>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:267
    if (rtos_is_running && queue_is_enabled) {
    4b40:	f1b9 0f02 	cmp.w	r9, #2
    4b44:	d10a      	bne.n	4b5c <uart__polled_get+0x3c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:267 (discriminator 1)
    4b46:	f1b8 0f00 	cmp.w	r8, #0
    4b4a:	d007      	beq.n	4b5c <uart__polled_get+0x3c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:268
      status = uart__get(uart, input_byte, UINT32_MAX);
    4b4c:	4631      	mov	r1, r6
    4b4e:	4628      	mov	r0, r5
    4b50:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:280
}
    4b54:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:268
      status = uart__get(uart, input_byte, UINT32_MAX);
    4b58:	f7ff bfbc 	b.w	4ad4 <uart__get>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:270
      lpc_uart *uart_regs = uarts[uart].registers;
    4b5c:	59e3      	ldr	r3, [r4, r7]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:273 (discriminator 1)
      while (!(uart_regs->LSR & char_available_bitmask)) {
    4b5e:	7d1a      	ldrb	r2, [r3, #20]
    4b60:	07d2      	lsls	r2, r2, #31
    4b62:	d5fc      	bpl.n	4b5e <uart__polled_get+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:275
      *input_byte = uart_regs->RBR;
    4b64:	781b      	ldrb	r3, [r3, #0]
    4b66:	7033      	strb	r3, [r6, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:280
}
    4b68:	2000      	movs	r0, #0
    4b6a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    4b6e:	bf00      	nop
    4b70:	10000110 	.word	0x10000110

00004b74 <uart__put>:
uart__put():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:315

bool uart__put(uart_e uart, char output_byte, uint32_t timeout_ms) {
    4b74:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    4b76:	4605      	mov	r5, r0
uart__is_transmit_queue_initialized():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:211
  return (NULL != uarts[uart].queue_transmit);
    4b78:	4e1c      	ldr	r6, [pc, #112]	; (4bec <uart__put+0x78>)
uart__put():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:315
bool uart__put(uart_e uart, char output_byte, uint32_t timeout_ms) {
    4b7a:	f88d 1007 	strb.w	r1, [sp, #7]
uart__is_transmit_queue_initialized():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:211
  return (NULL != uarts[uart].queue_transmit);
    4b7e:	012d      	lsls	r5, r5, #4
uart__put():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:315
bool uart__put(uart_e uart, char output_byte, uint32_t timeout_ms) {
    4b80:	4617      	mov	r7, r2
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:318
  bool status = false;
  const bool rtos_is_running =
      taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    4b82:	f7ff f8f3 	bl	3d6c <xTaskGetSchedulerState>
uart__is_transmit_queue_initialized():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:211
  return (NULL != uarts[uart].queue_transmit);
    4b86:	1973      	adds	r3, r6, r5
    4b88:	689c      	ldr	r4, [r3, #8]
uart__put():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:320

  if (uart__is_transmit_queue_initialized(uart) && rtos_is_running) {
    4b8a:	b354      	cbz	r4, 4be2 <uart__put+0x6e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:320 (discriminator 1)
    4b8c:	2802      	cmp	r0, #2
    4b8e:	d12b      	bne.n	4be8 <uart__put+0x74>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:322
    // Deposit to the transmit queue for now
    status = xQueueSend(uarts[uart].queue_transmit, &output_byte,
    4b90:	1c79      	adds	r1, r7, #1
    4b92:	d009      	beq.n	4ba8 <uart__put+0x34>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:322 (discriminator 1)
    4b94:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
    4b98:	fba7 0100 	umull	r0, r1, r7, r0
    4b9c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    4ba0:	2300      	movs	r3, #0
    4ba2:	f000 fafd 	bl	51a0 <__aeabi_uldivmod>
    4ba6:	4607      	mov	r7, r0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:322 (discriminator 4)
    4ba8:	2300      	movs	r3, #0
    4baa:	463a      	mov	r2, r7
    4bac:	f10d 0107 	add.w	r1, sp, #7
    4bb0:	4620      	mov	r0, r4
    4bb2:	f7fe f931 	bl	2e18 <xQueueGenericSend>
    4bb6:	1c04      	adds	r4, r0, #0
    4bb8:	bf18      	it	ne
    4bba:	2401      	movne	r4, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:330 (discriminator 4)
    /* 'Transmit Complete Interrupt' may have already fired when we get here, so
     * if there is no further pending data to be sent, it will not fire again to
     * send any data. Hence, we check here in a critical section if transmit
     * holder register is empty, and kick-off the tranmisssion
     */
    portENTER_CRITICAL();
    4bbc:	f7fd fd9a 	bl	26f4 <vPortEnterCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:332 (discriminator 4)
    {
      lpc_uart *uart_regs = uarts[uart].registers;
    4bc0:	1973      	adds	r3, r6, r5
    4bc2:	5975      	ldr	r5, [r6, r5]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:335 (discriminator 4)
      const uint32_t uart_tx_is_idle = (1 << 6);

      if (uart_regs->LSR & uart_tx_is_idle) {
    4bc4:	7d2a      	ldrb	r2, [r5, #20]
    4bc6:	0652      	lsls	r2, r2, #25
    4bc8:	d509      	bpl.n	4bde <uart__put+0x6a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:340
        /* Receive oldest char from the queue to send
         * Since we are inside a critical section, we use FromISR() FreeRTOS API
         * variant
         */
        if (xQueueReceiveFromISR(uarts[uart].queue_transmit, &output_byte,
    4bca:	2200      	movs	r2, #0
    4bcc:	f10d 0107 	add.w	r1, sp, #7
    4bd0:	6898      	ldr	r0, [r3, #8]
    4bd2:	f7fe fbf3 	bl	33bc <xQueueReceiveFromISR>
    4bd6:	b110      	cbz	r0, 4bde <uart__put+0x6a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:342
                                 NULL)) {
          uart_regs->THR = output_byte;
    4bd8:	f89d 3007 	ldrb.w	r3, [sp, #7]
    4bdc:	702b      	strb	r3, [r5, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:346
        }
      }
    }
    portEXIT_CRITICAL();
    4bde:	f7fd fdab 	bl	2738 <vPortExitCritical>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:350
  }

  return status;
}
    4be2:	4620      	mov	r0, r4
    4be4:	b003      	add	sp, #12
    4be6:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:316
  bool status = false;
    4be8:	2400      	movs	r4, #0
    4bea:	e7fa      	b.n	4be2 <uart__put+0x6e>
    4bec:	10000110 	.word	0x10000110

00004bf0 <producer_task>:
producer_task():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:60
static void create_watchdog_task() {
  xTaskCreate(watchdog_task, "Watchdog", (512U * 8) / sizeof(void *), NULL,
              PRIORITY_HIGH, NULL);
}

static void producer_task(void *params) {
    4bf0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:114
    }
    accel_data_avg.x = x / 100;
    accel_data_avg.y = x / 100;
    accel_data_avg.z = x / 100;

    if (xQueueSend(sd_card_Q, &accel_data_avg, 0)) {
    4bf4:	f8df 8064 	ldr.w	r8, [pc, #100]	; 4c5c <producer_task+0x6c>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:116
    }
    xEventGroupSetBits(Check_In, 1 << 0);
    4bf8:	4f17      	ldr	r7, [pc, #92]	; (4c58 <producer_task+0x68>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:60
static void producer_task(void *params) {
    4bfa:	f5ad 7d18 	sub.w	sp, sp, #608	; 0x260
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:102
    for (int i = 0; i < 100; i++) {
    4bfe:	2500      	movs	r5, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:98
    int16_t x = 0;
    4c00:	462c      	mov	r4, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:104
      accel_data[i] = acceleration__get_data();
    4c02:	ae02      	add	r6, sp, #8
    4c04:	f04f 0a06 	mov.w	sl, #6
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:104 (discriminator 3)
    4c08:	fb0a f905 	mul.w	r9, sl, r5
    4c0c:	eb06 0009 	add.w	r0, r6, r9
    4c10:	f7fb fc07 	bl	422 <acceleration__get_data>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:105 (discriminator 3)
      x += accel_data[i].x;
    4c14:	f839 3006 	ldrh.w	r3, [r9, r6]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:108 (discriminator 3)
      vTaskDelay(1);
    4c18:	2001      	movs	r0, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:102 (discriminator 3)
    for (int i = 0; i < 100; i++) {
    4c1a:	3501      	adds	r5, #1
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:105 (discriminator 3)
      x += accel_data[i].x;
    4c1c:	441c      	add	r4, r3
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:108 (discriminator 3)
      vTaskDelay(1);
    4c1e:	f7fe ff13 	bl	3a48 <vTaskDelay>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:102 (discriminator 3)
    for (int i = 0; i < 100; i++) {
    4c22:	2d64      	cmp	r5, #100	; 0x64
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:105 (discriminator 3)
      x += accel_data[i].x;
    4c24:	b224      	sxth	r4, r4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:102 (discriminator 3)
    for (int i = 0; i < 100; i++) {
    4c26:	d1ef      	bne.n	4c08 <producer_task+0x18>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:114
    if (xQueueSend(sd_card_Q, &accel_data_avg, 0)) {
    4c28:	2300      	movs	r3, #0
    4c2a:	461a      	mov	r2, r3
    4c2c:	4669      	mov	r1, sp
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:110
    accel_data_avg.x = x / 100;
    4c2e:	fb94 f4f5 	sdiv	r4, r4, r5
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:114
    if (xQueueSend(sd_card_Q, &accel_data_avg, 0)) {
    4c32:	f8d8 0000 	ldr.w	r0, [r8]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:110
    accel_data_avg.x = x / 100;
    4c36:	b224      	sxth	r4, r4
    4c38:	f8ad 4000 	strh.w	r4, [sp]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:111
    accel_data_avg.y = x / 100;
    4c3c:	f8ad 4002 	strh.w	r4, [sp, #2]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:112
    accel_data_avg.z = x / 100;
    4c40:	f8ad 4004 	strh.w	r4, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:114
    if (xQueueSend(sd_card_Q, &accel_data_avg, 0)) {
    4c44:	f7fe f8e8 	bl	2e18 <xQueueGenericSend>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:116
    xEventGroupSetBits(Check_In, 1 << 0);
    4c48:	2101      	movs	r1, #1
    4c4a:	6838      	ldr	r0, [r7, #0]
    4c4c:	f7fd ff26 	bl	2a9c <xEventGroupSetBits>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:117
    vTaskDelay(100);
    4c50:	4628      	mov	r0, r5
    4c52:	f7fe fef9 	bl	3a48 <vTaskDelay>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:61
  while (1) {
    4c56:	e7d2      	b.n	4bfe <producer_task+0xe>
    4c58:	10000b60 	.word	0x10000b60
    4c5c:	10000ba4 	.word	0x10000ba4

00004c60 <watchdog_task>:
watchdog_task():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:185
- Print a message when the Watchdog task is able to verify the check-in of other
tasks
- Print an error message clearly indicating which task failed to check-in with
the RTOS Event Groups API
*/
void watchdog_task(void *params) {
    4c60:	b573      	push	{r0, r1, r4, r5, r6, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:194
    // We either should vTaskDelay, but for better robustness, we should
    // block on xEventGroupWaitBits() for slightly more than 100ms because
    // of the expected production rate of the producer() task and its check-in
    const TickType_t xTicksToWait = 200;
    EventBits_t uxBits;
    uxBits = xEventGroupWaitBits(
    4c62:	4d13      	ldr	r5, [pc, #76]	; (4cb0 <watchdog_task+0x50>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:210
              "Tasks did not complete: Producer Succeeded, Conusmer Failed\n");
    } else if (uxBits == 0x2) {
      fprintf(stderr,
              "Tasks did not complete: Producer Failed, Conusmer Succeeded\n");
    } else if (uxBits == 0x3) {
      fprintf(stderr, "Tasks completed\n");
    4c64:	4c13      	ldr	r4, [pc, #76]	; (4cb4 <watchdog_task+0x54>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:188
    vTaskDelay(200);
    4c66:	26c8      	movs	r6, #200	; 0xc8
    4c68:	20c8      	movs	r0, #200	; 0xc8
    4c6a:	f7fe feed 	bl	3a48 <vTaskDelay>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:194
    uxBits = xEventGroupWaitBits(
    4c6e:	2301      	movs	r3, #1
    4c70:	9600      	str	r6, [sp, #0]
    4c72:	461a      	mov	r2, r3
    4c74:	2103      	movs	r1, #3
    4c76:	6828      	ldr	r0, [r5, #0]
    4c78:	f7fd fe8c 	bl	2994 <xEventGroupWaitBits>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:201
    if (uxBits == 0x0) {
    4c7c:	b928      	cbnz	r0, 4c8a <watchdog_task+0x2a>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:202
      fprintf(stderr, "Tasks did not complete: Producer and Consumer failed\n");
    4c7e:	6823      	ldr	r3, [r4, #0]
    4c80:	480d      	ldr	r0, [pc, #52]	; (4cb8 <watchdog_task+0x58>)
    4c82:	68d9      	ldr	r1, [r3, #12]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:210
      fprintf(stderr, "Tasks completed\n");
    4c84:	f000 fc86 	bl	5594 <fputs>
    4c88:	e7ee      	b.n	4c68 <watchdog_task+0x8>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:203
    } else if (uxBits == 0x1) {
    4c8a:	2801      	cmp	r0, #1
    4c8c:	d103      	bne.n	4c96 <watchdog_task+0x36>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:204
      fprintf(stderr,
    4c8e:	6823      	ldr	r3, [r4, #0]
    4c90:	480a      	ldr	r0, [pc, #40]	; (4cbc <watchdog_task+0x5c>)
    4c92:	68d9      	ldr	r1, [r3, #12]
    4c94:	e7f6      	b.n	4c84 <watchdog_task+0x24>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:206
    } else if (uxBits == 0x2) {
    4c96:	2802      	cmp	r0, #2
    4c98:	d103      	bne.n	4ca2 <watchdog_task+0x42>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:207
      fprintf(stderr,
    4c9a:	6823      	ldr	r3, [r4, #0]
    4c9c:	4808      	ldr	r0, [pc, #32]	; (4cc0 <watchdog_task+0x60>)
    4c9e:	68d9      	ldr	r1, [r3, #12]
    4ca0:	e7f0      	b.n	4c84 <watchdog_task+0x24>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:209
    } else if (uxBits == 0x3) {
    4ca2:	2803      	cmp	r0, #3
    4ca4:	d1e0      	bne.n	4c68 <watchdog_task+0x8>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:210
      fprintf(stderr, "Tasks completed\n");
    4ca6:	6823      	ldr	r3, [r4, #0]
    4ca8:	4806      	ldr	r0, [pc, #24]	; (4cc4 <watchdog_task+0x64>)
    4caa:	68d9      	ldr	r1, [r3, #12]
    4cac:	e7ea      	b.n	4c84 <watchdog_task+0x24>
    4cae:	bf00      	nop
    4cb0:	10000b60 	.word	0x10000b60
    4cb4:	10000150 	.word	0x10000150
    4cb8:	0000b5fe 	.word	0x0000b5fe
    4cbc:	0000b634 	.word	0x0000b634
    4cc0:	0000b671 	.word	0x0000b671
    4cc4:	0000b6ae 	.word	0x0000b6ae

00004cc8 <main>:
main():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:30
int main(void) {
    4cc8:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:31
  sd_card_Q = xQueueCreate(10, sizeof(unsigned long));
    4cca:	2200      	movs	r2, #0
    4ccc:	2104      	movs	r1, #4
    4cce:	200a      	movs	r0, #10
    4cd0:	f7fe f87c 	bl	2dcc <xQueueGenericCreate>
    4cd4:	4b16      	ldr	r3, [pc, #88]	; (4d30 <main+0x68>)
create_producer_task():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:46
  xTaskCreate(producer_task, "Producer", (512U * 8) / sizeof(void *), NULL,
    4cd6:	4917      	ldr	r1, [pc, #92]	; (4d34 <main+0x6c>)
main():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:31
  sd_card_Q = xQueueCreate(10, sizeof(unsigned long));
    4cd8:	6018      	str	r0, [r3, #0]
create_producer_task():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:46
  xTaskCreate(producer_task, "Producer", (512U * 8) / sizeof(void *), NULL,
    4cda:	2400      	movs	r4, #0
    4cdc:	2502      	movs	r5, #2
    4cde:	4623      	mov	r3, r4
    4ce0:	e9cd 5400 	strd	r5, r4, [sp]
    4ce4:	f44f 6280 	mov.w	r2, #1024	; 0x400
    4ce8:	4813      	ldr	r0, [pc, #76]	; (4d38 <main+0x70>)
    4cea:	f7fe fd2f 	bl	374c <xTaskCreate>
create_consumer_task():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:51
  xTaskCreate(consumer_task, "Consumer", (512U * 8) / sizeof(void *), NULL,
    4cee:	4623      	mov	r3, r4
    4cf0:	e9cd 5400 	strd	r5, r4, [sp]
    4cf4:	f44f 6280 	mov.w	r2, #1024	; 0x400
    4cf8:	4910      	ldr	r1, [pc, #64]	; (4d3c <main+0x74>)
    4cfa:	4811      	ldr	r0, [pc, #68]	; (4d40 <main+0x78>)
    4cfc:	f7fe fd26 	bl	374c <xTaskCreate>
create_watchdog_task():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:56
  xTaskCreate(watchdog_task, "Watchdog", (512U * 8) / sizeof(void *), NULL,
    4d00:	2303      	movs	r3, #3
    4d02:	f44f 6280 	mov.w	r2, #1024	; 0x400
    4d06:	490f      	ldr	r1, [pc, #60]	; (4d44 <main+0x7c>)
    4d08:	9300      	str	r3, [sp, #0]
    4d0a:	9401      	str	r4, [sp, #4]
    4d0c:	4623      	mov	r3, r4
    4d0e:	480e      	ldr	r0, [pc, #56]	; (4d48 <main+0x80>)
    4d10:	f7fe fd1c 	bl	374c <xTaskCreate>
main():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:35
  acceleration__init();
    4d14:	f7fb fb74 	bl	400 <acceleration__init>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:36
  Check_In = xEventGroupCreate();
    4d18:	f7fd fe2e 	bl	2978 <xEventGroupCreate>
    4d1c:	4b0b      	ldr	r3, [pc, #44]	; (4d4c <main+0x84>)
    4d1e:	6018      	str	r0, [r3, #0]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:38
  puts("Starting RTOS");
    4d20:	480b      	ldr	r0, [pc, #44]	; (4d50 <main+0x88>)
    4d22:	f001 fd27 	bl	6774 <puts>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:39
  vTaskStartScheduler(); // This function never returns unless RTOS scheduler
    4d26:	f7fe fd3f 	bl	37a8 <vTaskStartScheduler>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:43
}
    4d2a:	4620      	mov	r0, r4
    4d2c:	b003      	add	sp, #12
    4d2e:	bd30      	pop	{r4, r5, pc}
    4d30:	10000ba4 	.word	0x10000ba4
    4d34:	0000b5d5 	.word	0x0000b5d5
    4d38:	00004bf1 	.word	0x00004bf1
    4d3c:	0000b5de 	.word	0x0000b5de
    4d40:	00004dad 	.word	0x00004dad
    4d44:	0000b5e7 	.word	0x0000b5e7
    4d48:	00004c61 	.word	0x00004c61
    4d4c:	10000b60 	.word	0x10000b60
    4d50:	0000b5f0 	.word	0x0000b5f0

00004d54 <write_file_using_fatfs_pi>:
write_file_using_fatfs_pi():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:215
    }
  }
}

void write_file_using_fatfs_pi(void) {
    4d54:	b500      	push	{lr}
    4d56:	f5ad 7d0d 	sub.w	sp, sp, #564	; 0x234
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:218
  const char *filename = "file.txt";
  FIL file; // File handle
  UINT bytes_written = 0;
    4d5a:	2300      	movs	r3, #0
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:220
  FRESULT result =
      f_open(&file, filename, (FA_OPEN_APPEND | FA_WRITE | FA_CREATE_ALWAYS));
    4d5c:	223a      	movs	r2, #58	; 0x3a
    4d5e:	490f      	ldr	r1, [pc, #60]	; (4d9c <write_file_using_fatfs_pi+0x48>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:218
  UINT bytes_written = 0;
    4d60:	9301      	str	r3, [sp, #4]
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:220
      f_open(&file, filename, (FA_OPEN_APPEND | FA_WRITE | FA_CREATE_ALWAYS));
    4d62:	a802      	add	r0, sp, #8
    4d64:	f7fc fc12 	bl	158c <f_open>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:222

  if (FR_OK == result) {
    4d68:	b998      	cbnz	r0, 4d92 <write_file_using_fatfs_pi+0x3e>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:225
    // char string[64];
    // sprintf(string, "Value,%i\n", 123);
    if (FR_OK == f_write(&file, string, strlen(string), &bytes_written)) {
    4d6a:	480d      	ldr	r0, [pc, #52]	; (4da0 <write_file_using_fatfs_pi+0x4c>)
    4d6c:	f001 fe02 	bl	6974 <strlen>
    4d70:	ab01      	add	r3, sp, #4
    4d72:	4602      	mov	r2, r0
    4d74:	490a      	ldr	r1, [pc, #40]	; (4da0 <write_file_using_fatfs_pi+0x4c>)
    4d76:	a802      	add	r0, sp, #8
    4d78:	f7fc fcee 	bl	1758 <f_write>
    4d7c:	b110      	cbz	r0, 4d84 <write_file_using_fatfs_pi+0x30>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:227
    } else {
      printf("ERROR: Failed to write data to file\n");
    4d7e:	4809      	ldr	r0, [pc, #36]	; (4da4 <write_file_using_fatfs_pi+0x50>)
    4d80:	f001 fcf8 	bl	6774 <puts>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:229
    }
    f_close(&file);
    4d84:	a802      	add	r0, sp, #8
    4d86:	f7fc fe09 	bl	199c <f_close>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:233
  } else {
    printf("ERROR: Failed to open: %s\n", filename);
  }
}
    4d8a:	f50d 7d0d 	add.w	sp, sp, #564	; 0x234
    4d8e:	f85d fb04 	ldr.w	pc, [sp], #4
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:231
    printf("ERROR: Failed to open: %s\n", filename);
    4d92:	4902      	ldr	r1, [pc, #8]	; (4d9c <write_file_using_fatfs_pi+0x48>)
    4d94:	4804      	ldr	r0, [pc, #16]	; (4da8 <write_file_using_fatfs_pi+0x54>)
    4d96:	f001 fc67 	bl	6668 <iprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:233
}
    4d9a:	e7f6      	b.n	4d8a <write_file_using_fatfs_pi+0x36>
    4d9c:	0000b6bf 	.word	0x0000b6bf
    4da0:	10000b64 	.word	0x10000b64
    4da4:	0000b6c8 	.word	0x0000b6c8
    4da8:	0000b6ec 	.word	0x0000b6ec

00004dac <consumer_task>:
consumer_task():
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:123
static void consumer_task(void *params) {
    4dac:	b5f0      	push	{r4, r5, r6, r7, lr}
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:160
    if (xQueueReceive(sd_card_Q, &accel_data_avg, portMAX_DELAY)) {
    4dae:	4f19      	ldr	r7, [pc, #100]	; (4e14 <consumer_task+0x68>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:163
      fprintf(stderr, "%i: x: %i, y: %i, z: %i\n", time, accel_data_avg.x,
    4db0:	4e19      	ldr	r6, [pc, #100]	; (4e18 <consumer_task+0x6c>)
    4db2:	4c1a      	ldr	r4, [pc, #104]	; (4e1c <consumer_task+0x70>)
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:123
static void consumer_task(void *params) {
    4db4:	b085      	sub	sp, #20
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:160
    if (xQueueReceive(sd_card_Q, &accel_data_avg, portMAX_DELAY)) {
    4db6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    4dba:	a902      	add	r1, sp, #8
    4dbc:	6838      	ldr	r0, [r7, #0]
    4dbe:	f7fe f99f 	bl	3100 <xQueueReceive>
    4dc2:	2800      	cmp	r0, #0
    4dc4:	d0f7      	beq.n	4db6 <consumer_task+0xa>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:162
      int16_t time = xTaskGetTickCount();
    4dc6:	f7fe fd31 	bl	382c <xTaskGetTickCount>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:163
      fprintf(stderr, "%i: x: %i, y: %i, z: %i\n", time, accel_data_avg.x,
    4dca:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
    4dce:	9301      	str	r3, [sp, #4]
    4dd0:	b205      	sxth	r5, r0
    4dd2:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
    4dd6:	6830      	ldr	r0, [r6, #0]
    4dd8:	9300      	str	r3, [sp, #0]
    4dda:	462a      	mov	r2, r5
    4ddc:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
    4de0:	68c0      	ldr	r0, [r0, #12]
    4de2:	4621      	mov	r1, r4
    4de4:	f000 fb5e 	bl	54a4 <fiprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:165
      sprintf(string, "%i: x: %i, y: %i, z: %i\n", time, accel_data_avg.x,
    4de8:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
    4dec:	9301      	str	r3, [sp, #4]
    4dee:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
    4df2:	9300      	str	r3, [sp, #0]
    4df4:	4621      	mov	r1, r4
    4df6:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
    4dfa:	4809      	ldr	r0, [pc, #36]	; (4e20 <consumer_task+0x74>)
    4dfc:	462a      	mov	r2, r5
    4dfe:	f001 fd99 	bl	6934 <siprintf>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:167
      write_file_using_fatfs_pi();
    4e02:	f7ff ffa7 	bl	4d54 <write_file_using_fatfs_pi>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:168
      xEventGroupSetBits(Check_In, 1 << 1);
    4e06:	4b07      	ldr	r3, [pc, #28]	; (4e24 <consumer_task+0x78>)
    4e08:	2102      	movs	r1, #2
    4e0a:	6818      	ldr	r0, [r3, #0]
    4e0c:	f7fd fe46 	bl	2a9c <xEventGroupSetBits>
/Users/aaronricepersonal/Documents/GitHub/Lab-Assignments/projects/lpc40xx_freertos/l5_application/main.c:124
  while (1) {
    4e10:	e7d1      	b.n	4db6 <consumer_task+0xa>
    4e12:	bf00      	nop
    4e14:	10000ba4 	.word	0x10000ba4
    4e18:	10000150 	.word	0x10000150
    4e1c:	0000b5bc 	.word	0x0000b5bc
    4e20:	10000b64 	.word	0x10000b64
    4e24:	10000b60 	.word	0x10000b60

00004e28 <__aeabi_drsub>:
__aeabi_drsub():
    4e28:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
    4e2c:	e002      	b.n	4e34 <__adddf3>
    4e2e:	bf00      	nop

00004e30 <__aeabi_dsub>:
__subdf3():
    4e30:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00004e34 <__adddf3>:
__aeabi_dadd():
    4e34:	b530      	push	{r4, r5, lr}
    4e36:	ea4f 0441 	mov.w	r4, r1, lsl #1
    4e3a:	ea4f 0543 	mov.w	r5, r3, lsl #1
    4e3e:	ea94 0f05 	teq	r4, r5
    4e42:	bf08      	it	eq
    4e44:	ea90 0f02 	teqeq	r0, r2
    4e48:	bf1f      	itttt	ne
    4e4a:	ea54 0c00 	orrsne.w	ip, r4, r0
    4e4e:	ea55 0c02 	orrsne.w	ip, r5, r2
    4e52:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
    4e56:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
    4e5a:	f000 80e2 	beq.w	5022 <__adddf3+0x1ee>
    4e5e:	ea4f 5454 	mov.w	r4, r4, lsr #21
    4e62:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
    4e66:	bfb8      	it	lt
    4e68:	426d      	neglt	r5, r5
    4e6a:	dd0c      	ble.n	4e86 <__adddf3+0x52>
    4e6c:	442c      	add	r4, r5
    4e6e:	ea80 0202 	eor.w	r2, r0, r2
    4e72:	ea81 0303 	eor.w	r3, r1, r3
    4e76:	ea82 0000 	eor.w	r0, r2, r0
    4e7a:	ea83 0101 	eor.w	r1, r3, r1
    4e7e:	ea80 0202 	eor.w	r2, r0, r2
    4e82:	ea81 0303 	eor.w	r3, r1, r3
    4e86:	2d36      	cmp	r5, #54	; 0x36
    4e88:	bf88      	it	hi
    4e8a:	bd30      	pophi	{r4, r5, pc}
    4e8c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
    4e90:	ea4f 3101 	mov.w	r1, r1, lsl #12
    4e94:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
    4e98:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
    4e9c:	d002      	beq.n	4ea4 <__adddf3+0x70>
    4e9e:	4240      	negs	r0, r0
    4ea0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    4ea4:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
    4ea8:	ea4f 3303 	mov.w	r3, r3, lsl #12
    4eac:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
    4eb0:	d002      	beq.n	4eb8 <__adddf3+0x84>
    4eb2:	4252      	negs	r2, r2
    4eb4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
    4eb8:	ea94 0f05 	teq	r4, r5
    4ebc:	f000 80a7 	beq.w	500e <__adddf3+0x1da>
    4ec0:	f1a4 0401 	sub.w	r4, r4, #1
    4ec4:	f1d5 0e20 	rsbs	lr, r5, #32
    4ec8:	db0d      	blt.n	4ee6 <__adddf3+0xb2>
    4eca:	fa02 fc0e 	lsl.w	ip, r2, lr
    4ece:	fa22 f205 	lsr.w	r2, r2, r5
    4ed2:	1880      	adds	r0, r0, r2
    4ed4:	f141 0100 	adc.w	r1, r1, #0
    4ed8:	fa03 f20e 	lsl.w	r2, r3, lr
    4edc:	1880      	adds	r0, r0, r2
    4ede:	fa43 f305 	asr.w	r3, r3, r5
    4ee2:	4159      	adcs	r1, r3
    4ee4:	e00e      	b.n	4f04 <__adddf3+0xd0>
    4ee6:	f1a5 0520 	sub.w	r5, r5, #32
    4eea:	f10e 0e20 	add.w	lr, lr, #32
    4eee:	2a01      	cmp	r2, #1
    4ef0:	fa03 fc0e 	lsl.w	ip, r3, lr
    4ef4:	bf28      	it	cs
    4ef6:	f04c 0c02 	orrcs.w	ip, ip, #2
    4efa:	fa43 f305 	asr.w	r3, r3, r5
    4efe:	18c0      	adds	r0, r0, r3
    4f00:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
    4f04:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
    4f08:	d507      	bpl.n	4f1a <__adddf3+0xe6>
    4f0a:	f04f 0e00 	mov.w	lr, #0
    4f0e:	f1dc 0c00 	rsbs	ip, ip, #0
    4f12:	eb7e 0000 	sbcs.w	r0, lr, r0
    4f16:	eb6e 0101 	sbc.w	r1, lr, r1
    4f1a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
    4f1e:	d31b      	bcc.n	4f58 <__adddf3+0x124>
    4f20:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
    4f24:	d30c      	bcc.n	4f40 <__adddf3+0x10c>
    4f26:	0849      	lsrs	r1, r1, #1
    4f28:	ea5f 0030 	movs.w	r0, r0, rrx
    4f2c:	ea4f 0c3c 	mov.w	ip, ip, rrx
    4f30:	f104 0401 	add.w	r4, r4, #1
    4f34:	ea4f 5244 	mov.w	r2, r4, lsl #21
    4f38:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
    4f3c:	f080 809a 	bcs.w	5074 <__adddf3+0x240>
    4f40:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
    4f44:	bf08      	it	eq
    4f46:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
    4f4a:	f150 0000 	adcs.w	r0, r0, #0
    4f4e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
    4f52:	ea41 0105 	orr.w	r1, r1, r5
    4f56:	bd30      	pop	{r4, r5, pc}
    4f58:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
    4f5c:	4140      	adcs	r0, r0
    4f5e:	eb41 0101 	adc.w	r1, r1, r1
    4f62:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    4f66:	f1a4 0401 	sub.w	r4, r4, #1
    4f6a:	d1e9      	bne.n	4f40 <__adddf3+0x10c>
    4f6c:	f091 0f00 	teq	r1, #0
    4f70:	bf04      	itt	eq
    4f72:	4601      	moveq	r1, r0
    4f74:	2000      	moveq	r0, #0
    4f76:	fab1 f381 	clz	r3, r1
    4f7a:	bf08      	it	eq
    4f7c:	3320      	addeq	r3, #32
    4f7e:	f1a3 030b 	sub.w	r3, r3, #11
    4f82:	f1b3 0220 	subs.w	r2, r3, #32
    4f86:	da0c      	bge.n	4fa2 <__adddf3+0x16e>
    4f88:	320c      	adds	r2, #12
    4f8a:	dd08      	ble.n	4f9e <__adddf3+0x16a>
    4f8c:	f102 0c14 	add.w	ip, r2, #20
    4f90:	f1c2 020c 	rsb	r2, r2, #12
    4f94:	fa01 f00c 	lsl.w	r0, r1, ip
    4f98:	fa21 f102 	lsr.w	r1, r1, r2
    4f9c:	e00c      	b.n	4fb8 <__adddf3+0x184>
    4f9e:	f102 0214 	add.w	r2, r2, #20
    4fa2:	bfd8      	it	le
    4fa4:	f1c2 0c20 	rsble	ip, r2, #32
    4fa8:	fa01 f102 	lsl.w	r1, r1, r2
    4fac:	fa20 fc0c 	lsr.w	ip, r0, ip
    4fb0:	bfdc      	itt	le
    4fb2:	ea41 010c 	orrle.w	r1, r1, ip
    4fb6:	4090      	lslle	r0, r2
    4fb8:	1ae4      	subs	r4, r4, r3
    4fba:	bfa2      	ittt	ge
    4fbc:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
    4fc0:	4329      	orrge	r1, r5
    4fc2:	bd30      	popge	{r4, r5, pc}
    4fc4:	ea6f 0404 	mvn.w	r4, r4
    4fc8:	3c1f      	subs	r4, #31
    4fca:	da1c      	bge.n	5006 <__adddf3+0x1d2>
    4fcc:	340c      	adds	r4, #12
    4fce:	dc0e      	bgt.n	4fee <__adddf3+0x1ba>
    4fd0:	f104 0414 	add.w	r4, r4, #20
    4fd4:	f1c4 0220 	rsb	r2, r4, #32
    4fd8:	fa20 f004 	lsr.w	r0, r0, r4
    4fdc:	fa01 f302 	lsl.w	r3, r1, r2
    4fe0:	ea40 0003 	orr.w	r0, r0, r3
    4fe4:	fa21 f304 	lsr.w	r3, r1, r4
    4fe8:	ea45 0103 	orr.w	r1, r5, r3
    4fec:	bd30      	pop	{r4, r5, pc}
    4fee:	f1c4 040c 	rsb	r4, r4, #12
    4ff2:	f1c4 0220 	rsb	r2, r4, #32
    4ff6:	fa20 f002 	lsr.w	r0, r0, r2
    4ffa:	fa01 f304 	lsl.w	r3, r1, r4
    4ffe:	ea40 0003 	orr.w	r0, r0, r3
    5002:	4629      	mov	r1, r5
    5004:	bd30      	pop	{r4, r5, pc}
    5006:	fa21 f004 	lsr.w	r0, r1, r4
    500a:	4629      	mov	r1, r5
    500c:	bd30      	pop	{r4, r5, pc}
    500e:	f094 0f00 	teq	r4, #0
    5012:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
    5016:	bf06      	itte	eq
    5018:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
    501c:	3401      	addeq	r4, #1
    501e:	3d01      	subne	r5, #1
    5020:	e74e      	b.n	4ec0 <__adddf3+0x8c>
    5022:	ea7f 5c64 	mvns.w	ip, r4, asr #21
    5026:	bf18      	it	ne
    5028:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
    502c:	d029      	beq.n	5082 <__adddf3+0x24e>
    502e:	ea94 0f05 	teq	r4, r5
    5032:	bf08      	it	eq
    5034:	ea90 0f02 	teqeq	r0, r2
    5038:	d005      	beq.n	5046 <__adddf3+0x212>
    503a:	ea54 0c00 	orrs.w	ip, r4, r0
    503e:	bf04      	itt	eq
    5040:	4619      	moveq	r1, r3
    5042:	4610      	moveq	r0, r2
    5044:	bd30      	pop	{r4, r5, pc}
    5046:	ea91 0f03 	teq	r1, r3
    504a:	bf1e      	ittt	ne
    504c:	2100      	movne	r1, #0
    504e:	2000      	movne	r0, #0
    5050:	bd30      	popne	{r4, r5, pc}
    5052:	ea5f 5c54 	movs.w	ip, r4, lsr #21
    5056:	d105      	bne.n	5064 <__adddf3+0x230>
    5058:	0040      	lsls	r0, r0, #1
    505a:	4149      	adcs	r1, r1
    505c:	bf28      	it	cs
    505e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
    5062:	bd30      	pop	{r4, r5, pc}
    5064:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
    5068:	bf3c      	itt	cc
    506a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
    506e:	bd30      	popcc	{r4, r5, pc}
    5070:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
    5074:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
    5078:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
    507c:	f04f 0000 	mov.w	r0, #0
    5080:	bd30      	pop	{r4, r5, pc}
    5082:	ea7f 5c64 	mvns.w	ip, r4, asr #21
    5086:	bf1a      	itte	ne
    5088:	4619      	movne	r1, r3
    508a:	4610      	movne	r0, r2
    508c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
    5090:	bf1c      	itt	ne
    5092:	460b      	movne	r3, r1
    5094:	4602      	movne	r2, r0
    5096:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
    509a:	bf06      	itte	eq
    509c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
    50a0:	ea91 0f03 	teqeq	r1, r3
    50a4:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
    50a8:	bd30      	pop	{r4, r5, pc}
    50aa:	bf00      	nop

000050ac <__aeabi_ui2d>:
__floatunsidf():
    50ac:	f090 0f00 	teq	r0, #0
    50b0:	bf04      	itt	eq
    50b2:	2100      	moveq	r1, #0
    50b4:	4770      	bxeq	lr
    50b6:	b530      	push	{r4, r5, lr}
    50b8:	f44f 6480 	mov.w	r4, #1024	; 0x400
    50bc:	f104 0432 	add.w	r4, r4, #50	; 0x32
    50c0:	f04f 0500 	mov.w	r5, #0
    50c4:	f04f 0100 	mov.w	r1, #0
    50c8:	e750      	b.n	4f6c <__adddf3+0x138>
    50ca:	bf00      	nop

000050cc <__aeabi_i2d>:
__aeabi_i2d():
    50cc:	f090 0f00 	teq	r0, #0
    50d0:	bf04      	itt	eq
    50d2:	2100      	moveq	r1, #0
    50d4:	4770      	bxeq	lr
    50d6:	b530      	push	{r4, r5, lr}
    50d8:	f44f 6480 	mov.w	r4, #1024	; 0x400
    50dc:	f104 0432 	add.w	r4, r4, #50	; 0x32
    50e0:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
    50e4:	bf48      	it	mi
    50e6:	4240      	negmi	r0, r0
    50e8:	f04f 0100 	mov.w	r1, #0
    50ec:	e73e      	b.n	4f6c <__adddf3+0x138>
    50ee:	bf00      	nop

000050f0 <__aeabi_f2d>:
__aeabi_f2d():
    50f0:	0042      	lsls	r2, r0, #1
    50f2:	ea4f 01e2 	mov.w	r1, r2, asr #3
    50f6:	ea4f 0131 	mov.w	r1, r1, rrx
    50fa:	ea4f 7002 	mov.w	r0, r2, lsl #28
    50fe:	bf1f      	itttt	ne
    5100:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
    5104:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
    5108:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
    510c:	4770      	bxne	lr
    510e:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
    5112:	bf08      	it	eq
    5114:	4770      	bxeq	lr
    5116:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
    511a:	bf04      	itt	eq
    511c:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
    5120:	4770      	bxeq	lr
    5122:	b530      	push	{r4, r5, lr}
    5124:	f44f 7460 	mov.w	r4, #896	; 0x380
    5128:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
    512c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
    5130:	e71c      	b.n	4f6c <__adddf3+0x138>
    5132:	bf00      	nop

00005134 <__aeabi_ul2d>:
__floatundidf():
    5134:	ea50 0201 	orrs.w	r2, r0, r1
    5138:	bf08      	it	eq
    513a:	4770      	bxeq	lr
    513c:	b530      	push	{r4, r5, lr}
    513e:	f04f 0500 	mov.w	r5, #0
    5142:	e00a      	b.n	515a <__aeabi_l2d+0x16>

00005144 <__aeabi_l2d>:
__aeabi_l2d():
    5144:	ea50 0201 	orrs.w	r2, r0, r1
    5148:	bf08      	it	eq
    514a:	4770      	bxeq	lr
    514c:	b530      	push	{r4, r5, lr}
    514e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
    5152:	d502      	bpl.n	515a <__aeabi_l2d+0x16>
    5154:	4240      	negs	r0, r0
    5156:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    515a:	f44f 6480 	mov.w	r4, #1024	; 0x400
    515e:	f104 0432 	add.w	r4, r4, #50	; 0x32
    5162:	ea5f 5c91 	movs.w	ip, r1, lsr #22
    5166:	f43f aed8 	beq.w	4f1a <__adddf3+0xe6>
    516a:	f04f 0203 	mov.w	r2, #3
    516e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
    5172:	bf18      	it	ne
    5174:	3203      	addne	r2, #3
    5176:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
    517a:	bf18      	it	ne
    517c:	3203      	addne	r2, #3
    517e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
    5182:	f1c2 0320 	rsb	r3, r2, #32
    5186:	fa00 fc03 	lsl.w	ip, r0, r3
    518a:	fa20 f002 	lsr.w	r0, r0, r2
    518e:	fa01 fe03 	lsl.w	lr, r1, r3
    5192:	ea40 000e 	orr.w	r0, r0, lr
    5196:	fa21 f102 	lsr.w	r1, r1, r2
    519a:	4414      	add	r4, r2
    519c:	e6bd      	b.n	4f1a <__adddf3+0xe6>
    519e:	bf00      	nop

000051a0 <__aeabi_uldivmod>:
__aeabi_uldivmod():
    51a0:	b953      	cbnz	r3, 51b8 <__aeabi_uldivmod+0x18>
    51a2:	b94a      	cbnz	r2, 51b8 <__aeabi_uldivmod+0x18>
    51a4:	2900      	cmp	r1, #0
    51a6:	bf08      	it	eq
    51a8:	2800      	cmpeq	r0, #0
    51aa:	bf1c      	itt	ne
    51ac:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
    51b0:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
    51b4:	f000 b974 	b.w	54a0 <__aeabi_idiv0>
    51b8:	f1ad 0c08 	sub.w	ip, sp, #8
    51bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
    51c0:	f000 f806 	bl	51d0 <__udivmoddi4>
    51c4:	f8dd e004 	ldr.w	lr, [sp, #4]
    51c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    51cc:	b004      	add	sp, #16
    51ce:	4770      	bx	lr

000051d0 <__udivmoddi4>:
__udivmoddi4():
    51d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    51d4:	9e08      	ldr	r6, [sp, #32]
    51d6:	4604      	mov	r4, r0
    51d8:	4688      	mov	r8, r1
    51da:	2b00      	cmp	r3, #0
    51dc:	f040 8085 	bne.w	52ea <__udivmoddi4+0x11a>
    51e0:	428a      	cmp	r2, r1
    51e2:	4615      	mov	r5, r2
    51e4:	d948      	bls.n	5278 <__udivmoddi4+0xa8>
    51e6:	fab2 f282 	clz	r2, r2
    51ea:	b14a      	cbz	r2, 5200 <__udivmoddi4+0x30>
    51ec:	f1c2 0720 	rsb	r7, r2, #32
    51f0:	fa01 f302 	lsl.w	r3, r1, r2
    51f4:	fa20 f707 	lsr.w	r7, r0, r7
    51f8:	4095      	lsls	r5, r2
    51fa:	ea47 0803 	orr.w	r8, r7, r3
    51fe:	4094      	lsls	r4, r2
    5200:	ea4f 4e15 	mov.w	lr, r5, lsr #16
    5204:	0c23      	lsrs	r3, r4, #16
    5206:	fbb8 f7fe 	udiv	r7, r8, lr
    520a:	fa1f fc85 	uxth.w	ip, r5
    520e:	fb0e 8817 	mls	r8, lr, r7, r8
    5212:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
    5216:	fb07 f10c 	mul.w	r1, r7, ip
    521a:	4299      	cmp	r1, r3
    521c:	d909      	bls.n	5232 <__udivmoddi4+0x62>
    521e:	18eb      	adds	r3, r5, r3
    5220:	f107 30ff 	add.w	r0, r7, #4294967295	; 0xffffffff
    5224:	f080 80e3 	bcs.w	53ee <__udivmoddi4+0x21e>
    5228:	4299      	cmp	r1, r3
    522a:	f240 80e0 	bls.w	53ee <__udivmoddi4+0x21e>
    522e:	3f02      	subs	r7, #2
    5230:	442b      	add	r3, r5
    5232:	1a5b      	subs	r3, r3, r1
    5234:	b2a4      	uxth	r4, r4
    5236:	fbb3 f0fe 	udiv	r0, r3, lr
    523a:	fb0e 3310 	mls	r3, lr, r0, r3
    523e:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
    5242:	fb00 fc0c 	mul.w	ip, r0, ip
    5246:	45a4      	cmp	ip, r4
    5248:	d909      	bls.n	525e <__udivmoddi4+0x8e>
    524a:	192c      	adds	r4, r5, r4
    524c:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
    5250:	f080 80cb 	bcs.w	53ea <__udivmoddi4+0x21a>
    5254:	45a4      	cmp	ip, r4
    5256:	f240 80c8 	bls.w	53ea <__udivmoddi4+0x21a>
    525a:	3802      	subs	r0, #2
    525c:	442c      	add	r4, r5
    525e:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
    5262:	eba4 040c 	sub.w	r4, r4, ip
    5266:	2700      	movs	r7, #0
    5268:	b11e      	cbz	r6, 5272 <__udivmoddi4+0xa2>
    526a:	40d4      	lsrs	r4, r2
    526c:	2300      	movs	r3, #0
    526e:	e9c6 4300 	strd	r4, r3, [r6]
    5272:	4639      	mov	r1, r7
    5274:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    5278:	2a00      	cmp	r2, #0
    527a:	d053      	beq.n	5324 <__udivmoddi4+0x154>
    527c:	fab2 f282 	clz	r2, r2
    5280:	2a00      	cmp	r2, #0
    5282:	f040 80b6 	bne.w	53f2 <__udivmoddi4+0x222>
    5286:	1b49      	subs	r1, r1, r5
    5288:	ea4f 4e15 	mov.w	lr, r5, lsr #16
    528c:	fa1f f885 	uxth.w	r8, r5
    5290:	2701      	movs	r7, #1
    5292:	fbb1 fcfe 	udiv	ip, r1, lr
    5296:	0c23      	lsrs	r3, r4, #16
    5298:	fb0e 111c 	mls	r1, lr, ip, r1
    529c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
    52a0:	fb08 f10c 	mul.w	r1, r8, ip
    52a4:	4299      	cmp	r1, r3
    52a6:	d907      	bls.n	52b8 <__udivmoddi4+0xe8>
    52a8:	18eb      	adds	r3, r5, r3
    52aa:	f10c 30ff 	add.w	r0, ip, #4294967295	; 0xffffffff
    52ae:	d202      	bcs.n	52b6 <__udivmoddi4+0xe6>
    52b0:	4299      	cmp	r1, r3
    52b2:	f200 80ec 	bhi.w	548e <__udivmoddi4+0x2be>
    52b6:	4684      	mov	ip, r0
    52b8:	1a59      	subs	r1, r3, r1
    52ba:	b2a3      	uxth	r3, r4
    52bc:	fbb1 f0fe 	udiv	r0, r1, lr
    52c0:	fb0e 1410 	mls	r4, lr, r0, r1
    52c4:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
    52c8:	fb08 f800 	mul.w	r8, r8, r0
    52cc:	45a0      	cmp	r8, r4
    52ce:	d907      	bls.n	52e0 <__udivmoddi4+0x110>
    52d0:	192c      	adds	r4, r5, r4
    52d2:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
    52d6:	d202      	bcs.n	52de <__udivmoddi4+0x10e>
    52d8:	45a0      	cmp	r8, r4
    52da:	f200 80dc 	bhi.w	5496 <__udivmoddi4+0x2c6>
    52de:	4618      	mov	r0, r3
    52e0:	eba4 0408 	sub.w	r4, r4, r8
    52e4:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    52e8:	e7be      	b.n	5268 <__udivmoddi4+0x98>
    52ea:	428b      	cmp	r3, r1
    52ec:	d908      	bls.n	5300 <__udivmoddi4+0x130>
    52ee:	2e00      	cmp	r6, #0
    52f0:	d078      	beq.n	53e4 <__udivmoddi4+0x214>
    52f2:	2700      	movs	r7, #0
    52f4:	e9c6 0100 	strd	r0, r1, [r6]
    52f8:	4638      	mov	r0, r7
    52fa:	4639      	mov	r1, r7
    52fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    5300:	fab3 f783 	clz	r7, r3
    5304:	b97f      	cbnz	r7, 5326 <__udivmoddi4+0x156>
    5306:	428b      	cmp	r3, r1
    5308:	d302      	bcc.n	5310 <__udivmoddi4+0x140>
    530a:	4282      	cmp	r2, r0
    530c:	f200 80bd 	bhi.w	548a <__udivmoddi4+0x2ba>
    5310:	1a84      	subs	r4, r0, r2
    5312:	eb61 0303 	sbc.w	r3, r1, r3
    5316:	2001      	movs	r0, #1
    5318:	4698      	mov	r8, r3
    531a:	2e00      	cmp	r6, #0
    531c:	d0a9      	beq.n	5272 <__udivmoddi4+0xa2>
    531e:	e9c6 4800 	strd	r4, r8, [r6]
    5322:	e7a6      	b.n	5272 <__udivmoddi4+0xa2>
    5324:	deff      	udf	#255	; 0xff
    5326:	f1c7 0520 	rsb	r5, r7, #32
    532a:	40bb      	lsls	r3, r7
    532c:	fa22 fc05 	lsr.w	ip, r2, r5
    5330:	ea4c 0c03 	orr.w	ip, ip, r3
    5334:	fa01 f407 	lsl.w	r4, r1, r7
    5338:	fa20 f805 	lsr.w	r8, r0, r5
    533c:	fa21 f305 	lsr.w	r3, r1, r5
    5340:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
    5344:	ea48 0404 	orr.w	r4, r8, r4
    5348:	fbb3 f9fe 	udiv	r9, r3, lr
    534c:	0c21      	lsrs	r1, r4, #16
    534e:	fb0e 3319 	mls	r3, lr, r9, r3
    5352:	fa1f f88c 	uxth.w	r8, ip
    5356:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
    535a:	fb09 fa08 	mul.w	sl, r9, r8
    535e:	459a      	cmp	sl, r3
    5360:	fa02 f207 	lsl.w	r2, r2, r7
    5364:	fa00 f107 	lsl.w	r1, r0, r7
    5368:	d90b      	bls.n	5382 <__udivmoddi4+0x1b2>
    536a:	eb1c 0303 	adds.w	r3, ip, r3
    536e:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
    5372:	f080 8088 	bcs.w	5486 <__udivmoddi4+0x2b6>
    5376:	459a      	cmp	sl, r3
    5378:	f240 8085 	bls.w	5486 <__udivmoddi4+0x2b6>
    537c:	f1a9 0902 	sub.w	r9, r9, #2
    5380:	4463      	add	r3, ip
    5382:	eba3 030a 	sub.w	r3, r3, sl
    5386:	b2a4      	uxth	r4, r4
    5388:	fbb3 f0fe 	udiv	r0, r3, lr
    538c:	fb0e 3310 	mls	r3, lr, r0, r3
    5390:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
    5394:	fb00 f808 	mul.w	r8, r0, r8
    5398:	45a0      	cmp	r8, r4
    539a:	d908      	bls.n	53ae <__udivmoddi4+0x1de>
    539c:	eb1c 0404 	adds.w	r4, ip, r4
    53a0:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
    53a4:	d26b      	bcs.n	547e <__udivmoddi4+0x2ae>
    53a6:	45a0      	cmp	r8, r4
    53a8:	d969      	bls.n	547e <__udivmoddi4+0x2ae>
    53aa:	3802      	subs	r0, #2
    53ac:	4464      	add	r4, ip
    53ae:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
    53b2:	eba4 0408 	sub.w	r4, r4, r8
    53b6:	fba0 8902 	umull	r8, r9, r0, r2
    53ba:	454c      	cmp	r4, r9
    53bc:	46c6      	mov	lr, r8
    53be:	464b      	mov	r3, r9
    53c0:	d354      	bcc.n	546c <__udivmoddi4+0x29c>
    53c2:	d051      	beq.n	5468 <__udivmoddi4+0x298>
    53c4:	2e00      	cmp	r6, #0
    53c6:	d069      	beq.n	549c <__udivmoddi4+0x2cc>
    53c8:	ebb1 020e 	subs.w	r2, r1, lr
    53cc:	eb64 0403 	sbc.w	r4, r4, r3
    53d0:	fa04 f505 	lsl.w	r5, r4, r5
    53d4:	fa22 f307 	lsr.w	r3, r2, r7
    53d8:	40fc      	lsrs	r4, r7
    53da:	431d      	orrs	r5, r3
    53dc:	e9c6 5400 	strd	r5, r4, [r6]
    53e0:	2700      	movs	r7, #0
    53e2:	e746      	b.n	5272 <__udivmoddi4+0xa2>
    53e4:	4637      	mov	r7, r6
    53e6:	4630      	mov	r0, r6
    53e8:	e743      	b.n	5272 <__udivmoddi4+0xa2>
    53ea:	4618      	mov	r0, r3
    53ec:	e737      	b.n	525e <__udivmoddi4+0x8e>
    53ee:	4607      	mov	r7, r0
    53f0:	e71f      	b.n	5232 <__udivmoddi4+0x62>
    53f2:	f1c2 0320 	rsb	r3, r2, #32
    53f6:	fa20 f703 	lsr.w	r7, r0, r3
    53fa:	4095      	lsls	r5, r2
    53fc:	fa01 f002 	lsl.w	r0, r1, r2
    5400:	fa21 f303 	lsr.w	r3, r1, r3
    5404:	ea4f 4e15 	mov.w	lr, r5, lsr #16
    5408:	4338      	orrs	r0, r7
    540a:	0c01      	lsrs	r1, r0, #16
    540c:	fbb3 f7fe 	udiv	r7, r3, lr
    5410:	fa1f f885 	uxth.w	r8, r5
    5414:	fb0e 3317 	mls	r3, lr, r7, r3
    5418:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
    541c:	fb07 f308 	mul.w	r3, r7, r8
    5420:	428b      	cmp	r3, r1
    5422:	fa04 f402 	lsl.w	r4, r4, r2
    5426:	d907      	bls.n	5438 <__udivmoddi4+0x268>
    5428:	1869      	adds	r1, r5, r1
    542a:	f107 3cff 	add.w	ip, r7, #4294967295	; 0xffffffff
    542e:	d228      	bcs.n	5482 <__udivmoddi4+0x2b2>
    5430:	428b      	cmp	r3, r1
    5432:	d926      	bls.n	5482 <__udivmoddi4+0x2b2>
    5434:	3f02      	subs	r7, #2
    5436:	4429      	add	r1, r5
    5438:	1acb      	subs	r3, r1, r3
    543a:	b281      	uxth	r1, r0
    543c:	fbb3 f0fe 	udiv	r0, r3, lr
    5440:	fb0e 3310 	mls	r3, lr, r0, r3
    5444:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
    5448:	fb00 f308 	mul.w	r3, r0, r8
    544c:	428b      	cmp	r3, r1
    544e:	d907      	bls.n	5460 <__udivmoddi4+0x290>
    5450:	1869      	adds	r1, r5, r1
    5452:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
    5456:	d210      	bcs.n	547a <__udivmoddi4+0x2aa>
    5458:	428b      	cmp	r3, r1
    545a:	d90e      	bls.n	547a <__udivmoddi4+0x2aa>
    545c:	3802      	subs	r0, #2
    545e:	4429      	add	r1, r5
    5460:	1ac9      	subs	r1, r1, r3
    5462:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
    5466:	e714      	b.n	5292 <__udivmoddi4+0xc2>
    5468:	4541      	cmp	r1, r8
    546a:	d2ab      	bcs.n	53c4 <__udivmoddi4+0x1f4>
    546c:	ebb8 0e02 	subs.w	lr, r8, r2
    5470:	eb69 020c 	sbc.w	r2, r9, ip
    5474:	3801      	subs	r0, #1
    5476:	4613      	mov	r3, r2
    5478:	e7a4      	b.n	53c4 <__udivmoddi4+0x1f4>
    547a:	4660      	mov	r0, ip
    547c:	e7f0      	b.n	5460 <__udivmoddi4+0x290>
    547e:	4618      	mov	r0, r3
    5480:	e795      	b.n	53ae <__udivmoddi4+0x1de>
    5482:	4667      	mov	r7, ip
    5484:	e7d8      	b.n	5438 <__udivmoddi4+0x268>
    5486:	4681      	mov	r9, r0
    5488:	e77b      	b.n	5382 <__udivmoddi4+0x1b2>
    548a:	4638      	mov	r0, r7
    548c:	e745      	b.n	531a <__udivmoddi4+0x14a>
    548e:	f1ac 0c02 	sub.w	ip, ip, #2
    5492:	442b      	add	r3, r5
    5494:	e710      	b.n	52b8 <__udivmoddi4+0xe8>
    5496:	3802      	subs	r0, #2
    5498:	442c      	add	r4, r5
    549a:	e721      	b.n	52e0 <__udivmoddi4+0x110>
    549c:	4637      	mov	r7, r6
    549e:	e6e8      	b.n	5272 <__udivmoddi4+0xa2>

000054a0 <__aeabi_idiv0>:
__aeabi_idiv0():
    54a0:	4770      	bx	lr
    54a2:	bf00      	nop

000054a4 <fiprintf>:
fiprintf():
    54a4:	b40e      	push	{r1, r2, r3}
    54a6:	b503      	push	{r0, r1, lr}
    54a8:	4601      	mov	r1, r0
    54aa:	ab03      	add	r3, sp, #12
    54ac:	4805      	ldr	r0, [pc, #20]	; (54c4 <fiprintf+0x20>)
    54ae:	f853 2b04 	ldr.w	r2, [r3], #4
    54b2:	6800      	ldr	r0, [r0, #0]
    54b4:	9301      	str	r3, [sp, #4]
    54b6:	f000 f98b 	bl	57d0 <_vfiprintf_r>
    54ba:	b002      	add	sp, #8
    54bc:	f85d eb04 	ldr.w	lr, [sp], #4
    54c0:	b003      	add	sp, #12
    54c2:	4770      	bx	lr
    54c4:	10000150 	.word	0x10000150

000054c8 <_fputs_r>:
_fputs_r():
    54c8:	b570      	push	{r4, r5, r6, lr}
    54ca:	460e      	mov	r6, r1
    54cc:	4614      	mov	r4, r2
    54ce:	4605      	mov	r5, r0
    54d0:	b118      	cbz	r0, 54da <_fputs_r+0x12>
    54d2:	6983      	ldr	r3, [r0, #24]
    54d4:	b90b      	cbnz	r3, 54da <_fputs_r+0x12>
    54d6:	f003 f8ef 	bl	86b8 <__sinit>
    54da:	4b2b      	ldr	r3, [pc, #172]	; (5588 <_fputs_r+0xc0>)
    54dc:	429c      	cmp	r4, r3
    54de:	d11e      	bne.n	551e <_fputs_r+0x56>
    54e0:	686c      	ldr	r4, [r5, #4]
    54e2:	6e63      	ldr	r3, [r4, #100]	; 0x64
    54e4:	07da      	lsls	r2, r3, #31
    54e6:	d405      	bmi.n	54f4 <_fputs_r+0x2c>
    54e8:	89a3      	ldrh	r3, [r4, #12]
    54ea:	059b      	lsls	r3, r3, #22
    54ec:	d402      	bmi.n	54f4 <_fputs_r+0x2c>
    54ee:	6da0      	ldr	r0, [r4, #88]	; 0x58
    54f0:	f000 f859 	bl	55a6 <__retarget_lock_acquire_recursive>
    54f4:	89a3      	ldrh	r3, [r4, #12]
    54f6:	0718      	lsls	r0, r3, #28
    54f8:	d51b      	bpl.n	5532 <_fputs_r+0x6a>
    54fa:	6923      	ldr	r3, [r4, #16]
    54fc:	b1cb      	cbz	r3, 5532 <_fputs_r+0x6a>
    54fe:	3e01      	subs	r6, #1
    5500:	f816 1f01 	ldrb.w	r1, [r6, #1]!
    5504:	bb39      	cbnz	r1, 5556 <_fputs_r+0x8e>
    5506:	6e65      	ldr	r5, [r4, #100]	; 0x64
    5508:	f015 0501 	ands.w	r5, r5, #1
    550c:	d139      	bne.n	5582 <_fputs_r+0xba>
    550e:	89a3      	ldrh	r3, [r4, #12]
    5510:	0599      	lsls	r1, r3, #22
    5512:	d402      	bmi.n	551a <_fputs_r+0x52>
    5514:	6da0      	ldr	r0, [r4, #88]	; 0x58
    5516:	f000 f847 	bl	55a8 <__retarget_lock_release_recursive>
    551a:	4628      	mov	r0, r5
    551c:	bd70      	pop	{r4, r5, r6, pc}
    551e:	4b1b      	ldr	r3, [pc, #108]	; (558c <_fputs_r+0xc4>)
    5520:	429c      	cmp	r4, r3
    5522:	d101      	bne.n	5528 <_fputs_r+0x60>
    5524:	68ac      	ldr	r4, [r5, #8]
    5526:	e7dc      	b.n	54e2 <_fputs_r+0x1a>
    5528:	4b19      	ldr	r3, [pc, #100]	; (5590 <_fputs_r+0xc8>)
    552a:	429c      	cmp	r4, r3
    552c:	bf08      	it	eq
    552e:	68ec      	ldreq	r4, [r5, #12]
    5530:	e7d7      	b.n	54e2 <_fputs_r+0x1a>
    5532:	4621      	mov	r1, r4
    5534:	4628      	mov	r0, r5
    5536:	f002 f8f1 	bl	771c <__swsetup_r>
    553a:	2800      	cmp	r0, #0
    553c:	d0df      	beq.n	54fe <_fputs_r+0x36>
    553e:	6e63      	ldr	r3, [r4, #100]	; 0x64
    5540:	07da      	lsls	r2, r3, #31
    5542:	d405      	bmi.n	5550 <_fputs_r+0x88>
    5544:	89a3      	ldrh	r3, [r4, #12]
    5546:	059b      	lsls	r3, r3, #22
    5548:	d402      	bmi.n	5550 <_fputs_r+0x88>
    554a:	6da0      	ldr	r0, [r4, #88]	; 0x58
    554c:	f000 f82c 	bl	55a8 <__retarget_lock_release_recursive>
    5550:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
    5554:	e7e1      	b.n	551a <_fputs_r+0x52>
    5556:	68a3      	ldr	r3, [r4, #8]
    5558:	3b01      	subs	r3, #1
    555a:	2b00      	cmp	r3, #0
    555c:	60a3      	str	r3, [r4, #8]
    555e:	da04      	bge.n	556a <_fputs_r+0xa2>
    5560:	69a2      	ldr	r2, [r4, #24]
    5562:	4293      	cmp	r3, r2
    5564:	db06      	blt.n	5574 <_fputs_r+0xac>
    5566:	290a      	cmp	r1, #10
    5568:	d004      	beq.n	5574 <_fputs_r+0xac>
    556a:	6823      	ldr	r3, [r4, #0]
    556c:	1c5a      	adds	r2, r3, #1
    556e:	6022      	str	r2, [r4, #0]
    5570:	7019      	strb	r1, [r3, #0]
    5572:	e7c5      	b.n	5500 <_fputs_r+0x38>
    5574:	4622      	mov	r2, r4
    5576:	4628      	mov	r0, r5
    5578:	f002 f87e 	bl	7678 <__swbuf_r>
    557c:	3001      	adds	r0, #1
    557e:	d1bf      	bne.n	5500 <_fputs_r+0x38>
    5580:	e7dd      	b.n	553e <_fputs_r+0x76>
    5582:	460d      	mov	r5, r1
    5584:	e7c9      	b.n	551a <_fputs_r+0x52>
    5586:	bf00      	nop
    5588:	0000b8d8 	.word	0x0000b8d8
    558c:	0000b8f8 	.word	0x0000b8f8
    5590:	0000b8b8 	.word	0x0000b8b8

00005594 <fputs>:
fputs():
    5594:	4b02      	ldr	r3, [pc, #8]	; (55a0 <fputs+0xc>)
    5596:	460a      	mov	r2, r1
    5598:	4601      	mov	r1, r0
    559a:	6818      	ldr	r0, [r3, #0]
    559c:	f7ff bf94 	b.w	54c8 <_fputs_r>
    55a0:	10000150 	.word	0x10000150

000055a4 <__retarget_lock_init_recursive>:
__retarget_lock_init_recursive():
    55a4:	4770      	bx	lr

000055a6 <__retarget_lock_acquire_recursive>:
__retarget_lock_acquire_recursive():
    55a6:	4770      	bx	lr

000055a8 <__retarget_lock_release_recursive>:
__retarget_lock_release_recursive():
    55a8:	4770      	bx	lr
    55aa:	Address 0x00000000000055aa is out of bounds.


000055ac <malloc>:
malloc():
    55ac:	4b02      	ldr	r3, [pc, #8]	; (55b8 <malloc+0xc>)
    55ae:	4601      	mov	r1, r0
    55b0:	6818      	ldr	r0, [r3, #0]
    55b2:	f000 b889 	b.w	56c8 <_malloc_r>
    55b6:	bf00      	nop
    55b8:	10000150 	.word	0x10000150

000055bc <free>:
free():
    55bc:	4b02      	ldr	r3, [pc, #8]	; (55c8 <free+0xc>)
    55be:	4601      	mov	r1, r0
    55c0:	6818      	ldr	r0, [r3, #0]
    55c2:	f000 b833 	b.w	562c <_free_r>
    55c6:	bf00      	nop
    55c8:	10000150 	.word	0x10000150

000055cc <memcpy>:
memcpy():
    55cc:	440a      	add	r2, r1
    55ce:	4291      	cmp	r1, r2
    55d0:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
    55d4:	d100      	bne.n	55d8 <memcpy+0xc>
    55d6:	4770      	bx	lr
    55d8:	b510      	push	{r4, lr}
    55da:	f811 4b01 	ldrb.w	r4, [r1], #1
    55de:	f803 4f01 	strb.w	r4, [r3, #1]!
    55e2:	4291      	cmp	r1, r2
    55e4:	d1f9      	bne.n	55da <memcpy+0xe>
    55e6:	bd10      	pop	{r4, pc}

000055e8 <memmove>:
memmove():
    55e8:	4288      	cmp	r0, r1
    55ea:	b510      	push	{r4, lr}
    55ec:	eb01 0302 	add.w	r3, r1, r2
    55f0:	d902      	bls.n	55f8 <memmove+0x10>
    55f2:	4283      	cmp	r3, r0
    55f4:	461c      	mov	r4, r3
    55f6:	d807      	bhi.n	5608 <memmove+0x20>
    55f8:	1e42      	subs	r2, r0, #1
    55fa:	4299      	cmp	r1, r3
    55fc:	d008      	beq.n	5610 <memmove+0x28>
    55fe:	f811 4b01 	ldrb.w	r4, [r1], #1
    5602:	f802 4f01 	strb.w	r4, [r2, #1]!
    5606:	e7f8      	b.n	55fa <memmove+0x12>
    5608:	1883      	adds	r3, r0, r2
    560a:	1a9a      	subs	r2, r3, r2
    560c:	429a      	cmp	r2, r3
    560e:	d100      	bne.n	5612 <memmove+0x2a>
    5610:	bd10      	pop	{r4, pc}
    5612:	f814 1d01 	ldrb.w	r1, [r4, #-1]!
    5616:	f803 1d01 	strb.w	r1, [r3, #-1]!
    561a:	e7f7      	b.n	560c <memmove+0x24>

0000561c <memset>:
memset():
    561c:	4402      	add	r2, r0
    561e:	4603      	mov	r3, r0
    5620:	4293      	cmp	r3, r2
    5622:	d100      	bne.n	5626 <memset+0xa>
    5624:	4770      	bx	lr
    5626:	f803 1b01 	strb.w	r1, [r3], #1
    562a:	e7f9      	b.n	5620 <memset+0x4>

0000562c <_free_r>:
_free_r():
    562c:	b538      	push	{r3, r4, r5, lr}
    562e:	4605      	mov	r5, r0
    5630:	2900      	cmp	r1, #0
    5632:	d045      	beq.n	56c0 <_free_r+0x94>
    5634:	f851 3c04 	ldr.w	r3, [r1, #-4]
    5638:	1f0c      	subs	r4, r1, #4
    563a:	2b00      	cmp	r3, #0
    563c:	bfb8      	it	lt
    563e:	18e4      	addlt	r4, r4, r3
    5640:	f003 fcce 	bl	8fe0 <__malloc_lock>
    5644:	4a1f      	ldr	r2, [pc, #124]	; (56c4 <_free_r+0x98>)
    5646:	6813      	ldr	r3, [r2, #0]
    5648:	4610      	mov	r0, r2
    564a:	b933      	cbnz	r3, 565a <_free_r+0x2e>
    564c:	6063      	str	r3, [r4, #4]
    564e:	6014      	str	r4, [r2, #0]
    5650:	4628      	mov	r0, r5
    5652:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    5656:	f003 bcc9 	b.w	8fec <__malloc_unlock>
    565a:	42a3      	cmp	r3, r4
    565c:	d90c      	bls.n	5678 <_free_r+0x4c>
    565e:	6821      	ldr	r1, [r4, #0]
    5660:	1862      	adds	r2, r4, r1
    5662:	4293      	cmp	r3, r2
    5664:	bf04      	itt	eq
    5666:	681a      	ldreq	r2, [r3, #0]
    5668:	685b      	ldreq	r3, [r3, #4]
    566a:	6063      	str	r3, [r4, #4]
    566c:	bf04      	itt	eq
    566e:	1852      	addeq	r2, r2, r1
    5670:	6022      	streq	r2, [r4, #0]
    5672:	6004      	str	r4, [r0, #0]
    5674:	e7ec      	b.n	5650 <_free_r+0x24>
    5676:	4613      	mov	r3, r2
    5678:	685a      	ldr	r2, [r3, #4]
    567a:	b10a      	cbz	r2, 5680 <_free_r+0x54>
    567c:	42a2      	cmp	r2, r4
    567e:	d9fa      	bls.n	5676 <_free_r+0x4a>
    5680:	6819      	ldr	r1, [r3, #0]
    5682:	1858      	adds	r0, r3, r1
    5684:	42a0      	cmp	r0, r4
    5686:	d10b      	bne.n	56a0 <_free_r+0x74>
    5688:	6820      	ldr	r0, [r4, #0]
    568a:	4401      	add	r1, r0
    568c:	1858      	adds	r0, r3, r1
    568e:	4282      	cmp	r2, r0
    5690:	6019      	str	r1, [r3, #0]
    5692:	d1dd      	bne.n	5650 <_free_r+0x24>
    5694:	6810      	ldr	r0, [r2, #0]
    5696:	6852      	ldr	r2, [r2, #4]
    5698:	605a      	str	r2, [r3, #4]
    569a:	4401      	add	r1, r0
    569c:	6019      	str	r1, [r3, #0]
    569e:	e7d7      	b.n	5650 <_free_r+0x24>
    56a0:	d902      	bls.n	56a8 <_free_r+0x7c>
    56a2:	230c      	movs	r3, #12
    56a4:	602b      	str	r3, [r5, #0]
    56a6:	e7d3      	b.n	5650 <_free_r+0x24>
    56a8:	6820      	ldr	r0, [r4, #0]
    56aa:	1821      	adds	r1, r4, r0
    56ac:	428a      	cmp	r2, r1
    56ae:	bf04      	itt	eq
    56b0:	6811      	ldreq	r1, [r2, #0]
    56b2:	6852      	ldreq	r2, [r2, #4]
    56b4:	6062      	str	r2, [r4, #4]
    56b6:	bf04      	itt	eq
    56b8:	1809      	addeq	r1, r1, r0
    56ba:	6021      	streq	r1, [r4, #0]
    56bc:	605c      	str	r4, [r3, #4]
    56be:	e7c7      	b.n	5650 <_free_r+0x24>
    56c0:	bd38      	pop	{r3, r4, r5, pc}
    56c2:	bf00      	nop
    56c4:	10000b58 	.word	0x10000b58

000056c8 <_malloc_r>:
_malloc_r():
    56c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    56ca:	1ccd      	adds	r5, r1, #3
    56cc:	f025 0503 	bic.w	r5, r5, #3
    56d0:	3508      	adds	r5, #8
    56d2:	2d0c      	cmp	r5, #12
    56d4:	bf38      	it	cc
    56d6:	250c      	movcc	r5, #12
    56d8:	2d00      	cmp	r5, #0
    56da:	4606      	mov	r6, r0
    56dc:	db01      	blt.n	56e2 <_malloc_r+0x1a>
    56de:	42a9      	cmp	r1, r5
    56e0:	d903      	bls.n	56ea <_malloc_r+0x22>
    56e2:	230c      	movs	r3, #12
    56e4:	6033      	str	r3, [r6, #0]
    56e6:	2000      	movs	r0, #0
    56e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    56ea:	f003 fc79 	bl	8fe0 <__malloc_lock>
    56ee:	4921      	ldr	r1, [pc, #132]	; (5774 <_malloc_r+0xac>)
    56f0:	680a      	ldr	r2, [r1, #0]
    56f2:	4614      	mov	r4, r2
    56f4:	b99c      	cbnz	r4, 571e <_malloc_r+0x56>
    56f6:	4f20      	ldr	r7, [pc, #128]	; (5778 <_malloc_r+0xb0>)
    56f8:	683b      	ldr	r3, [r7, #0]
    56fa:	b923      	cbnz	r3, 5706 <_malloc_r+0x3e>
    56fc:	4621      	mov	r1, r4
    56fe:	4630      	mov	r0, r6
    5700:	f001 f840 	bl	6784 <_sbrk_r>
    5704:	6038      	str	r0, [r7, #0]
    5706:	4629      	mov	r1, r5
    5708:	4630      	mov	r0, r6
    570a:	f001 f83b 	bl	6784 <_sbrk_r>
    570e:	1c43      	adds	r3, r0, #1
    5710:	d123      	bne.n	575a <_malloc_r+0x92>
    5712:	230c      	movs	r3, #12
    5714:	6033      	str	r3, [r6, #0]
    5716:	4630      	mov	r0, r6
    5718:	f003 fc68 	bl	8fec <__malloc_unlock>
    571c:	e7e3      	b.n	56e6 <_malloc_r+0x1e>
    571e:	6823      	ldr	r3, [r4, #0]
    5720:	1b5b      	subs	r3, r3, r5
    5722:	d417      	bmi.n	5754 <_malloc_r+0x8c>
    5724:	2b0b      	cmp	r3, #11
    5726:	d903      	bls.n	5730 <_malloc_r+0x68>
    5728:	6023      	str	r3, [r4, #0]
    572a:	441c      	add	r4, r3
    572c:	6025      	str	r5, [r4, #0]
    572e:	e004      	b.n	573a <_malloc_r+0x72>
    5730:	6863      	ldr	r3, [r4, #4]
    5732:	42a2      	cmp	r2, r4
    5734:	bf0c      	ite	eq
    5736:	600b      	streq	r3, [r1, #0]
    5738:	6053      	strne	r3, [r2, #4]
    573a:	4630      	mov	r0, r6
    573c:	f003 fc56 	bl	8fec <__malloc_unlock>
    5740:	f104 000b 	add.w	r0, r4, #11
    5744:	1d23      	adds	r3, r4, #4
    5746:	f020 0007 	bic.w	r0, r0, #7
    574a:	1ac2      	subs	r2, r0, r3
    574c:	d0cc      	beq.n	56e8 <_malloc_r+0x20>
    574e:	1a1b      	subs	r3, r3, r0
    5750:	50a3      	str	r3, [r4, r2]
    5752:	e7c9      	b.n	56e8 <_malloc_r+0x20>
    5754:	4622      	mov	r2, r4
    5756:	6864      	ldr	r4, [r4, #4]
    5758:	e7cc      	b.n	56f4 <_malloc_r+0x2c>
    575a:	1cc4      	adds	r4, r0, #3
    575c:	f024 0403 	bic.w	r4, r4, #3
    5760:	42a0      	cmp	r0, r4
    5762:	d0e3      	beq.n	572c <_malloc_r+0x64>
    5764:	1a21      	subs	r1, r4, r0
    5766:	4630      	mov	r0, r6
    5768:	f001 f80c 	bl	6784 <_sbrk_r>
    576c:	3001      	adds	r0, #1
    576e:	d1dd      	bne.n	572c <_malloc_r+0x64>
    5770:	e7cf      	b.n	5712 <_malloc_r+0x4a>
    5772:	bf00      	nop
    5774:	10000b58 	.word	0x10000b58
    5778:	10000b5c 	.word	0x10000b5c

0000577c <__sfputc_r>:
__sfputc_r():
    577c:	6893      	ldr	r3, [r2, #8]
    577e:	3b01      	subs	r3, #1
    5780:	2b00      	cmp	r3, #0
    5782:	b410      	push	{r4}
    5784:	6093      	str	r3, [r2, #8]
    5786:	da08      	bge.n	579a <__sfputc_r+0x1e>
    5788:	6994      	ldr	r4, [r2, #24]
    578a:	42a3      	cmp	r3, r4
    578c:	db01      	blt.n	5792 <__sfputc_r+0x16>
    578e:	290a      	cmp	r1, #10
    5790:	d103      	bne.n	579a <__sfputc_r+0x1e>
    5792:	f85d 4b04 	ldr.w	r4, [sp], #4
    5796:	f001 bf6f 	b.w	7678 <__swbuf_r>
    579a:	6813      	ldr	r3, [r2, #0]
    579c:	1c58      	adds	r0, r3, #1
    579e:	6010      	str	r0, [r2, #0]
    57a0:	7019      	strb	r1, [r3, #0]
    57a2:	4608      	mov	r0, r1
    57a4:	f85d 4b04 	ldr.w	r4, [sp], #4
    57a8:	4770      	bx	lr

000057aa <__sfputs_r>:
__sfputs_r():
    57aa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    57ac:	4606      	mov	r6, r0
    57ae:	460f      	mov	r7, r1
    57b0:	4614      	mov	r4, r2
    57b2:	18d5      	adds	r5, r2, r3
    57b4:	42ac      	cmp	r4, r5
    57b6:	d101      	bne.n	57bc <__sfputs_r+0x12>
    57b8:	2000      	movs	r0, #0
    57ba:	e007      	b.n	57cc <__sfputs_r+0x22>
    57bc:	463a      	mov	r2, r7
    57be:	f814 1b01 	ldrb.w	r1, [r4], #1
    57c2:	4630      	mov	r0, r6
    57c4:	f7ff ffda 	bl	577c <__sfputc_r>
    57c8:	1c43      	adds	r3, r0, #1
    57ca:	d1f3      	bne.n	57b4 <__sfputs_r+0xa>
    57cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    57ce:	Address 0x00000000000057ce is out of bounds.


000057d0 <_vfiprintf_r>:
_vfprintf_r():
    57d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    57d4:	460d      	mov	r5, r1
    57d6:	b09d      	sub	sp, #116	; 0x74
    57d8:	4614      	mov	r4, r2
    57da:	461e      	mov	r6, r3
    57dc:	4607      	mov	r7, r0
    57de:	b118      	cbz	r0, 57e8 <_vfiprintf_r+0x18>
    57e0:	6983      	ldr	r3, [r0, #24]
    57e2:	b90b      	cbnz	r3, 57e8 <_vfiprintf_r+0x18>
    57e4:	f002 ff68 	bl	86b8 <__sinit>
    57e8:	4b85      	ldr	r3, [pc, #532]	; (5a00 <_vfiprintf_r+0x230>)
    57ea:	429d      	cmp	r5, r3
    57ec:	d11b      	bne.n	5826 <_vfiprintf_r+0x56>
    57ee:	687d      	ldr	r5, [r7, #4]
    57f0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
    57f2:	07d9      	lsls	r1, r3, #31
    57f4:	d405      	bmi.n	5802 <_vfiprintf_r+0x32>
    57f6:	89ab      	ldrh	r3, [r5, #12]
    57f8:	059a      	lsls	r2, r3, #22
    57fa:	d402      	bmi.n	5802 <_vfiprintf_r+0x32>
    57fc:	6da8      	ldr	r0, [r5, #88]	; 0x58
    57fe:	f7ff fed2 	bl	55a6 <__retarget_lock_acquire_recursive>
    5802:	89ab      	ldrh	r3, [r5, #12]
    5804:	071b      	lsls	r3, r3, #28
    5806:	d501      	bpl.n	580c <_vfiprintf_r+0x3c>
    5808:	692b      	ldr	r3, [r5, #16]
    580a:	b9eb      	cbnz	r3, 5848 <_vfiprintf_r+0x78>
    580c:	4629      	mov	r1, r5
    580e:	4638      	mov	r0, r7
    5810:	f001 ff84 	bl	771c <__swsetup_r>
    5814:	b1c0      	cbz	r0, 5848 <_vfiprintf_r+0x78>
    5816:	6e6b      	ldr	r3, [r5, #100]	; 0x64
    5818:	07d8      	lsls	r0, r3, #31
    581a:	d50e      	bpl.n	583a <_vfiprintf_r+0x6a>
    581c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    5820:	b01d      	add	sp, #116	; 0x74
    5822:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5826:	4b77      	ldr	r3, [pc, #476]	; (5a04 <_vfiprintf_r+0x234>)
    5828:	429d      	cmp	r5, r3
    582a:	d101      	bne.n	5830 <_vfiprintf_r+0x60>
    582c:	68bd      	ldr	r5, [r7, #8]
    582e:	e7df      	b.n	57f0 <_vfiprintf_r+0x20>
    5830:	4b75      	ldr	r3, [pc, #468]	; (5a08 <_vfiprintf_r+0x238>)
    5832:	429d      	cmp	r5, r3
    5834:	bf08      	it	eq
    5836:	68fd      	ldreq	r5, [r7, #12]
    5838:	e7da      	b.n	57f0 <_vfiprintf_r+0x20>
    583a:	89ab      	ldrh	r3, [r5, #12]
    583c:	0599      	lsls	r1, r3, #22
    583e:	d4ed      	bmi.n	581c <_vfiprintf_r+0x4c>
    5840:	6da8      	ldr	r0, [r5, #88]	; 0x58
    5842:	f7ff feb1 	bl	55a8 <__retarget_lock_release_recursive>
    5846:	e7e9      	b.n	581c <_vfiprintf_r+0x4c>
    5848:	2300      	movs	r3, #0
    584a:	9309      	str	r3, [sp, #36]	; 0x24
    584c:	2320      	movs	r3, #32
    584e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
    5852:	f8df 91b8 	ldr.w	r9, [pc, #440]	; 5a0c <_vfiprintf_r+0x23c>
    5856:	9603      	str	r6, [sp, #12]
    5858:	2330      	movs	r3, #48	; 0x30
    585a:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
    585e:	f04f 0a01 	mov.w	sl, #1
    5862:	4623      	mov	r3, r4
    5864:	461e      	mov	r6, r3
    5866:	f813 2b01 	ldrb.w	r2, [r3], #1
    586a:	b10a      	cbz	r2, 5870 <_vfiprintf_r+0xa0>
    586c:	2a25      	cmp	r2, #37	; 0x25
    586e:	d1f9      	bne.n	5864 <_vfiprintf_r+0x94>
    5870:	ebb6 0b04 	subs.w	fp, r6, r4
    5874:	d00b      	beq.n	588e <_vfiprintf_r+0xbe>
    5876:	465b      	mov	r3, fp
    5878:	4622      	mov	r2, r4
    587a:	4629      	mov	r1, r5
    587c:	4638      	mov	r0, r7
    587e:	f7ff ff94 	bl	57aa <__sfputs_r>
    5882:	3001      	adds	r0, #1
    5884:	f000 80a3 	beq.w	59ce <_vfiprintf_r+0x1fe>
    5888:	9b09      	ldr	r3, [sp, #36]	; 0x24
    588a:	445b      	add	r3, fp
    588c:	9309      	str	r3, [sp, #36]	; 0x24
    588e:	7833      	ldrb	r3, [r6, #0]
    5890:	2b00      	cmp	r3, #0
    5892:	f000 809c 	beq.w	59ce <_vfiprintf_r+0x1fe>
    5896:	2300      	movs	r3, #0
    5898:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    589c:	e9cd 2305 	strd	r2, r3, [sp, #20]
    58a0:	3601      	adds	r6, #1
    58a2:	9304      	str	r3, [sp, #16]
    58a4:	9307      	str	r3, [sp, #28]
    58a6:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
    58aa:	931a      	str	r3, [sp, #104]	; 0x68
    58ac:	4634      	mov	r4, r6
    58ae:	2205      	movs	r2, #5
    58b0:	f814 1b01 	ldrb.w	r1, [r4], #1
    58b4:	4855      	ldr	r0, [pc, #340]	; (5a0c <_vfiprintf_r+0x23c>)
    58b6:	f003 fb43 	bl	8f40 <memchr>
    58ba:	9b04      	ldr	r3, [sp, #16]
    58bc:	b9c0      	cbnz	r0, 58f0 <_vfiprintf_r+0x120>
    58be:	06da      	lsls	r2, r3, #27
    58c0:	bf44      	itt	mi
    58c2:	2220      	movmi	r2, #32
    58c4:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    58c8:	0718      	lsls	r0, r3, #28
    58ca:	bf44      	itt	mi
    58cc:	222b      	movmi	r2, #43	; 0x2b
    58ce:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    58d2:	7832      	ldrb	r2, [r6, #0]
    58d4:	2a2a      	cmp	r2, #42	; 0x2a
    58d6:	d013      	beq.n	5900 <_vfiprintf_r+0x130>
    58d8:	9a07      	ldr	r2, [sp, #28]
    58da:	4634      	mov	r4, r6
    58dc:	2000      	movs	r0, #0
    58de:	260a      	movs	r6, #10
    58e0:	4621      	mov	r1, r4
    58e2:	f811 3b01 	ldrb.w	r3, [r1], #1
    58e6:	3b30      	subs	r3, #48	; 0x30
    58e8:	2b09      	cmp	r3, #9
    58ea:	d94b      	bls.n	5984 <_vfiprintf_r+0x1b4>
    58ec:	b970      	cbnz	r0, 590c <_vfiprintf_r+0x13c>
    58ee:	e014      	b.n	591a <_vfiprintf_r+0x14a>
    58f0:	eba0 0009 	sub.w	r0, r0, r9
    58f4:	fa0a f000 	lsl.w	r0, sl, r0
    58f8:	4318      	orrs	r0, r3
    58fa:	9004      	str	r0, [sp, #16]
    58fc:	4626      	mov	r6, r4
    58fe:	e7d5      	b.n	58ac <_vfiprintf_r+0xdc>
    5900:	9a03      	ldr	r2, [sp, #12]
    5902:	1d11      	adds	r1, r2, #4
    5904:	6812      	ldr	r2, [r2, #0]
    5906:	9103      	str	r1, [sp, #12]
    5908:	2a00      	cmp	r2, #0
    590a:	db01      	blt.n	5910 <_vfiprintf_r+0x140>
    590c:	9207      	str	r2, [sp, #28]
    590e:	e004      	b.n	591a <_vfiprintf_r+0x14a>
    5910:	4252      	negs	r2, r2
    5912:	f043 0302 	orr.w	r3, r3, #2
    5916:	9207      	str	r2, [sp, #28]
    5918:	9304      	str	r3, [sp, #16]
    591a:	7823      	ldrb	r3, [r4, #0]
    591c:	2b2e      	cmp	r3, #46	; 0x2e
    591e:	d10c      	bne.n	593a <_vfiprintf_r+0x16a>
    5920:	7863      	ldrb	r3, [r4, #1]
    5922:	2b2a      	cmp	r3, #42	; 0x2a
    5924:	d133      	bne.n	598e <_vfiprintf_r+0x1be>
    5926:	9b03      	ldr	r3, [sp, #12]
    5928:	1d1a      	adds	r2, r3, #4
    592a:	681b      	ldr	r3, [r3, #0]
    592c:	9203      	str	r2, [sp, #12]
    592e:	2b00      	cmp	r3, #0
    5930:	bfb8      	it	lt
    5932:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
    5936:	3402      	adds	r4, #2
    5938:	9305      	str	r3, [sp, #20]
    593a:	4e35      	ldr	r6, [pc, #212]	; (5a10 <_vfiprintf_r+0x240>)
    593c:	7821      	ldrb	r1, [r4, #0]
    593e:	2203      	movs	r2, #3
    5940:	4630      	mov	r0, r6
    5942:	f003 fafd 	bl	8f40 <memchr>
    5946:	b138      	cbz	r0, 5958 <_vfiprintf_r+0x188>
    5948:	2340      	movs	r3, #64	; 0x40
    594a:	1b80      	subs	r0, r0, r6
    594c:	fa03 f000 	lsl.w	r0, r3, r0
    5950:	9b04      	ldr	r3, [sp, #16]
    5952:	4303      	orrs	r3, r0
    5954:	3401      	adds	r4, #1
    5956:	9304      	str	r3, [sp, #16]
    5958:	f814 1b01 	ldrb.w	r1, [r4], #1
    595c:	482d      	ldr	r0, [pc, #180]	; (5a14 <_vfiprintf_r+0x244>)
    595e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
    5962:	2206      	movs	r2, #6
    5964:	f003 faec 	bl	8f40 <memchr>
    5968:	2800      	cmp	r0, #0
    596a:	d03f      	beq.n	59ec <_vfiprintf_r+0x21c>
    596c:	4b2a      	ldr	r3, [pc, #168]	; (5a18 <_vfiprintf_r+0x248>)
    596e:	bb13      	cbnz	r3, 59b6 <_vfiprintf_r+0x1e6>
    5970:	9b03      	ldr	r3, [sp, #12]
    5972:	3307      	adds	r3, #7
    5974:	f023 0307 	bic.w	r3, r3, #7
    5978:	3308      	adds	r3, #8
    597a:	9303      	str	r3, [sp, #12]
    597c:	9b09      	ldr	r3, [sp, #36]	; 0x24
    597e:	4443      	add	r3, r8
    5980:	9309      	str	r3, [sp, #36]	; 0x24
    5982:	e76e      	b.n	5862 <_vfiprintf_r+0x92>
    5984:	fb06 3202 	mla	r2, r6, r2, r3
    5988:	2001      	movs	r0, #1
    598a:	460c      	mov	r4, r1
    598c:	e7a8      	b.n	58e0 <_vfiprintf_r+0x110>
    598e:	2300      	movs	r3, #0
    5990:	3401      	adds	r4, #1
    5992:	9305      	str	r3, [sp, #20]
    5994:	4619      	mov	r1, r3
    5996:	260a      	movs	r6, #10
    5998:	4620      	mov	r0, r4
    599a:	f810 2b01 	ldrb.w	r2, [r0], #1
    599e:	3a30      	subs	r2, #48	; 0x30
    59a0:	2a09      	cmp	r2, #9
    59a2:	d903      	bls.n	59ac <_vfiprintf_r+0x1dc>
    59a4:	2b00      	cmp	r3, #0
    59a6:	d0c8      	beq.n	593a <_vfiprintf_r+0x16a>
    59a8:	9105      	str	r1, [sp, #20]
    59aa:	e7c6      	b.n	593a <_vfiprintf_r+0x16a>
    59ac:	fb06 2101 	mla	r1, r6, r1, r2
    59b0:	2301      	movs	r3, #1
    59b2:	4604      	mov	r4, r0
    59b4:	e7f0      	b.n	5998 <_vfiprintf_r+0x1c8>
    59b6:	ab03      	add	r3, sp, #12
    59b8:	9300      	str	r3, [sp, #0]
    59ba:	462a      	mov	r2, r5
    59bc:	4b17      	ldr	r3, [pc, #92]	; (5a1c <_vfiprintf_r+0x24c>)
    59be:	a904      	add	r1, sp, #16
    59c0:	4638      	mov	r0, r7
    59c2:	f000 f8bd 	bl	5b40 <_printf_float>
    59c6:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
    59ca:	4680      	mov	r8, r0
    59cc:	d1d6      	bne.n	597c <_vfiprintf_r+0x1ac>
    59ce:	6e6b      	ldr	r3, [r5, #100]	; 0x64
    59d0:	07d9      	lsls	r1, r3, #31
    59d2:	d405      	bmi.n	59e0 <_vfiprintf_r+0x210>
    59d4:	89ab      	ldrh	r3, [r5, #12]
    59d6:	059a      	lsls	r2, r3, #22
    59d8:	d402      	bmi.n	59e0 <_vfiprintf_r+0x210>
    59da:	6da8      	ldr	r0, [r5, #88]	; 0x58
    59dc:	f7ff fde4 	bl	55a8 <__retarget_lock_release_recursive>
    59e0:	89ab      	ldrh	r3, [r5, #12]
    59e2:	065b      	lsls	r3, r3, #25
    59e4:	f53f af1a 	bmi.w	581c <_vfiprintf_r+0x4c>
    59e8:	9809      	ldr	r0, [sp, #36]	; 0x24
    59ea:	e719      	b.n	5820 <_vfiprintf_r+0x50>
    59ec:	ab03      	add	r3, sp, #12
    59ee:	9300      	str	r3, [sp, #0]
    59f0:	462a      	mov	r2, r5
    59f2:	4b0a      	ldr	r3, [pc, #40]	; (5a1c <_vfiprintf_r+0x24c>)
    59f4:	a904      	add	r1, sp, #16
    59f6:	4638      	mov	r0, r7
    59f8:	f000 fb42 	bl	6080 <_printf_i>
    59fc:	e7e3      	b.n	59c6 <_vfiprintf_r+0x1f6>
    59fe:	bf00      	nop
    5a00:	0000b8d8 	.word	0x0000b8d8
    5a04:	0000b8f8 	.word	0x0000b8f8
    5a08:	0000b8b8 	.word	0x0000b8b8
    5a0c:	0000b80c 	.word	0x0000b80c
    5a10:	0000b812 	.word	0x0000b812
    5a14:	0000b816 	.word	0x0000b816
    5a18:	00005b41 	.word	0x00005b41
    5a1c:	000057ab 	.word	0x000057ab

00005a20 <__cvt>:
__cvt():
    5a20:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
    5a24:	ec55 4b10 	vmov	r4, r5, d0
    5a28:	2d00      	cmp	r5, #0
    5a2a:	460e      	mov	r6, r1
    5a2c:	4691      	mov	r9, r2
    5a2e:	4619      	mov	r1, r3
    5a30:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
    5a34:	f04f 0200 	mov.w	r2, #0
    5a38:	da03      	bge.n	5a42 <__cvt+0x22>
    5a3a:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
    5a3e:	461d      	mov	r5, r3
    5a40:	222d      	movs	r2, #45	; 0x2d
    5a42:	9f0d      	ldr	r7, [sp, #52]	; 0x34
    5a44:	700a      	strb	r2, [r1, #0]
    5a46:	f027 0720 	bic.w	r7, r7, #32
    5a4a:	2f46      	cmp	r7, #70	; 0x46
    5a4c:	d004      	beq.n	5a58 <__cvt+0x38>
    5a4e:	2f45      	cmp	r7, #69	; 0x45
    5a50:	d100      	bne.n	5a54 <__cvt+0x34>
    5a52:	3601      	adds	r6, #1
    5a54:	2102      	movs	r1, #2
    5a56:	e000      	b.n	5a5a <__cvt+0x3a>
    5a58:	2103      	movs	r1, #3
    5a5a:	ab03      	add	r3, sp, #12
    5a5c:	9301      	str	r3, [sp, #4]
    5a5e:	ab02      	add	r3, sp, #8
    5a60:	9300      	str	r3, [sp, #0]
    5a62:	4632      	mov	r2, r6
    5a64:	4653      	mov	r3, sl
    5a66:	ec45 4b10 	vmov	d0, r4, r5
    5a6a:	f001 ff51 	bl	7910 <_dtoa_r>
    5a6e:	2f47      	cmp	r7, #71	; 0x47
    5a70:	4680      	mov	r8, r0
    5a72:	d102      	bne.n	5a7a <__cvt+0x5a>
    5a74:	f019 0f01 	tst.w	r9, #1
    5a78:	d022      	beq.n	5ac0 <__cvt+0xa0>
    5a7a:	2f46      	cmp	r7, #70	; 0x46
    5a7c:	eb08 0906 	add.w	r9, r8, r6
    5a80:	d111      	bne.n	5aa6 <__cvt+0x86>
    5a82:	f898 3000 	ldrb.w	r3, [r8]
    5a86:	2b30      	cmp	r3, #48	; 0x30
    5a88:	d10a      	bne.n	5aa0 <__cvt+0x80>
    5a8a:	2200      	movs	r2, #0
    5a8c:	2300      	movs	r3, #0
    5a8e:	4620      	mov	r0, r4
    5a90:	4629      	mov	r1, r5
    5a92:	f004 fb61 	bl	a158 <__aeabi_dcmpeq>
    5a96:	b918      	cbnz	r0, 5aa0 <__cvt+0x80>
    5a98:	f1c6 0601 	rsb	r6, r6, #1
    5a9c:	f8ca 6000 	str.w	r6, [sl]
    5aa0:	f8da 3000 	ldr.w	r3, [sl]
    5aa4:	4499      	add	r9, r3
    5aa6:	2200      	movs	r2, #0
    5aa8:	2300      	movs	r3, #0
    5aaa:	4620      	mov	r0, r4
    5aac:	4629      	mov	r1, r5
    5aae:	f004 fb53 	bl	a158 <__aeabi_dcmpeq>
    5ab2:	b108      	cbz	r0, 5ab8 <__cvt+0x98>
    5ab4:	f8cd 900c 	str.w	r9, [sp, #12]
    5ab8:	2230      	movs	r2, #48	; 0x30
    5aba:	9b03      	ldr	r3, [sp, #12]
    5abc:	454b      	cmp	r3, r9
    5abe:	d308      	bcc.n	5ad2 <__cvt+0xb2>
    5ac0:	9b03      	ldr	r3, [sp, #12]
    5ac2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    5ac4:	eba3 0308 	sub.w	r3, r3, r8
    5ac8:	4640      	mov	r0, r8
    5aca:	6013      	str	r3, [r2, #0]
    5acc:	b004      	add	sp, #16
    5ace:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    5ad2:	1c59      	adds	r1, r3, #1
    5ad4:	9103      	str	r1, [sp, #12]
    5ad6:	701a      	strb	r2, [r3, #0]
    5ad8:	e7ef      	b.n	5aba <__cvt+0x9a>

00005ada <__exponent>:
__exponent():
    5ada:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    5adc:	2900      	cmp	r1, #0
    5ade:	bfba      	itte	lt
    5ae0:	4249      	neglt	r1, r1
    5ae2:	232d      	movlt	r3, #45	; 0x2d
    5ae4:	232b      	movge	r3, #43	; 0x2b
    5ae6:	2909      	cmp	r1, #9
    5ae8:	7002      	strb	r2, [r0, #0]
    5aea:	7043      	strb	r3, [r0, #1]
    5aec:	dd21      	ble.n	5b32 <__exponent+0x58>
    5aee:	f10d 0307 	add.w	r3, sp, #7
    5af2:	461f      	mov	r7, r3
    5af4:	260a      	movs	r6, #10
    5af6:	fb91 f2f6 	sdiv	r2, r1, r6
    5afa:	fb06 1412 	mls	r4, r6, r2, r1
    5afe:	3430      	adds	r4, #48	; 0x30
    5b00:	2963      	cmp	r1, #99	; 0x63
    5b02:	f103 35ff 	add.w	r5, r3, #4294967295	; 0xffffffff
    5b06:	f803 4c01 	strb.w	r4, [r3, #-1]
    5b0a:	dc0a      	bgt.n	5b22 <__exponent+0x48>
    5b0c:	3230      	adds	r2, #48	; 0x30
    5b0e:	f805 2c01 	strb.w	r2, [r5, #-1]
    5b12:	3b02      	subs	r3, #2
    5b14:	1c82      	adds	r2, r0, #2
    5b16:	42bb      	cmp	r3, r7
    5b18:	4614      	mov	r4, r2
    5b1a:	d305      	bcc.n	5b28 <__exponent+0x4e>
    5b1c:	1a20      	subs	r0, r4, r0
    5b1e:	b003      	add	sp, #12
    5b20:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5b22:	462b      	mov	r3, r5
    5b24:	4611      	mov	r1, r2
    5b26:	e7e6      	b.n	5af6 <__exponent+0x1c>
    5b28:	f813 1b01 	ldrb.w	r1, [r3], #1
    5b2c:	f802 1b01 	strb.w	r1, [r2], #1
    5b30:	e7f1      	b.n	5b16 <__exponent+0x3c>
    5b32:	2330      	movs	r3, #48	; 0x30
    5b34:	4419      	add	r1, r3
    5b36:	7083      	strb	r3, [r0, #2]
    5b38:	1d04      	adds	r4, r0, #4
    5b3a:	70c1      	strb	r1, [r0, #3]
    5b3c:	e7ee      	b.n	5b1c <__exponent+0x42>
    5b3e:	Address 0x0000000000005b3e is out of bounds.


00005b40 <_printf_float>:
_printf_float():
    5b40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5b44:	b08d      	sub	sp, #52	; 0x34
    5b46:	460c      	mov	r4, r1
    5b48:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
    5b4c:	4616      	mov	r6, r2
    5b4e:	461f      	mov	r7, r3
    5b50:	4605      	mov	r5, r0
    5b52:	f003 f977 	bl	8e44 <_localeconv_r>
    5b56:	6803      	ldr	r3, [r0, #0]
    5b58:	9306      	str	r3, [sp, #24]
    5b5a:	4618      	mov	r0, r3
    5b5c:	f000 ff0a 	bl	6974 <strlen>
    5b60:	2300      	movs	r3, #0
    5b62:	930a      	str	r3, [sp, #40]	; 0x28
    5b64:	f8d8 3000 	ldr.w	r3, [r8]
    5b68:	9007      	str	r0, [sp, #28]
    5b6a:	3307      	adds	r3, #7
    5b6c:	f023 0307 	bic.w	r3, r3, #7
    5b70:	f103 0208 	add.w	r2, r3, #8
    5b74:	f894 a018 	ldrb.w	sl, [r4, #24]
    5b78:	f8d4 b000 	ldr.w	fp, [r4]
    5b7c:	f8c8 2000 	str.w	r2, [r8]
    5b80:	e9d3 2300 	ldrd	r2, r3, [r3]
    5b84:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
    5b88:	ed94 7b12 	vldr	d7, [r4, #72]	; 0x48
    5b8c:	ed8d 7b04 	vstr	d7, [sp, #16]
    5b90:	e9dd 8304 	ldrd	r8, r3, [sp, #16]
    5b94:	f023 4900 	bic.w	r9, r3, #2147483648	; 0x80000000
    5b98:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    5b9c:	4ba6      	ldr	r3, [pc, #664]	; (5e38 <_printf_float+0x2f8>)
    5b9e:	4640      	mov	r0, r8
    5ba0:	4649      	mov	r1, r9
    5ba2:	f004 fb0b 	bl	a1bc <__aeabi_dcmpun>
    5ba6:	bb70      	cbnz	r0, 5c06 <_printf_float+0xc6>
    5ba8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    5bac:	4ba2      	ldr	r3, [pc, #648]	; (5e38 <_printf_float+0x2f8>)
    5bae:	4640      	mov	r0, r8
    5bb0:	4649      	mov	r1, r9
    5bb2:	f004 fae5 	bl	a180 <__aeabi_dcmple>
    5bb6:	bb30      	cbnz	r0, 5c06 <_printf_float+0xc6>
    5bb8:	2200      	movs	r2, #0
    5bba:	2300      	movs	r3, #0
    5bbc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    5bc0:	f004 fad4 	bl	a16c <__aeabi_dcmplt>
    5bc4:	b110      	cbz	r0, 5bcc <_printf_float+0x8c>
    5bc6:	232d      	movs	r3, #45	; 0x2d
    5bc8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    5bcc:	4a9b      	ldr	r2, [pc, #620]	; (5e3c <_printf_float+0x2fc>)
    5bce:	4b9c      	ldr	r3, [pc, #624]	; (5e40 <_printf_float+0x300>)
    5bd0:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
    5bd4:	bf94      	ite	ls
    5bd6:	4690      	movls	r8, r2
    5bd8:	4698      	movhi	r8, r3
    5bda:	2303      	movs	r3, #3
    5bdc:	f02b 0204 	bic.w	r2, fp, #4
    5be0:	6123      	str	r3, [r4, #16]
    5be2:	6022      	str	r2, [r4, #0]
    5be4:	f04f 0900 	mov.w	r9, #0
    5be8:	9700      	str	r7, [sp, #0]
    5bea:	4633      	mov	r3, r6
    5bec:	aa0b      	add	r2, sp, #44	; 0x2c
    5bee:	4621      	mov	r1, r4
    5bf0:	4628      	mov	r0, r5
    5bf2:	f000 f9cf 	bl	5f94 <_printf_common>
    5bf6:	3001      	adds	r0, #1
    5bf8:	f040 808c 	bne.w	5d14 <_printf_float+0x1d4>
    5bfc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    5c00:	b00d      	add	sp, #52	; 0x34
    5c02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5c06:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    5c0a:	4610      	mov	r0, r2
    5c0c:	4619      	mov	r1, r3
    5c0e:	f004 fad5 	bl	a1bc <__aeabi_dcmpun>
    5c12:	b140      	cbz	r0, 5c26 <_printf_float+0xe6>
    5c14:	9b05      	ldr	r3, [sp, #20]
    5c16:	4a8b      	ldr	r2, [pc, #556]	; (5e44 <_printf_float+0x304>)
    5c18:	2b00      	cmp	r3, #0
    5c1a:	bfbc      	itt	lt
    5c1c:	232d      	movlt	r3, #45	; 0x2d
    5c1e:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
    5c22:	4b89      	ldr	r3, [pc, #548]	; (5e48 <_printf_float+0x308>)
    5c24:	e7d4      	b.n	5bd0 <_printf_float+0x90>
    5c26:	6863      	ldr	r3, [r4, #4]
    5c28:	1c5a      	adds	r2, r3, #1
    5c2a:	f00a 09df 	and.w	r9, sl, #223	; 0xdf
    5c2e:	d13e      	bne.n	5cae <_printf_float+0x16e>
    5c30:	2306      	movs	r3, #6
    5c32:	6063      	str	r3, [r4, #4]
    5c34:	2300      	movs	r3, #0
    5c36:	9303      	str	r3, [sp, #12]
    5c38:	ab0a      	add	r3, sp, #40	; 0x28
    5c3a:	f44b 6280 	orr.w	r2, fp, #1024	; 0x400
    5c3e:	e9cd a301 	strd	sl, r3, [sp, #4]
    5c42:	ab09      	add	r3, sp, #36	; 0x24
    5c44:	9300      	str	r3, [sp, #0]
    5c46:	6861      	ldr	r1, [r4, #4]
    5c48:	6022      	str	r2, [r4, #0]
    5c4a:	f10d 0323 	add.w	r3, sp, #35	; 0x23
    5c4e:	ed9d 0b04 	vldr	d0, [sp, #16]
    5c52:	4628      	mov	r0, r5
    5c54:	f7ff fee4 	bl	5a20 <__cvt>
    5c58:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
    5c5c:	4680      	mov	r8, r0
    5c5e:	9909      	ldr	r1, [sp, #36]	; 0x24
    5c60:	d108      	bne.n	5c74 <_printf_float+0x134>
    5c62:	1cc8      	adds	r0, r1, #3
    5c64:	db02      	blt.n	5c6c <_printf_float+0x12c>
    5c66:	6863      	ldr	r3, [r4, #4]
    5c68:	4299      	cmp	r1, r3
    5c6a:	dd41      	ble.n	5cf0 <_printf_float+0x1b0>
    5c6c:	f1aa 0a02 	sub.w	sl, sl, #2
    5c70:	fa5f fa8a 	uxtb.w	sl, sl
    5c74:	f1ba 0f65 	cmp.w	sl, #101	; 0x65
    5c78:	d820      	bhi.n	5cbc <_printf_float+0x17c>
    5c7a:	3901      	subs	r1, #1
    5c7c:	4652      	mov	r2, sl
    5c7e:	f104 0050 	add.w	r0, r4, #80	; 0x50
    5c82:	9109      	str	r1, [sp, #36]	; 0x24
    5c84:	f7ff ff29 	bl	5ada <__exponent>
    5c88:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    5c8a:	1813      	adds	r3, r2, r0
    5c8c:	2a01      	cmp	r2, #1
    5c8e:	4681      	mov	r9, r0
    5c90:	6123      	str	r3, [r4, #16]
    5c92:	dc02      	bgt.n	5c9a <_printf_float+0x15a>
    5c94:	6822      	ldr	r2, [r4, #0]
    5c96:	07d2      	lsls	r2, r2, #31
    5c98:	d501      	bpl.n	5c9e <_printf_float+0x15e>
    5c9a:	3301      	adds	r3, #1
    5c9c:	6123      	str	r3, [r4, #16]
    5c9e:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
    5ca2:	2b00      	cmp	r3, #0
    5ca4:	d0a0      	beq.n	5be8 <_printf_float+0xa8>
    5ca6:	232d      	movs	r3, #45	; 0x2d
    5ca8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    5cac:	e79c      	b.n	5be8 <_printf_float+0xa8>
    5cae:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
    5cb2:	d1bf      	bne.n	5c34 <_printf_float+0xf4>
    5cb4:	2b00      	cmp	r3, #0
    5cb6:	d1bd      	bne.n	5c34 <_printf_float+0xf4>
    5cb8:	2301      	movs	r3, #1
    5cba:	e7ba      	b.n	5c32 <_printf_float+0xf2>
    5cbc:	f1ba 0f66 	cmp.w	sl, #102	; 0x66
    5cc0:	d118      	bne.n	5cf4 <_printf_float+0x1b4>
    5cc2:	2900      	cmp	r1, #0
    5cc4:	6863      	ldr	r3, [r4, #4]
    5cc6:	dd0b      	ble.n	5ce0 <_printf_float+0x1a0>
    5cc8:	6121      	str	r1, [r4, #16]
    5cca:	b913      	cbnz	r3, 5cd2 <_printf_float+0x192>
    5ccc:	6822      	ldr	r2, [r4, #0]
    5cce:	07d0      	lsls	r0, r2, #31
    5cd0:	d502      	bpl.n	5cd8 <_printf_float+0x198>
    5cd2:	3301      	adds	r3, #1
    5cd4:	440b      	add	r3, r1
    5cd6:	6123      	str	r3, [r4, #16]
    5cd8:	65a1      	str	r1, [r4, #88]	; 0x58
    5cda:	f04f 0900 	mov.w	r9, #0
    5cde:	e7de      	b.n	5c9e <_printf_float+0x15e>
    5ce0:	b913      	cbnz	r3, 5ce8 <_printf_float+0x1a8>
    5ce2:	6822      	ldr	r2, [r4, #0]
    5ce4:	07d2      	lsls	r2, r2, #31
    5ce6:	d501      	bpl.n	5cec <_printf_float+0x1ac>
    5ce8:	3302      	adds	r3, #2
    5cea:	e7f4      	b.n	5cd6 <_printf_float+0x196>
    5cec:	2301      	movs	r3, #1
    5cee:	e7f2      	b.n	5cd6 <_printf_float+0x196>
    5cf0:	f04f 0a67 	mov.w	sl, #103	; 0x67
    5cf4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    5cf6:	4299      	cmp	r1, r3
    5cf8:	db05      	blt.n	5d06 <_printf_float+0x1c6>
    5cfa:	6823      	ldr	r3, [r4, #0]
    5cfc:	6121      	str	r1, [r4, #16]
    5cfe:	07d8      	lsls	r0, r3, #31
    5d00:	d5ea      	bpl.n	5cd8 <_printf_float+0x198>
    5d02:	1c4b      	adds	r3, r1, #1
    5d04:	e7e7      	b.n	5cd6 <_printf_float+0x196>
    5d06:	2900      	cmp	r1, #0
    5d08:	bfd4      	ite	le
    5d0a:	f1c1 0202 	rsble	r2, r1, #2
    5d0e:	2201      	movgt	r2, #1
    5d10:	4413      	add	r3, r2
    5d12:	e7e0      	b.n	5cd6 <_printf_float+0x196>
    5d14:	6823      	ldr	r3, [r4, #0]
    5d16:	055a      	lsls	r2, r3, #21
    5d18:	d407      	bmi.n	5d2a <_printf_float+0x1ea>
    5d1a:	6923      	ldr	r3, [r4, #16]
    5d1c:	4642      	mov	r2, r8
    5d1e:	4631      	mov	r1, r6
    5d20:	4628      	mov	r0, r5
    5d22:	47b8      	blx	r7
    5d24:	3001      	adds	r0, #1
    5d26:	d12b      	bne.n	5d80 <_printf_float+0x240>
    5d28:	e768      	b.n	5bfc <_printf_float+0xbc>
    5d2a:	f1ba 0f65 	cmp.w	sl, #101	; 0x65
    5d2e:	f240 80dc 	bls.w	5eea <_printf_float+0x3aa>
    5d32:	2200      	movs	r2, #0
    5d34:	2300      	movs	r3, #0
    5d36:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
    5d3a:	f004 fa0d 	bl	a158 <__aeabi_dcmpeq>
    5d3e:	2800      	cmp	r0, #0
    5d40:	d033      	beq.n	5daa <_printf_float+0x26a>
    5d42:	2301      	movs	r3, #1
    5d44:	4a41      	ldr	r2, [pc, #260]	; (5e4c <_printf_float+0x30c>)
    5d46:	4631      	mov	r1, r6
    5d48:	4628      	mov	r0, r5
    5d4a:	47b8      	blx	r7
    5d4c:	3001      	adds	r0, #1
    5d4e:	f43f af55 	beq.w	5bfc <_printf_float+0xbc>
    5d52:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    5d56:	429a      	cmp	r2, r3
    5d58:	db02      	blt.n	5d60 <_printf_float+0x220>
    5d5a:	6823      	ldr	r3, [r4, #0]
    5d5c:	07d8      	lsls	r0, r3, #31
    5d5e:	d50f      	bpl.n	5d80 <_printf_float+0x240>
    5d60:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    5d64:	4631      	mov	r1, r6
    5d66:	4628      	mov	r0, r5
    5d68:	47b8      	blx	r7
    5d6a:	3001      	adds	r0, #1
    5d6c:	f43f af46 	beq.w	5bfc <_printf_float+0xbc>
    5d70:	f04f 0800 	mov.w	r8, #0
    5d74:	f104 091a 	add.w	r9, r4, #26
    5d78:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    5d7a:	3b01      	subs	r3, #1
    5d7c:	4543      	cmp	r3, r8
    5d7e:	dc09      	bgt.n	5d94 <_printf_float+0x254>
    5d80:	6823      	ldr	r3, [r4, #0]
    5d82:	079b      	lsls	r3, r3, #30
    5d84:	f100 8101 	bmi.w	5f8a <_printf_float+0x44a>
    5d88:	68e0      	ldr	r0, [r4, #12]
    5d8a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    5d8c:	4298      	cmp	r0, r3
    5d8e:	bfb8      	it	lt
    5d90:	4618      	movlt	r0, r3
    5d92:	e735      	b.n	5c00 <_printf_float+0xc0>
    5d94:	2301      	movs	r3, #1
    5d96:	464a      	mov	r2, r9
    5d98:	4631      	mov	r1, r6
    5d9a:	4628      	mov	r0, r5
    5d9c:	47b8      	blx	r7
    5d9e:	3001      	adds	r0, #1
    5da0:	f43f af2c 	beq.w	5bfc <_printf_float+0xbc>
    5da4:	f108 0801 	add.w	r8, r8, #1
    5da8:	e7e6      	b.n	5d78 <_printf_float+0x238>
    5daa:	9b09      	ldr	r3, [sp, #36]	; 0x24
    5dac:	2b00      	cmp	r3, #0
    5dae:	dc2b      	bgt.n	5e08 <_printf_float+0x2c8>
    5db0:	2301      	movs	r3, #1
    5db2:	4a26      	ldr	r2, [pc, #152]	; (5e4c <_printf_float+0x30c>)
    5db4:	4631      	mov	r1, r6
    5db6:	4628      	mov	r0, r5
    5db8:	47b8      	blx	r7
    5dba:	3001      	adds	r0, #1
    5dbc:	f43f af1e 	beq.w	5bfc <_printf_float+0xbc>
    5dc0:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    5dc4:	4313      	orrs	r3, r2
    5dc6:	d102      	bne.n	5dce <_printf_float+0x28e>
    5dc8:	6823      	ldr	r3, [r4, #0]
    5dca:	07d9      	lsls	r1, r3, #31
    5dcc:	d5d8      	bpl.n	5d80 <_printf_float+0x240>
    5dce:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    5dd2:	4631      	mov	r1, r6
    5dd4:	4628      	mov	r0, r5
    5dd6:	47b8      	blx	r7
    5dd8:	3001      	adds	r0, #1
    5dda:	f43f af0f 	beq.w	5bfc <_printf_float+0xbc>
    5dde:	f04f 0900 	mov.w	r9, #0
    5de2:	f104 0a1a 	add.w	sl, r4, #26
    5de6:	9b09      	ldr	r3, [sp, #36]	; 0x24
    5de8:	425b      	negs	r3, r3
    5dea:	454b      	cmp	r3, r9
    5dec:	dc01      	bgt.n	5df2 <_printf_float+0x2b2>
    5dee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    5df0:	e794      	b.n	5d1c <_printf_float+0x1dc>
    5df2:	2301      	movs	r3, #1
    5df4:	4652      	mov	r2, sl
    5df6:	4631      	mov	r1, r6
    5df8:	4628      	mov	r0, r5
    5dfa:	47b8      	blx	r7
    5dfc:	3001      	adds	r0, #1
    5dfe:	f43f aefd 	beq.w	5bfc <_printf_float+0xbc>
    5e02:	f109 0901 	add.w	r9, r9, #1
    5e06:	e7ee      	b.n	5de6 <_printf_float+0x2a6>
    5e08:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    5e0a:	6da3      	ldr	r3, [r4, #88]	; 0x58
    5e0c:	429a      	cmp	r2, r3
    5e0e:	bfa8      	it	ge
    5e10:	461a      	movge	r2, r3
    5e12:	2a00      	cmp	r2, #0
    5e14:	4691      	mov	r9, r2
    5e16:	dd07      	ble.n	5e28 <_printf_float+0x2e8>
    5e18:	4613      	mov	r3, r2
    5e1a:	4631      	mov	r1, r6
    5e1c:	4642      	mov	r2, r8
    5e1e:	4628      	mov	r0, r5
    5e20:	47b8      	blx	r7
    5e22:	3001      	adds	r0, #1
    5e24:	f43f aeea 	beq.w	5bfc <_printf_float+0xbc>
    5e28:	f104 031a 	add.w	r3, r4, #26
    5e2c:	f04f 0b00 	mov.w	fp, #0
    5e30:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
    5e34:	9304      	str	r3, [sp, #16]
    5e36:	e015      	b.n	5e64 <_printf_float+0x324>
    5e38:	7fefffff 	.word	0x7fefffff
    5e3c:	0000b81d 	.word	0x0000b81d
    5e40:	0000b821 	.word	0x0000b821
    5e44:	0000b825 	.word	0x0000b825
    5e48:	0000b829 	.word	0x0000b829
    5e4c:	0000b065 	.word	0x0000b065
    5e50:	2301      	movs	r3, #1
    5e52:	9a04      	ldr	r2, [sp, #16]
    5e54:	4631      	mov	r1, r6
    5e56:	4628      	mov	r0, r5
    5e58:	47b8      	blx	r7
    5e5a:	3001      	adds	r0, #1
    5e5c:	f43f aece 	beq.w	5bfc <_printf_float+0xbc>
    5e60:	f10b 0b01 	add.w	fp, fp, #1
    5e64:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
    5e68:	ebaa 0309 	sub.w	r3, sl, r9
    5e6c:	455b      	cmp	r3, fp
    5e6e:	dcef      	bgt.n	5e50 <_printf_float+0x310>
    5e70:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    5e74:	429a      	cmp	r2, r3
    5e76:	db1b      	blt.n	5eb0 <_printf_float+0x370>
    5e78:	6823      	ldr	r3, [r4, #0]
    5e7a:	07da      	lsls	r2, r3, #31
    5e7c:	d418      	bmi.n	5eb0 <_printf_float+0x370>
    5e7e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    5e82:	4592      	cmp	sl, r2
    5e84:	db1c      	blt.n	5ec0 <_printf_float+0x380>
    5e86:	eba3 090a 	sub.w	r9, r3, sl
    5e8a:	f1b9 0f00 	cmp.w	r9, #0
    5e8e:	dd08      	ble.n	5ea2 <_printf_float+0x362>
    5e90:	464b      	mov	r3, r9
    5e92:	eb08 020a 	add.w	r2, r8, sl
    5e96:	4631      	mov	r1, r6
    5e98:	4628      	mov	r0, r5
    5e9a:	47b8      	blx	r7
    5e9c:	3001      	adds	r0, #1
    5e9e:	f43f aead 	beq.w	5bfc <_printf_float+0xbc>
    5ea2:	f04f 0800 	mov.w	r8, #0
    5ea6:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
    5eaa:	f104 0a1a 	add.w	sl, r4, #26
    5eae:	e014      	b.n	5eda <_printf_float+0x39a>
    5eb0:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    5eb4:	4631      	mov	r1, r6
    5eb6:	4628      	mov	r0, r5
    5eb8:	47b8      	blx	r7
    5eba:	3001      	adds	r0, #1
    5ebc:	d1df      	bne.n	5e7e <_printf_float+0x33e>
    5ebe:	e69d      	b.n	5bfc <_printf_float+0xbc>
    5ec0:	eba3 0902 	sub.w	r9, r3, r2
    5ec4:	e7e1      	b.n	5e8a <_printf_float+0x34a>
    5ec6:	2301      	movs	r3, #1
    5ec8:	4652      	mov	r2, sl
    5eca:	4631      	mov	r1, r6
    5ecc:	4628      	mov	r0, r5
    5ece:	47b8      	blx	r7
    5ed0:	3001      	adds	r0, #1
    5ed2:	f43f ae93 	beq.w	5bfc <_printf_float+0xbc>
    5ed6:	f108 0801 	add.w	r8, r8, #1
    5eda:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    5ede:	1a9b      	subs	r3, r3, r2
    5ee0:	eba3 0309 	sub.w	r3, r3, r9
    5ee4:	4543      	cmp	r3, r8
    5ee6:	dcee      	bgt.n	5ec6 <_printf_float+0x386>
    5ee8:	e74a      	b.n	5d80 <_printf_float+0x240>
    5eea:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    5eec:	2a01      	cmp	r2, #1
    5eee:	dc01      	bgt.n	5ef4 <_printf_float+0x3b4>
    5ef0:	07db      	lsls	r3, r3, #31
    5ef2:	d537      	bpl.n	5f64 <_printf_float+0x424>
    5ef4:	2301      	movs	r3, #1
    5ef6:	4642      	mov	r2, r8
    5ef8:	4631      	mov	r1, r6
    5efa:	4628      	mov	r0, r5
    5efc:	47b8      	blx	r7
    5efe:	3001      	adds	r0, #1
    5f00:	f43f ae7c 	beq.w	5bfc <_printf_float+0xbc>
    5f04:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    5f08:	4631      	mov	r1, r6
    5f0a:	4628      	mov	r0, r5
    5f0c:	47b8      	blx	r7
    5f0e:	3001      	adds	r0, #1
    5f10:	f43f ae74 	beq.w	5bfc <_printf_float+0xbc>
    5f14:	2200      	movs	r2, #0
    5f16:	2300      	movs	r3, #0
    5f18:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
    5f1c:	f004 f91c 	bl	a158 <__aeabi_dcmpeq>
    5f20:	b9d8      	cbnz	r0, 5f5a <_printf_float+0x41a>
    5f22:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    5f24:	f108 0201 	add.w	r2, r8, #1
    5f28:	3b01      	subs	r3, #1
    5f2a:	4631      	mov	r1, r6
    5f2c:	4628      	mov	r0, r5
    5f2e:	47b8      	blx	r7
    5f30:	3001      	adds	r0, #1
    5f32:	d10e      	bne.n	5f52 <_printf_float+0x412>
    5f34:	e662      	b.n	5bfc <_printf_float+0xbc>
    5f36:	2301      	movs	r3, #1
    5f38:	4652      	mov	r2, sl
    5f3a:	4631      	mov	r1, r6
    5f3c:	4628      	mov	r0, r5
    5f3e:	47b8      	blx	r7
    5f40:	3001      	adds	r0, #1
    5f42:	f43f ae5b 	beq.w	5bfc <_printf_float+0xbc>
    5f46:	f108 0801 	add.w	r8, r8, #1
    5f4a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    5f4c:	3b01      	subs	r3, #1
    5f4e:	4543      	cmp	r3, r8
    5f50:	dcf1      	bgt.n	5f36 <_printf_float+0x3f6>
    5f52:	464b      	mov	r3, r9
    5f54:	f104 0250 	add.w	r2, r4, #80	; 0x50
    5f58:	e6e1      	b.n	5d1e <_printf_float+0x1de>
    5f5a:	f04f 0800 	mov.w	r8, #0
    5f5e:	f104 0a1a 	add.w	sl, r4, #26
    5f62:	e7f2      	b.n	5f4a <_printf_float+0x40a>
    5f64:	2301      	movs	r3, #1
    5f66:	4642      	mov	r2, r8
    5f68:	e7df      	b.n	5f2a <_printf_float+0x3ea>
    5f6a:	2301      	movs	r3, #1
    5f6c:	464a      	mov	r2, r9
    5f6e:	4631      	mov	r1, r6
    5f70:	4628      	mov	r0, r5
    5f72:	47b8      	blx	r7
    5f74:	3001      	adds	r0, #1
    5f76:	f43f ae41 	beq.w	5bfc <_printf_float+0xbc>
    5f7a:	f108 0801 	add.w	r8, r8, #1
    5f7e:	68e3      	ldr	r3, [r4, #12]
    5f80:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    5f82:	1a9b      	subs	r3, r3, r2
    5f84:	4543      	cmp	r3, r8
    5f86:	dcf0      	bgt.n	5f6a <_printf_float+0x42a>
    5f88:	e6fe      	b.n	5d88 <_printf_float+0x248>
    5f8a:	f04f 0800 	mov.w	r8, #0
    5f8e:	f104 0919 	add.w	r9, r4, #25
    5f92:	e7f4      	b.n	5f7e <_printf_float+0x43e>

00005f94 <_printf_common>:
_printf_common():
    5f94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    5f98:	4691      	mov	r9, r2
    5f9a:	461f      	mov	r7, r3
    5f9c:	688a      	ldr	r2, [r1, #8]
    5f9e:	690b      	ldr	r3, [r1, #16]
    5fa0:	f8dd 8020 	ldr.w	r8, [sp, #32]
    5fa4:	4293      	cmp	r3, r2
    5fa6:	bfb8      	it	lt
    5fa8:	4613      	movlt	r3, r2
    5faa:	f8c9 3000 	str.w	r3, [r9]
    5fae:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
    5fb2:	4606      	mov	r6, r0
    5fb4:	460c      	mov	r4, r1
    5fb6:	b112      	cbz	r2, 5fbe <_printf_common+0x2a>
    5fb8:	3301      	adds	r3, #1
    5fba:	f8c9 3000 	str.w	r3, [r9]
    5fbe:	6823      	ldr	r3, [r4, #0]
    5fc0:	0699      	lsls	r1, r3, #26
    5fc2:	bf42      	ittt	mi
    5fc4:	f8d9 3000 	ldrmi.w	r3, [r9]
    5fc8:	3302      	addmi	r3, #2
    5fca:	f8c9 3000 	strmi.w	r3, [r9]
    5fce:	6825      	ldr	r5, [r4, #0]
    5fd0:	f015 0506 	ands.w	r5, r5, #6
    5fd4:	d107      	bne.n	5fe6 <_printf_common+0x52>
    5fd6:	f104 0a19 	add.w	sl, r4, #25
    5fda:	68e3      	ldr	r3, [r4, #12]
    5fdc:	f8d9 2000 	ldr.w	r2, [r9]
    5fe0:	1a9b      	subs	r3, r3, r2
    5fe2:	42ab      	cmp	r3, r5
    5fe4:	dc28      	bgt.n	6038 <_printf_common+0xa4>
    5fe6:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
    5fea:	6822      	ldr	r2, [r4, #0]
    5fec:	3300      	adds	r3, #0
    5fee:	bf18      	it	ne
    5ff0:	2301      	movne	r3, #1
    5ff2:	0692      	lsls	r2, r2, #26
    5ff4:	d42d      	bmi.n	6052 <_printf_common+0xbe>
    5ff6:	f104 0243 	add.w	r2, r4, #67	; 0x43
    5ffa:	4639      	mov	r1, r7
    5ffc:	4630      	mov	r0, r6
    5ffe:	47c0      	blx	r8
    6000:	3001      	adds	r0, #1
    6002:	d020      	beq.n	6046 <_printf_common+0xb2>
    6004:	6823      	ldr	r3, [r4, #0]
    6006:	68e5      	ldr	r5, [r4, #12]
    6008:	f8d9 2000 	ldr.w	r2, [r9]
    600c:	f003 0306 	and.w	r3, r3, #6
    6010:	2b04      	cmp	r3, #4
    6012:	bf08      	it	eq
    6014:	1aad      	subeq	r5, r5, r2
    6016:	68a3      	ldr	r3, [r4, #8]
    6018:	6922      	ldr	r2, [r4, #16]
    601a:	bf0c      	ite	eq
    601c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
    6020:	2500      	movne	r5, #0
    6022:	4293      	cmp	r3, r2
    6024:	bfc4      	itt	gt
    6026:	1a9b      	subgt	r3, r3, r2
    6028:	18ed      	addgt	r5, r5, r3
    602a:	f04f 0900 	mov.w	r9, #0
    602e:	341a      	adds	r4, #26
    6030:	454d      	cmp	r5, r9
    6032:	d11a      	bne.n	606a <_printf_common+0xd6>
    6034:	2000      	movs	r0, #0
    6036:	e008      	b.n	604a <_printf_common+0xb6>
    6038:	2301      	movs	r3, #1
    603a:	4652      	mov	r2, sl
    603c:	4639      	mov	r1, r7
    603e:	4630      	mov	r0, r6
    6040:	47c0      	blx	r8
    6042:	3001      	adds	r0, #1
    6044:	d103      	bne.n	604e <_printf_common+0xba>
    6046:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    604a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    604e:	3501      	adds	r5, #1
    6050:	e7c3      	b.n	5fda <_printf_common+0x46>
    6052:	18e1      	adds	r1, r4, r3
    6054:	1c5a      	adds	r2, r3, #1
    6056:	2030      	movs	r0, #48	; 0x30
    6058:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
    605c:	4422      	add	r2, r4
    605e:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
    6062:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
    6066:	3302      	adds	r3, #2
    6068:	e7c5      	b.n	5ff6 <_printf_common+0x62>
    606a:	2301      	movs	r3, #1
    606c:	4622      	mov	r2, r4
    606e:	4639      	mov	r1, r7
    6070:	4630      	mov	r0, r6
    6072:	47c0      	blx	r8
    6074:	3001      	adds	r0, #1
    6076:	d0e6      	beq.n	6046 <_printf_common+0xb2>
    6078:	f109 0901 	add.w	r9, r9, #1
    607c:	e7d8      	b.n	6030 <_printf_common+0x9c>
    607e:	Address 0x000000000000607e is out of bounds.


00006080 <_printf_i>:
_printf_i():
    6080:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    6084:	4606      	mov	r6, r0
    6086:	460c      	mov	r4, r1
    6088:	f101 0043 	add.w	r0, r1, #67	; 0x43
    608c:	7e09      	ldrb	r1, [r1, #24]
    608e:	b085      	sub	sp, #20
    6090:	296e      	cmp	r1, #110	; 0x6e
    6092:	4698      	mov	r8, r3
    6094:	4617      	mov	r7, r2
    6096:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6098:	f000 80ba 	beq.w	6210 <_printf_i+0x190>
    609c:	d824      	bhi.n	60e8 <_printf_i+0x68>
    609e:	2963      	cmp	r1, #99	; 0x63
    60a0:	d039      	beq.n	6116 <_printf_i+0x96>
    60a2:	d80a      	bhi.n	60ba <_printf_i+0x3a>
    60a4:	2900      	cmp	r1, #0
    60a6:	f000 80c3 	beq.w	6230 <_printf_i+0x1b0>
    60aa:	2958      	cmp	r1, #88	; 0x58
    60ac:	f000 8091 	beq.w	61d2 <_printf_i+0x152>
    60b0:	f104 0542 	add.w	r5, r4, #66	; 0x42
    60b4:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
    60b8:	e035      	b.n	6126 <_printf_i+0xa6>
    60ba:	2964      	cmp	r1, #100	; 0x64
    60bc:	d001      	beq.n	60c2 <_printf_i+0x42>
    60be:	2969      	cmp	r1, #105	; 0x69
    60c0:	d1f6      	bne.n	60b0 <_printf_i+0x30>
    60c2:	6825      	ldr	r5, [r4, #0]
    60c4:	681a      	ldr	r2, [r3, #0]
    60c6:	f015 0f80 	tst.w	r5, #128	; 0x80
    60ca:	f102 0104 	add.w	r1, r2, #4
    60ce:	d02c      	beq.n	612a <_printf_i+0xaa>
    60d0:	6812      	ldr	r2, [r2, #0]
    60d2:	6019      	str	r1, [r3, #0]
    60d4:	2a00      	cmp	r2, #0
    60d6:	da03      	bge.n	60e0 <_printf_i+0x60>
    60d8:	232d      	movs	r3, #45	; 0x2d
    60da:	4252      	negs	r2, r2
    60dc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    60e0:	f8df c1bc 	ldr.w	ip, [pc, #444]	; 62a0 <_printf_i+0x220>
    60e4:	230a      	movs	r3, #10
    60e6:	e03f      	b.n	6168 <_printf_i+0xe8>
    60e8:	2973      	cmp	r1, #115	; 0x73
    60ea:	f000 80a5 	beq.w	6238 <_printf_i+0x1b8>
    60ee:	d808      	bhi.n	6102 <_printf_i+0x82>
    60f0:	296f      	cmp	r1, #111	; 0x6f
    60f2:	d021      	beq.n	6138 <_printf_i+0xb8>
    60f4:	2970      	cmp	r1, #112	; 0x70
    60f6:	d1db      	bne.n	60b0 <_printf_i+0x30>
    60f8:	6822      	ldr	r2, [r4, #0]
    60fa:	f042 0220 	orr.w	r2, r2, #32
    60fe:	6022      	str	r2, [r4, #0]
    6100:	e003      	b.n	610a <_printf_i+0x8a>
    6102:	2975      	cmp	r1, #117	; 0x75
    6104:	d018      	beq.n	6138 <_printf_i+0xb8>
    6106:	2978      	cmp	r1, #120	; 0x78
    6108:	d1d2      	bne.n	60b0 <_printf_i+0x30>
    610a:	2278      	movs	r2, #120	; 0x78
    610c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
    6110:	f8df c190 	ldr.w	ip, [pc, #400]	; 62a4 <_printf_i+0x224>
    6114:	e061      	b.n	61da <_printf_i+0x15a>
    6116:	681a      	ldr	r2, [r3, #0]
    6118:	1d11      	adds	r1, r2, #4
    611a:	6019      	str	r1, [r3, #0]
    611c:	6813      	ldr	r3, [r2, #0]
    611e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    6122:	f104 0542 	add.w	r5, r4, #66	; 0x42
    6126:	2301      	movs	r3, #1
    6128:	e093      	b.n	6252 <_printf_i+0x1d2>
    612a:	6812      	ldr	r2, [r2, #0]
    612c:	6019      	str	r1, [r3, #0]
    612e:	f015 0f40 	tst.w	r5, #64	; 0x40
    6132:	bf18      	it	ne
    6134:	b212      	sxthne	r2, r2
    6136:	e7cd      	b.n	60d4 <_printf_i+0x54>
    6138:	f8d4 c000 	ldr.w	ip, [r4]
    613c:	681a      	ldr	r2, [r3, #0]
    613e:	f01c 0f80 	tst.w	ip, #128	; 0x80
    6142:	f102 0504 	add.w	r5, r2, #4
    6146:	601d      	str	r5, [r3, #0]
    6148:	d001      	beq.n	614e <_printf_i+0xce>
    614a:	6812      	ldr	r2, [r2, #0]
    614c:	e003      	b.n	6156 <_printf_i+0xd6>
    614e:	f01c 0f40 	tst.w	ip, #64	; 0x40
    6152:	d0fa      	beq.n	614a <_printf_i+0xca>
    6154:	8812      	ldrh	r2, [r2, #0]
    6156:	f8df c148 	ldr.w	ip, [pc, #328]	; 62a0 <_printf_i+0x220>
    615a:	296f      	cmp	r1, #111	; 0x6f
    615c:	bf0c      	ite	eq
    615e:	2308      	moveq	r3, #8
    6160:	230a      	movne	r3, #10
    6162:	2100      	movs	r1, #0
    6164:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
    6168:	6865      	ldr	r5, [r4, #4]
    616a:	60a5      	str	r5, [r4, #8]
    616c:	2d00      	cmp	r5, #0
    616e:	bfa2      	ittt	ge
    6170:	6821      	ldrge	r1, [r4, #0]
    6172:	f021 0104 	bicge.w	r1, r1, #4
    6176:	6021      	strge	r1, [r4, #0]
    6178:	b90a      	cbnz	r2, 617e <_printf_i+0xfe>
    617a:	2d00      	cmp	r5, #0
    617c:	d046      	beq.n	620c <_printf_i+0x18c>
    617e:	4605      	mov	r5, r0
    6180:	fbb2 f1f3 	udiv	r1, r2, r3
    6184:	fb03 2e11 	mls	lr, r3, r1, r2
    6188:	4293      	cmp	r3, r2
    618a:	f81c e00e 	ldrb.w	lr, [ip, lr]
    618e:	f805 ed01 	strb.w	lr, [r5, #-1]!
    6192:	d939      	bls.n	6208 <_printf_i+0x188>
    6194:	2b08      	cmp	r3, #8
    6196:	d10b      	bne.n	61b0 <_printf_i+0x130>
    6198:	6823      	ldr	r3, [r4, #0]
    619a:	07da      	lsls	r2, r3, #31
    619c:	d508      	bpl.n	61b0 <_printf_i+0x130>
    619e:	6923      	ldr	r3, [r4, #16]
    61a0:	6862      	ldr	r2, [r4, #4]
    61a2:	429a      	cmp	r2, r3
    61a4:	bfde      	ittt	le
    61a6:	2330      	movle	r3, #48	; 0x30
    61a8:	f805 3c01 	strble.w	r3, [r5, #-1]
    61ac:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
    61b0:	1b40      	subs	r0, r0, r5
    61b2:	6120      	str	r0, [r4, #16]
    61b4:	f8cd 8000 	str.w	r8, [sp]
    61b8:	463b      	mov	r3, r7
    61ba:	aa03      	add	r2, sp, #12
    61bc:	4621      	mov	r1, r4
    61be:	4630      	mov	r0, r6
    61c0:	f7ff fee8 	bl	5f94 <_printf_common>
    61c4:	3001      	adds	r0, #1
    61c6:	d149      	bne.n	625c <_printf_i+0x1dc>
    61c8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    61cc:	b005      	add	sp, #20
    61ce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    61d2:	f8df c0cc 	ldr.w	ip, [pc, #204]	; 62a0 <_printf_i+0x220>
    61d6:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
    61da:	681d      	ldr	r5, [r3, #0]
    61dc:	6821      	ldr	r1, [r4, #0]
    61de:	f855 2b04 	ldr.w	r2, [r5], #4
    61e2:	601d      	str	r5, [r3, #0]
    61e4:	060d      	lsls	r5, r1, #24
    61e6:	d50b      	bpl.n	6200 <_printf_i+0x180>
    61e8:	07cd      	lsls	r5, r1, #31
    61ea:	bf44      	itt	mi
    61ec:	f041 0120 	orrmi.w	r1, r1, #32
    61f0:	6021      	strmi	r1, [r4, #0]
    61f2:	b91a      	cbnz	r2, 61fc <_printf_i+0x17c>
    61f4:	6823      	ldr	r3, [r4, #0]
    61f6:	f023 0320 	bic.w	r3, r3, #32
    61fa:	6023      	str	r3, [r4, #0]
    61fc:	2310      	movs	r3, #16
    61fe:	e7b0      	b.n	6162 <_printf_i+0xe2>
    6200:	064b      	lsls	r3, r1, #25
    6202:	bf48      	it	mi
    6204:	b292      	uxthmi	r2, r2
    6206:	e7ef      	b.n	61e8 <_printf_i+0x168>
    6208:	460a      	mov	r2, r1
    620a:	e7b9      	b.n	6180 <_printf_i+0x100>
    620c:	4605      	mov	r5, r0
    620e:	e7c1      	b.n	6194 <_printf_i+0x114>
    6210:	681a      	ldr	r2, [r3, #0]
    6212:	f8d4 c000 	ldr.w	ip, [r4]
    6216:	6961      	ldr	r1, [r4, #20]
    6218:	1d15      	adds	r5, r2, #4
    621a:	601d      	str	r5, [r3, #0]
    621c:	f01c 0f80 	tst.w	ip, #128	; 0x80
    6220:	6813      	ldr	r3, [r2, #0]
    6222:	d001      	beq.n	6228 <_printf_i+0x1a8>
    6224:	6019      	str	r1, [r3, #0]
    6226:	e003      	b.n	6230 <_printf_i+0x1b0>
    6228:	f01c 0f40 	tst.w	ip, #64	; 0x40
    622c:	d0fa      	beq.n	6224 <_printf_i+0x1a4>
    622e:	8019      	strh	r1, [r3, #0]
    6230:	2300      	movs	r3, #0
    6232:	6123      	str	r3, [r4, #16]
    6234:	4605      	mov	r5, r0
    6236:	e7bd      	b.n	61b4 <_printf_i+0x134>
    6238:	681a      	ldr	r2, [r3, #0]
    623a:	1d11      	adds	r1, r2, #4
    623c:	6019      	str	r1, [r3, #0]
    623e:	6815      	ldr	r5, [r2, #0]
    6240:	6862      	ldr	r2, [r4, #4]
    6242:	2100      	movs	r1, #0
    6244:	4628      	mov	r0, r5
    6246:	f002 fe7b 	bl	8f40 <memchr>
    624a:	b108      	cbz	r0, 6250 <_printf_i+0x1d0>
    624c:	1b40      	subs	r0, r0, r5
    624e:	6060      	str	r0, [r4, #4]
    6250:	6863      	ldr	r3, [r4, #4]
    6252:	6123      	str	r3, [r4, #16]
    6254:	2300      	movs	r3, #0
    6256:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    625a:	e7ab      	b.n	61b4 <_printf_i+0x134>
    625c:	6923      	ldr	r3, [r4, #16]
    625e:	462a      	mov	r2, r5
    6260:	4639      	mov	r1, r7
    6262:	4630      	mov	r0, r6
    6264:	47c0      	blx	r8
    6266:	3001      	adds	r0, #1
    6268:	d0ae      	beq.n	61c8 <_printf_i+0x148>
    626a:	6823      	ldr	r3, [r4, #0]
    626c:	079b      	lsls	r3, r3, #30
    626e:	d413      	bmi.n	6298 <_printf_i+0x218>
    6270:	68e0      	ldr	r0, [r4, #12]
    6272:	9b03      	ldr	r3, [sp, #12]
    6274:	4298      	cmp	r0, r3
    6276:	bfb8      	it	lt
    6278:	4618      	movlt	r0, r3
    627a:	e7a7      	b.n	61cc <_printf_i+0x14c>
    627c:	2301      	movs	r3, #1
    627e:	464a      	mov	r2, r9
    6280:	4639      	mov	r1, r7
    6282:	4630      	mov	r0, r6
    6284:	47c0      	blx	r8
    6286:	3001      	adds	r0, #1
    6288:	d09e      	beq.n	61c8 <_printf_i+0x148>
    628a:	3501      	adds	r5, #1
    628c:	68e3      	ldr	r3, [r4, #12]
    628e:	9a03      	ldr	r2, [sp, #12]
    6290:	1a9b      	subs	r3, r3, r2
    6292:	42ab      	cmp	r3, r5
    6294:	dcf2      	bgt.n	627c <_printf_i+0x1fc>
    6296:	e7eb      	b.n	6270 <_printf_i+0x1f0>
    6298:	2500      	movs	r5, #0
    629a:	f104 0919 	add.w	r9, r4, #25
    629e:	e7f5      	b.n	628c <_printf_i+0x20c>
    62a0:	0000b82d 	.word	0x0000b82d
    62a4:	0000b83e 	.word	0x0000b83e

000062a8 <_scanf_float>:
_scanf_float():
    62a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    62ac:	b087      	sub	sp, #28
    62ae:	4617      	mov	r7, r2
    62b0:	9303      	str	r3, [sp, #12]
    62b2:	688b      	ldr	r3, [r1, #8]
    62b4:	1e5a      	subs	r2, r3, #1
    62b6:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
    62ba:	bf83      	ittte	hi
    62bc:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
    62c0:	195b      	addhi	r3, r3, r5
    62c2:	9302      	strhi	r3, [sp, #8]
    62c4:	2300      	movls	r3, #0
    62c6:	bf86      	itte	hi
    62c8:	f240 135d 	movwhi	r3, #349	; 0x15d
    62cc:	608b      	strhi	r3, [r1, #8]
    62ce:	9302      	strls	r3, [sp, #8]
    62d0:	680b      	ldr	r3, [r1, #0]
    62d2:	468b      	mov	fp, r1
    62d4:	2500      	movs	r5, #0
    62d6:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
    62da:	f84b 3b1c 	str.w	r3, [fp], #28
    62de:	e9cd 5504 	strd	r5, r5, [sp, #16]
    62e2:	4681      	mov	r9, r0
    62e4:	460c      	mov	r4, r1
    62e6:	465e      	mov	r6, fp
    62e8:	46aa      	mov	sl, r5
    62ea:	46a8      	mov	r8, r5
    62ec:	9501      	str	r5, [sp, #4]
    62ee:	68a2      	ldr	r2, [r4, #8]
    62f0:	b182      	cbz	r2, 6314 <_scanf_float+0x6c>
    62f2:	683b      	ldr	r3, [r7, #0]
    62f4:	781b      	ldrb	r3, [r3, #0]
    62f6:	2b49      	cmp	r3, #73	; 0x49
    62f8:	d075      	beq.n	63e6 <_scanf_float+0x13e>
    62fa:	d84f      	bhi.n	639c <_scanf_float+0xf4>
    62fc:	2b39      	cmp	r3, #57	; 0x39
    62fe:	d841      	bhi.n	6384 <_scanf_float+0xdc>
    6300:	2b31      	cmp	r3, #49	; 0x31
    6302:	f080 8087 	bcs.w	6414 <_scanf_float+0x16c>
    6306:	2b2d      	cmp	r3, #45	; 0x2d
    6308:	f000 808f 	beq.w	642a <_scanf_float+0x182>
    630c:	d817      	bhi.n	633e <_scanf_float+0x96>
    630e:	2b2b      	cmp	r3, #43	; 0x2b
    6310:	f000 808b 	beq.w	642a <_scanf_float+0x182>
    6314:	f1b8 0f00 	cmp.w	r8, #0
    6318:	d003      	beq.n	6322 <_scanf_float+0x7a>
    631a:	6823      	ldr	r3, [r4, #0]
    631c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
    6320:	6023      	str	r3, [r4, #0]
    6322:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
    6326:	f1ba 0f01 	cmp.w	sl, #1
    632a:	f200 80dd 	bhi.w	64e8 <_scanf_float+0x240>
    632e:	455e      	cmp	r6, fp
    6330:	f200 80cf 	bhi.w	64d2 <_scanf_float+0x22a>
    6334:	2501      	movs	r5, #1
    6336:	4628      	mov	r0, r5
    6338:	b007      	add	sp, #28
    633a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    633e:	2b2e      	cmp	r3, #46	; 0x2e
    6340:	f000 8093 	beq.w	646a <_scanf_float+0x1c2>
    6344:	2b30      	cmp	r3, #48	; 0x30
    6346:	d1e5      	bne.n	6314 <_scanf_float+0x6c>
    6348:	6821      	ldr	r1, [r4, #0]
    634a:	05c8      	lsls	r0, r1, #23
    634c:	d562      	bpl.n	6414 <_scanf_float+0x16c>
    634e:	9b02      	ldr	r3, [sp, #8]
    6350:	f021 0180 	bic.w	r1, r1, #128	; 0x80
    6354:	6021      	str	r1, [r4, #0]
    6356:	f108 0801 	add.w	r8, r8, #1
    635a:	b11b      	cbz	r3, 6364 <_scanf_float+0xbc>
    635c:	3b01      	subs	r3, #1
    635e:	3201      	adds	r2, #1
    6360:	9302      	str	r3, [sp, #8]
    6362:	60a2      	str	r2, [r4, #8]
    6364:	68a3      	ldr	r3, [r4, #8]
    6366:	3b01      	subs	r3, #1
    6368:	60a3      	str	r3, [r4, #8]
    636a:	6923      	ldr	r3, [r4, #16]
    636c:	3301      	adds	r3, #1
    636e:	6123      	str	r3, [r4, #16]
    6370:	687b      	ldr	r3, [r7, #4]
    6372:	3b01      	subs	r3, #1
    6374:	2b00      	cmp	r3, #0
    6376:	607b      	str	r3, [r7, #4]
    6378:	f340 80a2 	ble.w	64c0 <_scanf_float+0x218>
    637c:	683b      	ldr	r3, [r7, #0]
    637e:	3301      	adds	r3, #1
    6380:	603b      	str	r3, [r7, #0]
    6382:	e7b4      	b.n	62ee <_scanf_float+0x46>
    6384:	2b45      	cmp	r3, #69	; 0x45
    6386:	d07a      	beq.n	647e <_scanf_float+0x1d6>
    6388:	2b46      	cmp	r3, #70	; 0x46
    638a:	d064      	beq.n	6456 <_scanf_float+0x1ae>
    638c:	2b41      	cmp	r3, #65	; 0x41
    638e:	d1c1      	bne.n	6314 <_scanf_float+0x6c>
    6390:	f1ba 0f01 	cmp.w	sl, #1
    6394:	d1be      	bne.n	6314 <_scanf_float+0x6c>
    6396:	f04f 0a02 	mov.w	sl, #2
    639a:	e043      	b.n	6424 <_scanf_float+0x17c>
    639c:	2b65      	cmp	r3, #101	; 0x65
    639e:	d06e      	beq.n	647e <_scanf_float+0x1d6>
    63a0:	d81a      	bhi.n	63d8 <_scanf_float+0x130>
    63a2:	2b54      	cmp	r3, #84	; 0x54
    63a4:	d05c      	beq.n	6460 <_scanf_float+0x1b8>
    63a6:	d813      	bhi.n	63d0 <_scanf_float+0x128>
    63a8:	2b4e      	cmp	r3, #78	; 0x4e
    63aa:	d1b3      	bne.n	6314 <_scanf_float+0x6c>
    63ac:	f1ba 0f00 	cmp.w	sl, #0
    63b0:	d142      	bne.n	6438 <_scanf_float+0x190>
    63b2:	f1b8 0f00 	cmp.w	r8, #0
    63b6:	d142      	bne.n	643e <_scanf_float+0x196>
    63b8:	6822      	ldr	r2, [r4, #0]
    63ba:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
    63be:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
    63c2:	d13c      	bne.n	643e <_scanf_float+0x196>
    63c4:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
    63c8:	6022      	str	r2, [r4, #0]
    63ca:	f04f 0a01 	mov.w	sl, #1
    63ce:	e029      	b.n	6424 <_scanf_float+0x17c>
    63d0:	2b59      	cmp	r3, #89	; 0x59
    63d2:	d01b      	beq.n	640c <_scanf_float+0x164>
    63d4:	2b61      	cmp	r3, #97	; 0x61
    63d6:	e7da      	b.n	638e <_scanf_float+0xe6>
    63d8:	2b6e      	cmp	r3, #110	; 0x6e
    63da:	d0e7      	beq.n	63ac <_scanf_float+0x104>
    63dc:	d812      	bhi.n	6404 <_scanf_float+0x15c>
    63de:	2b66      	cmp	r3, #102	; 0x66
    63e0:	d039      	beq.n	6456 <_scanf_float+0x1ae>
    63e2:	2b69      	cmp	r3, #105	; 0x69
    63e4:	d196      	bne.n	6314 <_scanf_float+0x6c>
    63e6:	bb95      	cbnz	r5, 644e <_scanf_float+0x1a6>
    63e8:	f1b8 0f00 	cmp.w	r8, #0
    63ec:	d195      	bne.n	631a <_scanf_float+0x72>
    63ee:	6822      	ldr	r2, [r4, #0]
    63f0:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
    63f4:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
    63f8:	d193      	bne.n	6322 <_scanf_float+0x7a>
    63fa:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
    63fe:	6022      	str	r2, [r4, #0]
    6400:	2501      	movs	r5, #1
    6402:	e00f      	b.n	6424 <_scanf_float+0x17c>
    6404:	2b74      	cmp	r3, #116	; 0x74
    6406:	d02b      	beq.n	6460 <_scanf_float+0x1b8>
    6408:	2b79      	cmp	r3, #121	; 0x79
    640a:	d183      	bne.n	6314 <_scanf_float+0x6c>
    640c:	2d07      	cmp	r5, #7
    640e:	d181      	bne.n	6314 <_scanf_float+0x6c>
    6410:	2508      	movs	r5, #8
    6412:	e007      	b.n	6424 <_scanf_float+0x17c>
    6414:	eb1a 0f05 	cmn.w	sl, r5
    6418:	f47f af7c 	bne.w	6314 <_scanf_float+0x6c>
    641c:	6822      	ldr	r2, [r4, #0]
    641e:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
    6422:	6022      	str	r2, [r4, #0]
    6424:	f806 3b01 	strb.w	r3, [r6], #1
    6428:	e79c      	b.n	6364 <_scanf_float+0xbc>
    642a:	6822      	ldr	r2, [r4, #0]
    642c:	0610      	lsls	r0, r2, #24
    642e:	f57f af71 	bpl.w	6314 <_scanf_float+0x6c>
    6432:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    6436:	e7f4      	b.n	6422 <_scanf_float+0x17a>
    6438:	f1ba 0f02 	cmp.w	sl, #2
    643c:	d03d      	beq.n	64ba <_scanf_float+0x212>
    643e:	2d01      	cmp	r5, #1
    6440:	d002      	beq.n	6448 <_scanf_float+0x1a0>
    6442:	2d04      	cmp	r5, #4
    6444:	f47f af66 	bne.w	6314 <_scanf_float+0x6c>
    6448:	3501      	adds	r5, #1
    644a:	b2ed      	uxtb	r5, r5
    644c:	e7ea      	b.n	6424 <_scanf_float+0x17c>
    644e:	2d03      	cmp	r5, #3
    6450:	d0fa      	beq.n	6448 <_scanf_float+0x1a0>
    6452:	2d05      	cmp	r5, #5
    6454:	e7f6      	b.n	6444 <_scanf_float+0x19c>
    6456:	2d02      	cmp	r5, #2
    6458:	f47f af5c 	bne.w	6314 <_scanf_float+0x6c>
    645c:	2503      	movs	r5, #3
    645e:	e7e1      	b.n	6424 <_scanf_float+0x17c>
    6460:	2d06      	cmp	r5, #6
    6462:	f47f af57 	bne.w	6314 <_scanf_float+0x6c>
    6466:	2507      	movs	r5, #7
    6468:	e7dc      	b.n	6424 <_scanf_float+0x17c>
    646a:	6822      	ldr	r2, [r4, #0]
    646c:	0591      	lsls	r1, r2, #22
    646e:	f57f af51 	bpl.w	6314 <_scanf_float+0x6c>
    6472:	f422 7220 	bic.w	r2, r2, #640	; 0x280
    6476:	6022      	str	r2, [r4, #0]
    6478:	f8cd 8004 	str.w	r8, [sp, #4]
    647c:	e7d2      	b.n	6424 <_scanf_float+0x17c>
    647e:	6822      	ldr	r2, [r4, #0]
    6480:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
    6484:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
    6488:	d006      	beq.n	6498 <_scanf_float+0x1f0>
    648a:	0550      	lsls	r0, r2, #21
    648c:	f57f af42 	bpl.w	6314 <_scanf_float+0x6c>
    6490:	f1b8 0f00 	cmp.w	r8, #0
    6494:	f43f af45 	beq.w	6322 <_scanf_float+0x7a>
    6498:	0591      	lsls	r1, r2, #22
    649a:	bf58      	it	pl
    649c:	9901      	ldrpl	r1, [sp, #4]
    649e:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
    64a2:	bf58      	it	pl
    64a4:	eba8 0101 	subpl.w	r1, r8, r1
    64a8:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
    64ac:	bf58      	it	pl
    64ae:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
    64b2:	6022      	str	r2, [r4, #0]
    64b4:	f04f 0800 	mov.w	r8, #0
    64b8:	e7b4      	b.n	6424 <_scanf_float+0x17c>
    64ba:	f04f 0a03 	mov.w	sl, #3
    64be:	e7b1      	b.n	6424 <_scanf_float+0x17c>
    64c0:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
    64c4:	4639      	mov	r1, r7
    64c6:	4648      	mov	r0, r9
    64c8:	4798      	blx	r3
    64ca:	2800      	cmp	r0, #0
    64cc:	f43f af0f 	beq.w	62ee <_scanf_float+0x46>
    64d0:	e720      	b.n	6314 <_scanf_float+0x6c>
    64d2:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    64d6:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
    64da:	463a      	mov	r2, r7
    64dc:	4648      	mov	r0, r9
    64de:	4798      	blx	r3
    64e0:	6923      	ldr	r3, [r4, #16]
    64e2:	3b01      	subs	r3, #1
    64e4:	6123      	str	r3, [r4, #16]
    64e6:	e722      	b.n	632e <_scanf_float+0x86>
    64e8:	1e6b      	subs	r3, r5, #1
    64ea:	2b06      	cmp	r3, #6
    64ec:	d825      	bhi.n	653a <_scanf_float+0x292>
    64ee:	2d02      	cmp	r5, #2
    64f0:	d836      	bhi.n	6560 <_scanf_float+0x2b8>
    64f2:	455e      	cmp	r6, fp
    64f4:	f67f af1e 	bls.w	6334 <_scanf_float+0x8c>
    64f8:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    64fc:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
    6500:	463a      	mov	r2, r7
    6502:	4648      	mov	r0, r9
    6504:	4798      	blx	r3
    6506:	6923      	ldr	r3, [r4, #16]
    6508:	3b01      	subs	r3, #1
    650a:	6123      	str	r3, [r4, #16]
    650c:	e7f1      	b.n	64f2 <_scanf_float+0x24a>
    650e:	9802      	ldr	r0, [sp, #8]
    6510:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    6514:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
    6518:	9002      	str	r0, [sp, #8]
    651a:	463a      	mov	r2, r7
    651c:	4648      	mov	r0, r9
    651e:	4798      	blx	r3
    6520:	6923      	ldr	r3, [r4, #16]
    6522:	3b01      	subs	r3, #1
    6524:	6123      	str	r3, [r4, #16]
    6526:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
    652a:	fa5f fa8a 	uxtb.w	sl, sl
    652e:	f1ba 0f02 	cmp.w	sl, #2
    6532:	d1ec      	bne.n	650e <_scanf_float+0x266>
    6534:	3d03      	subs	r5, #3
    6536:	b2ed      	uxtb	r5, r5
    6538:	1b76      	subs	r6, r6, r5
    653a:	6823      	ldr	r3, [r4, #0]
    653c:	05da      	lsls	r2, r3, #23
    653e:	d52f      	bpl.n	65a0 <_scanf_float+0x2f8>
    6540:	055b      	lsls	r3, r3, #21
    6542:	d510      	bpl.n	6566 <_scanf_float+0x2be>
    6544:	455e      	cmp	r6, fp
    6546:	f67f aef5 	bls.w	6334 <_scanf_float+0x8c>
    654a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    654e:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
    6552:	463a      	mov	r2, r7
    6554:	4648      	mov	r0, r9
    6556:	4798      	blx	r3
    6558:	6923      	ldr	r3, [r4, #16]
    655a:	3b01      	subs	r3, #1
    655c:	6123      	str	r3, [r4, #16]
    655e:	e7f1      	b.n	6544 <_scanf_float+0x29c>
    6560:	46aa      	mov	sl, r5
    6562:	9602      	str	r6, [sp, #8]
    6564:	e7df      	b.n	6526 <_scanf_float+0x27e>
    6566:	f816 1c01 	ldrb.w	r1, [r6, #-1]
    656a:	6923      	ldr	r3, [r4, #16]
    656c:	2965      	cmp	r1, #101	; 0x65
    656e:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
    6572:	f106 35ff 	add.w	r5, r6, #4294967295	; 0xffffffff
    6576:	6123      	str	r3, [r4, #16]
    6578:	d00c      	beq.n	6594 <_scanf_float+0x2ec>
    657a:	2945      	cmp	r1, #69	; 0x45
    657c:	d00a      	beq.n	6594 <_scanf_float+0x2ec>
    657e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    6582:	463a      	mov	r2, r7
    6584:	4648      	mov	r0, r9
    6586:	4798      	blx	r3
    6588:	6923      	ldr	r3, [r4, #16]
    658a:	f816 1c02 	ldrb.w	r1, [r6, #-2]
    658e:	3b01      	subs	r3, #1
    6590:	1eb5      	subs	r5, r6, #2
    6592:	6123      	str	r3, [r4, #16]
    6594:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    6598:	463a      	mov	r2, r7
    659a:	4648      	mov	r0, r9
    659c:	4798      	blx	r3
    659e:	462e      	mov	r6, r5
    65a0:	6825      	ldr	r5, [r4, #0]
    65a2:	f015 0510 	ands.w	r5, r5, #16
    65a6:	d158      	bne.n	665a <_scanf_float+0x3b2>
    65a8:	7035      	strb	r5, [r6, #0]
    65aa:	6823      	ldr	r3, [r4, #0]
    65ac:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
    65b0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
    65b4:	d11c      	bne.n	65f0 <_scanf_float+0x348>
    65b6:	9b01      	ldr	r3, [sp, #4]
    65b8:	4543      	cmp	r3, r8
    65ba:	eba3 0208 	sub.w	r2, r3, r8
    65be:	d124      	bne.n	660a <_scanf_float+0x362>
    65c0:	2200      	movs	r2, #0
    65c2:	4659      	mov	r1, fp
    65c4:	4648      	mov	r0, r9
    65c6:	f000 ffd7 	bl	7578 <_strtod_r>
    65ca:	9b03      	ldr	r3, [sp, #12]
    65cc:	6821      	ldr	r1, [r4, #0]
    65ce:	681b      	ldr	r3, [r3, #0]
    65d0:	f011 0f02 	tst.w	r1, #2
    65d4:	ec57 6b10 	vmov	r6, r7, d0
    65d8:	f103 0204 	add.w	r2, r3, #4
    65dc:	d020      	beq.n	6620 <_scanf_float+0x378>
    65de:	9903      	ldr	r1, [sp, #12]
    65e0:	600a      	str	r2, [r1, #0]
    65e2:	681b      	ldr	r3, [r3, #0]
    65e4:	e9c3 6700 	strd	r6, r7, [r3]
    65e8:	68e3      	ldr	r3, [r4, #12]
    65ea:	3301      	adds	r3, #1
    65ec:	60e3      	str	r3, [r4, #12]
    65ee:	e6a2      	b.n	6336 <_scanf_float+0x8e>
    65f0:	9b04      	ldr	r3, [sp, #16]
    65f2:	2b00      	cmp	r3, #0
    65f4:	d0e4      	beq.n	65c0 <_scanf_float+0x318>
    65f6:	9905      	ldr	r1, [sp, #20]
    65f8:	230a      	movs	r3, #10
    65fa:	462a      	mov	r2, r5
    65fc:	3101      	adds	r1, #1
    65fe:	4648      	mov	r0, r9
    6600:	f001 f838 	bl	7674 <_strtol_r>
    6604:	9b04      	ldr	r3, [sp, #16]
    6606:	9e05      	ldr	r6, [sp, #20]
    6608:	1ac2      	subs	r2, r0, r3
    660a:	f204 136f 	addw	r3, r4, #367	; 0x16f
    660e:	429e      	cmp	r6, r3
    6610:	bf28      	it	cs
    6612:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
    6616:	4912      	ldr	r1, [pc, #72]	; (6660 <_scanf_float+0x3b8>)
    6618:	4630      	mov	r0, r6
    661a:	f000 f98b 	bl	6934 <siprintf>
    661e:	e7cf      	b.n	65c0 <_scanf_float+0x318>
    6620:	f011 0f04 	tst.w	r1, #4
    6624:	9903      	ldr	r1, [sp, #12]
    6626:	600a      	str	r2, [r1, #0]
    6628:	d1db      	bne.n	65e2 <_scanf_float+0x33a>
    662a:	f8d3 8000 	ldr.w	r8, [r3]
    662e:	ee10 2a10 	vmov	r2, s0
    6632:	463b      	mov	r3, r7
    6634:	ee10 0a10 	vmov	r0, s0
    6638:	4639      	mov	r1, r7
    663a:	f003 fdbf 	bl	a1bc <__aeabi_dcmpun>
    663e:	b128      	cbz	r0, 664c <_scanf_float+0x3a4>
    6640:	4808      	ldr	r0, [pc, #32]	; (6664 <_scanf_float+0x3bc>)
    6642:	f000 f971 	bl	6928 <nanf>
    6646:	ed88 0a00 	vstr	s0, [r8]
    664a:	e7cd      	b.n	65e8 <_scanf_float+0x340>
    664c:	4630      	mov	r0, r6
    664e:	4639      	mov	r1, r7
    6650:	f003 fe12 	bl	a278 <__aeabi_d2f>
    6654:	f8c8 0000 	str.w	r0, [r8]
    6658:	e7c6      	b.n	65e8 <_scanf_float+0x340>
    665a:	2500      	movs	r5, #0
    665c:	e66b      	b.n	6336 <_scanf_float+0x8e>
    665e:	bf00      	nop
    6660:	0000b84f 	.word	0x0000b84f
    6664:	0000a481 	.word	0x0000a481

00006668 <iprintf>:
iprintf():
    6668:	b40f      	push	{r0, r1, r2, r3}
    666a:	4b0a      	ldr	r3, [pc, #40]	; (6694 <iprintf+0x2c>)
    666c:	b513      	push	{r0, r1, r4, lr}
    666e:	681c      	ldr	r4, [r3, #0]
    6670:	b124      	cbz	r4, 667c <iprintf+0x14>
    6672:	69a3      	ldr	r3, [r4, #24]
    6674:	b913      	cbnz	r3, 667c <iprintf+0x14>
    6676:	4620      	mov	r0, r4
    6678:	f002 f81e 	bl	86b8 <__sinit>
    667c:	ab05      	add	r3, sp, #20
    667e:	9a04      	ldr	r2, [sp, #16]
    6680:	68a1      	ldr	r1, [r4, #8]
    6682:	9301      	str	r3, [sp, #4]
    6684:	4620      	mov	r0, r4
    6686:	f7ff f8a3 	bl	57d0 <_vfiprintf_r>
    668a:	b002      	add	sp, #8
    668c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    6690:	b004      	add	sp, #16
    6692:	4770      	bx	lr
    6694:	10000150 	.word	0x10000150

00006698 <_puts_r>:
_puts_r():
    6698:	b570      	push	{r4, r5, r6, lr}
    669a:	460e      	mov	r6, r1
    669c:	4605      	mov	r5, r0
    669e:	b118      	cbz	r0, 66a8 <_puts_r+0x10>
    66a0:	6983      	ldr	r3, [r0, #24]
    66a2:	b90b      	cbnz	r3, 66a8 <_puts_r+0x10>
    66a4:	f002 f808 	bl	86b8 <__sinit>
    66a8:	69ab      	ldr	r3, [r5, #24]
    66aa:	68ac      	ldr	r4, [r5, #8]
    66ac:	b913      	cbnz	r3, 66b4 <_puts_r+0x1c>
    66ae:	4628      	mov	r0, r5
    66b0:	f002 f802 	bl	86b8 <__sinit>
    66b4:	4b2c      	ldr	r3, [pc, #176]	; (6768 <_puts_r+0xd0>)
    66b6:	429c      	cmp	r4, r3
    66b8:	d120      	bne.n	66fc <_puts_r+0x64>
    66ba:	686c      	ldr	r4, [r5, #4]
    66bc:	6e63      	ldr	r3, [r4, #100]	; 0x64
    66be:	07db      	lsls	r3, r3, #31
    66c0:	d405      	bmi.n	66ce <_puts_r+0x36>
    66c2:	89a3      	ldrh	r3, [r4, #12]
    66c4:	0598      	lsls	r0, r3, #22
    66c6:	d402      	bmi.n	66ce <_puts_r+0x36>
    66c8:	6da0      	ldr	r0, [r4, #88]	; 0x58
    66ca:	f7fe ff6c 	bl	55a6 <__retarget_lock_acquire_recursive>
    66ce:	89a3      	ldrh	r3, [r4, #12]
    66d0:	0719      	lsls	r1, r3, #28
    66d2:	d51d      	bpl.n	6710 <_puts_r+0x78>
    66d4:	6923      	ldr	r3, [r4, #16]
    66d6:	b1db      	cbz	r3, 6710 <_puts_r+0x78>
    66d8:	3e01      	subs	r6, #1
    66da:	68a3      	ldr	r3, [r4, #8]
    66dc:	f816 1f01 	ldrb.w	r1, [r6, #1]!
    66e0:	3b01      	subs	r3, #1
    66e2:	60a3      	str	r3, [r4, #8]
    66e4:	bb39      	cbnz	r1, 6736 <_puts_r+0x9e>
    66e6:	2b00      	cmp	r3, #0
    66e8:	da38      	bge.n	675c <_puts_r+0xc4>
    66ea:	4622      	mov	r2, r4
    66ec:	210a      	movs	r1, #10
    66ee:	4628      	mov	r0, r5
    66f0:	f000 ffc2 	bl	7678 <__swbuf_r>
    66f4:	3001      	adds	r0, #1
    66f6:	d011      	beq.n	671c <_puts_r+0x84>
    66f8:	250a      	movs	r5, #10
    66fa:	e011      	b.n	6720 <_puts_r+0x88>
    66fc:	4b1b      	ldr	r3, [pc, #108]	; (676c <_puts_r+0xd4>)
    66fe:	429c      	cmp	r4, r3
    6700:	d101      	bne.n	6706 <_puts_r+0x6e>
    6702:	68ac      	ldr	r4, [r5, #8]
    6704:	e7da      	b.n	66bc <_puts_r+0x24>
    6706:	4b1a      	ldr	r3, [pc, #104]	; (6770 <_puts_r+0xd8>)
    6708:	429c      	cmp	r4, r3
    670a:	bf08      	it	eq
    670c:	68ec      	ldreq	r4, [r5, #12]
    670e:	e7d5      	b.n	66bc <_puts_r+0x24>
    6710:	4621      	mov	r1, r4
    6712:	4628      	mov	r0, r5
    6714:	f001 f802 	bl	771c <__swsetup_r>
    6718:	2800      	cmp	r0, #0
    671a:	d0dd      	beq.n	66d8 <_puts_r+0x40>
    671c:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
    6720:	6e63      	ldr	r3, [r4, #100]	; 0x64
    6722:	07da      	lsls	r2, r3, #31
    6724:	d405      	bmi.n	6732 <_puts_r+0x9a>
    6726:	89a3      	ldrh	r3, [r4, #12]
    6728:	059b      	lsls	r3, r3, #22
    672a:	d402      	bmi.n	6732 <_puts_r+0x9a>
    672c:	6da0      	ldr	r0, [r4, #88]	; 0x58
    672e:	f7fe ff3b 	bl	55a8 <__retarget_lock_release_recursive>
    6732:	4628      	mov	r0, r5
    6734:	bd70      	pop	{r4, r5, r6, pc}
    6736:	2b00      	cmp	r3, #0
    6738:	da04      	bge.n	6744 <_puts_r+0xac>
    673a:	69a2      	ldr	r2, [r4, #24]
    673c:	429a      	cmp	r2, r3
    673e:	dc06      	bgt.n	674e <_puts_r+0xb6>
    6740:	290a      	cmp	r1, #10
    6742:	d004      	beq.n	674e <_puts_r+0xb6>
    6744:	6823      	ldr	r3, [r4, #0]
    6746:	1c5a      	adds	r2, r3, #1
    6748:	6022      	str	r2, [r4, #0]
    674a:	7019      	strb	r1, [r3, #0]
    674c:	e7c5      	b.n	66da <_puts_r+0x42>
    674e:	4622      	mov	r2, r4
    6750:	4628      	mov	r0, r5
    6752:	f000 ff91 	bl	7678 <__swbuf_r>
    6756:	3001      	adds	r0, #1
    6758:	d1bf      	bne.n	66da <_puts_r+0x42>
    675a:	e7df      	b.n	671c <_puts_r+0x84>
    675c:	6823      	ldr	r3, [r4, #0]
    675e:	250a      	movs	r5, #10
    6760:	1c5a      	adds	r2, r3, #1
    6762:	6022      	str	r2, [r4, #0]
    6764:	701d      	strb	r5, [r3, #0]
    6766:	e7db      	b.n	6720 <_puts_r+0x88>
    6768:	0000b8d8 	.word	0x0000b8d8
    676c:	0000b8f8 	.word	0x0000b8f8
    6770:	0000b8b8 	.word	0x0000b8b8

00006774 <puts>:
puts():
    6774:	4b02      	ldr	r3, [pc, #8]	; (6780 <puts+0xc>)
    6776:	4601      	mov	r1, r0
    6778:	6818      	ldr	r0, [r3, #0]
    677a:	f7ff bf8d 	b.w	6698 <_puts_r>
    677e:	bf00      	nop
    6780:	10000150 	.word	0x10000150

00006784 <_sbrk_r>:
_sbrk_r():
    6784:	b538      	push	{r3, r4, r5, lr}
    6786:	4c06      	ldr	r4, [pc, #24]	; (67a0 <_sbrk_r+0x1c>)
    6788:	2300      	movs	r3, #0
    678a:	4605      	mov	r5, r0
    678c:	4608      	mov	r0, r1
    678e:	6023      	str	r3, [r4, #0]
    6790:	f7f9 fdd8 	bl	344 <_sbrk>
    6794:	1c43      	adds	r3, r0, #1
    6796:	d102      	bne.n	679e <_sbrk_r+0x1a>
    6798:	6823      	ldr	r3, [r4, #0]
    679a:	b103      	cbz	r3, 679e <_sbrk_r+0x1a>
    679c:	602b      	str	r3, [r5, #0]
    679e:	bd38      	pop	{r3, r4, r5, pc}
    67a0:	10000bb4 	.word	0x10000bb4

000067a4 <setvbuf>:
setvbuf():
    67a4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    67a8:	461e      	mov	r6, r3
    67aa:	4b5b      	ldr	r3, [pc, #364]	; (6918 <setvbuf+0x174>)
    67ac:	681d      	ldr	r5, [r3, #0]
    67ae:	4604      	mov	r4, r0
    67b0:	460f      	mov	r7, r1
    67b2:	4690      	mov	r8, r2
    67b4:	b125      	cbz	r5, 67c0 <setvbuf+0x1c>
    67b6:	69ab      	ldr	r3, [r5, #24]
    67b8:	b913      	cbnz	r3, 67c0 <setvbuf+0x1c>
    67ba:	4628      	mov	r0, r5
    67bc:	f001 ff7c 	bl	86b8 <__sinit>
    67c0:	4b56      	ldr	r3, [pc, #344]	; (691c <setvbuf+0x178>)
    67c2:	429c      	cmp	r4, r3
    67c4:	d166      	bne.n	6894 <setvbuf+0xf0>
    67c6:	686c      	ldr	r4, [r5, #4]
    67c8:	f1b8 0f02 	cmp.w	r8, #2
    67cc:	d006      	beq.n	67dc <setvbuf+0x38>
    67ce:	f1b8 0f01 	cmp.w	r8, #1
    67d2:	f200 809d 	bhi.w	6910 <setvbuf+0x16c>
    67d6:	2e00      	cmp	r6, #0
    67d8:	f2c0 809a 	blt.w	6910 <setvbuf+0x16c>
    67dc:	6e63      	ldr	r3, [r4, #100]	; 0x64
    67de:	07da      	lsls	r2, r3, #31
    67e0:	d405      	bmi.n	67ee <setvbuf+0x4a>
    67e2:	89a3      	ldrh	r3, [r4, #12]
    67e4:	059b      	lsls	r3, r3, #22
    67e6:	d402      	bmi.n	67ee <setvbuf+0x4a>
    67e8:	6da0      	ldr	r0, [r4, #88]	; 0x58
    67ea:	f7fe fedc 	bl	55a6 <__retarget_lock_acquire_recursive>
    67ee:	4621      	mov	r1, r4
    67f0:	4628      	mov	r0, r5
    67f2:	f001 fecd 	bl	8590 <_fflush_r>
    67f6:	6b61      	ldr	r1, [r4, #52]	; 0x34
    67f8:	b141      	cbz	r1, 680c <setvbuf+0x68>
    67fa:	f104 0344 	add.w	r3, r4, #68	; 0x44
    67fe:	4299      	cmp	r1, r3
    6800:	d002      	beq.n	6808 <setvbuf+0x64>
    6802:	4628      	mov	r0, r5
    6804:	f7fe ff12 	bl	562c <_free_r>
    6808:	2300      	movs	r3, #0
    680a:	6363      	str	r3, [r4, #52]	; 0x34
    680c:	2300      	movs	r3, #0
    680e:	61a3      	str	r3, [r4, #24]
    6810:	6063      	str	r3, [r4, #4]
    6812:	89a3      	ldrh	r3, [r4, #12]
    6814:	0618      	lsls	r0, r3, #24
    6816:	d503      	bpl.n	6820 <setvbuf+0x7c>
    6818:	6921      	ldr	r1, [r4, #16]
    681a:	4628      	mov	r0, r5
    681c:	f7fe ff06 	bl	562c <_free_r>
    6820:	89a3      	ldrh	r3, [r4, #12]
    6822:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
    6826:	f023 0303 	bic.w	r3, r3, #3
    682a:	f1b8 0f02 	cmp.w	r8, #2
    682e:	81a3      	strh	r3, [r4, #12]
    6830:	d06a      	beq.n	6908 <setvbuf+0x164>
    6832:	ab01      	add	r3, sp, #4
    6834:	466a      	mov	r2, sp
    6836:	4621      	mov	r1, r4
    6838:	4628      	mov	r0, r5
    683a:	f002 fb07 	bl	8e4c <__swhatbuf_r>
    683e:	89a3      	ldrh	r3, [r4, #12]
    6840:	4318      	orrs	r0, r3
    6842:	81a0      	strh	r0, [r4, #12]
    6844:	2e00      	cmp	r6, #0
    6846:	d12f      	bne.n	68a8 <setvbuf+0x104>
    6848:	9e00      	ldr	r6, [sp, #0]
    684a:	4630      	mov	r0, r6
    684c:	f7fe feae 	bl	55ac <malloc>
    6850:	4607      	mov	r7, r0
    6852:	2800      	cmp	r0, #0
    6854:	d153      	bne.n	68fe <setvbuf+0x15a>
    6856:	f8dd 9000 	ldr.w	r9, [sp]
    685a:	45b1      	cmp	r9, r6
    685c:	d148      	bne.n	68f0 <setvbuf+0x14c>
    685e:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
    6862:	2200      	movs	r2, #0
    6864:	60a2      	str	r2, [r4, #8]
    6866:	f104 0247 	add.w	r2, r4, #71	; 0x47
    686a:	6022      	str	r2, [r4, #0]
    686c:	6122      	str	r2, [r4, #16]
    686e:	2201      	movs	r2, #1
    6870:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    6874:	6162      	str	r2, [r4, #20]
    6876:	6e62      	ldr	r2, [r4, #100]	; 0x64
    6878:	f043 0302 	orr.w	r3, r3, #2
    687c:	07d1      	lsls	r1, r2, #31
    687e:	81a3      	strh	r3, [r4, #12]
    6880:	d404      	bmi.n	688c <setvbuf+0xe8>
    6882:	059b      	lsls	r3, r3, #22
    6884:	d402      	bmi.n	688c <setvbuf+0xe8>
    6886:	6da0      	ldr	r0, [r4, #88]	; 0x58
    6888:	f7fe fe8e 	bl	55a8 <__retarget_lock_release_recursive>
    688c:	4628      	mov	r0, r5
    688e:	b003      	add	sp, #12
    6890:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    6894:	4b22      	ldr	r3, [pc, #136]	; (6920 <setvbuf+0x17c>)
    6896:	429c      	cmp	r4, r3
    6898:	d101      	bne.n	689e <setvbuf+0xfa>
    689a:	68ac      	ldr	r4, [r5, #8]
    689c:	e794      	b.n	67c8 <setvbuf+0x24>
    689e:	4b21      	ldr	r3, [pc, #132]	; (6924 <setvbuf+0x180>)
    68a0:	429c      	cmp	r4, r3
    68a2:	bf08      	it	eq
    68a4:	68ec      	ldreq	r4, [r5, #12]
    68a6:	e78f      	b.n	67c8 <setvbuf+0x24>
    68a8:	2f00      	cmp	r7, #0
    68aa:	d0ce      	beq.n	684a <setvbuf+0xa6>
    68ac:	69ab      	ldr	r3, [r5, #24]
    68ae:	b913      	cbnz	r3, 68b6 <setvbuf+0x112>
    68b0:	4628      	mov	r0, r5
    68b2:	f001 ff01 	bl	86b8 <__sinit>
    68b6:	f1b8 0f01 	cmp.w	r8, #1
    68ba:	bf08      	it	eq
    68bc:	89a3      	ldrheq	r3, [r4, #12]
    68be:	6027      	str	r7, [r4, #0]
    68c0:	bf04      	itt	eq
    68c2:	f043 0301 	orreq.w	r3, r3, #1
    68c6:	81a3      	strheq	r3, [r4, #12]
    68c8:	89a3      	ldrh	r3, [r4, #12]
    68ca:	f013 0208 	ands.w	r2, r3, #8
    68ce:	e9c4 7604 	strd	r7, r6, [r4, #16]
    68d2:	d01b      	beq.n	690c <setvbuf+0x168>
    68d4:	07da      	lsls	r2, r3, #31
    68d6:	bf41      	itttt	mi
    68d8:	2200      	movmi	r2, #0
    68da:	4276      	negmi	r6, r6
    68dc:	60a2      	strmi	r2, [r4, #8]
    68de:	61a6      	strmi	r6, [r4, #24]
    68e0:	bf58      	it	pl
    68e2:	60a6      	strpl	r6, [r4, #8]
    68e4:	6e65      	ldr	r5, [r4, #100]	; 0x64
    68e6:	f015 0501 	ands.w	r5, r5, #1
    68ea:	d0ca      	beq.n	6882 <setvbuf+0xde>
    68ec:	2500      	movs	r5, #0
    68ee:	e7cd      	b.n	688c <setvbuf+0xe8>
    68f0:	4648      	mov	r0, r9
    68f2:	f7fe fe5b 	bl	55ac <malloc>
    68f6:	4607      	mov	r7, r0
    68f8:	2800      	cmp	r0, #0
    68fa:	d0b0      	beq.n	685e <setvbuf+0xba>
    68fc:	464e      	mov	r6, r9
    68fe:	89a3      	ldrh	r3, [r4, #12]
    6900:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    6904:	81a3      	strh	r3, [r4, #12]
    6906:	e7d1      	b.n	68ac <setvbuf+0x108>
    6908:	2500      	movs	r5, #0
    690a:	e7aa      	b.n	6862 <setvbuf+0xbe>
    690c:	60a2      	str	r2, [r4, #8]
    690e:	e7e9      	b.n	68e4 <setvbuf+0x140>
    6910:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
    6914:	e7ba      	b.n	688c <setvbuf+0xe8>
    6916:	bf00      	nop
    6918:	10000150 	.word	0x10000150
    691c:	0000b8d8 	.word	0x0000b8d8
    6920:	0000b8f8 	.word	0x0000b8f8
    6924:	0000b8b8 	.word	0x0000b8b8

00006928 <nanf>:
nanf():
    6928:	ed9f 0a01 	vldr	s0, [pc, #4]	; 6930 <nanf+0x8>
    692c:	4770      	bx	lr
    692e:	bf00      	nop
    6930:	7fc00000 	.word	0x7fc00000

00006934 <siprintf>:
siprintf():
    6934:	b40e      	push	{r1, r2, r3}
    6936:	b500      	push	{lr}
    6938:	b09c      	sub	sp, #112	; 0x70
    693a:	ab1d      	add	r3, sp, #116	; 0x74
    693c:	9002      	str	r0, [sp, #8]
    693e:	9006      	str	r0, [sp, #24]
    6940:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
    6944:	4809      	ldr	r0, [pc, #36]	; (696c <siprintf+0x38>)
    6946:	9107      	str	r1, [sp, #28]
    6948:	9104      	str	r1, [sp, #16]
    694a:	4909      	ldr	r1, [pc, #36]	; (6970 <siprintf+0x3c>)
    694c:	f853 2b04 	ldr.w	r2, [r3], #4
    6950:	9105      	str	r1, [sp, #20]
    6952:	6800      	ldr	r0, [r0, #0]
    6954:	9301      	str	r3, [sp, #4]
    6956:	a902      	add	r1, sp, #8
    6958:	f002 ffd6 	bl	9908 <_svfiprintf_r>
    695c:	9b02      	ldr	r3, [sp, #8]
    695e:	2200      	movs	r2, #0
    6960:	701a      	strb	r2, [r3, #0]
    6962:	b01c      	add	sp, #112	; 0x70
    6964:	f85d eb04 	ldr.w	lr, [sp], #4
    6968:	b003      	add	sp, #12
    696a:	4770      	bx	lr
    696c:	10000150 	.word	0x10000150
    6970:	ffff0208 	.word	0xffff0208

00006974 <strlen>:
strlen():
    6974:	4603      	mov	r3, r0
    6976:	f813 2b01 	ldrb.w	r2, [r3], #1
    697a:	2a00      	cmp	r2, #0
    697c:	d1fb      	bne.n	6976 <strlen+0x2>
    697e:	1a18      	subs	r0, r3, r0
    6980:	3801      	subs	r0, #1
    6982:	4770      	bx	lr

00006984 <strncmp>:
strncmp():
    6984:	b510      	push	{r4, lr}
    6986:	b16a      	cbz	r2, 69a4 <strncmp+0x20>
    6988:	3901      	subs	r1, #1
    698a:	1884      	adds	r4, r0, r2
    698c:	f810 3b01 	ldrb.w	r3, [r0], #1
    6990:	f811 2f01 	ldrb.w	r2, [r1, #1]!
    6994:	4293      	cmp	r3, r2
    6996:	d103      	bne.n	69a0 <strncmp+0x1c>
    6998:	42a0      	cmp	r0, r4
    699a:	d001      	beq.n	69a0 <strncmp+0x1c>
    699c:	2b00      	cmp	r3, #0
    699e:	d1f5      	bne.n	698c <strncmp+0x8>
    69a0:	1a98      	subs	r0, r3, r2
    69a2:	bd10      	pop	{r4, pc}
    69a4:	4610      	mov	r0, r2
    69a6:	e7fc      	b.n	69a2 <strncmp+0x1e>

000069a8 <sulp>:
sulp():
    69a8:	b570      	push	{r4, r5, r6, lr}
    69aa:	4604      	mov	r4, r0
    69ac:	460d      	mov	r5, r1
    69ae:	ec45 4b10 	vmov	d0, r4, r5
    69b2:	4616      	mov	r6, r2
    69b4:	f002 fde6 	bl	9584 <__ulp>
    69b8:	ec51 0b10 	vmov	r0, r1, d0
    69bc:	b17e      	cbz	r6, 69de <sulp+0x36>
    69be:	f3c5 530a 	ubfx	r3, r5, #20, #11
    69c2:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
    69c6:	2b00      	cmp	r3, #0
    69c8:	dd09      	ble.n	69de <sulp+0x36>
    69ca:	051b      	lsls	r3, r3, #20
    69cc:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
    69d0:	2400      	movs	r4, #0
    69d2:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
    69d6:	4622      	mov	r2, r4
    69d8:	462b      	mov	r3, r5
    69da:	f003 f955 	bl	9c88 <__aeabi_dmul>
    69de:	bd70      	pop	{r4, r5, r6, pc}

000069e0 <_strtod_l>:
_strtod_l():
    69e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    69e4:	b0a1      	sub	sp, #132	; 0x84
    69e6:	461f      	mov	r7, r3
    69e8:	2300      	movs	r3, #0
    69ea:	931c      	str	r3, [sp, #112]	; 0x70
    69ec:	4b9b      	ldr	r3, [pc, #620]	; (6c5c <_strtod_l+0x27c>)
    69ee:	9004      	str	r0, [sp, #16]
    69f0:	681b      	ldr	r3, [r3, #0]
    69f2:	9217      	str	r2, [sp, #92]	; 0x5c
    69f4:	4618      	mov	r0, r3
    69f6:	460e      	mov	r6, r1
    69f8:	9305      	str	r3, [sp, #20]
    69fa:	f7ff ffbb 	bl	6974 <strlen>
    69fe:	f04f 0a00 	mov.w	sl, #0
    6a02:	4604      	mov	r4, r0
    6a04:	f04f 0b00 	mov.w	fp, #0
    6a08:	961b      	str	r6, [sp, #108]	; 0x6c
    6a0a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    6a0c:	7813      	ldrb	r3, [r2, #0]
    6a0e:	2b0d      	cmp	r3, #13
    6a10:	d832      	bhi.n	6a78 <_strtod_l+0x98>
    6a12:	2b09      	cmp	r3, #9
    6a14:	d236      	bcs.n	6a84 <_strtod_l+0xa4>
    6a16:	2b00      	cmp	r3, #0
    6a18:	d03e      	beq.n	6a98 <_strtod_l+0xb8>
    6a1a:	2300      	movs	r3, #0
    6a1c:	930c      	str	r3, [sp, #48]	; 0x30
    6a1e:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
    6a20:	782b      	ldrb	r3, [r5, #0]
    6a22:	2b30      	cmp	r3, #48	; 0x30
    6a24:	f040 80a9 	bne.w	6b7a <_strtod_l+0x19a>
    6a28:	786b      	ldrb	r3, [r5, #1]
    6a2a:	2b58      	cmp	r3, #88	; 0x58
    6a2c:	d001      	beq.n	6a32 <_strtod_l+0x52>
    6a2e:	2b78      	cmp	r3, #120	; 0x78
    6a30:	d167      	bne.n	6b02 <_strtod_l+0x122>
    6a32:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6a34:	9301      	str	r3, [sp, #4]
    6a36:	ab1c      	add	r3, sp, #112	; 0x70
    6a38:	9300      	str	r3, [sp, #0]
    6a3a:	9702      	str	r7, [sp, #8]
    6a3c:	ab1d      	add	r3, sp, #116	; 0x74
    6a3e:	4a88      	ldr	r2, [pc, #544]	; (6c60 <_strtod_l+0x280>)
    6a40:	9804      	ldr	r0, [sp, #16]
    6a42:	a91b      	add	r1, sp, #108	; 0x6c
    6a44:	f001 ff24 	bl	8890 <__gethex>
    6a48:	f010 0407 	ands.w	r4, r0, #7
    6a4c:	4606      	mov	r6, r0
    6a4e:	d005      	beq.n	6a5c <_strtod_l+0x7c>
    6a50:	2c06      	cmp	r4, #6
    6a52:	d12b      	bne.n	6aac <_strtod_l+0xcc>
    6a54:	3501      	adds	r5, #1
    6a56:	2300      	movs	r3, #0
    6a58:	951b      	str	r5, [sp, #108]	; 0x6c
    6a5a:	930c      	str	r3, [sp, #48]	; 0x30
    6a5c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    6a5e:	2b00      	cmp	r3, #0
    6a60:	f040 8576 	bne.w	7550 <_strtod_l+0xb70>
    6a64:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6a66:	b1e3      	cbz	r3, 6aa2 <_strtod_l+0xc2>
    6a68:	4652      	mov	r2, sl
    6a6a:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
    6a6e:	ec43 2b10 	vmov	d0, r2, r3
    6a72:	b021      	add	sp, #132	; 0x84
    6a74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6a78:	2b2b      	cmp	r3, #43	; 0x2b
    6a7a:	d006      	beq.n	6a8a <_strtod_l+0xaa>
    6a7c:	2b2d      	cmp	r3, #45	; 0x2d
    6a7e:	d013      	beq.n	6aa8 <_strtod_l+0xc8>
    6a80:	2b20      	cmp	r3, #32
    6a82:	d1ca      	bne.n	6a1a <_strtod_l+0x3a>
    6a84:	3201      	adds	r2, #1
    6a86:	921b      	str	r2, [sp, #108]	; 0x6c
    6a88:	e7bf      	b.n	6a0a <_strtod_l+0x2a>
    6a8a:	2300      	movs	r3, #0
    6a8c:	930c      	str	r3, [sp, #48]	; 0x30
    6a8e:	1c53      	adds	r3, r2, #1
    6a90:	931b      	str	r3, [sp, #108]	; 0x6c
    6a92:	7853      	ldrb	r3, [r2, #1]
    6a94:	2b00      	cmp	r3, #0
    6a96:	d1c2      	bne.n	6a1e <_strtod_l+0x3e>
    6a98:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    6a9a:	961b      	str	r6, [sp, #108]	; 0x6c
    6a9c:	2b00      	cmp	r3, #0
    6a9e:	f040 8555 	bne.w	754c <_strtod_l+0xb6c>
    6aa2:	4652      	mov	r2, sl
    6aa4:	465b      	mov	r3, fp
    6aa6:	e7e2      	b.n	6a6e <_strtod_l+0x8e>
    6aa8:	2301      	movs	r3, #1
    6aaa:	e7ef      	b.n	6a8c <_strtod_l+0xac>
    6aac:	9a1c      	ldr	r2, [sp, #112]	; 0x70
    6aae:	b13a      	cbz	r2, 6ac0 <_strtod_l+0xe0>
    6ab0:	2135      	movs	r1, #53	; 0x35
    6ab2:	a81e      	add	r0, sp, #120	; 0x78
    6ab4:	f002 fe5d 	bl	9772 <__copybits>
    6ab8:	991c      	ldr	r1, [sp, #112]	; 0x70
    6aba:	9804      	ldr	r0, [sp, #16]
    6abc:	f002 fad0 	bl	9060 <_Bfree>
    6ac0:	3c01      	subs	r4, #1
    6ac2:	2c04      	cmp	r4, #4
    6ac4:	d806      	bhi.n	6ad4 <_strtod_l+0xf4>
    6ac6:	e8df f004 	tbb	[pc, r4]
    6aca:	030a      	.short	0x030a
    6acc:	1714      	.short	0x1714
    6ace:	0a          	.byte	0x0a
    6acf:	00          	.byte	0x00
    6ad0:	e9dd ab1e 	ldrd	sl, fp, [sp, #120]	; 0x78
    6ad4:	0731      	lsls	r1, r6, #28
    6ad6:	d5c1      	bpl.n	6a5c <_strtod_l+0x7c>
    6ad8:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
    6adc:	e7be      	b.n	6a5c <_strtod_l+0x7c>
    6ade:	e9dd a31e 	ldrd	sl, r3, [sp, #120]	; 0x78
    6ae2:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    6ae4:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
    6ae8:	f202 4233 	addw	r2, r2, #1075	; 0x433
    6aec:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
    6af0:	e7f0      	b.n	6ad4 <_strtod_l+0xf4>
    6af2:	f8df b170 	ldr.w	fp, [pc, #368]	; 6c64 <_strtod_l+0x284>
    6af6:	e7ed      	b.n	6ad4 <_strtod_l+0xf4>
    6af8:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
    6afc:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
    6b00:	e7e8      	b.n	6ad4 <_strtod_l+0xf4>
    6b02:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6b04:	1c5a      	adds	r2, r3, #1
    6b06:	921b      	str	r2, [sp, #108]	; 0x6c
    6b08:	785b      	ldrb	r3, [r3, #1]
    6b0a:	2b30      	cmp	r3, #48	; 0x30
    6b0c:	d0f9      	beq.n	6b02 <_strtod_l+0x122>
    6b0e:	2b00      	cmp	r3, #0
    6b10:	d0a4      	beq.n	6a5c <_strtod_l+0x7c>
    6b12:	2301      	movs	r3, #1
    6b14:	f04f 0900 	mov.w	r9, #0
    6b18:	9306      	str	r3, [sp, #24]
    6b1a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6b1c:	9309      	str	r3, [sp, #36]	; 0x24
    6b1e:	f8cd 901c 	str.w	r9, [sp, #28]
    6b22:	46c8      	mov	r8, r9
    6b24:	220a      	movs	r2, #10
    6b26:	981b      	ldr	r0, [sp, #108]	; 0x6c
    6b28:	7805      	ldrb	r5, [r0, #0]
    6b2a:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
    6b2e:	b2d9      	uxtb	r1, r3
    6b30:	2909      	cmp	r1, #9
    6b32:	d924      	bls.n	6b7e <_strtod_l+0x19e>
    6b34:	4622      	mov	r2, r4
    6b36:	9905      	ldr	r1, [sp, #20]
    6b38:	f7ff ff24 	bl	6984 <strncmp>
    6b3c:	b378      	cbz	r0, 6b9e <_strtod_l+0x1be>
    6b3e:	2000      	movs	r0, #0
    6b40:	462b      	mov	r3, r5
    6b42:	4644      	mov	r4, r8
    6b44:	9005      	str	r0, [sp, #20]
    6b46:	4602      	mov	r2, r0
    6b48:	2b65      	cmp	r3, #101	; 0x65
    6b4a:	d001      	beq.n	6b50 <_strtod_l+0x170>
    6b4c:	2b45      	cmp	r3, #69	; 0x45
    6b4e:	d112      	bne.n	6b76 <_strtod_l+0x196>
    6b50:	b91c      	cbnz	r4, 6b5a <_strtod_l+0x17a>
    6b52:	9b06      	ldr	r3, [sp, #24]
    6b54:	4303      	orrs	r3, r0
    6b56:	d09f      	beq.n	6a98 <_strtod_l+0xb8>
    6b58:	2400      	movs	r4, #0
    6b5a:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
    6b5c:	1c73      	adds	r3, r6, #1
    6b5e:	931b      	str	r3, [sp, #108]	; 0x6c
    6b60:	7873      	ldrb	r3, [r6, #1]
    6b62:	2b2b      	cmp	r3, #43	; 0x2b
    6b64:	d072      	beq.n	6c4c <_strtod_l+0x26c>
    6b66:	2b2d      	cmp	r3, #45	; 0x2d
    6b68:	d075      	beq.n	6c56 <_strtod_l+0x276>
    6b6a:	2700      	movs	r7, #0
    6b6c:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
    6b70:	2909      	cmp	r1, #9
    6b72:	d97d      	bls.n	6c70 <_strtod_l+0x290>
    6b74:	961b      	str	r6, [sp, #108]	; 0x6c
    6b76:	2500      	movs	r5, #0
    6b78:	e09a      	b.n	6cb0 <_strtod_l+0x2d0>
    6b7a:	2300      	movs	r3, #0
    6b7c:	e7ca      	b.n	6b14 <_strtod_l+0x134>
    6b7e:	f1b8 0f08 	cmp.w	r8, #8
    6b82:	bfd8      	it	le
    6b84:	9907      	ldrle	r1, [sp, #28]
    6b86:	f100 0001 	add.w	r0, r0, #1
    6b8a:	bfda      	itte	le
    6b8c:	fb02 3301 	mlale	r3, r2, r1, r3
    6b90:	9307      	strle	r3, [sp, #28]
    6b92:	fb02 3909 	mlagt	r9, r2, r9, r3
    6b96:	f108 0801 	add.w	r8, r8, #1
    6b9a:	901b      	str	r0, [sp, #108]	; 0x6c
    6b9c:	e7c3      	b.n	6b26 <_strtod_l+0x146>
    6b9e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6ba0:	191a      	adds	r2, r3, r4
    6ba2:	921b      	str	r2, [sp, #108]	; 0x6c
    6ba4:	5d1b      	ldrb	r3, [r3, r4]
    6ba6:	f1b8 0f00 	cmp.w	r8, #0
    6baa:	d036      	beq.n	6c1a <_strtod_l+0x23a>
    6bac:	9005      	str	r0, [sp, #20]
    6bae:	4644      	mov	r4, r8
    6bb0:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
    6bb4:	2a09      	cmp	r2, #9
    6bb6:	d912      	bls.n	6bde <_strtod_l+0x1fe>
    6bb8:	2201      	movs	r2, #1
    6bba:	e7c5      	b.n	6b48 <_strtod_l+0x168>
    6bbc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6bbe:	1c5a      	adds	r2, r3, #1
    6bc0:	921b      	str	r2, [sp, #108]	; 0x6c
    6bc2:	785b      	ldrb	r3, [r3, #1]
    6bc4:	3001      	adds	r0, #1
    6bc6:	2b30      	cmp	r3, #48	; 0x30
    6bc8:	d0f8      	beq.n	6bbc <_strtod_l+0x1dc>
    6bca:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
    6bce:	2a08      	cmp	r2, #8
    6bd0:	f200 84c3 	bhi.w	755a <_strtod_l+0xb7a>
    6bd4:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    6bd6:	9005      	str	r0, [sp, #20]
    6bd8:	2000      	movs	r0, #0
    6bda:	9209      	str	r2, [sp, #36]	; 0x24
    6bdc:	4604      	mov	r4, r0
    6bde:	3b30      	subs	r3, #48	; 0x30
    6be0:	f100 0201 	add.w	r2, r0, #1
    6be4:	d013      	beq.n	6c0e <_strtod_l+0x22e>
    6be6:	9905      	ldr	r1, [sp, #20]
    6be8:	4411      	add	r1, r2
    6bea:	9105      	str	r1, [sp, #20]
    6bec:	4622      	mov	r2, r4
    6bee:	1905      	adds	r5, r0, r4
    6bf0:	210a      	movs	r1, #10
    6bf2:	42aa      	cmp	r2, r5
    6bf4:	d113      	bne.n	6c1e <_strtod_l+0x23e>
    6bf6:	1822      	adds	r2, r4, r0
    6bf8:	2a08      	cmp	r2, #8
    6bfa:	f104 0401 	add.w	r4, r4, #1
    6bfe:	4404      	add	r4, r0
    6c00:	dc1a      	bgt.n	6c38 <_strtod_l+0x258>
    6c02:	9907      	ldr	r1, [sp, #28]
    6c04:	220a      	movs	r2, #10
    6c06:	fb02 3301 	mla	r3, r2, r1, r3
    6c0a:	9307      	str	r3, [sp, #28]
    6c0c:	2200      	movs	r2, #0
    6c0e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6c10:	1c59      	adds	r1, r3, #1
    6c12:	911b      	str	r1, [sp, #108]	; 0x6c
    6c14:	785b      	ldrb	r3, [r3, #1]
    6c16:	4610      	mov	r0, r2
    6c18:	e7ca      	b.n	6bb0 <_strtod_l+0x1d0>
    6c1a:	4640      	mov	r0, r8
    6c1c:	e7d3      	b.n	6bc6 <_strtod_l+0x1e6>
    6c1e:	2a08      	cmp	r2, #8
    6c20:	dc04      	bgt.n	6c2c <_strtod_l+0x24c>
    6c22:	9f07      	ldr	r7, [sp, #28]
    6c24:	434f      	muls	r7, r1
    6c26:	9707      	str	r7, [sp, #28]
    6c28:	3201      	adds	r2, #1
    6c2a:	e7e2      	b.n	6bf2 <_strtod_l+0x212>
    6c2c:	1c57      	adds	r7, r2, #1
    6c2e:	2f10      	cmp	r7, #16
    6c30:	bfd8      	it	le
    6c32:	fb01 f909 	mulle.w	r9, r1, r9
    6c36:	e7f7      	b.n	6c28 <_strtod_l+0x248>
    6c38:	2c10      	cmp	r4, #16
    6c3a:	bfdc      	itt	le
    6c3c:	220a      	movle	r2, #10
    6c3e:	fb02 3909 	mlale	r9, r2, r9, r3
    6c42:	e7e3      	b.n	6c0c <_strtod_l+0x22c>
    6c44:	2300      	movs	r3, #0
    6c46:	9305      	str	r3, [sp, #20]
    6c48:	2201      	movs	r2, #1
    6c4a:	e782      	b.n	6b52 <_strtod_l+0x172>
    6c4c:	2700      	movs	r7, #0
    6c4e:	1cb3      	adds	r3, r6, #2
    6c50:	931b      	str	r3, [sp, #108]	; 0x6c
    6c52:	78b3      	ldrb	r3, [r6, #2]
    6c54:	e78a      	b.n	6b6c <_strtod_l+0x18c>
    6c56:	2701      	movs	r7, #1
    6c58:	e7f9      	b.n	6c4e <_strtod_l+0x26e>
    6c5a:	bf00      	nop
    6c5c:	0000b918 	.word	0x0000b918
    6c60:	0000b854 	.word	0x0000b854
    6c64:	7ff00000 	.word	0x7ff00000
    6c68:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6c6a:	1c59      	adds	r1, r3, #1
    6c6c:	911b      	str	r1, [sp, #108]	; 0x6c
    6c6e:	785b      	ldrb	r3, [r3, #1]
    6c70:	2b30      	cmp	r3, #48	; 0x30
    6c72:	d0f9      	beq.n	6c68 <_strtod_l+0x288>
    6c74:	f1a3 0131 	sub.w	r1, r3, #49	; 0x31
    6c78:	2908      	cmp	r1, #8
    6c7a:	f63f af7c 	bhi.w	6b76 <_strtod_l+0x196>
    6c7e:	f1a3 0c30 	sub.w	ip, r3, #48	; 0x30
    6c82:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6c84:	9308      	str	r3, [sp, #32]
    6c86:	f04f 0e0a 	mov.w	lr, #10
    6c8a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6c8c:	1c59      	adds	r1, r3, #1
    6c8e:	911b      	str	r1, [sp, #108]	; 0x6c
    6c90:	785b      	ldrb	r3, [r3, #1]
    6c92:	f1a3 0530 	sub.w	r5, r3, #48	; 0x30
    6c96:	2d09      	cmp	r5, #9
    6c98:	d92e      	bls.n	6cf8 <_strtod_l+0x318>
    6c9a:	9d08      	ldr	r5, [sp, #32]
    6c9c:	1b49      	subs	r1, r1, r5
    6c9e:	2908      	cmp	r1, #8
    6ca0:	f644 651f 	movw	r5, #19999	; 0x4e1f
    6ca4:	dc02      	bgt.n	6cac <_strtod_l+0x2cc>
    6ca6:	4565      	cmp	r5, ip
    6ca8:	bfa8      	it	ge
    6caa:	4665      	movge	r5, ip
    6cac:	b107      	cbz	r7, 6cb0 <_strtod_l+0x2d0>
    6cae:	426d      	negs	r5, r5
    6cb0:	2c00      	cmp	r4, #0
    6cb2:	d14b      	bne.n	6d4c <_strtod_l+0x36c>
    6cb4:	9906      	ldr	r1, [sp, #24]
    6cb6:	4301      	orrs	r1, r0
    6cb8:	f47f aed0 	bne.w	6a5c <_strtod_l+0x7c>
    6cbc:	2a00      	cmp	r2, #0
    6cbe:	f47f aeeb 	bne.w	6a98 <_strtod_l+0xb8>
    6cc2:	2b4e      	cmp	r3, #78	; 0x4e
    6cc4:	d022      	beq.n	6d0c <_strtod_l+0x32c>
    6cc6:	dc1c      	bgt.n	6d02 <_strtod_l+0x322>
    6cc8:	2b49      	cmp	r3, #73	; 0x49
    6cca:	f47f aee5 	bne.w	6a98 <_strtod_l+0xb8>
    6cce:	499a      	ldr	r1, [pc, #616]	; (6f38 <_strtod_l+0x558>)
    6cd0:	a81b      	add	r0, sp, #108	; 0x6c
    6cd2:	f002 f813 	bl	8cfc <__match>
    6cd6:	2800      	cmp	r0, #0
    6cd8:	f43f aede 	beq.w	6a98 <_strtod_l+0xb8>
    6cdc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6cde:	4997      	ldr	r1, [pc, #604]	; (6f3c <_strtod_l+0x55c>)
    6ce0:	3b01      	subs	r3, #1
    6ce2:	a81b      	add	r0, sp, #108	; 0x6c
    6ce4:	931b      	str	r3, [sp, #108]	; 0x6c
    6ce6:	f002 f809 	bl	8cfc <__match>
    6cea:	b910      	cbnz	r0, 6cf2 <_strtod_l+0x312>
    6cec:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6cee:	3301      	adds	r3, #1
    6cf0:	931b      	str	r3, [sp, #108]	; 0x6c
    6cf2:	f8df b260 	ldr.w	fp, [pc, #608]	; 6f54 <_strtod_l+0x574>
    6cf6:	e6b1      	b.n	6a5c <_strtod_l+0x7c>
    6cf8:	fb0e 3c0c 	mla	ip, lr, ip, r3
    6cfc:	f1ac 0c30 	sub.w	ip, ip, #48	; 0x30
    6d00:	e7c3      	b.n	6c8a <_strtod_l+0x2aa>
    6d02:	2b69      	cmp	r3, #105	; 0x69
    6d04:	d0e3      	beq.n	6cce <_strtod_l+0x2ee>
    6d06:	2b6e      	cmp	r3, #110	; 0x6e
    6d08:	f47f aec6 	bne.w	6a98 <_strtod_l+0xb8>
    6d0c:	498c      	ldr	r1, [pc, #560]	; (6f40 <_strtod_l+0x560>)
    6d0e:	a81b      	add	r0, sp, #108	; 0x6c
    6d10:	f001 fff4 	bl	8cfc <__match>
    6d14:	2800      	cmp	r0, #0
    6d16:	f43f aebf 	beq.w	6a98 <_strtod_l+0xb8>
    6d1a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6d1c:	781b      	ldrb	r3, [r3, #0]
    6d1e:	2b28      	cmp	r3, #40	; 0x28
    6d20:	d10e      	bne.n	6d40 <_strtod_l+0x360>
    6d22:	aa1e      	add	r2, sp, #120	; 0x78
    6d24:	4987      	ldr	r1, [pc, #540]	; (6f44 <_strtod_l+0x564>)
    6d26:	a81b      	add	r0, sp, #108	; 0x6c
    6d28:	f001 fffc 	bl	8d24 <__hexnan>
    6d2c:	2805      	cmp	r0, #5
    6d2e:	d107      	bne.n	6d40 <_strtod_l+0x360>
    6d30:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    6d32:	f8dd a078 	ldr.w	sl, [sp, #120]	; 0x78
    6d36:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
    6d3a:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
    6d3e:	e68d      	b.n	6a5c <_strtod_l+0x7c>
    6d40:	4881      	ldr	r0, [pc, #516]	; (6f48 <_strtod_l+0x568>)
    6d42:	f002 fed9 	bl	9af8 <nan>
    6d46:	ec5b ab10 	vmov	sl, fp, d0
    6d4a:	e687      	b.n	6a5c <_strtod_l+0x7c>
    6d4c:	9b05      	ldr	r3, [sp, #20]
    6d4e:	9807      	ldr	r0, [sp, #28]
    6d50:	1aeb      	subs	r3, r5, r3
    6d52:	f1b8 0f00 	cmp.w	r8, #0
    6d56:	bf08      	it	eq
    6d58:	46a0      	moveq	r8, r4
    6d5a:	2c10      	cmp	r4, #16
    6d5c:	9308      	str	r3, [sp, #32]
    6d5e:	4626      	mov	r6, r4
    6d60:	bfa8      	it	ge
    6d62:	2610      	movge	r6, #16
    6d64:	f7fe f9a2 	bl	50ac <__aeabi_ui2d>
    6d68:	2c09      	cmp	r4, #9
    6d6a:	4682      	mov	sl, r0
    6d6c:	468b      	mov	fp, r1
    6d6e:	dd13      	ble.n	6d98 <_strtod_l+0x3b8>
    6d70:	4b76      	ldr	r3, [pc, #472]	; (6f4c <_strtod_l+0x56c>)
    6d72:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
    6d76:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
    6d7a:	f002 ff85 	bl	9c88 <__aeabi_dmul>
    6d7e:	4682      	mov	sl, r0
    6d80:	4648      	mov	r0, r9
    6d82:	468b      	mov	fp, r1
    6d84:	f7fe f992 	bl	50ac <__aeabi_ui2d>
    6d88:	4602      	mov	r2, r0
    6d8a:	460b      	mov	r3, r1
    6d8c:	4650      	mov	r0, sl
    6d8e:	4659      	mov	r1, fp
    6d90:	f7fe f850 	bl	4e34 <__adddf3>
    6d94:	4682      	mov	sl, r0
    6d96:	468b      	mov	fp, r1
    6d98:	2c0f      	cmp	r4, #15
    6d9a:	dc38      	bgt.n	6e0e <_strtod_l+0x42e>
    6d9c:	9b08      	ldr	r3, [sp, #32]
    6d9e:	2b00      	cmp	r3, #0
    6da0:	f43f ae5c 	beq.w	6a5c <_strtod_l+0x7c>
    6da4:	dd24      	ble.n	6df0 <_strtod_l+0x410>
    6da6:	2b16      	cmp	r3, #22
    6da8:	dc0b      	bgt.n	6dc2 <_strtod_l+0x3e2>
    6daa:	4c68      	ldr	r4, [pc, #416]	; (6f4c <_strtod_l+0x56c>)
    6dac:	eb04 04c3 	add.w	r4, r4, r3, lsl #3
    6db0:	e9d4 0100 	ldrd	r0, r1, [r4]
    6db4:	4652      	mov	r2, sl
    6db6:	465b      	mov	r3, fp
    6db8:	f002 ff66 	bl	9c88 <__aeabi_dmul>
    6dbc:	4682      	mov	sl, r0
    6dbe:	468b      	mov	fp, r1
    6dc0:	e64c      	b.n	6a5c <_strtod_l+0x7c>
    6dc2:	9a08      	ldr	r2, [sp, #32]
    6dc4:	f1c4 0325 	rsb	r3, r4, #37	; 0x25
    6dc8:	4293      	cmp	r3, r2
    6dca:	db20      	blt.n	6e0e <_strtod_l+0x42e>
    6dcc:	4d5f      	ldr	r5, [pc, #380]	; (6f4c <_strtod_l+0x56c>)
    6dce:	f1c4 040f 	rsb	r4, r4, #15
    6dd2:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
    6dd6:	4652      	mov	r2, sl
    6dd8:	465b      	mov	r3, fp
    6dda:	e9d1 0100 	ldrd	r0, r1, [r1]
    6dde:	f002 ff53 	bl	9c88 <__aeabi_dmul>
    6de2:	9b08      	ldr	r3, [sp, #32]
    6de4:	1b1c      	subs	r4, r3, r4
    6de6:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
    6dea:	e9d5 2300 	ldrd	r2, r3, [r5]
    6dee:	e7e3      	b.n	6db8 <_strtod_l+0x3d8>
    6df0:	9b08      	ldr	r3, [sp, #32]
    6df2:	3316      	adds	r3, #22
    6df4:	db0b      	blt.n	6e0e <_strtod_l+0x42e>
    6df6:	9b05      	ldr	r3, [sp, #20]
    6df8:	4a54      	ldr	r2, [pc, #336]	; (6f4c <_strtod_l+0x56c>)
    6dfa:	1b5d      	subs	r5, r3, r5
    6dfc:	eb02 05c5 	add.w	r5, r2, r5, lsl #3
    6e00:	e9d5 2300 	ldrd	r2, r3, [r5]
    6e04:	4650      	mov	r0, sl
    6e06:	4659      	mov	r1, fp
    6e08:	f003 f868 	bl	9edc <__aeabi_ddiv>
    6e0c:	e7d6      	b.n	6dbc <_strtod_l+0x3dc>
    6e0e:	9b08      	ldr	r3, [sp, #32]
    6e10:	1ba6      	subs	r6, r4, r6
    6e12:	441e      	add	r6, r3
    6e14:	2e00      	cmp	r6, #0
    6e16:	dd6e      	ble.n	6ef6 <_strtod_l+0x516>
    6e18:	f016 030f 	ands.w	r3, r6, #15
    6e1c:	d00a      	beq.n	6e34 <_strtod_l+0x454>
    6e1e:	494b      	ldr	r1, [pc, #300]	; (6f4c <_strtod_l+0x56c>)
    6e20:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
    6e24:	4652      	mov	r2, sl
    6e26:	465b      	mov	r3, fp
    6e28:	e9d1 0100 	ldrd	r0, r1, [r1]
    6e2c:	f002 ff2c 	bl	9c88 <__aeabi_dmul>
    6e30:	4682      	mov	sl, r0
    6e32:	468b      	mov	fp, r1
    6e34:	f036 060f 	bics.w	r6, r6, #15
    6e38:	d04e      	beq.n	6ed8 <_strtod_l+0x4f8>
    6e3a:	f5b6 7f9a 	cmp.w	r6, #308	; 0x134
    6e3e:	dd23      	ble.n	6e88 <_strtod_l+0x4a8>
    6e40:	2400      	movs	r4, #0
    6e42:	9405      	str	r4, [sp, #20]
    6e44:	9409      	str	r4, [sp, #36]	; 0x24
    6e46:	9407      	str	r4, [sp, #28]
    6e48:	9a04      	ldr	r2, [sp, #16]
    6e4a:	f8df b108 	ldr.w	fp, [pc, #264]	; 6f54 <_strtod_l+0x574>
    6e4e:	2322      	movs	r3, #34	; 0x22
    6e50:	6013      	str	r3, [r2, #0]
    6e52:	f04f 0a00 	mov.w	sl, #0
    6e56:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6e58:	2b00      	cmp	r3, #0
    6e5a:	f43f adff 	beq.w	6a5c <_strtod_l+0x7c>
    6e5e:	991c      	ldr	r1, [sp, #112]	; 0x70
    6e60:	9804      	ldr	r0, [sp, #16]
    6e62:	f002 f8fd 	bl	9060 <_Bfree>
    6e66:	9907      	ldr	r1, [sp, #28]
    6e68:	9804      	ldr	r0, [sp, #16]
    6e6a:	f002 f8f9 	bl	9060 <_Bfree>
    6e6e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    6e72:	f002 f8f5 	bl	9060 <_Bfree>
    6e76:	9909      	ldr	r1, [sp, #36]	; 0x24
    6e78:	9804      	ldr	r0, [sp, #16]
    6e7a:	f002 f8f1 	bl	9060 <_Bfree>
    6e7e:	4621      	mov	r1, r4
    6e80:	9804      	ldr	r0, [sp, #16]
    6e82:	f002 f8ed 	bl	9060 <_Bfree>
    6e86:	e5e9      	b.n	6a5c <_strtod_l+0x7c>
    6e88:	2300      	movs	r3, #0
    6e8a:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 6f50 <_strtod_l+0x570>
    6e8e:	1136      	asrs	r6, r6, #4
    6e90:	4650      	mov	r0, sl
    6e92:	4659      	mov	r1, fp
    6e94:	461f      	mov	r7, r3
    6e96:	2e01      	cmp	r6, #1
    6e98:	dc21      	bgt.n	6ede <_strtod_l+0x4fe>
    6e9a:	b10b      	cbz	r3, 6ea0 <_strtod_l+0x4c0>
    6e9c:	4682      	mov	sl, r0
    6e9e:	468b      	mov	fp, r1
    6ea0:	4b2b      	ldr	r3, [pc, #172]	; (6f50 <_strtod_l+0x570>)
    6ea2:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
    6ea6:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
    6eaa:	4652      	mov	r2, sl
    6eac:	465b      	mov	r3, fp
    6eae:	e9d7 0100 	ldrd	r0, r1, [r7]
    6eb2:	f002 fee9 	bl	9c88 <__aeabi_dmul>
    6eb6:	4b27      	ldr	r3, [pc, #156]	; (6f54 <_strtod_l+0x574>)
    6eb8:	460a      	mov	r2, r1
    6eba:	400b      	ands	r3, r1
    6ebc:	4926      	ldr	r1, [pc, #152]	; (6f58 <_strtod_l+0x578>)
    6ebe:	428b      	cmp	r3, r1
    6ec0:	4682      	mov	sl, r0
    6ec2:	d8bd      	bhi.n	6e40 <_strtod_l+0x460>
    6ec4:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
    6ec8:	428b      	cmp	r3, r1
    6eca:	bf86      	itte	hi
    6ecc:	f8df b08c 	ldrhi.w	fp, [pc, #140]	; 6f5c <_strtod_l+0x57c>
    6ed0:	f04f 3aff 	movhi.w	sl, #4294967295	; 0xffffffff
    6ed4:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
    6ed8:	2300      	movs	r3, #0
    6eda:	9306      	str	r3, [sp, #24]
    6edc:	e079      	b.n	6fd2 <_strtod_l+0x5f2>
    6ede:	07f2      	lsls	r2, r6, #31
    6ee0:	d506      	bpl.n	6ef0 <_strtod_l+0x510>
    6ee2:	eb09 03c7 	add.w	r3, r9, r7, lsl #3
    6ee6:	e9d3 2300 	ldrd	r2, r3, [r3]
    6eea:	f002 fecd 	bl	9c88 <__aeabi_dmul>
    6eee:	2301      	movs	r3, #1
    6ef0:	3701      	adds	r7, #1
    6ef2:	1076      	asrs	r6, r6, #1
    6ef4:	e7cf      	b.n	6e96 <_strtod_l+0x4b6>
    6ef6:	d0ef      	beq.n	6ed8 <_strtod_l+0x4f8>
    6ef8:	4276      	negs	r6, r6
    6efa:	f016 020f 	ands.w	r2, r6, #15
    6efe:	d00a      	beq.n	6f16 <_strtod_l+0x536>
    6f00:	4b12      	ldr	r3, [pc, #72]	; (6f4c <_strtod_l+0x56c>)
    6f02:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
    6f06:	4650      	mov	r0, sl
    6f08:	4659      	mov	r1, fp
    6f0a:	e9d3 2300 	ldrd	r2, r3, [r3]
    6f0e:	f002 ffe5 	bl	9edc <__aeabi_ddiv>
    6f12:	4682      	mov	sl, r0
    6f14:	468b      	mov	fp, r1
    6f16:	1136      	asrs	r6, r6, #4
    6f18:	d0de      	beq.n	6ed8 <_strtod_l+0x4f8>
    6f1a:	2e1f      	cmp	r6, #31
    6f1c:	dd20      	ble.n	6f60 <_strtod_l+0x580>
    6f1e:	2400      	movs	r4, #0
    6f20:	9405      	str	r4, [sp, #20]
    6f22:	9409      	str	r4, [sp, #36]	; 0x24
    6f24:	9407      	str	r4, [sp, #28]
    6f26:	9a04      	ldr	r2, [sp, #16]
    6f28:	2322      	movs	r3, #34	; 0x22
    6f2a:	f04f 0a00 	mov.w	sl, #0
    6f2e:	f04f 0b00 	mov.w	fp, #0
    6f32:	6013      	str	r3, [r2, #0]
    6f34:	e78f      	b.n	6e56 <_strtod_l+0x476>
    6f36:	bf00      	nop
    6f38:	0000b822 	.word	0x0000b822
    6f3c:	0000b8ab 	.word	0x0000b8ab
    6f40:	0000b82a 	.word	0x0000b82a
    6f44:	0000b868 	.word	0x0000b868
    6f48:	0000a481 	.word	0x0000a481
    6f4c:	0000b958 	.word	0x0000b958
    6f50:	0000b930 	.word	0x0000b930
    6f54:	7ff00000 	.word	0x7ff00000
    6f58:	7ca00000 	.word	0x7ca00000
    6f5c:	7fefffff 	.word	0x7fefffff
    6f60:	f016 0310 	ands.w	r3, r6, #16
    6f64:	bf18      	it	ne
    6f66:	236a      	movne	r3, #106	; 0x6a
    6f68:	4fae      	ldr	r7, [pc, #696]	; (7224 <_strtod_l+0x844>)
    6f6a:	9306      	str	r3, [sp, #24]
    6f6c:	4650      	mov	r0, sl
    6f6e:	4659      	mov	r1, fp
    6f70:	2300      	movs	r3, #0
    6f72:	07f2      	lsls	r2, r6, #31
    6f74:	d504      	bpl.n	6f80 <_strtod_l+0x5a0>
    6f76:	e9d7 2300 	ldrd	r2, r3, [r7]
    6f7a:	f002 fe85 	bl	9c88 <__aeabi_dmul>
    6f7e:	2301      	movs	r3, #1
    6f80:	1076      	asrs	r6, r6, #1
    6f82:	f107 0708 	add.w	r7, r7, #8
    6f86:	d1f4      	bne.n	6f72 <_strtod_l+0x592>
    6f88:	b10b      	cbz	r3, 6f8e <_strtod_l+0x5ae>
    6f8a:	4682      	mov	sl, r0
    6f8c:	468b      	mov	fp, r1
    6f8e:	9b06      	ldr	r3, [sp, #24]
    6f90:	b1bb      	cbz	r3, 6fc2 <_strtod_l+0x5e2>
    6f92:	f3cb 530a 	ubfx	r3, fp, #20, #11
    6f96:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
    6f9a:	2b00      	cmp	r3, #0
    6f9c:	4659      	mov	r1, fp
    6f9e:	dd10      	ble.n	6fc2 <_strtod_l+0x5e2>
    6fa0:	2b1f      	cmp	r3, #31
    6fa2:	f340 8129 	ble.w	71f8 <_strtod_l+0x818>
    6fa6:	2b34      	cmp	r3, #52	; 0x34
    6fa8:	bfde      	ittt	le
    6faa:	3b20      	suble	r3, #32
    6fac:	f04f 32ff 	movle.w	r2, #4294967295	; 0xffffffff
    6fb0:	fa02 f303 	lslle.w	r3, r2, r3
    6fb4:	f04f 0a00 	mov.w	sl, #0
    6fb8:	bfcc      	ite	gt
    6fba:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
    6fbe:	ea03 0b01 	andle.w	fp, r3, r1
    6fc2:	2200      	movs	r2, #0
    6fc4:	2300      	movs	r3, #0
    6fc6:	4650      	mov	r0, sl
    6fc8:	4659      	mov	r1, fp
    6fca:	f003 f8c5 	bl	a158 <__aeabi_dcmpeq>
    6fce:	2800      	cmp	r0, #0
    6fd0:	d1a5      	bne.n	6f1e <_strtod_l+0x53e>
    6fd2:	9b07      	ldr	r3, [sp, #28]
    6fd4:	9300      	str	r3, [sp, #0]
    6fd6:	4642      	mov	r2, r8
    6fd8:	4623      	mov	r3, r4
    6fda:	9909      	ldr	r1, [sp, #36]	; 0x24
    6fdc:	9804      	ldr	r0, [sp, #16]
    6fde:	f002 f891 	bl	9104 <__s2b>
    6fe2:	9009      	str	r0, [sp, #36]	; 0x24
    6fe4:	2800      	cmp	r0, #0
    6fe6:	f43f af2b 	beq.w	6e40 <_strtod_l+0x460>
    6fea:	9b05      	ldr	r3, [sp, #20]
    6fec:	1b5d      	subs	r5, r3, r5
    6fee:	9b08      	ldr	r3, [sp, #32]
    6ff0:	2b00      	cmp	r3, #0
    6ff2:	bfb4      	ite	lt
    6ff4:	462b      	movlt	r3, r5
    6ff6:	2300      	movge	r3, #0
    6ff8:	930e      	str	r3, [sp, #56]	; 0x38
    6ffa:	9b08      	ldr	r3, [sp, #32]
    6ffc:	2400      	movs	r4, #0
    6ffe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
    7002:	9316      	str	r3, [sp, #88]	; 0x58
    7004:	9405      	str	r4, [sp, #20]
    7006:	9b09      	ldr	r3, [sp, #36]	; 0x24
    7008:	9804      	ldr	r0, [sp, #16]
    700a:	6859      	ldr	r1, [r3, #4]
    700c:	f001 fff4 	bl	8ff8 <_Balloc>
    7010:	9007      	str	r0, [sp, #28]
    7012:	2800      	cmp	r0, #0
    7014:	f43f af18 	beq.w	6e48 <_strtod_l+0x468>
    7018:	9b09      	ldr	r3, [sp, #36]	; 0x24
    701a:	691a      	ldr	r2, [r3, #16]
    701c:	3202      	adds	r2, #2
    701e:	f103 010c 	add.w	r1, r3, #12
    7022:	0092      	lsls	r2, r2, #2
    7024:	300c      	adds	r0, #12
    7026:	f7fe fad1 	bl	55cc <memcpy>
    702a:	aa1e      	add	r2, sp, #120	; 0x78
    702c:	a91d      	add	r1, sp, #116	; 0x74
    702e:	ec4b ab10 	vmov	d0, sl, fp
    7032:	9804      	ldr	r0, [sp, #16]
    7034:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
    7038:	f002 fb1a 	bl	9670 <__d2b>
    703c:	901c      	str	r0, [sp, #112]	; 0x70
    703e:	2800      	cmp	r0, #0
    7040:	f43f af02 	beq.w	6e48 <_strtod_l+0x468>
    7044:	2101      	movs	r1, #1
    7046:	9804      	ldr	r0, [sp, #16]
    7048:	f002 f8ea 	bl	9220 <__i2b>
    704c:	9005      	str	r0, [sp, #20]
    704e:	4603      	mov	r3, r0
    7050:	2800      	cmp	r0, #0
    7052:	f43f aef9 	beq.w	6e48 <_strtod_l+0x468>
    7056:	9e1d      	ldr	r6, [sp, #116]	; 0x74
    7058:	9a1e      	ldr	r2, [sp, #120]	; 0x78
    705a:	2e00      	cmp	r6, #0
    705c:	bfab      	itete	ge
    705e:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
    7060:	9b16      	ldrlt	r3, [sp, #88]	; 0x58
    7062:	9d16      	ldrge	r5, [sp, #88]	; 0x58
    7064:	9f0e      	ldrlt	r7, [sp, #56]	; 0x38
    7066:	bfac      	ite	ge
    7068:	18f7      	addge	r7, r6, r3
    706a:	1b9d      	sublt	r5, r3, r6
    706c:	9b06      	ldr	r3, [sp, #24]
    706e:	1af6      	subs	r6, r6, r3
    7070:	4416      	add	r6, r2
    7072:	4b6d      	ldr	r3, [pc, #436]	; (7228 <_strtod_l+0x848>)
    7074:	3e01      	subs	r6, #1
    7076:	429e      	cmp	r6, r3
    7078:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
    707c:	f280 80c3 	bge.w	7206 <_strtod_l+0x826>
    7080:	1b9b      	subs	r3, r3, r6
    7082:	2b1f      	cmp	r3, #31
    7084:	bfc2      	ittt	gt
    7086:	f1c6 467f 	rsbgt	r6, r6, #4278190080	; 0xff000000
    708a:	f506 067f 	addgt.w	r6, r6, #16711680	; 0xff0000
    708e:	f506 467b 	addgt.w	r6, r6, #64256	; 0xfb00
    7092:	f04f 0801 	mov.w	r8, #1
    7096:	bfc8      	it	gt
    7098:	36e2      	addgt	r6, #226	; 0xe2
    709a:	eba2 0203 	sub.w	r2, r2, r3
    709e:	bfda      	itte	le
    70a0:	fa08 f803 	lslle.w	r8, r8, r3
    70a4:	2600      	movle	r6, #0
    70a6:	fa08 f606 	lslgt.w	r6, r8, r6
    70aa:	eb07 0902 	add.w	r9, r7, r2
    70ae:	9b06      	ldr	r3, [sp, #24]
    70b0:	454f      	cmp	r7, r9
    70b2:	4415      	add	r5, r2
    70b4:	441d      	add	r5, r3
    70b6:	463b      	mov	r3, r7
    70b8:	bfa8      	it	ge
    70ba:	464b      	movge	r3, r9
    70bc:	42ab      	cmp	r3, r5
    70be:	bfa8      	it	ge
    70c0:	462b      	movge	r3, r5
    70c2:	2b00      	cmp	r3, #0
    70c4:	bfc2      	ittt	gt
    70c6:	eba9 0903 	subgt.w	r9, r9, r3
    70ca:	1aed      	subgt	r5, r5, r3
    70cc:	1aff      	subgt	r7, r7, r3
    70ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    70d0:	2b00      	cmp	r3, #0
    70d2:	dd17      	ble.n	7104 <_strtod_l+0x724>
    70d4:	461a      	mov	r2, r3
    70d6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    70da:	f002 f93b 	bl	9354 <__pow5mult>
    70de:	9005      	str	r0, [sp, #20]
    70e0:	2800      	cmp	r0, #0
    70e2:	f43f aeb1 	beq.w	6e48 <_strtod_l+0x468>
    70e6:	4601      	mov	r1, r0
    70e8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
    70ea:	9804      	ldr	r0, [sp, #16]
    70ec:	f002 f8a1 	bl	9232 <__multiply>
    70f0:	900d      	str	r0, [sp, #52]	; 0x34
    70f2:	2800      	cmp	r0, #0
    70f4:	f43f aea8 	beq.w	6e48 <_strtod_l+0x468>
    70f8:	991c      	ldr	r1, [sp, #112]	; 0x70
    70fa:	9804      	ldr	r0, [sp, #16]
    70fc:	f001 ffb0 	bl	9060 <_Bfree>
    7100:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    7102:	931c      	str	r3, [sp, #112]	; 0x70
    7104:	f1b9 0f00 	cmp.w	r9, #0
    7108:	f300 8081 	bgt.w	720e <_strtod_l+0x82e>
    710c:	9b08      	ldr	r3, [sp, #32]
    710e:	2b00      	cmp	r3, #0
    7110:	dd08      	ble.n	7124 <_strtod_l+0x744>
    7112:	9a16      	ldr	r2, [sp, #88]	; 0x58
    7114:	9907      	ldr	r1, [sp, #28]
    7116:	9804      	ldr	r0, [sp, #16]
    7118:	f002 f91c 	bl	9354 <__pow5mult>
    711c:	9007      	str	r0, [sp, #28]
    711e:	2800      	cmp	r0, #0
    7120:	f43f ae92 	beq.w	6e48 <_strtod_l+0x468>
    7124:	2d00      	cmp	r5, #0
    7126:	dd08      	ble.n	713a <_strtod_l+0x75a>
    7128:	462a      	mov	r2, r5
    712a:	9907      	ldr	r1, [sp, #28]
    712c:	9804      	ldr	r0, [sp, #16]
    712e:	f002 f95f 	bl	93f0 <__lshift>
    7132:	9007      	str	r0, [sp, #28]
    7134:	2800      	cmp	r0, #0
    7136:	f43f ae87 	beq.w	6e48 <_strtod_l+0x468>
    713a:	2f00      	cmp	r7, #0
    713c:	dd08      	ble.n	7150 <_strtod_l+0x770>
    713e:	463a      	mov	r2, r7
    7140:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    7144:	f002 f954 	bl	93f0 <__lshift>
    7148:	9005      	str	r0, [sp, #20]
    714a:	2800      	cmp	r0, #0
    714c:	f43f ae7c 	beq.w	6e48 <_strtod_l+0x468>
    7150:	9a07      	ldr	r2, [sp, #28]
    7152:	991c      	ldr	r1, [sp, #112]	; 0x70
    7154:	9804      	ldr	r0, [sp, #16]
    7156:	f002 f9b8 	bl	94ca <__mdiff>
    715a:	4604      	mov	r4, r0
    715c:	2800      	cmp	r0, #0
    715e:	f43f ae73 	beq.w	6e48 <_strtod_l+0x468>
    7162:	68c3      	ldr	r3, [r0, #12]
    7164:	930d      	str	r3, [sp, #52]	; 0x34
    7166:	2300      	movs	r3, #0
    7168:	60c3      	str	r3, [r0, #12]
    716a:	9905      	ldr	r1, [sp, #20]
    716c:	f002 f993 	bl	9496 <__mcmp>
    7170:	2800      	cmp	r0, #0
    7172:	da5f      	bge.n	7234 <_strtod_l+0x854>
    7174:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    7176:	ea53 030a 	orrs.w	r3, r3, sl
    717a:	f040 8081 	bne.w	7280 <_strtod_l+0x8a0>
    717e:	f3cb 0313 	ubfx	r3, fp, #0, #20
    7182:	2b00      	cmp	r3, #0
    7184:	d17c      	bne.n	7280 <_strtod_l+0x8a0>
    7186:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
    718a:	0d1b      	lsrs	r3, r3, #20
    718c:	051b      	lsls	r3, r3, #20
    718e:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
    7192:	d975      	bls.n	7280 <_strtod_l+0x8a0>
    7194:	6963      	ldr	r3, [r4, #20]
    7196:	b913      	cbnz	r3, 719e <_strtod_l+0x7be>
    7198:	6923      	ldr	r3, [r4, #16]
    719a:	2b01      	cmp	r3, #1
    719c:	dd70      	ble.n	7280 <_strtod_l+0x8a0>
    719e:	4621      	mov	r1, r4
    71a0:	2201      	movs	r2, #1
    71a2:	9804      	ldr	r0, [sp, #16]
    71a4:	f002 f924 	bl	93f0 <__lshift>
    71a8:	9905      	ldr	r1, [sp, #20]
    71aa:	4604      	mov	r4, r0
    71ac:	f002 f973 	bl	9496 <__mcmp>
    71b0:	2800      	cmp	r0, #0
    71b2:	dd65      	ble.n	7280 <_strtod_l+0x8a0>
    71b4:	9906      	ldr	r1, [sp, #24]
    71b6:	4a1d      	ldr	r2, [pc, #116]	; (722c <_strtod_l+0x84c>)
    71b8:	465b      	mov	r3, fp
    71ba:	2900      	cmp	r1, #0
    71bc:	d07f      	beq.n	72be <_strtod_l+0x8de>
    71be:	ea02 010b 	and.w	r1, r2, fp
    71c2:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
    71c6:	dc7a      	bgt.n	72be <_strtod_l+0x8de>
    71c8:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
    71cc:	f77f aeab 	ble.w	6f26 <_strtod_l+0x546>
    71d0:	4a17      	ldr	r2, [pc, #92]	; (7230 <_strtod_l+0x850>)
    71d2:	2300      	movs	r3, #0
    71d4:	e9cd 3214 	strd	r3, r2, [sp, #80]	; 0x50
    71d8:	4650      	mov	r0, sl
    71da:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
    71de:	4659      	mov	r1, fp
    71e0:	f002 fd52 	bl	9c88 <__aeabi_dmul>
    71e4:	460b      	mov	r3, r1
    71e6:	4303      	orrs	r3, r0
    71e8:	bf04      	itt	eq
    71ea:	9a04      	ldreq	r2, [sp, #16]
    71ec:	2322      	moveq	r3, #34	; 0x22
    71ee:	4682      	mov	sl, r0
    71f0:	468b      	mov	fp, r1
    71f2:	bf08      	it	eq
    71f4:	6013      	streq	r3, [r2, #0]
    71f6:	e632      	b.n	6e5e <_strtod_l+0x47e>
    71f8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    71fc:	fa02 f303 	lsl.w	r3, r2, r3
    7200:	ea03 0a0a 	and.w	sl, r3, sl
    7204:	e6dd      	b.n	6fc2 <_strtod_l+0x5e2>
    7206:	2600      	movs	r6, #0
    7208:	f04f 0801 	mov.w	r8, #1
    720c:	e74d      	b.n	70aa <_strtod_l+0x6ca>
    720e:	464a      	mov	r2, r9
    7210:	991c      	ldr	r1, [sp, #112]	; 0x70
    7212:	9804      	ldr	r0, [sp, #16]
    7214:	f002 f8ec 	bl	93f0 <__lshift>
    7218:	901c      	str	r0, [sp, #112]	; 0x70
    721a:	2800      	cmp	r0, #0
    721c:	f47f af76 	bne.w	710c <_strtod_l+0x72c>
    7220:	e612      	b.n	6e48 <_strtod_l+0x468>
    7222:	bf00      	nop
    7224:	0000b880 	.word	0x0000b880
    7228:	fffffc02 	.word	0xfffffc02
    722c:	7ff00000 	.word	0x7ff00000
    7230:	39500000 	.word	0x39500000
    7234:	465d      	mov	r5, fp
    7236:	d160      	bne.n	72fa <_strtod_l+0x91a>
    7238:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    723a:	f3cb 0313 	ubfx	r3, fp, #0, #20
    723e:	b342      	cbz	r2, 7292 <_strtod_l+0x8b2>
    7240:	4ab7      	ldr	r2, [pc, #732]	; (7520 <_strtod_l+0xb40>)
    7242:	4293      	cmp	r3, r2
    7244:	d128      	bne.n	7298 <_strtod_l+0x8b8>
    7246:	9b06      	ldr	r3, [sp, #24]
    7248:	4650      	mov	r0, sl
    724a:	b1eb      	cbz	r3, 7288 <_strtod_l+0x8a8>
    724c:	4ab5      	ldr	r2, [pc, #724]	; (7524 <_strtod_l+0xb44>)
    724e:	402a      	ands	r2, r5
    7250:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
    7254:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
    7258:	d819      	bhi.n	728e <_strtod_l+0x8ae>
    725a:	0d12      	lsrs	r2, r2, #20
    725c:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
    7260:	fa01 f303 	lsl.w	r3, r1, r3
    7264:	4298      	cmp	r0, r3
    7266:	d117      	bne.n	7298 <_strtod_l+0x8b8>
    7268:	4baf      	ldr	r3, [pc, #700]	; (7528 <_strtod_l+0xb48>)
    726a:	429d      	cmp	r5, r3
    726c:	d102      	bne.n	7274 <_strtod_l+0x894>
    726e:	3001      	adds	r0, #1
    7270:	f43f adea 	beq.w	6e48 <_strtod_l+0x468>
    7274:	4bab      	ldr	r3, [pc, #684]	; (7524 <_strtod_l+0xb44>)
    7276:	402b      	ands	r3, r5
    7278:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
    727c:	f04f 0a00 	mov.w	sl, #0
    7280:	9b06      	ldr	r3, [sp, #24]
    7282:	2b00      	cmp	r3, #0
    7284:	d1a4      	bne.n	71d0 <_strtod_l+0x7f0>
    7286:	e5ea      	b.n	6e5e <_strtod_l+0x47e>
    7288:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    728c:	e7ea      	b.n	7264 <_strtod_l+0x884>
    728e:	460b      	mov	r3, r1
    7290:	e7e8      	b.n	7264 <_strtod_l+0x884>
    7292:	ea53 030a 	orrs.w	r3, r3, sl
    7296:	d08d      	beq.n	71b4 <_strtod_l+0x7d4>
    7298:	b1de      	cbz	r6, 72d2 <_strtod_l+0x8f2>
    729a:	422e      	tst	r6, r5
    729c:	d0f0      	beq.n	7280 <_strtod_l+0x8a0>
    729e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    72a0:	9a06      	ldr	r2, [sp, #24]
    72a2:	4650      	mov	r0, sl
    72a4:	4659      	mov	r1, fp
    72a6:	b1bb      	cbz	r3, 72d8 <_strtod_l+0x8f8>
    72a8:	f7ff fb7e 	bl	69a8 <sulp>
    72ac:	4602      	mov	r2, r0
    72ae:	460b      	mov	r3, r1
    72b0:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    72b4:	f7fd fdbe 	bl	4e34 <__adddf3>
    72b8:	4682      	mov	sl, r0
    72ba:	468b      	mov	fp, r1
    72bc:	e7e0      	b.n	7280 <_strtod_l+0x8a0>
    72be:	4013      	ands	r3, r2
    72c0:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
    72c4:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
    72c8:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
    72cc:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
    72d0:	e7d6      	b.n	7280 <_strtod_l+0x8a0>
    72d2:	ea18 0f0a 	tst.w	r8, sl
    72d6:	e7e1      	b.n	729c <_strtod_l+0x8bc>
    72d8:	f7ff fb66 	bl	69a8 <sulp>
    72dc:	4602      	mov	r2, r0
    72de:	460b      	mov	r3, r1
    72e0:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    72e4:	f7fd fda4 	bl	4e30 <__aeabi_dsub>
    72e8:	2200      	movs	r2, #0
    72ea:	2300      	movs	r3, #0
    72ec:	4682      	mov	sl, r0
    72ee:	468b      	mov	fp, r1
    72f0:	f002 ff32 	bl	a158 <__aeabi_dcmpeq>
    72f4:	2800      	cmp	r0, #0
    72f6:	d0c3      	beq.n	7280 <_strtod_l+0x8a0>
    72f8:	e615      	b.n	6f26 <_strtod_l+0x546>
    72fa:	9905      	ldr	r1, [sp, #20]
    72fc:	4620      	mov	r0, r4
    72fe:	f002 fa05 	bl	970c <__ratio>
    7302:	ec57 6b10 	vmov	r6, r7, d0
    7306:	2200      	movs	r2, #0
    7308:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    730c:	ee10 0a10 	vmov	r0, s0
    7310:	4639      	mov	r1, r7
    7312:	f002 ff35 	bl	a180 <__aeabi_dcmple>
    7316:	2800      	cmp	r0, #0
    7318:	d073      	beq.n	7402 <_strtod_l+0xa22>
    731a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    731c:	2b00      	cmp	r3, #0
    731e:	d046      	beq.n	73ae <_strtod_l+0x9ce>
    7320:	f8df 9208 	ldr.w	r9, [pc, #520]	; 752c <_strtod_l+0xb4c>
    7324:	f04f 0800 	mov.w	r8, #0
    7328:	4f80      	ldr	r7, [pc, #512]	; (752c <_strtod_l+0xb4c>)
    732a:	2600      	movs	r6, #0
    732c:	4b7d      	ldr	r3, [pc, #500]	; (7524 <_strtod_l+0xb44>)
    732e:	402b      	ands	r3, r5
    7330:	930f      	str	r3, [sp, #60]	; 0x3c
    7332:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    7334:	4b7e      	ldr	r3, [pc, #504]	; (7530 <_strtod_l+0xb50>)
    7336:	429a      	cmp	r2, r3
    7338:	f040 80ab 	bne.w	7492 <_strtod_l+0xab2>
    733c:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
    7340:	f1a5 7b54 	sub.w	fp, r5, #55574528	; 0x3500000
    7344:	ec4b ab10 	vmov	d0, sl, fp
    7348:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
    734c:	f002 f91a 	bl	9584 <__ulp>
    7350:	4640      	mov	r0, r8
    7352:	ec53 2b10 	vmov	r2, r3, d0
    7356:	4649      	mov	r1, r9
    7358:	f002 fc96 	bl	9c88 <__aeabi_dmul>
    735c:	4652      	mov	r2, sl
    735e:	465b      	mov	r3, fp
    7360:	f7fd fd68 	bl	4e34 <__adddf3>
    7364:	460b      	mov	r3, r1
    7366:	496f      	ldr	r1, [pc, #444]	; (7524 <_strtod_l+0xb44>)
    7368:	4a72      	ldr	r2, [pc, #456]	; (7534 <_strtod_l+0xb54>)
    736a:	4019      	ands	r1, r3
    736c:	4291      	cmp	r1, r2
    736e:	4682      	mov	sl, r0
    7370:	d95b      	bls.n	742a <_strtod_l+0xa4a>
    7372:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    7374:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
    7378:	4293      	cmp	r3, r2
    737a:	d103      	bne.n	7384 <_strtod_l+0x9a4>
    737c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    737e:	3301      	adds	r3, #1
    7380:	f43f ad62 	beq.w	6e48 <_strtod_l+0x468>
    7384:	f8df b1a0 	ldr.w	fp, [pc, #416]	; 7528 <_strtod_l+0xb48>
    7388:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
    738c:	991c      	ldr	r1, [sp, #112]	; 0x70
    738e:	9804      	ldr	r0, [sp, #16]
    7390:	f001 fe66 	bl	9060 <_Bfree>
    7394:	9907      	ldr	r1, [sp, #28]
    7396:	9804      	ldr	r0, [sp, #16]
    7398:	f001 fe62 	bl	9060 <_Bfree>
    739c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    73a0:	f001 fe5e 	bl	9060 <_Bfree>
    73a4:	4621      	mov	r1, r4
    73a6:	9804      	ldr	r0, [sp, #16]
    73a8:	f001 fe5a 	bl	9060 <_Bfree>
    73ac:	e62b      	b.n	7006 <_strtod_l+0x626>
    73ae:	f1ba 0f00 	cmp.w	sl, #0
    73b2:	d118      	bne.n	73e6 <_strtod_l+0xa06>
    73b4:	f3cb 0313 	ubfx	r3, fp, #0, #20
    73b8:	b9db      	cbnz	r3, 73f2 <_strtod_l+0xa12>
    73ba:	2200      	movs	r2, #0
    73bc:	4b5b      	ldr	r3, [pc, #364]	; (752c <_strtod_l+0xb4c>)
    73be:	4630      	mov	r0, r6
    73c0:	4639      	mov	r1, r7
    73c2:	f002 fed3 	bl	a16c <__aeabi_dcmplt>
    73c6:	b9c8      	cbnz	r0, 73fc <_strtod_l+0xa1c>
    73c8:	4630      	mov	r0, r6
    73ca:	4639      	mov	r1, r7
    73cc:	2200      	movs	r2, #0
    73ce:	4b5a      	ldr	r3, [pc, #360]	; (7538 <_strtod_l+0xb58>)
    73d0:	f002 fc5a 	bl	9c88 <__aeabi_dmul>
    73d4:	4606      	mov	r6, r0
    73d6:	460f      	mov	r7, r1
    73d8:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
    73dc:	9618      	str	r6, [sp, #96]	; 0x60
    73de:	9319      	str	r3, [sp, #100]	; 0x64
    73e0:	e9dd 8918 	ldrd	r8, r9, [sp, #96]	; 0x60
    73e4:	e7a2      	b.n	732c <_strtod_l+0x94c>
    73e6:	f1ba 0f01 	cmp.w	sl, #1
    73ea:	d102      	bne.n	73f2 <_strtod_l+0xa12>
    73ec:	2d00      	cmp	r5, #0
    73ee:	f43f ad9a 	beq.w	6f26 <_strtod_l+0x546>
    73f2:	f04f 0800 	mov.w	r8, #0
    73f6:	f8df 9144 	ldr.w	r9, [pc, #324]	; 753c <_strtod_l+0xb5c>
    73fa:	e795      	b.n	7328 <_strtod_l+0x948>
    73fc:	2600      	movs	r6, #0
    73fe:	4f4e      	ldr	r7, [pc, #312]	; (7538 <_strtod_l+0xb58>)
    7400:	e7ea      	b.n	73d8 <_strtod_l+0x9f8>
    7402:	4b4d      	ldr	r3, [pc, #308]	; (7538 <_strtod_l+0xb58>)
    7404:	4630      	mov	r0, r6
    7406:	4639      	mov	r1, r7
    7408:	2200      	movs	r2, #0
    740a:	f002 fc3d 	bl	9c88 <__aeabi_dmul>
    740e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    7410:	4606      	mov	r6, r0
    7412:	460f      	mov	r7, r1
    7414:	b933      	cbnz	r3, 7424 <_strtod_l+0xa44>
    7416:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
    741a:	9010      	str	r0, [sp, #64]	; 0x40
    741c:	9311      	str	r3, [sp, #68]	; 0x44
    741e:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	; 0x40
    7422:	e783      	b.n	732c <_strtod_l+0x94c>
    7424:	e9cd 6710 	strd	r6, r7, [sp, #64]	; 0x40
    7428:	e7f9      	b.n	741e <_strtod_l+0xa3e>
    742a:	f103 7b54 	add.w	fp, r3, #55574528	; 0x3500000
    742e:	9b06      	ldr	r3, [sp, #24]
    7430:	2b00      	cmp	r3, #0
    7432:	d1ab      	bne.n	738c <_strtod_l+0x9ac>
    7434:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
    7438:	0d1b      	lsrs	r3, r3, #20
    743a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    743c:	051b      	lsls	r3, r3, #20
    743e:	429a      	cmp	r2, r3
    7440:	d1a4      	bne.n	738c <_strtod_l+0x9ac>
    7442:	4630      	mov	r0, r6
    7444:	4639      	mov	r1, r7
    7446:	f002 ff67 	bl	a318 <__aeabi_d2lz>
    744a:	f7fd fe7b 	bl	5144 <__aeabi_l2d>
    744e:	4602      	mov	r2, r0
    7450:	460b      	mov	r3, r1
    7452:	4630      	mov	r0, r6
    7454:	4639      	mov	r1, r7
    7456:	f7fd fceb 	bl	4e30 <__aeabi_dsub>
    745a:	f3cb 0313 	ubfx	r3, fp, #0, #20
    745e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    7460:	ea43 030a 	orr.w	r3, r3, sl
    7464:	4313      	orrs	r3, r2
    7466:	4606      	mov	r6, r0
    7468:	460f      	mov	r7, r1
    746a:	d069      	beq.n	7540 <_strtod_l+0xb60>
    746c:	a326      	add	r3, pc, #152	; (adr r3, 7508 <_strtod_l+0xb28>)
    746e:	e9d3 2300 	ldrd	r2, r3, [r3]
    7472:	f002 fe7b 	bl	a16c <__aeabi_dcmplt>
    7476:	2800      	cmp	r0, #0
    7478:	f47f acf1 	bne.w	6e5e <_strtod_l+0x47e>
    747c:	a324      	add	r3, pc, #144	; (adr r3, 7510 <_strtod_l+0xb30>)
    747e:	e9d3 2300 	ldrd	r2, r3, [r3]
    7482:	4630      	mov	r0, r6
    7484:	4639      	mov	r1, r7
    7486:	f002 fe8f 	bl	a1a8 <__aeabi_dcmpgt>
    748a:	2800      	cmp	r0, #0
    748c:	f43f af7e 	beq.w	738c <_strtod_l+0x9ac>
    7490:	e4e5      	b.n	6e5e <_strtod_l+0x47e>
    7492:	9b06      	ldr	r3, [sp, #24]
    7494:	b31b      	cbz	r3, 74de <_strtod_l+0xafe>
    7496:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    7498:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
    749c:	d81f      	bhi.n	74de <_strtod_l+0xafe>
    749e:	a31e      	add	r3, pc, #120	; (adr r3, 7518 <_strtod_l+0xb38>)
    74a0:	e9d3 2300 	ldrd	r2, r3, [r3]
    74a4:	4630      	mov	r0, r6
    74a6:	4639      	mov	r1, r7
    74a8:	f002 fe6a 	bl	a180 <__aeabi_dcmple>
    74ac:	b190      	cbz	r0, 74d4 <_strtod_l+0xaf4>
    74ae:	4639      	mov	r1, r7
    74b0:	4630      	mov	r0, r6
    74b2:	f002 fec1 	bl	a238 <__aeabi_d2uiz>
    74b6:	2800      	cmp	r0, #0
    74b8:	bf08      	it	eq
    74ba:	2001      	moveq	r0, #1
    74bc:	f7fd fdf6 	bl	50ac <__aeabi_ui2d>
    74c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    74c2:	4606      	mov	r6, r0
    74c4:	460f      	mov	r7, r1
    74c6:	b9db      	cbnz	r3, 7500 <_strtod_l+0xb20>
    74c8:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
    74cc:	9012      	str	r0, [sp, #72]	; 0x48
    74ce:	9313      	str	r3, [sp, #76]	; 0x4c
    74d0:	e9dd 8912 	ldrd	r8, r9, [sp, #72]	; 0x48
    74d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    74d6:	f109 63d6 	add.w	r3, r9, #112197632	; 0x6b00000
    74da:	eba3 0902 	sub.w	r9, r3, r2
    74de:	ed9d 0b0a 	vldr	d0, [sp, #40]	; 0x28
    74e2:	f002 f84f 	bl	9584 <__ulp>
    74e6:	4640      	mov	r0, r8
    74e8:	ec53 2b10 	vmov	r2, r3, d0
    74ec:	4649      	mov	r1, r9
    74ee:	f002 fbcb 	bl	9c88 <__aeabi_dmul>
    74f2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
    74f6:	f7fd fc9d 	bl	4e34 <__adddf3>
    74fa:	4682      	mov	sl, r0
    74fc:	468b      	mov	fp, r1
    74fe:	e796      	b.n	742e <_strtod_l+0xa4e>
    7500:	e9cd 6712 	strd	r6, r7, [sp, #72]	; 0x48
    7504:	e7e4      	b.n	74d0 <_strtod_l+0xaf0>
    7506:	bf00      	nop
    7508:	94a03595 	.word	0x94a03595
    750c:	3fdfffff 	.word	0x3fdfffff
    7510:	35afe535 	.word	0x35afe535
    7514:	3fe00000 	.word	0x3fe00000
    7518:	ffc00000 	.word	0xffc00000
    751c:	41dfffff 	.word	0x41dfffff
    7520:	000fffff 	.word	0x000fffff
    7524:	7ff00000 	.word	0x7ff00000
    7528:	7fefffff 	.word	0x7fefffff
    752c:	3ff00000 	.word	0x3ff00000
    7530:	7fe00000 	.word	0x7fe00000
    7534:	7c9fffff 	.word	0x7c9fffff
    7538:	3fe00000 	.word	0x3fe00000
    753c:	bff00000 	.word	0xbff00000
    7540:	a30b      	add	r3, pc, #44	; (adr r3, 7570 <_strtod_l+0xb90>)
    7542:	e9d3 2300 	ldrd	r2, r3, [r3]
    7546:	f002 fe11 	bl	a16c <__aeabi_dcmplt>
    754a:	e79e      	b.n	748a <_strtod_l+0xaaa>
    754c:	2300      	movs	r3, #0
    754e:	930c      	str	r3, [sp, #48]	; 0x30
    7550:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    7552:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    7554:	6013      	str	r3, [r2, #0]
    7556:	f7ff ba85 	b.w	6a64 <_strtod_l+0x84>
    755a:	2b65      	cmp	r3, #101	; 0x65
    755c:	f43f ab72 	beq.w	6c44 <_strtod_l+0x264>
    7560:	2b45      	cmp	r3, #69	; 0x45
    7562:	f43f ab6f 	beq.w	6c44 <_strtod_l+0x264>
    7566:	2201      	movs	r2, #1
    7568:	f7ff bba4 	b.w	6cb4 <_strtod_l+0x2d4>
    756c:	f3af 8000 	nop.w
    7570:	94a03595 	.word	0x94a03595
    7574:	3fcfffff 	.word	0x3fcfffff

00007578 <_strtod_r>:
_strtod_r():
    7578:	4b01      	ldr	r3, [pc, #4]	; (7580 <_strtod_r+0x8>)
    757a:	f7ff ba31 	b.w	69e0 <_strtod_l>
    757e:	bf00      	nop
    7580:	100001b8 	.word	0x100001b8

00007584 <_strtol_l.isra.0>:
_strtol_l.isra.0():
    7584:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    7588:	4f39      	ldr	r7, [pc, #228]	; (7670 <_strtol_l.isra.0+0xec>)
    758a:	4686      	mov	lr, r0
    758c:	4608      	mov	r0, r1
    758e:	4605      	mov	r5, r0
    7590:	f815 4b01 	ldrb.w	r4, [r5], #1
    7594:	5de6      	ldrb	r6, [r4, r7]
    7596:	f016 0608 	ands.w	r6, r6, #8
    759a:	d134      	bne.n	7606 <_strtol_l.isra.0+0x82>
    759c:	2c2d      	cmp	r4, #45	; 0x2d
    759e:	d134      	bne.n	760a <_strtol_l.isra.0+0x86>
    75a0:	782c      	ldrb	r4, [r5, #0]
    75a2:	f04f 0801 	mov.w	r8, #1
    75a6:	1c85      	adds	r5, r0, #2
    75a8:	2b00      	cmp	r3, #0
    75aa:	d05c      	beq.n	7666 <_strtol_l.isra.0+0xe2>
    75ac:	2b10      	cmp	r3, #16
    75ae:	d109      	bne.n	75c4 <_strtol_l.isra.0+0x40>
    75b0:	2c30      	cmp	r4, #48	; 0x30
    75b2:	d107      	bne.n	75c4 <_strtol_l.isra.0+0x40>
    75b4:	7828      	ldrb	r0, [r5, #0]
    75b6:	f000 00df 	and.w	r0, r0, #223	; 0xdf
    75ba:	2858      	cmp	r0, #88	; 0x58
    75bc:	d14e      	bne.n	765c <_strtol_l.isra.0+0xd8>
    75be:	786c      	ldrb	r4, [r5, #1]
    75c0:	2310      	movs	r3, #16
    75c2:	3502      	adds	r5, #2
    75c4:	f1b8 0f00 	cmp.w	r8, #0
    75c8:	bf14      	ite	ne
    75ca:	f04f 4c00 	movne.w	ip, #2147483648	; 0x80000000
    75ce:	f06f 4c00 	mvneq.w	ip, #2147483648	; 0x80000000
    75d2:	2700      	movs	r7, #0
    75d4:	fbbc f9f3 	udiv	r9, ip, r3
    75d8:	4638      	mov	r0, r7
    75da:	fb03 ca19 	mls	sl, r3, r9, ip
    75de:	f1a4 0630 	sub.w	r6, r4, #48	; 0x30
    75e2:	2e09      	cmp	r6, #9
    75e4:	d818      	bhi.n	7618 <_strtol_l.isra.0+0x94>
    75e6:	4634      	mov	r4, r6
    75e8:	42a3      	cmp	r3, r4
    75ea:	dd24      	ble.n	7636 <_strtol_l.isra.0+0xb2>
    75ec:	1c7e      	adds	r6, r7, #1
    75ee:	d007      	beq.n	7600 <_strtol_l.isra.0+0x7c>
    75f0:	4581      	cmp	r9, r0
    75f2:	d31d      	bcc.n	7630 <_strtol_l.isra.0+0xac>
    75f4:	d101      	bne.n	75fa <_strtol_l.isra.0+0x76>
    75f6:	45a2      	cmp	sl, r4
    75f8:	db1a      	blt.n	7630 <_strtol_l.isra.0+0xac>
    75fa:	fb00 4003 	mla	r0, r0, r3, r4
    75fe:	2701      	movs	r7, #1
    7600:	f815 4b01 	ldrb.w	r4, [r5], #1
    7604:	e7eb      	b.n	75de <_strtol_l.isra.0+0x5a>
    7606:	4628      	mov	r0, r5
    7608:	e7c1      	b.n	758e <_strtol_l.isra.0+0xa>
    760a:	2c2b      	cmp	r4, #43	; 0x2b
    760c:	bf08      	it	eq
    760e:	782c      	ldrbeq	r4, [r5, #0]
    7610:	46b0      	mov	r8, r6
    7612:	bf08      	it	eq
    7614:	1c85      	addeq	r5, r0, #2
    7616:	e7c7      	b.n	75a8 <_strtol_l.isra.0+0x24>
    7618:	f1a4 0641 	sub.w	r6, r4, #65	; 0x41
    761c:	2e19      	cmp	r6, #25
    761e:	d801      	bhi.n	7624 <_strtol_l.isra.0+0xa0>
    7620:	3c37      	subs	r4, #55	; 0x37
    7622:	e7e1      	b.n	75e8 <_strtol_l.isra.0+0x64>
    7624:	f1a4 0661 	sub.w	r6, r4, #97	; 0x61
    7628:	2e19      	cmp	r6, #25
    762a:	d804      	bhi.n	7636 <_strtol_l.isra.0+0xb2>
    762c:	3c57      	subs	r4, #87	; 0x57
    762e:	e7db      	b.n	75e8 <_strtol_l.isra.0+0x64>
    7630:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
    7634:	e7e4      	b.n	7600 <_strtol_l.isra.0+0x7c>
    7636:	1c7b      	adds	r3, r7, #1
    7638:	d106      	bne.n	7648 <_strtol_l.isra.0+0xc4>
    763a:	2322      	movs	r3, #34	; 0x22
    763c:	f8ce 3000 	str.w	r3, [lr]
    7640:	4660      	mov	r0, ip
    7642:	b942      	cbnz	r2, 7656 <_strtol_l.isra.0+0xd2>
    7644:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    7648:	f1b8 0f00 	cmp.w	r8, #0
    764c:	d000      	beq.n	7650 <_strtol_l.isra.0+0xcc>
    764e:	4240      	negs	r0, r0
    7650:	2a00      	cmp	r2, #0
    7652:	d0f7      	beq.n	7644 <_strtol_l.isra.0+0xc0>
    7654:	b107      	cbz	r7, 7658 <_strtol_l.isra.0+0xd4>
    7656:	1e69      	subs	r1, r5, #1
    7658:	6011      	str	r1, [r2, #0]
    765a:	e7f3      	b.n	7644 <_strtol_l.isra.0+0xc0>
    765c:	2430      	movs	r4, #48	; 0x30
    765e:	2b00      	cmp	r3, #0
    7660:	d1b0      	bne.n	75c4 <_strtol_l.isra.0+0x40>
    7662:	2308      	movs	r3, #8
    7664:	e7ae      	b.n	75c4 <_strtol_l.isra.0+0x40>
    7666:	2c30      	cmp	r4, #48	; 0x30
    7668:	d0a4      	beq.n	75b4 <_strtol_l.isra.0+0x30>
    766a:	230a      	movs	r3, #10
    766c:	e7aa      	b.n	75c4 <_strtol_l.isra.0+0x40>
    766e:	bf00      	nop
    7670:	0000b708 	.word	0x0000b708

00007674 <_strtol_r>:
_strtol_r():
    7674:	f7ff bf86 	b.w	7584 <_strtol_l.isra.0>

00007678 <__swbuf_r>:
__swbuf_r():
    7678:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    767a:	460e      	mov	r6, r1
    767c:	4614      	mov	r4, r2
    767e:	4605      	mov	r5, r0
    7680:	b118      	cbz	r0, 768a <__swbuf_r+0x12>
    7682:	6983      	ldr	r3, [r0, #24]
    7684:	b90b      	cbnz	r3, 768a <__swbuf_r+0x12>
    7686:	f001 f817 	bl	86b8 <__sinit>
    768a:	4b21      	ldr	r3, [pc, #132]	; (7710 <__swbuf_r+0x98>)
    768c:	429c      	cmp	r4, r3
    768e:	d12b      	bne.n	76e8 <__swbuf_r+0x70>
    7690:	686c      	ldr	r4, [r5, #4]
    7692:	69a3      	ldr	r3, [r4, #24]
    7694:	60a3      	str	r3, [r4, #8]
    7696:	89a3      	ldrh	r3, [r4, #12]
    7698:	071a      	lsls	r2, r3, #28
    769a:	d52f      	bpl.n	76fc <__swbuf_r+0x84>
    769c:	6923      	ldr	r3, [r4, #16]
    769e:	b36b      	cbz	r3, 76fc <__swbuf_r+0x84>
    76a0:	6923      	ldr	r3, [r4, #16]
    76a2:	6820      	ldr	r0, [r4, #0]
    76a4:	1ac0      	subs	r0, r0, r3
    76a6:	6963      	ldr	r3, [r4, #20]
    76a8:	b2f6      	uxtb	r6, r6
    76aa:	4283      	cmp	r3, r0
    76ac:	4637      	mov	r7, r6
    76ae:	dc04      	bgt.n	76ba <__swbuf_r+0x42>
    76b0:	4621      	mov	r1, r4
    76b2:	4628      	mov	r0, r5
    76b4:	f000 ff6c 	bl	8590 <_fflush_r>
    76b8:	bb30      	cbnz	r0, 7708 <__swbuf_r+0x90>
    76ba:	68a3      	ldr	r3, [r4, #8]
    76bc:	3b01      	subs	r3, #1
    76be:	60a3      	str	r3, [r4, #8]
    76c0:	6823      	ldr	r3, [r4, #0]
    76c2:	1c5a      	adds	r2, r3, #1
    76c4:	6022      	str	r2, [r4, #0]
    76c6:	701e      	strb	r6, [r3, #0]
    76c8:	6963      	ldr	r3, [r4, #20]
    76ca:	3001      	adds	r0, #1
    76cc:	4283      	cmp	r3, r0
    76ce:	d004      	beq.n	76da <__swbuf_r+0x62>
    76d0:	89a3      	ldrh	r3, [r4, #12]
    76d2:	07db      	lsls	r3, r3, #31
    76d4:	d506      	bpl.n	76e4 <__swbuf_r+0x6c>
    76d6:	2e0a      	cmp	r6, #10
    76d8:	d104      	bne.n	76e4 <__swbuf_r+0x6c>
    76da:	4621      	mov	r1, r4
    76dc:	4628      	mov	r0, r5
    76de:	f000 ff57 	bl	8590 <_fflush_r>
    76e2:	b988      	cbnz	r0, 7708 <__swbuf_r+0x90>
    76e4:	4638      	mov	r0, r7
    76e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    76e8:	4b0a      	ldr	r3, [pc, #40]	; (7714 <__swbuf_r+0x9c>)
    76ea:	429c      	cmp	r4, r3
    76ec:	d101      	bne.n	76f2 <__swbuf_r+0x7a>
    76ee:	68ac      	ldr	r4, [r5, #8]
    76f0:	e7cf      	b.n	7692 <__swbuf_r+0x1a>
    76f2:	4b09      	ldr	r3, [pc, #36]	; (7718 <__swbuf_r+0xa0>)
    76f4:	429c      	cmp	r4, r3
    76f6:	bf08      	it	eq
    76f8:	68ec      	ldreq	r4, [r5, #12]
    76fa:	e7ca      	b.n	7692 <__swbuf_r+0x1a>
    76fc:	4621      	mov	r1, r4
    76fe:	4628      	mov	r0, r5
    7700:	f000 f80c 	bl	771c <__swsetup_r>
    7704:	2800      	cmp	r0, #0
    7706:	d0cb      	beq.n	76a0 <__swbuf_r+0x28>
    7708:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
    770c:	e7ea      	b.n	76e4 <__swbuf_r+0x6c>
    770e:	bf00      	nop
    7710:	0000b8d8 	.word	0x0000b8d8
    7714:	0000b8f8 	.word	0x0000b8f8
    7718:	0000b8b8 	.word	0x0000b8b8

0000771c <__swsetup_r>:
__swsetup_r():
    771c:	4b32      	ldr	r3, [pc, #200]	; (77e8 <__swsetup_r+0xcc>)
    771e:	b570      	push	{r4, r5, r6, lr}
    7720:	681d      	ldr	r5, [r3, #0]
    7722:	4606      	mov	r6, r0
    7724:	460c      	mov	r4, r1
    7726:	b125      	cbz	r5, 7732 <__swsetup_r+0x16>
    7728:	69ab      	ldr	r3, [r5, #24]
    772a:	b913      	cbnz	r3, 7732 <__swsetup_r+0x16>
    772c:	4628      	mov	r0, r5
    772e:	f000 ffc3 	bl	86b8 <__sinit>
    7732:	4b2e      	ldr	r3, [pc, #184]	; (77ec <__swsetup_r+0xd0>)
    7734:	429c      	cmp	r4, r3
    7736:	d10f      	bne.n	7758 <__swsetup_r+0x3c>
    7738:	686c      	ldr	r4, [r5, #4]
    773a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    773e:	b29a      	uxth	r2, r3
    7740:	0715      	lsls	r5, r2, #28
    7742:	d42c      	bmi.n	779e <__swsetup_r+0x82>
    7744:	06d0      	lsls	r0, r2, #27
    7746:	d411      	bmi.n	776c <__swsetup_r+0x50>
    7748:	2209      	movs	r2, #9
    774a:	6032      	str	r2, [r6, #0]
    774c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    7750:	81a3      	strh	r3, [r4, #12]
    7752:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    7756:	e03e      	b.n	77d6 <__swsetup_r+0xba>
    7758:	4b25      	ldr	r3, [pc, #148]	; (77f0 <__swsetup_r+0xd4>)
    775a:	429c      	cmp	r4, r3
    775c:	d101      	bne.n	7762 <__swsetup_r+0x46>
    775e:	68ac      	ldr	r4, [r5, #8]
    7760:	e7eb      	b.n	773a <__swsetup_r+0x1e>
    7762:	4b24      	ldr	r3, [pc, #144]	; (77f4 <__swsetup_r+0xd8>)
    7764:	429c      	cmp	r4, r3
    7766:	bf08      	it	eq
    7768:	68ec      	ldreq	r4, [r5, #12]
    776a:	e7e6      	b.n	773a <__swsetup_r+0x1e>
    776c:	0751      	lsls	r1, r2, #29
    776e:	d512      	bpl.n	7796 <__swsetup_r+0x7a>
    7770:	6b61      	ldr	r1, [r4, #52]	; 0x34
    7772:	b141      	cbz	r1, 7786 <__swsetup_r+0x6a>
    7774:	f104 0344 	add.w	r3, r4, #68	; 0x44
    7778:	4299      	cmp	r1, r3
    777a:	d002      	beq.n	7782 <__swsetup_r+0x66>
    777c:	4630      	mov	r0, r6
    777e:	f7fd ff55 	bl	562c <_free_r>
    7782:	2300      	movs	r3, #0
    7784:	6363      	str	r3, [r4, #52]	; 0x34
    7786:	89a3      	ldrh	r3, [r4, #12]
    7788:	f023 0324 	bic.w	r3, r3, #36	; 0x24
    778c:	81a3      	strh	r3, [r4, #12]
    778e:	2300      	movs	r3, #0
    7790:	6063      	str	r3, [r4, #4]
    7792:	6923      	ldr	r3, [r4, #16]
    7794:	6023      	str	r3, [r4, #0]
    7796:	89a3      	ldrh	r3, [r4, #12]
    7798:	f043 0308 	orr.w	r3, r3, #8
    779c:	81a3      	strh	r3, [r4, #12]
    779e:	6923      	ldr	r3, [r4, #16]
    77a0:	b94b      	cbnz	r3, 77b6 <__swsetup_r+0x9a>
    77a2:	89a3      	ldrh	r3, [r4, #12]
    77a4:	f403 7320 	and.w	r3, r3, #640	; 0x280
    77a8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
    77ac:	d003      	beq.n	77b6 <__swsetup_r+0x9a>
    77ae:	4621      	mov	r1, r4
    77b0:	4630      	mov	r0, r6
    77b2:	f001 fb6f 	bl	8e94 <__smakebuf_r>
    77b6:	89a2      	ldrh	r2, [r4, #12]
    77b8:	f012 0301 	ands.w	r3, r2, #1
    77bc:	d00c      	beq.n	77d8 <__swsetup_r+0xbc>
    77be:	2300      	movs	r3, #0
    77c0:	60a3      	str	r3, [r4, #8]
    77c2:	6963      	ldr	r3, [r4, #20]
    77c4:	425b      	negs	r3, r3
    77c6:	61a3      	str	r3, [r4, #24]
    77c8:	6923      	ldr	r3, [r4, #16]
    77ca:	b953      	cbnz	r3, 77e2 <__swsetup_r+0xc6>
    77cc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    77d0:	f013 0080 	ands.w	r0, r3, #128	; 0x80
    77d4:	d1ba      	bne.n	774c <__swsetup_r+0x30>
    77d6:	bd70      	pop	{r4, r5, r6, pc}
    77d8:	0792      	lsls	r2, r2, #30
    77da:	bf58      	it	pl
    77dc:	6963      	ldrpl	r3, [r4, #20]
    77de:	60a3      	str	r3, [r4, #8]
    77e0:	e7f2      	b.n	77c8 <__swsetup_r+0xac>
    77e2:	2000      	movs	r0, #0
    77e4:	e7f7      	b.n	77d6 <__swsetup_r+0xba>
    77e6:	bf00      	nop
    77e8:	10000150 	.word	0x10000150
    77ec:	0000b8d8 	.word	0x0000b8d8
    77f0:	0000b8f8 	.word	0x0000b8f8
    77f4:	0000b8b8 	.word	0x0000b8b8

000077f8 <quorem>:
quorem():
    77f8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    77fc:	6903      	ldr	r3, [r0, #16]
    77fe:	690c      	ldr	r4, [r1, #16]
    7800:	42a3      	cmp	r3, r4
    7802:	4680      	mov	r8, r0
    7804:	db7f      	blt.n	7906 <quorem+0x10e>
    7806:	3c01      	subs	r4, #1
    7808:	f101 0714 	add.w	r7, r1, #20
    780c:	00a0      	lsls	r0, r4, #2
    780e:	f108 0514 	add.w	r5, r8, #20
    7812:	182b      	adds	r3, r5, r0
    7814:	9301      	str	r3, [sp, #4]
    7816:	f857 3024 	ldr.w	r3, [r7, r4, lsl #2]
    781a:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
    781e:	3301      	adds	r3, #1
    7820:	429a      	cmp	r2, r3
    7822:	eb07 0900 	add.w	r9, r7, r0
    7826:	fbb2 f6f3 	udiv	r6, r2, r3
    782a:	d331      	bcc.n	7890 <quorem+0x98>
    782c:	f04f 0a00 	mov.w	sl, #0
    7830:	46bc      	mov	ip, r7
    7832:	46ae      	mov	lr, r5
    7834:	46d3      	mov	fp, sl
    7836:	f85c 2b04 	ldr.w	r2, [ip], #4
    783a:	b293      	uxth	r3, r2
    783c:	fb06 a303 	mla	r3, r6, r3, sl
    7840:	ea4f 4a13 	mov.w	sl, r3, lsr #16
    7844:	b29b      	uxth	r3, r3
    7846:	ebab 0303 	sub.w	r3, fp, r3
    784a:	0c12      	lsrs	r2, r2, #16
    784c:	f8de b000 	ldr.w	fp, [lr]
    7850:	fb06 a202 	mla	r2, r6, r2, sl
    7854:	fa13 f38b 	uxtah	r3, r3, fp
    7858:	ea4f 4a12 	mov.w	sl, r2, lsr #16
    785c:	fa1f fb82 	uxth.w	fp, r2
    7860:	f8de 2000 	ldr.w	r2, [lr]
    7864:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
    7868:	eb02 4223 	add.w	r2, r2, r3, asr #16
    786c:	b29b      	uxth	r3, r3
    786e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
    7872:	45e1      	cmp	r9, ip
    7874:	ea4f 4b22 	mov.w	fp, r2, asr #16
    7878:	f84e 3b04 	str.w	r3, [lr], #4
    787c:	d2db      	bcs.n	7836 <quorem+0x3e>
    787e:	582b      	ldr	r3, [r5, r0]
    7880:	b933      	cbnz	r3, 7890 <quorem+0x98>
    7882:	9b01      	ldr	r3, [sp, #4]
    7884:	3b04      	subs	r3, #4
    7886:	429d      	cmp	r5, r3
    7888:	461a      	mov	r2, r3
    788a:	d330      	bcc.n	78ee <quorem+0xf6>
    788c:	f8c8 4010 	str.w	r4, [r8, #16]
    7890:	4640      	mov	r0, r8
    7892:	f001 fe00 	bl	9496 <__mcmp>
    7896:	2800      	cmp	r0, #0
    7898:	db25      	blt.n	78e6 <quorem+0xee>
    789a:	3601      	adds	r6, #1
    789c:	4628      	mov	r0, r5
    789e:	f04f 0c00 	mov.w	ip, #0
    78a2:	f857 2b04 	ldr.w	r2, [r7], #4
    78a6:	f8d0 e000 	ldr.w	lr, [r0]
    78aa:	b293      	uxth	r3, r2
    78ac:	ebac 0303 	sub.w	r3, ip, r3
    78b0:	0c12      	lsrs	r2, r2, #16
    78b2:	fa13 f38e 	uxtah	r3, r3, lr
    78b6:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
    78ba:	eb02 4223 	add.w	r2, r2, r3, asr #16
    78be:	b29b      	uxth	r3, r3
    78c0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
    78c4:	45b9      	cmp	r9, r7
    78c6:	ea4f 4c22 	mov.w	ip, r2, asr #16
    78ca:	f840 3b04 	str.w	r3, [r0], #4
    78ce:	d2e8      	bcs.n	78a2 <quorem+0xaa>
    78d0:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
    78d4:	eb05 0384 	add.w	r3, r5, r4, lsl #2
    78d8:	b92a      	cbnz	r2, 78e6 <quorem+0xee>
    78da:	3b04      	subs	r3, #4
    78dc:	429d      	cmp	r5, r3
    78de:	461a      	mov	r2, r3
    78e0:	d30b      	bcc.n	78fa <quorem+0x102>
    78e2:	f8c8 4010 	str.w	r4, [r8, #16]
    78e6:	4630      	mov	r0, r6
    78e8:	b003      	add	sp, #12
    78ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    78ee:	6812      	ldr	r2, [r2, #0]
    78f0:	3b04      	subs	r3, #4
    78f2:	2a00      	cmp	r2, #0
    78f4:	d1ca      	bne.n	788c <quorem+0x94>
    78f6:	3c01      	subs	r4, #1
    78f8:	e7c5      	b.n	7886 <quorem+0x8e>
    78fa:	6812      	ldr	r2, [r2, #0]
    78fc:	3b04      	subs	r3, #4
    78fe:	2a00      	cmp	r2, #0
    7900:	d1ef      	bne.n	78e2 <quorem+0xea>
    7902:	3c01      	subs	r4, #1
    7904:	e7ea      	b.n	78dc <quorem+0xe4>
    7906:	2000      	movs	r0, #0
    7908:	e7ee      	b.n	78e8 <quorem+0xf0>
    790a:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
    790e:	Address 0x000000000000790e is out of bounds.


00007910 <_dtoa_r>:
_dtoa_r():
    7910:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7914:	ec55 4b10 	vmov	r4, r5, d0
    7918:	b099      	sub	sp, #100	; 0x64
    791a:	6a47      	ldr	r7, [r0, #36]	; 0x24
    791c:	9108      	str	r1, [sp, #32]
    791e:	4683      	mov	fp, r0
    7920:	920d      	str	r2, [sp, #52]	; 0x34
    7922:	9314      	str	r3, [sp, #80]	; 0x50
    7924:	9e22      	ldr	r6, [sp, #136]	; 0x88
    7926:	e9cd 4500 	strd	r4, r5, [sp]
    792a:	b947      	cbnz	r7, 793e <_dtoa_r+0x2e>
    792c:	2010      	movs	r0, #16
    792e:	f7fd fe3d 	bl	55ac <malloc>
    7932:	e9c0 7701 	strd	r7, r7, [r0, #4]
    7936:	f8cb 0024 	str.w	r0, [fp, #36]	; 0x24
    793a:	6007      	str	r7, [r0, #0]
    793c:	60c7      	str	r7, [r0, #12]
    793e:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
    7942:	6819      	ldr	r1, [r3, #0]
    7944:	b159      	cbz	r1, 795e <_dtoa_r+0x4e>
    7946:	685a      	ldr	r2, [r3, #4]
    7948:	604a      	str	r2, [r1, #4]
    794a:	2301      	movs	r3, #1
    794c:	4093      	lsls	r3, r2
    794e:	608b      	str	r3, [r1, #8]
    7950:	4658      	mov	r0, fp
    7952:	f001 fb85 	bl	9060 <_Bfree>
    7956:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
    795a:	2200      	movs	r2, #0
    795c:	601a      	str	r2, [r3, #0]
    795e:	1e2b      	subs	r3, r5, #0
    7960:	bfb9      	ittee	lt
    7962:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
    7966:	9301      	strlt	r3, [sp, #4]
    7968:	2300      	movge	r3, #0
    796a:	6033      	strge	r3, [r6, #0]
    796c:	9c01      	ldr	r4, [sp, #4]
    796e:	4bb2      	ldr	r3, [pc, #712]	; (7c38 <_dtoa_r+0x328>)
    7970:	bfbc      	itt	lt
    7972:	2201      	movlt	r2, #1
    7974:	6032      	strlt	r2, [r6, #0]
    7976:	43a3      	bics	r3, r4
    7978:	d11a      	bne.n	79b0 <_dtoa_r+0xa0>
    797a:	9a14      	ldr	r2, [sp, #80]	; 0x50
    797c:	f242 730f 	movw	r3, #9999	; 0x270f
    7980:	6013      	str	r3, [r2, #0]
    7982:	9a00      	ldr	r2, [sp, #0]
    7984:	f3c4 0313 	ubfx	r3, r4, #0, #20
    7988:	4313      	orrs	r3, r2
    798a:	f000 8552 	beq.w	8432 <_dtoa_r+0xb22>
    798e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    7990:	b953      	cbnz	r3, 79a8 <_dtoa_r+0x98>
    7992:	4baa      	ldr	r3, [pc, #680]	; (7c3c <_dtoa_r+0x32c>)
    7994:	e023      	b.n	79de <_dtoa_r+0xce>
    7996:	4baa      	ldr	r3, [pc, #680]	; (7c40 <_dtoa_r+0x330>)
    7998:	9303      	str	r3, [sp, #12]
    799a:	3308      	adds	r3, #8
    799c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    799e:	6013      	str	r3, [r2, #0]
    79a0:	9803      	ldr	r0, [sp, #12]
    79a2:	b019      	add	sp, #100	; 0x64
    79a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    79a8:	4ba4      	ldr	r3, [pc, #656]	; (7c3c <_dtoa_r+0x32c>)
    79aa:	9303      	str	r3, [sp, #12]
    79ac:	3303      	adds	r3, #3
    79ae:	e7f5      	b.n	799c <_dtoa_r+0x8c>
    79b0:	ed9d 7b00 	vldr	d7, [sp]
    79b4:	2200      	movs	r2, #0
    79b6:	2300      	movs	r3, #0
    79b8:	ec51 0b17 	vmov	r0, r1, d7
    79bc:	ed8d 7b0e 	vstr	d7, [sp, #56]	; 0x38
    79c0:	f002 fbca 	bl	a158 <__aeabi_dcmpeq>
    79c4:	4607      	mov	r7, r0
    79c6:	b160      	cbz	r0, 79e2 <_dtoa_r+0xd2>
    79c8:	9a14      	ldr	r2, [sp, #80]	; 0x50
    79ca:	2301      	movs	r3, #1
    79cc:	6013      	str	r3, [r2, #0]
    79ce:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    79d0:	2b00      	cmp	r3, #0
    79d2:	f000 852b 	beq.w	842c <_dtoa_r+0xb1c>
    79d6:	4b9b      	ldr	r3, [pc, #620]	; (7c44 <_dtoa_r+0x334>)
    79d8:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    79da:	6013      	str	r3, [r2, #0]
    79dc:	3b01      	subs	r3, #1
    79de:	9303      	str	r3, [sp, #12]
    79e0:	e7de      	b.n	79a0 <_dtoa_r+0x90>
    79e2:	aa16      	add	r2, sp, #88	; 0x58
    79e4:	a917      	add	r1, sp, #92	; 0x5c
    79e6:	ed9d 0b0e 	vldr	d0, [sp, #56]	; 0x38
    79ea:	4658      	mov	r0, fp
    79ec:	f001 fe40 	bl	9670 <__d2b>
    79f0:	f3c4 560a 	ubfx	r6, r4, #20, #11
    79f4:	4680      	mov	r8, r0
    79f6:	2e00      	cmp	r6, #0
    79f8:	d07f      	beq.n	7afa <_dtoa_r+0x1ea>
    79fa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    79fc:	9715      	str	r7, [sp, #84]	; 0x54
    79fe:	f3c3 0313 	ubfx	r3, r3, #0, #20
    7a02:	e9dd 450e 	ldrd	r4, r5, [sp, #56]	; 0x38
    7a06:	f043 557f 	orr.w	r5, r3, #1069547520	; 0x3fc00000
    7a0a:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
    7a0e:	f2a6 36ff 	subw	r6, r6, #1023	; 0x3ff
    7a12:	2200      	movs	r2, #0
    7a14:	4b8c      	ldr	r3, [pc, #560]	; (7c48 <_dtoa_r+0x338>)
    7a16:	4620      	mov	r0, r4
    7a18:	4629      	mov	r1, r5
    7a1a:	f7fd fa09 	bl	4e30 <__aeabi_dsub>
    7a1e:	a380      	add	r3, pc, #512	; (adr r3, 7c20 <_dtoa_r+0x310>)
    7a20:	e9d3 2300 	ldrd	r2, r3, [r3]
    7a24:	f002 f930 	bl	9c88 <__aeabi_dmul>
    7a28:	a37f      	add	r3, pc, #508	; (adr r3, 7c28 <_dtoa_r+0x318>)
    7a2a:	e9d3 2300 	ldrd	r2, r3, [r3]
    7a2e:	f7fd fa01 	bl	4e34 <__adddf3>
    7a32:	4604      	mov	r4, r0
    7a34:	4630      	mov	r0, r6
    7a36:	460d      	mov	r5, r1
    7a38:	f7fd fb48 	bl	50cc <__aeabi_i2d>
    7a3c:	a37c      	add	r3, pc, #496	; (adr r3, 7c30 <_dtoa_r+0x320>)
    7a3e:	e9d3 2300 	ldrd	r2, r3, [r3]
    7a42:	f002 f921 	bl	9c88 <__aeabi_dmul>
    7a46:	4602      	mov	r2, r0
    7a48:	460b      	mov	r3, r1
    7a4a:	4620      	mov	r0, r4
    7a4c:	4629      	mov	r1, r5
    7a4e:	f7fd f9f1 	bl	4e34 <__adddf3>
    7a52:	4604      	mov	r4, r0
    7a54:	460d      	mov	r5, r1
    7a56:	f002 fbc7 	bl	a1e8 <__aeabi_d2iz>
    7a5a:	2200      	movs	r2, #0
    7a5c:	4682      	mov	sl, r0
    7a5e:	2300      	movs	r3, #0
    7a60:	4620      	mov	r0, r4
    7a62:	4629      	mov	r1, r5
    7a64:	f002 fb82 	bl	a16c <__aeabi_dcmplt>
    7a68:	b148      	cbz	r0, 7a7e <_dtoa_r+0x16e>
    7a6a:	4650      	mov	r0, sl
    7a6c:	f7fd fb2e 	bl	50cc <__aeabi_i2d>
    7a70:	4622      	mov	r2, r4
    7a72:	462b      	mov	r3, r5
    7a74:	f002 fb70 	bl	a158 <__aeabi_dcmpeq>
    7a78:	b908      	cbnz	r0, 7a7e <_dtoa_r+0x16e>
    7a7a:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
    7a7e:	f1ba 0f16 	cmp.w	sl, #22
    7a82:	d859      	bhi.n	7b38 <_dtoa_r+0x228>
    7a84:	4b71      	ldr	r3, [pc, #452]	; (7c4c <_dtoa_r+0x33c>)
    7a86:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
    7a8a:	e9d3 2300 	ldrd	r2, r3, [r3]
    7a8e:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
    7a92:	f002 fb6b 	bl	a16c <__aeabi_dcmplt>
    7a96:	2800      	cmp	r0, #0
    7a98:	d050      	beq.n	7b3c <_dtoa_r+0x22c>
    7a9a:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
    7a9e:	2300      	movs	r3, #0
    7aa0:	9311      	str	r3, [sp, #68]	; 0x44
    7aa2:	9b16      	ldr	r3, [sp, #88]	; 0x58
    7aa4:	1b9e      	subs	r6, r3, r6
    7aa6:	1e73      	subs	r3, r6, #1
    7aa8:	9307      	str	r3, [sp, #28]
    7aaa:	bf45      	ittet	mi
    7aac:	f1c6 0301 	rsbmi	r3, r6, #1
    7ab0:	9306      	strmi	r3, [sp, #24]
    7ab2:	2300      	movpl	r3, #0
    7ab4:	2300      	movmi	r3, #0
    7ab6:	bf4c      	ite	mi
    7ab8:	9307      	strmi	r3, [sp, #28]
    7aba:	9306      	strpl	r3, [sp, #24]
    7abc:	f1ba 0f00 	cmp.w	sl, #0
    7ac0:	db3e      	blt.n	7b40 <_dtoa_r+0x230>
    7ac2:	9b07      	ldr	r3, [sp, #28]
    7ac4:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
    7ac8:	4453      	add	r3, sl
    7aca:	9307      	str	r3, [sp, #28]
    7acc:	2300      	movs	r3, #0
    7ace:	9309      	str	r3, [sp, #36]	; 0x24
    7ad0:	9b08      	ldr	r3, [sp, #32]
    7ad2:	2b09      	cmp	r3, #9
    7ad4:	f200 808f 	bhi.w	7bf6 <_dtoa_r+0x2e6>
    7ad8:	2b05      	cmp	r3, #5
    7ada:	bfc4      	itt	gt
    7adc:	3b04      	subgt	r3, #4
    7ade:	9308      	strgt	r3, [sp, #32]
    7ae0:	9b08      	ldr	r3, [sp, #32]
    7ae2:	f1a3 0302 	sub.w	r3, r3, #2
    7ae6:	bfcc      	ite	gt
    7ae8:	2400      	movgt	r4, #0
    7aea:	2401      	movle	r4, #1
    7aec:	2b03      	cmp	r3, #3
    7aee:	f200 808d 	bhi.w	7c0c <_dtoa_r+0x2fc>
    7af2:	e8df f003 	tbb	[pc, r3]
    7af6:	3c2f      	.short	0x3c2f
    7af8:	7e3a      	.short	0x7e3a
    7afa:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	; 0x58
    7afe:	441e      	add	r6, r3
    7b00:	f206 4032 	addw	r0, r6, #1074	; 0x432
    7b04:	2820      	cmp	r0, #32
    7b06:	dd11      	ble.n	7b2c <_dtoa_r+0x21c>
    7b08:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
    7b0c:	9b00      	ldr	r3, [sp, #0]
    7b0e:	4084      	lsls	r4, r0
    7b10:	f206 4012 	addw	r0, r6, #1042	; 0x412
    7b14:	fa23 f000 	lsr.w	r0, r3, r0
    7b18:	4320      	orrs	r0, r4
    7b1a:	f7fd fac7 	bl	50ac <__aeabi_ui2d>
    7b1e:	2301      	movs	r3, #1
    7b20:	4604      	mov	r4, r0
    7b22:	f1a1 75f8 	sub.w	r5, r1, #32505856	; 0x1f00000
    7b26:	3e01      	subs	r6, #1
    7b28:	9315      	str	r3, [sp, #84]	; 0x54
    7b2a:	e772      	b.n	7a12 <_dtoa_r+0x102>
    7b2c:	9b00      	ldr	r3, [sp, #0]
    7b2e:	f1c0 0020 	rsb	r0, r0, #32
    7b32:	fa03 f000 	lsl.w	r0, r3, r0
    7b36:	e7f0      	b.n	7b1a <_dtoa_r+0x20a>
    7b38:	2301      	movs	r3, #1
    7b3a:	e7b1      	b.n	7aa0 <_dtoa_r+0x190>
    7b3c:	9011      	str	r0, [sp, #68]	; 0x44
    7b3e:	e7b0      	b.n	7aa2 <_dtoa_r+0x192>
    7b40:	9b06      	ldr	r3, [sp, #24]
    7b42:	eba3 030a 	sub.w	r3, r3, sl
    7b46:	9306      	str	r3, [sp, #24]
    7b48:	f1ca 0300 	rsb	r3, sl, #0
    7b4c:	9309      	str	r3, [sp, #36]	; 0x24
    7b4e:	2300      	movs	r3, #0
    7b50:	9310      	str	r3, [sp, #64]	; 0x40
    7b52:	e7bd      	b.n	7ad0 <_dtoa_r+0x1c0>
    7b54:	2300      	movs	r3, #0
    7b56:	930c      	str	r3, [sp, #48]	; 0x30
    7b58:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    7b5a:	2b00      	cmp	r3, #0
    7b5c:	dc59      	bgt.n	7c12 <_dtoa_r+0x302>
    7b5e:	2301      	movs	r3, #1
    7b60:	9304      	str	r3, [sp, #16]
    7b62:	4699      	mov	r9, r3
    7b64:	461a      	mov	r2, r3
    7b66:	920d      	str	r2, [sp, #52]	; 0x34
    7b68:	e00c      	b.n	7b84 <_dtoa_r+0x274>
    7b6a:	2301      	movs	r3, #1
    7b6c:	e7f3      	b.n	7b56 <_dtoa_r+0x246>
    7b6e:	2300      	movs	r3, #0
    7b70:	930c      	str	r3, [sp, #48]	; 0x30
    7b72:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    7b74:	4453      	add	r3, sl
    7b76:	f103 0901 	add.w	r9, r3, #1
    7b7a:	9304      	str	r3, [sp, #16]
    7b7c:	464b      	mov	r3, r9
    7b7e:	2b01      	cmp	r3, #1
    7b80:	bfb8      	it	lt
    7b82:	2301      	movlt	r3, #1
    7b84:	f8db 5024 	ldr.w	r5, [fp, #36]	; 0x24
    7b88:	2200      	movs	r2, #0
    7b8a:	606a      	str	r2, [r5, #4]
    7b8c:	2204      	movs	r2, #4
    7b8e:	f102 0014 	add.w	r0, r2, #20
    7b92:	4298      	cmp	r0, r3
    7b94:	6869      	ldr	r1, [r5, #4]
    7b96:	d95d      	bls.n	7c54 <_dtoa_r+0x344>
    7b98:	4658      	mov	r0, fp
    7b9a:	f001 fa2d 	bl	8ff8 <_Balloc>
    7b9e:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
    7ba2:	6028      	str	r0, [r5, #0]
    7ba4:	681b      	ldr	r3, [r3, #0]
    7ba6:	9303      	str	r3, [sp, #12]
    7ba8:	f1b9 0f0e 	cmp.w	r9, #14
    7bac:	f200 80d7 	bhi.w	7d5e <_dtoa_r+0x44e>
    7bb0:	2c00      	cmp	r4, #0
    7bb2:	f000 80d4 	beq.w	7d5e <_dtoa_r+0x44e>
    7bb6:	f1ba 0f00 	cmp.w	sl, #0
    7bba:	dd69      	ble.n	7c90 <_dtoa_r+0x380>
    7bbc:	4a23      	ldr	r2, [pc, #140]	; (7c4c <_dtoa_r+0x33c>)
    7bbe:	f00a 030f 	and.w	r3, sl, #15
    7bc2:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
    7bc6:	ed93 7b00 	vldr	d7, [r3]
    7bca:	ea4f 142a 	mov.w	r4, sl, asr #4
    7bce:	06e2      	lsls	r2, r4, #27
    7bd0:	ed8d 7b0a 	vstr	d7, [sp, #40]	; 0x28
    7bd4:	d55a      	bpl.n	7c8c <_dtoa_r+0x37c>
    7bd6:	4b1e      	ldr	r3, [pc, #120]	; (7c50 <_dtoa_r+0x340>)
    7bd8:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
    7bdc:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
    7be0:	f002 f97c 	bl	9edc <__aeabi_ddiv>
    7be4:	e9cd 0100 	strd	r0, r1, [sp]
    7be8:	f004 040f 	and.w	r4, r4, #15
    7bec:	2603      	movs	r6, #3
    7bee:	4d18      	ldr	r5, [pc, #96]	; (7c50 <_dtoa_r+0x340>)
    7bf0:	e041      	b.n	7c76 <_dtoa_r+0x366>
    7bf2:	2301      	movs	r3, #1
    7bf4:	e7bc      	b.n	7b70 <_dtoa_r+0x260>
    7bf6:	2401      	movs	r4, #1
    7bf8:	2300      	movs	r3, #0
    7bfa:	9308      	str	r3, [sp, #32]
    7bfc:	940c      	str	r4, [sp, #48]	; 0x30
    7bfe:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    7c02:	9304      	str	r3, [sp, #16]
    7c04:	4699      	mov	r9, r3
    7c06:	2200      	movs	r2, #0
    7c08:	2312      	movs	r3, #18
    7c0a:	e7ac      	b.n	7b66 <_dtoa_r+0x256>
    7c0c:	2301      	movs	r3, #1
    7c0e:	930c      	str	r3, [sp, #48]	; 0x30
    7c10:	e7f5      	b.n	7bfe <_dtoa_r+0x2ee>
    7c12:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    7c14:	9304      	str	r3, [sp, #16]
    7c16:	4699      	mov	r9, r3
    7c18:	e7b4      	b.n	7b84 <_dtoa_r+0x274>
    7c1a:	bf00      	nop
    7c1c:	f3af 8000 	nop.w
    7c20:	636f4361 	.word	0x636f4361
    7c24:	3fd287a7 	.word	0x3fd287a7
    7c28:	8b60c8b3 	.word	0x8b60c8b3
    7c2c:	3fc68a28 	.word	0x3fc68a28
    7c30:	509f79fb 	.word	0x509f79fb
    7c34:	3fd34413 	.word	0x3fd34413
    7c38:	7ff00000 	.word	0x7ff00000
    7c3c:	0000b8b1 	.word	0x0000b8b1
    7c40:	0000b8a8 	.word	0x0000b8a8
    7c44:	0000b066 	.word	0x0000b066
    7c48:	3ff80000 	.word	0x3ff80000
    7c4c:	0000b958 	.word	0x0000b958
    7c50:	0000b930 	.word	0x0000b930
    7c54:	3101      	adds	r1, #1
    7c56:	6069      	str	r1, [r5, #4]
    7c58:	0052      	lsls	r2, r2, #1
    7c5a:	e798      	b.n	7b8e <_dtoa_r+0x27e>
    7c5c:	07e3      	lsls	r3, r4, #31
    7c5e:	d508      	bpl.n	7c72 <_dtoa_r+0x362>
    7c60:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    7c64:	e9d5 2300 	ldrd	r2, r3, [r5]
    7c68:	f002 f80e 	bl	9c88 <__aeabi_dmul>
    7c6c:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
    7c70:	3601      	adds	r6, #1
    7c72:	1064      	asrs	r4, r4, #1
    7c74:	3508      	adds	r5, #8
    7c76:	2c00      	cmp	r4, #0
    7c78:	d1f0      	bne.n	7c5c <_dtoa_r+0x34c>
    7c7a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
    7c7e:	e9dd 0100 	ldrd	r0, r1, [sp]
    7c82:	f002 f92b 	bl	9edc <__aeabi_ddiv>
    7c86:	e9cd 0100 	strd	r0, r1, [sp]
    7c8a:	e01a      	b.n	7cc2 <_dtoa_r+0x3b2>
    7c8c:	2602      	movs	r6, #2
    7c8e:	e7ae      	b.n	7bee <_dtoa_r+0x2de>
    7c90:	f000 809f 	beq.w	7dd2 <_dtoa_r+0x4c2>
    7c94:	f1ca 0400 	rsb	r4, sl, #0
    7c98:	4b9f      	ldr	r3, [pc, #636]	; (7f18 <_dtoa_r+0x608>)
    7c9a:	4da0      	ldr	r5, [pc, #640]	; (7f1c <_dtoa_r+0x60c>)
    7c9c:	f004 020f 	and.w	r2, r4, #15
    7ca0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
    7ca4:	e9d3 2300 	ldrd	r2, r3, [r3]
    7ca8:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
    7cac:	f001 ffec 	bl	9c88 <__aeabi_dmul>
    7cb0:	e9cd 0100 	strd	r0, r1, [sp]
    7cb4:	1124      	asrs	r4, r4, #4
    7cb6:	2300      	movs	r3, #0
    7cb8:	2602      	movs	r6, #2
    7cba:	2c00      	cmp	r4, #0
    7cbc:	d17e      	bne.n	7dbc <_dtoa_r+0x4ac>
    7cbe:	2b00      	cmp	r3, #0
    7cc0:	d1e1      	bne.n	7c86 <_dtoa_r+0x376>
    7cc2:	9b11      	ldr	r3, [sp, #68]	; 0x44
    7cc4:	2b00      	cmp	r3, #0
    7cc6:	f000 8086 	beq.w	7dd6 <_dtoa_r+0x4c6>
    7cca:	e9dd 4500 	ldrd	r4, r5, [sp]
    7cce:	2200      	movs	r2, #0
    7cd0:	4b93      	ldr	r3, [pc, #588]	; (7f20 <_dtoa_r+0x610>)
    7cd2:	4620      	mov	r0, r4
    7cd4:	4629      	mov	r1, r5
    7cd6:	f002 fa49 	bl	a16c <__aeabi_dcmplt>
    7cda:	2800      	cmp	r0, #0
    7cdc:	d07b      	beq.n	7dd6 <_dtoa_r+0x4c6>
    7cde:	f1b9 0f00 	cmp.w	r9, #0
    7ce2:	d078      	beq.n	7dd6 <_dtoa_r+0x4c6>
    7ce4:	9b04      	ldr	r3, [sp, #16]
    7ce6:	2b00      	cmp	r3, #0
    7ce8:	dd35      	ble.n	7d56 <_dtoa_r+0x446>
    7cea:	f10a 33ff 	add.w	r3, sl, #4294967295	; 0xffffffff
    7cee:	930a      	str	r3, [sp, #40]	; 0x28
    7cf0:	4620      	mov	r0, r4
    7cf2:	2200      	movs	r2, #0
    7cf4:	4b8b      	ldr	r3, [pc, #556]	; (7f24 <_dtoa_r+0x614>)
    7cf6:	4629      	mov	r1, r5
    7cf8:	f001 ffc6 	bl	9c88 <__aeabi_dmul>
    7cfc:	e9cd 0100 	strd	r0, r1, [sp]
    7d00:	9c04      	ldr	r4, [sp, #16]
    7d02:	3601      	adds	r6, #1
    7d04:	4630      	mov	r0, r6
    7d06:	f7fd f9e1 	bl	50cc <__aeabi_i2d>
    7d0a:	e9dd 2300 	ldrd	r2, r3, [sp]
    7d0e:	f001 ffbb 	bl	9c88 <__aeabi_dmul>
    7d12:	2200      	movs	r2, #0
    7d14:	4b84      	ldr	r3, [pc, #528]	; (7f28 <_dtoa_r+0x618>)
    7d16:	f7fd f88d 	bl	4e34 <__adddf3>
    7d1a:	4606      	mov	r6, r0
    7d1c:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
    7d20:	2c00      	cmp	r4, #0
    7d22:	d15c      	bne.n	7dde <_dtoa_r+0x4ce>
    7d24:	2200      	movs	r2, #0
    7d26:	4b81      	ldr	r3, [pc, #516]	; (7f2c <_dtoa_r+0x61c>)
    7d28:	e9dd 0100 	ldrd	r0, r1, [sp]
    7d2c:	f7fd f880 	bl	4e30 <__aeabi_dsub>
    7d30:	4632      	mov	r2, r6
    7d32:	463b      	mov	r3, r7
    7d34:	e9cd 0100 	strd	r0, r1, [sp]
    7d38:	f002 fa36 	bl	a1a8 <__aeabi_dcmpgt>
    7d3c:	2800      	cmp	r0, #0
    7d3e:	f040 828c 	bne.w	825a <_dtoa_r+0x94a>
    7d42:	4632      	mov	r2, r6
    7d44:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
    7d48:	e9dd 0100 	ldrd	r0, r1, [sp]
    7d4c:	f002 fa0e 	bl	a16c <__aeabi_dcmplt>
    7d50:	2800      	cmp	r0, #0
    7d52:	f040 8280 	bne.w	8256 <_dtoa_r+0x946>
    7d56:	e9dd 340e 	ldrd	r3, r4, [sp, #56]	; 0x38
    7d5a:	e9cd 3400 	strd	r3, r4, [sp]
    7d5e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    7d60:	2b00      	cmp	r3, #0
    7d62:	f2c0 814f 	blt.w	8004 <_dtoa_r+0x6f4>
    7d66:	f1ba 0f0e 	cmp.w	sl, #14
    7d6a:	f300 814b 	bgt.w	8004 <_dtoa_r+0x6f4>
    7d6e:	4b6a      	ldr	r3, [pc, #424]	; (7f18 <_dtoa_r+0x608>)
    7d70:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
    7d74:	ed93 7b00 	vldr	d7, [r3]
    7d78:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    7d7a:	2b00      	cmp	r3, #0
    7d7c:	ed8d 7b04 	vstr	d7, [sp, #16]
    7d80:	f280 80d8 	bge.w	7f34 <_dtoa_r+0x624>
    7d84:	f1b9 0f00 	cmp.w	r9, #0
    7d88:	f300 80d4 	bgt.w	7f34 <_dtoa_r+0x624>
    7d8c:	f040 8262 	bne.w	8254 <_dtoa_r+0x944>
    7d90:	2200      	movs	r2, #0
    7d92:	4b66      	ldr	r3, [pc, #408]	; (7f2c <_dtoa_r+0x61c>)
    7d94:	ec51 0b17 	vmov	r0, r1, d7
    7d98:	f001 ff76 	bl	9c88 <__aeabi_dmul>
    7d9c:	e9dd 2300 	ldrd	r2, r3, [sp]
    7da0:	f002 f9f8 	bl	a194 <__aeabi_dcmpge>
    7da4:	464c      	mov	r4, r9
    7da6:	464e      	mov	r6, r9
    7da8:	2800      	cmp	r0, #0
    7daa:	f040 823b 	bne.w	8224 <_dtoa_r+0x914>
    7dae:	9d03      	ldr	r5, [sp, #12]
    7db0:	2331      	movs	r3, #49	; 0x31
    7db2:	f805 3b01 	strb.w	r3, [r5], #1
    7db6:	f10a 0a01 	add.w	sl, sl, #1
    7dba:	e237      	b.n	822c <_dtoa_r+0x91c>
    7dbc:	07e7      	lsls	r7, r4, #31
    7dbe:	d505      	bpl.n	7dcc <_dtoa_r+0x4bc>
    7dc0:	e9d5 2300 	ldrd	r2, r3, [r5]
    7dc4:	f001 ff60 	bl	9c88 <__aeabi_dmul>
    7dc8:	3601      	adds	r6, #1
    7dca:	2301      	movs	r3, #1
    7dcc:	1064      	asrs	r4, r4, #1
    7dce:	3508      	adds	r5, #8
    7dd0:	e773      	b.n	7cba <_dtoa_r+0x3aa>
    7dd2:	2602      	movs	r6, #2
    7dd4:	e775      	b.n	7cc2 <_dtoa_r+0x3b2>
    7dd6:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
    7dda:	464c      	mov	r4, r9
    7ddc:	e792      	b.n	7d04 <_dtoa_r+0x3f4>
    7dde:	4b4e      	ldr	r3, [pc, #312]	; (7f18 <_dtoa_r+0x608>)
    7de0:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
    7de4:	e953 0102 	ldrd	r0, r1, [r3, #-8]
    7de8:	9b03      	ldr	r3, [sp, #12]
    7dea:	441c      	add	r4, r3
    7dec:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    7dee:	2b00      	cmp	r3, #0
    7df0:	d046      	beq.n	7e80 <_dtoa_r+0x570>
    7df2:	4602      	mov	r2, r0
    7df4:	460b      	mov	r3, r1
    7df6:	2000      	movs	r0, #0
    7df8:	494d      	ldr	r1, [pc, #308]	; (7f30 <_dtoa_r+0x620>)
    7dfa:	f002 f86f 	bl	9edc <__aeabi_ddiv>
    7dfe:	4632      	mov	r2, r6
    7e00:	463b      	mov	r3, r7
    7e02:	f7fd f815 	bl	4e30 <__aeabi_dsub>
    7e06:	9d03      	ldr	r5, [sp, #12]
    7e08:	4606      	mov	r6, r0
    7e0a:	460f      	mov	r7, r1
    7e0c:	e9dd 0100 	ldrd	r0, r1, [sp]
    7e10:	f002 f9ea 	bl	a1e8 <__aeabi_d2iz>
    7e14:	9012      	str	r0, [sp, #72]	; 0x48
    7e16:	f7fd f959 	bl	50cc <__aeabi_i2d>
    7e1a:	4602      	mov	r2, r0
    7e1c:	460b      	mov	r3, r1
    7e1e:	e9dd 0100 	ldrd	r0, r1, [sp]
    7e22:	f7fd f805 	bl	4e30 <__aeabi_dsub>
    7e26:	9b12      	ldr	r3, [sp, #72]	; 0x48
    7e28:	3330      	adds	r3, #48	; 0x30
    7e2a:	f805 3b01 	strb.w	r3, [r5], #1
    7e2e:	4632      	mov	r2, r6
    7e30:	463b      	mov	r3, r7
    7e32:	e9cd 0100 	strd	r0, r1, [sp]
    7e36:	f002 f999 	bl	a16c <__aeabi_dcmplt>
    7e3a:	2800      	cmp	r0, #0
    7e3c:	d160      	bne.n	7f00 <_dtoa_r+0x5f0>
    7e3e:	e9dd 2300 	ldrd	r2, r3, [sp]
    7e42:	2000      	movs	r0, #0
    7e44:	4936      	ldr	r1, [pc, #216]	; (7f20 <_dtoa_r+0x610>)
    7e46:	f7fc fff3 	bl	4e30 <__aeabi_dsub>
    7e4a:	4632      	mov	r2, r6
    7e4c:	463b      	mov	r3, r7
    7e4e:	f002 f98d 	bl	a16c <__aeabi_dcmplt>
    7e52:	2800      	cmp	r0, #0
    7e54:	f040 80b4 	bne.w	7fc0 <_dtoa_r+0x6b0>
    7e58:	42a5      	cmp	r5, r4
    7e5a:	f43f af7c 	beq.w	7d56 <_dtoa_r+0x446>
    7e5e:	2200      	movs	r2, #0
    7e60:	4b30      	ldr	r3, [pc, #192]	; (7f24 <_dtoa_r+0x614>)
    7e62:	4630      	mov	r0, r6
    7e64:	4639      	mov	r1, r7
    7e66:	f001 ff0f 	bl	9c88 <__aeabi_dmul>
    7e6a:	2200      	movs	r2, #0
    7e6c:	4606      	mov	r6, r0
    7e6e:	460f      	mov	r7, r1
    7e70:	4b2c      	ldr	r3, [pc, #176]	; (7f24 <_dtoa_r+0x614>)
    7e72:	e9dd 0100 	ldrd	r0, r1, [sp]
    7e76:	f001 ff07 	bl	9c88 <__aeabi_dmul>
    7e7a:	e9cd 0100 	strd	r0, r1, [sp]
    7e7e:	e7c5      	b.n	7e0c <_dtoa_r+0x4fc>
    7e80:	4632      	mov	r2, r6
    7e82:	463b      	mov	r3, r7
    7e84:	f001 ff00 	bl	9c88 <__aeabi_dmul>
    7e88:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
    7e8c:	9e03      	ldr	r6, [sp, #12]
    7e8e:	4625      	mov	r5, r4
    7e90:	e9dd 0100 	ldrd	r0, r1, [sp]
    7e94:	f002 f9a8 	bl	a1e8 <__aeabi_d2iz>
    7e98:	4607      	mov	r7, r0
    7e9a:	f7fd f917 	bl	50cc <__aeabi_i2d>
    7e9e:	3730      	adds	r7, #48	; 0x30
    7ea0:	4602      	mov	r2, r0
    7ea2:	460b      	mov	r3, r1
    7ea4:	e9dd 0100 	ldrd	r0, r1, [sp]
    7ea8:	f7fc ffc2 	bl	4e30 <__aeabi_dsub>
    7eac:	f806 7b01 	strb.w	r7, [r6], #1
    7eb0:	42a6      	cmp	r6, r4
    7eb2:	e9cd 0100 	strd	r0, r1, [sp]
    7eb6:	f04f 0200 	mov.w	r2, #0
    7eba:	d126      	bne.n	7f0a <_dtoa_r+0x5fa>
    7ebc:	4b1c      	ldr	r3, [pc, #112]	; (7f30 <_dtoa_r+0x620>)
    7ebe:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
    7ec2:	f7fc ffb7 	bl	4e34 <__adddf3>
    7ec6:	4602      	mov	r2, r0
    7ec8:	460b      	mov	r3, r1
    7eca:	e9dd 0100 	ldrd	r0, r1, [sp]
    7ece:	f002 f96b 	bl	a1a8 <__aeabi_dcmpgt>
    7ed2:	2800      	cmp	r0, #0
    7ed4:	d174      	bne.n	7fc0 <_dtoa_r+0x6b0>
    7ed6:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
    7eda:	2000      	movs	r0, #0
    7edc:	4914      	ldr	r1, [pc, #80]	; (7f30 <_dtoa_r+0x620>)
    7ede:	f7fc ffa7 	bl	4e30 <__aeabi_dsub>
    7ee2:	4602      	mov	r2, r0
    7ee4:	460b      	mov	r3, r1
    7ee6:	e9dd 0100 	ldrd	r0, r1, [sp]
    7eea:	f002 f93f 	bl	a16c <__aeabi_dcmplt>
    7eee:	2800      	cmp	r0, #0
    7ef0:	f43f af31 	beq.w	7d56 <_dtoa_r+0x446>
    7ef4:	f815 3c01 	ldrb.w	r3, [r5, #-1]
    7ef8:	2b30      	cmp	r3, #48	; 0x30
    7efa:	f105 32ff 	add.w	r2, r5, #4294967295	; 0xffffffff
    7efe:	d002      	beq.n	7f06 <_dtoa_r+0x5f6>
    7f00:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
    7f04:	e04a      	b.n	7f9c <_dtoa_r+0x68c>
    7f06:	4615      	mov	r5, r2
    7f08:	e7f4      	b.n	7ef4 <_dtoa_r+0x5e4>
    7f0a:	4b06      	ldr	r3, [pc, #24]	; (7f24 <_dtoa_r+0x614>)
    7f0c:	f001 febc 	bl	9c88 <__aeabi_dmul>
    7f10:	e9cd 0100 	strd	r0, r1, [sp]
    7f14:	e7bc      	b.n	7e90 <_dtoa_r+0x580>
    7f16:	bf00      	nop
    7f18:	0000b958 	.word	0x0000b958
    7f1c:	0000b930 	.word	0x0000b930
    7f20:	3ff00000 	.word	0x3ff00000
    7f24:	40240000 	.word	0x40240000
    7f28:	401c0000 	.word	0x401c0000
    7f2c:	40140000 	.word	0x40140000
    7f30:	3fe00000 	.word	0x3fe00000
    7f34:	e9dd 6700 	ldrd	r6, r7, [sp]
    7f38:	9d03      	ldr	r5, [sp, #12]
    7f3a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    7f3e:	4630      	mov	r0, r6
    7f40:	4639      	mov	r1, r7
    7f42:	f001 ffcb 	bl	9edc <__aeabi_ddiv>
    7f46:	f002 f94f 	bl	a1e8 <__aeabi_d2iz>
    7f4a:	4604      	mov	r4, r0
    7f4c:	f7fd f8be 	bl	50cc <__aeabi_i2d>
    7f50:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    7f54:	f001 fe98 	bl	9c88 <__aeabi_dmul>
    7f58:	4602      	mov	r2, r0
    7f5a:	460b      	mov	r3, r1
    7f5c:	4630      	mov	r0, r6
    7f5e:	4639      	mov	r1, r7
    7f60:	f104 0630 	add.w	r6, r4, #48	; 0x30
    7f64:	f7fc ff64 	bl	4e30 <__aeabi_dsub>
    7f68:	f805 6b01 	strb.w	r6, [r5], #1
    7f6c:	9e03      	ldr	r6, [sp, #12]
    7f6e:	1bae      	subs	r6, r5, r6
    7f70:	45b1      	cmp	r9, r6
    7f72:	4602      	mov	r2, r0
    7f74:	460b      	mov	r3, r1
    7f76:	d138      	bne.n	7fea <_dtoa_r+0x6da>
    7f78:	f7fc ff5c 	bl	4e34 <__adddf3>
    7f7c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    7f80:	4606      	mov	r6, r0
    7f82:	460f      	mov	r7, r1
    7f84:	f002 f910 	bl	a1a8 <__aeabi_dcmpgt>
    7f88:	b9c0      	cbnz	r0, 7fbc <_dtoa_r+0x6ac>
    7f8a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    7f8e:	4630      	mov	r0, r6
    7f90:	4639      	mov	r1, r7
    7f92:	f002 f8e1 	bl	a158 <__aeabi_dcmpeq>
    7f96:	b108      	cbz	r0, 7f9c <_dtoa_r+0x68c>
    7f98:	07e1      	lsls	r1, r4, #31
    7f9a:	d40f      	bmi.n	7fbc <_dtoa_r+0x6ac>
    7f9c:	4641      	mov	r1, r8
    7f9e:	4658      	mov	r0, fp
    7fa0:	f001 f85e 	bl	9060 <_Bfree>
    7fa4:	2300      	movs	r3, #0
    7fa6:	9a14      	ldr	r2, [sp, #80]	; 0x50
    7fa8:	702b      	strb	r3, [r5, #0]
    7faa:	f10a 0301 	add.w	r3, sl, #1
    7fae:	6013      	str	r3, [r2, #0]
    7fb0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    7fb2:	2b00      	cmp	r3, #0
    7fb4:	f43f acf4 	beq.w	79a0 <_dtoa_r+0x90>
    7fb8:	601d      	str	r5, [r3, #0]
    7fba:	e4f1      	b.n	79a0 <_dtoa_r+0x90>
    7fbc:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
    7fc0:	f815 2c01 	ldrb.w	r2, [r5, #-1]
    7fc4:	2a39      	cmp	r2, #57	; 0x39
    7fc6:	f105 33ff 	add.w	r3, r5, #4294967295	; 0xffffffff
    7fca:	d108      	bne.n	7fde <_dtoa_r+0x6ce>
    7fcc:	9a03      	ldr	r2, [sp, #12]
    7fce:	429a      	cmp	r2, r3
    7fd0:	d109      	bne.n	7fe6 <_dtoa_r+0x6d6>
    7fd2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    7fd4:	9903      	ldr	r1, [sp, #12]
    7fd6:	3201      	adds	r2, #1
    7fd8:	920a      	str	r2, [sp, #40]	; 0x28
    7fda:	2230      	movs	r2, #48	; 0x30
    7fdc:	700a      	strb	r2, [r1, #0]
    7fde:	781a      	ldrb	r2, [r3, #0]
    7fe0:	3201      	adds	r2, #1
    7fe2:	701a      	strb	r2, [r3, #0]
    7fe4:	e78c      	b.n	7f00 <_dtoa_r+0x5f0>
    7fe6:	461d      	mov	r5, r3
    7fe8:	e7ea      	b.n	7fc0 <_dtoa_r+0x6b0>
    7fea:	2200      	movs	r2, #0
    7fec:	4b9d      	ldr	r3, [pc, #628]	; (8264 <_dtoa_r+0x954>)
    7fee:	f001 fe4b 	bl	9c88 <__aeabi_dmul>
    7ff2:	2200      	movs	r2, #0
    7ff4:	2300      	movs	r3, #0
    7ff6:	4606      	mov	r6, r0
    7ff8:	460f      	mov	r7, r1
    7ffa:	f002 f8ad 	bl	a158 <__aeabi_dcmpeq>
    7ffe:	2800      	cmp	r0, #0
    8000:	d09b      	beq.n	7f3a <_dtoa_r+0x62a>
    8002:	e7cb      	b.n	7f9c <_dtoa_r+0x68c>
    8004:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    8006:	2a00      	cmp	r2, #0
    8008:	f000 80cb 	beq.w	81a2 <_dtoa_r+0x892>
    800c:	9a08      	ldr	r2, [sp, #32]
    800e:	2a01      	cmp	r2, #1
    8010:	f300 80ae 	bgt.w	8170 <_dtoa_r+0x860>
    8014:	9a15      	ldr	r2, [sp, #84]	; 0x54
    8016:	2a00      	cmp	r2, #0
    8018:	f000 80a6 	beq.w	8168 <_dtoa_r+0x858>
    801c:	f203 4333 	addw	r3, r3, #1075	; 0x433
    8020:	9c09      	ldr	r4, [sp, #36]	; 0x24
    8022:	9d06      	ldr	r5, [sp, #24]
    8024:	9a06      	ldr	r2, [sp, #24]
    8026:	441a      	add	r2, r3
    8028:	9206      	str	r2, [sp, #24]
    802a:	9a07      	ldr	r2, [sp, #28]
    802c:	2101      	movs	r1, #1
    802e:	441a      	add	r2, r3
    8030:	4658      	mov	r0, fp
    8032:	9207      	str	r2, [sp, #28]
    8034:	f001 f8f4 	bl	9220 <__i2b>
    8038:	4606      	mov	r6, r0
    803a:	2d00      	cmp	r5, #0
    803c:	dd0c      	ble.n	8058 <_dtoa_r+0x748>
    803e:	9b07      	ldr	r3, [sp, #28]
    8040:	2b00      	cmp	r3, #0
    8042:	dd09      	ble.n	8058 <_dtoa_r+0x748>
    8044:	42ab      	cmp	r3, r5
    8046:	9a06      	ldr	r2, [sp, #24]
    8048:	bfa8      	it	ge
    804a:	462b      	movge	r3, r5
    804c:	1ad2      	subs	r2, r2, r3
    804e:	9206      	str	r2, [sp, #24]
    8050:	9a07      	ldr	r2, [sp, #28]
    8052:	1aed      	subs	r5, r5, r3
    8054:	1ad3      	subs	r3, r2, r3
    8056:	9307      	str	r3, [sp, #28]
    8058:	9b09      	ldr	r3, [sp, #36]	; 0x24
    805a:	b1f3      	cbz	r3, 809a <_dtoa_r+0x78a>
    805c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    805e:	2b00      	cmp	r3, #0
    8060:	f000 80a3 	beq.w	81aa <_dtoa_r+0x89a>
    8064:	2c00      	cmp	r4, #0
    8066:	dd10      	ble.n	808a <_dtoa_r+0x77a>
    8068:	4631      	mov	r1, r6
    806a:	4622      	mov	r2, r4
    806c:	4658      	mov	r0, fp
    806e:	f001 f971 	bl	9354 <__pow5mult>
    8072:	4642      	mov	r2, r8
    8074:	4601      	mov	r1, r0
    8076:	4606      	mov	r6, r0
    8078:	4658      	mov	r0, fp
    807a:	f001 f8da 	bl	9232 <__multiply>
    807e:	4641      	mov	r1, r8
    8080:	4607      	mov	r7, r0
    8082:	4658      	mov	r0, fp
    8084:	f000 ffec 	bl	9060 <_Bfree>
    8088:	46b8      	mov	r8, r7
    808a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    808c:	1b1a      	subs	r2, r3, r4
    808e:	d004      	beq.n	809a <_dtoa_r+0x78a>
    8090:	4641      	mov	r1, r8
    8092:	4658      	mov	r0, fp
    8094:	f001 f95e 	bl	9354 <__pow5mult>
    8098:	4680      	mov	r8, r0
    809a:	2101      	movs	r1, #1
    809c:	4658      	mov	r0, fp
    809e:	f001 f8bf 	bl	9220 <__i2b>
    80a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
    80a4:	2b00      	cmp	r3, #0
    80a6:	4604      	mov	r4, r0
    80a8:	f340 8081 	ble.w	81ae <_dtoa_r+0x89e>
    80ac:	461a      	mov	r2, r3
    80ae:	4601      	mov	r1, r0
    80b0:	4658      	mov	r0, fp
    80b2:	f001 f94f 	bl	9354 <__pow5mult>
    80b6:	9b08      	ldr	r3, [sp, #32]
    80b8:	2b01      	cmp	r3, #1
    80ba:	4604      	mov	r4, r0
    80bc:	dd7a      	ble.n	81b4 <_dtoa_r+0x8a4>
    80be:	2700      	movs	r7, #0
    80c0:	6923      	ldr	r3, [r4, #16]
    80c2:	eb04 0383 	add.w	r3, r4, r3, lsl #2
    80c6:	6918      	ldr	r0, [r3, #16]
    80c8:	f001 f85a 	bl	9180 <__hi0bits>
    80cc:	f1c0 0020 	rsb	r0, r0, #32
    80d0:	9b07      	ldr	r3, [sp, #28]
    80d2:	4418      	add	r0, r3
    80d4:	f010 001f 	ands.w	r0, r0, #31
    80d8:	f000 808b 	beq.w	81f2 <_dtoa_r+0x8e2>
    80dc:	f1c0 0320 	rsb	r3, r0, #32
    80e0:	2b04      	cmp	r3, #4
    80e2:	f340 8084 	ble.w	81ee <_dtoa_r+0x8de>
    80e6:	f1c0 001c 	rsb	r0, r0, #28
    80ea:	9b06      	ldr	r3, [sp, #24]
    80ec:	4403      	add	r3, r0
    80ee:	9306      	str	r3, [sp, #24]
    80f0:	9b07      	ldr	r3, [sp, #28]
    80f2:	4403      	add	r3, r0
    80f4:	4405      	add	r5, r0
    80f6:	9307      	str	r3, [sp, #28]
    80f8:	9b06      	ldr	r3, [sp, #24]
    80fa:	2b00      	cmp	r3, #0
    80fc:	dd05      	ble.n	810a <_dtoa_r+0x7fa>
    80fe:	4641      	mov	r1, r8
    8100:	461a      	mov	r2, r3
    8102:	4658      	mov	r0, fp
    8104:	f001 f974 	bl	93f0 <__lshift>
    8108:	4680      	mov	r8, r0
    810a:	9b07      	ldr	r3, [sp, #28]
    810c:	2b00      	cmp	r3, #0
    810e:	dd05      	ble.n	811c <_dtoa_r+0x80c>
    8110:	4621      	mov	r1, r4
    8112:	461a      	mov	r2, r3
    8114:	4658      	mov	r0, fp
    8116:	f001 f96b 	bl	93f0 <__lshift>
    811a:	4604      	mov	r4, r0
    811c:	9b11      	ldr	r3, [sp, #68]	; 0x44
    811e:	2b00      	cmp	r3, #0
    8120:	d069      	beq.n	81f6 <_dtoa_r+0x8e6>
    8122:	4621      	mov	r1, r4
    8124:	4640      	mov	r0, r8
    8126:	f001 f9b6 	bl	9496 <__mcmp>
    812a:	2800      	cmp	r0, #0
    812c:	da63      	bge.n	81f6 <_dtoa_r+0x8e6>
    812e:	2300      	movs	r3, #0
    8130:	4641      	mov	r1, r8
    8132:	220a      	movs	r2, #10
    8134:	4658      	mov	r0, fp
    8136:	f000 ffaa 	bl	908e <__multadd>
    813a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    813c:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
    8140:	4680      	mov	r8, r0
    8142:	2b00      	cmp	r3, #0
    8144:	f000 817c 	beq.w	8440 <_dtoa_r+0xb30>
    8148:	2300      	movs	r3, #0
    814a:	4631      	mov	r1, r6
    814c:	220a      	movs	r2, #10
    814e:	4658      	mov	r0, fp
    8150:	f000 ff9d 	bl	908e <__multadd>
    8154:	9b04      	ldr	r3, [sp, #16]
    8156:	2b00      	cmp	r3, #0
    8158:	4606      	mov	r6, r0
    815a:	f300 808b 	bgt.w	8274 <_dtoa_r+0x964>
    815e:	9b08      	ldr	r3, [sp, #32]
    8160:	2b02      	cmp	r3, #2
    8162:	f340 8087 	ble.w	8274 <_dtoa_r+0x964>
    8166:	e04e      	b.n	8206 <_dtoa_r+0x8f6>
    8168:	9b16      	ldr	r3, [sp, #88]	; 0x58
    816a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
    816e:	e757      	b.n	8020 <_dtoa_r+0x710>
    8170:	9b09      	ldr	r3, [sp, #36]	; 0x24
    8172:	f109 34ff 	add.w	r4, r9, #4294967295	; 0xffffffff
    8176:	42a3      	cmp	r3, r4
    8178:	bfbf      	itttt	lt
    817a:	9b09      	ldrlt	r3, [sp, #36]	; 0x24
    817c:	9409      	strlt	r4, [sp, #36]	; 0x24
    817e:	1ae2      	sublt	r2, r4, r3
    8180:	9b10      	ldrlt	r3, [sp, #64]	; 0x40
    8182:	bfbb      	ittet	lt
    8184:	189b      	addlt	r3, r3, r2
    8186:	9310      	strlt	r3, [sp, #64]	; 0x40
    8188:	1b1c      	subge	r4, r3, r4
    818a:	2400      	movlt	r4, #0
    818c:	f1b9 0f00 	cmp.w	r9, #0
    8190:	bfb5      	itete	lt
    8192:	9b06      	ldrlt	r3, [sp, #24]
    8194:	9d06      	ldrge	r5, [sp, #24]
    8196:	eba3 0509 	sublt.w	r5, r3, r9
    819a:	464b      	movge	r3, r9
    819c:	bfb8      	it	lt
    819e:	2300      	movlt	r3, #0
    81a0:	e740      	b.n	8024 <_dtoa_r+0x714>
    81a2:	9c09      	ldr	r4, [sp, #36]	; 0x24
    81a4:	9d06      	ldr	r5, [sp, #24]
    81a6:	9e0c      	ldr	r6, [sp, #48]	; 0x30
    81a8:	e747      	b.n	803a <_dtoa_r+0x72a>
    81aa:	9a09      	ldr	r2, [sp, #36]	; 0x24
    81ac:	e770      	b.n	8090 <_dtoa_r+0x780>
    81ae:	9b08      	ldr	r3, [sp, #32]
    81b0:	2b01      	cmp	r3, #1
    81b2:	dc18      	bgt.n	81e6 <_dtoa_r+0x8d6>
    81b4:	9b00      	ldr	r3, [sp, #0]
    81b6:	b9b3      	cbnz	r3, 81e6 <_dtoa_r+0x8d6>
    81b8:	9b01      	ldr	r3, [sp, #4]
    81ba:	f3c3 0313 	ubfx	r3, r3, #0, #20
    81be:	b9a3      	cbnz	r3, 81ea <_dtoa_r+0x8da>
    81c0:	9b01      	ldr	r3, [sp, #4]
    81c2:	f023 4700 	bic.w	r7, r3, #2147483648	; 0x80000000
    81c6:	0d3f      	lsrs	r7, r7, #20
    81c8:	053f      	lsls	r7, r7, #20
    81ca:	b137      	cbz	r7, 81da <_dtoa_r+0x8ca>
    81cc:	9b06      	ldr	r3, [sp, #24]
    81ce:	3301      	adds	r3, #1
    81d0:	9306      	str	r3, [sp, #24]
    81d2:	9b07      	ldr	r3, [sp, #28]
    81d4:	3301      	adds	r3, #1
    81d6:	9307      	str	r3, [sp, #28]
    81d8:	2701      	movs	r7, #1
    81da:	9b10      	ldr	r3, [sp, #64]	; 0x40
    81dc:	2b00      	cmp	r3, #0
    81de:	f47f af6f 	bne.w	80c0 <_dtoa_r+0x7b0>
    81e2:	2001      	movs	r0, #1
    81e4:	e774      	b.n	80d0 <_dtoa_r+0x7c0>
    81e6:	2700      	movs	r7, #0
    81e8:	e7f7      	b.n	81da <_dtoa_r+0x8ca>
    81ea:	9f00      	ldr	r7, [sp, #0]
    81ec:	e7f5      	b.n	81da <_dtoa_r+0x8ca>
    81ee:	d083      	beq.n	80f8 <_dtoa_r+0x7e8>
    81f0:	4618      	mov	r0, r3
    81f2:	301c      	adds	r0, #28
    81f4:	e779      	b.n	80ea <_dtoa_r+0x7da>
    81f6:	f1b9 0f00 	cmp.w	r9, #0
    81fa:	dc35      	bgt.n	8268 <_dtoa_r+0x958>
    81fc:	9b08      	ldr	r3, [sp, #32]
    81fe:	2b02      	cmp	r3, #2
    8200:	dd32      	ble.n	8268 <_dtoa_r+0x958>
    8202:	f8cd 9010 	str.w	r9, [sp, #16]
    8206:	9b04      	ldr	r3, [sp, #16]
    8208:	b963      	cbnz	r3, 8224 <_dtoa_r+0x914>
    820a:	4621      	mov	r1, r4
    820c:	2205      	movs	r2, #5
    820e:	4658      	mov	r0, fp
    8210:	f000 ff3d 	bl	908e <__multadd>
    8214:	4601      	mov	r1, r0
    8216:	4604      	mov	r4, r0
    8218:	4640      	mov	r0, r8
    821a:	f001 f93c 	bl	9496 <__mcmp>
    821e:	2800      	cmp	r0, #0
    8220:	f73f adc5 	bgt.w	7dae <_dtoa_r+0x49e>
    8224:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    8226:	9d03      	ldr	r5, [sp, #12]
    8228:	ea6f 0a03 	mvn.w	sl, r3
    822c:	2700      	movs	r7, #0
    822e:	4621      	mov	r1, r4
    8230:	4658      	mov	r0, fp
    8232:	f000 ff15 	bl	9060 <_Bfree>
    8236:	2e00      	cmp	r6, #0
    8238:	f43f aeb0 	beq.w	7f9c <_dtoa_r+0x68c>
    823c:	b12f      	cbz	r7, 824a <_dtoa_r+0x93a>
    823e:	42b7      	cmp	r7, r6
    8240:	d003      	beq.n	824a <_dtoa_r+0x93a>
    8242:	4639      	mov	r1, r7
    8244:	4658      	mov	r0, fp
    8246:	f000 ff0b 	bl	9060 <_Bfree>
    824a:	4631      	mov	r1, r6
    824c:	4658      	mov	r0, fp
    824e:	f000 ff07 	bl	9060 <_Bfree>
    8252:	e6a3      	b.n	7f9c <_dtoa_r+0x68c>
    8254:	2400      	movs	r4, #0
    8256:	4626      	mov	r6, r4
    8258:	e7e4      	b.n	8224 <_dtoa_r+0x914>
    825a:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
    825e:	4626      	mov	r6, r4
    8260:	e5a5      	b.n	7dae <_dtoa_r+0x49e>
    8262:	bf00      	nop
    8264:	40240000 	.word	0x40240000
    8268:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    826a:	f8cd 9010 	str.w	r9, [sp, #16]
    826e:	2b00      	cmp	r3, #0
    8270:	f000 80ed 	beq.w	844e <_dtoa_r+0xb3e>
    8274:	2d00      	cmp	r5, #0
    8276:	dd05      	ble.n	8284 <_dtoa_r+0x974>
    8278:	4631      	mov	r1, r6
    827a:	462a      	mov	r2, r5
    827c:	4658      	mov	r0, fp
    827e:	f001 f8b7 	bl	93f0 <__lshift>
    8282:	4606      	mov	r6, r0
    8284:	2f00      	cmp	r7, #0
    8286:	d056      	beq.n	8336 <_dtoa_r+0xa26>
    8288:	6871      	ldr	r1, [r6, #4]
    828a:	4658      	mov	r0, fp
    828c:	f000 feb4 	bl	8ff8 <_Balloc>
    8290:	6932      	ldr	r2, [r6, #16]
    8292:	3202      	adds	r2, #2
    8294:	4605      	mov	r5, r0
    8296:	0092      	lsls	r2, r2, #2
    8298:	f106 010c 	add.w	r1, r6, #12
    829c:	300c      	adds	r0, #12
    829e:	f7fd f995 	bl	55cc <memcpy>
    82a2:	2201      	movs	r2, #1
    82a4:	4629      	mov	r1, r5
    82a6:	4658      	mov	r0, fp
    82a8:	f001 f8a2 	bl	93f0 <__lshift>
    82ac:	9b03      	ldr	r3, [sp, #12]
    82ae:	f103 0901 	add.w	r9, r3, #1
    82b2:	e9dd 2303 	ldrd	r2, r3, [sp, #12]
    82b6:	4413      	add	r3, r2
    82b8:	9309      	str	r3, [sp, #36]	; 0x24
    82ba:	9b00      	ldr	r3, [sp, #0]
    82bc:	f003 0301 	and.w	r3, r3, #1
    82c0:	4637      	mov	r7, r6
    82c2:	9307      	str	r3, [sp, #28]
    82c4:	4606      	mov	r6, r0
    82c6:	f109 33ff 	add.w	r3, r9, #4294967295	; 0xffffffff
    82ca:	4621      	mov	r1, r4
    82cc:	4640      	mov	r0, r8
    82ce:	9300      	str	r3, [sp, #0]
    82d0:	f7ff fa92 	bl	77f8 <quorem>
    82d4:	4603      	mov	r3, r0
    82d6:	3330      	adds	r3, #48	; 0x30
    82d8:	9004      	str	r0, [sp, #16]
    82da:	4639      	mov	r1, r7
    82dc:	4640      	mov	r0, r8
    82de:	930a      	str	r3, [sp, #40]	; 0x28
    82e0:	f001 f8d9 	bl	9496 <__mcmp>
    82e4:	4632      	mov	r2, r6
    82e6:	9006      	str	r0, [sp, #24]
    82e8:	4621      	mov	r1, r4
    82ea:	4658      	mov	r0, fp
    82ec:	f001 f8ed 	bl	94ca <__mdiff>
    82f0:	68c2      	ldr	r2, [r0, #12]
    82f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    82f4:	4605      	mov	r5, r0
    82f6:	bb02      	cbnz	r2, 833a <_dtoa_r+0xa2a>
    82f8:	4601      	mov	r1, r0
    82fa:	4640      	mov	r0, r8
    82fc:	f001 f8cb 	bl	9496 <__mcmp>
    8300:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8302:	4602      	mov	r2, r0
    8304:	4629      	mov	r1, r5
    8306:	4658      	mov	r0, fp
    8308:	920c      	str	r2, [sp, #48]	; 0x30
    830a:	930a      	str	r3, [sp, #40]	; 0x28
    830c:	f000 fea8 	bl	9060 <_Bfree>
    8310:	9b08      	ldr	r3, [sp, #32]
    8312:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    8314:	ea43 0102 	orr.w	r1, r3, r2
    8318:	9b07      	ldr	r3, [sp, #28]
    831a:	430b      	orrs	r3, r1
    831c:	464d      	mov	r5, r9
    831e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8320:	d10d      	bne.n	833e <_dtoa_r+0xa2e>
    8322:	2b39      	cmp	r3, #57	; 0x39
    8324:	d027      	beq.n	8376 <_dtoa_r+0xa66>
    8326:	9a06      	ldr	r2, [sp, #24]
    8328:	2a00      	cmp	r2, #0
    832a:	dd01      	ble.n	8330 <_dtoa_r+0xa20>
    832c:	9b04      	ldr	r3, [sp, #16]
    832e:	3331      	adds	r3, #49	; 0x31
    8330:	9a00      	ldr	r2, [sp, #0]
    8332:	7013      	strb	r3, [r2, #0]
    8334:	e77b      	b.n	822e <_dtoa_r+0x91e>
    8336:	4630      	mov	r0, r6
    8338:	e7b8      	b.n	82ac <_dtoa_r+0x99c>
    833a:	2201      	movs	r2, #1
    833c:	e7e2      	b.n	8304 <_dtoa_r+0x9f4>
    833e:	9906      	ldr	r1, [sp, #24]
    8340:	2900      	cmp	r1, #0
    8342:	db04      	blt.n	834e <_dtoa_r+0xa3e>
    8344:	9808      	ldr	r0, [sp, #32]
    8346:	4301      	orrs	r1, r0
    8348:	9807      	ldr	r0, [sp, #28]
    834a:	4301      	orrs	r1, r0
    834c:	d11e      	bne.n	838c <_dtoa_r+0xa7c>
    834e:	2a00      	cmp	r2, #0
    8350:	ddee      	ble.n	8330 <_dtoa_r+0xa20>
    8352:	4641      	mov	r1, r8
    8354:	2201      	movs	r2, #1
    8356:	4658      	mov	r0, fp
    8358:	9306      	str	r3, [sp, #24]
    835a:	f001 f849 	bl	93f0 <__lshift>
    835e:	4621      	mov	r1, r4
    8360:	4680      	mov	r8, r0
    8362:	f001 f898 	bl	9496 <__mcmp>
    8366:	2800      	cmp	r0, #0
    8368:	9b06      	ldr	r3, [sp, #24]
    836a:	dc02      	bgt.n	8372 <_dtoa_r+0xa62>
    836c:	d1e0      	bne.n	8330 <_dtoa_r+0xa20>
    836e:	07da      	lsls	r2, r3, #31
    8370:	d5de      	bpl.n	8330 <_dtoa_r+0xa20>
    8372:	2b39      	cmp	r3, #57	; 0x39
    8374:	d1da      	bne.n	832c <_dtoa_r+0xa1c>
    8376:	9a00      	ldr	r2, [sp, #0]
    8378:	2339      	movs	r3, #57	; 0x39
    837a:	7013      	strb	r3, [r2, #0]
    837c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
    8380:	2b39      	cmp	r3, #57	; 0x39
    8382:	f105 32ff 	add.w	r2, r5, #4294967295	; 0xffffffff
    8386:	d047      	beq.n	8418 <_dtoa_r+0xb08>
    8388:	3301      	adds	r3, #1
    838a:	e7d2      	b.n	8332 <_dtoa_r+0xa22>
    838c:	2a00      	cmp	r2, #0
    838e:	dd03      	ble.n	8398 <_dtoa_r+0xa88>
    8390:	2b39      	cmp	r3, #57	; 0x39
    8392:	d0f0      	beq.n	8376 <_dtoa_r+0xa66>
    8394:	3301      	adds	r3, #1
    8396:	e7cb      	b.n	8330 <_dtoa_r+0xa20>
    8398:	9a09      	ldr	r2, [sp, #36]	; 0x24
    839a:	f809 3c01 	strb.w	r3, [r9, #-1]
    839e:	4591      	cmp	r9, r2
    83a0:	d021      	beq.n	83e6 <_dtoa_r+0xad6>
    83a2:	4641      	mov	r1, r8
    83a4:	2300      	movs	r3, #0
    83a6:	220a      	movs	r2, #10
    83a8:	4658      	mov	r0, fp
    83aa:	f000 fe70 	bl	908e <__multadd>
    83ae:	42b7      	cmp	r7, r6
    83b0:	4680      	mov	r8, r0
    83b2:	f04f 0300 	mov.w	r3, #0
    83b6:	f04f 020a 	mov.w	r2, #10
    83ba:	4639      	mov	r1, r7
    83bc:	4658      	mov	r0, fp
    83be:	d106      	bne.n	83ce <_dtoa_r+0xabe>
    83c0:	f000 fe65 	bl	908e <__multadd>
    83c4:	4607      	mov	r7, r0
    83c6:	4606      	mov	r6, r0
    83c8:	f109 0901 	add.w	r9, r9, #1
    83cc:	e77b      	b.n	82c6 <_dtoa_r+0x9b6>
    83ce:	f000 fe5e 	bl	908e <__multadd>
    83d2:	4631      	mov	r1, r6
    83d4:	4607      	mov	r7, r0
    83d6:	2300      	movs	r3, #0
    83d8:	220a      	movs	r2, #10
    83da:	4658      	mov	r0, fp
    83dc:	f000 fe57 	bl	908e <__multadd>
    83e0:	4606      	mov	r6, r0
    83e2:	e7f1      	b.n	83c8 <_dtoa_r+0xab8>
    83e4:	2700      	movs	r7, #0
    83e6:	4641      	mov	r1, r8
    83e8:	2201      	movs	r2, #1
    83ea:	4658      	mov	r0, fp
    83ec:	9300      	str	r3, [sp, #0]
    83ee:	f000 ffff 	bl	93f0 <__lshift>
    83f2:	4621      	mov	r1, r4
    83f4:	4680      	mov	r8, r0
    83f6:	f001 f84e 	bl	9496 <__mcmp>
    83fa:	2800      	cmp	r0, #0
    83fc:	dcbe      	bgt.n	837c <_dtoa_r+0xa6c>
    83fe:	d102      	bne.n	8406 <_dtoa_r+0xaf6>
    8400:	9b00      	ldr	r3, [sp, #0]
    8402:	07db      	lsls	r3, r3, #31
    8404:	d4ba      	bmi.n	837c <_dtoa_r+0xa6c>
    8406:	f815 3c01 	ldrb.w	r3, [r5, #-1]
    840a:	2b30      	cmp	r3, #48	; 0x30
    840c:	f105 32ff 	add.w	r2, r5, #4294967295	; 0xffffffff
    8410:	f47f af0d 	bne.w	822e <_dtoa_r+0x91e>
    8414:	4615      	mov	r5, r2
    8416:	e7f6      	b.n	8406 <_dtoa_r+0xaf6>
    8418:	9b03      	ldr	r3, [sp, #12]
    841a:	4293      	cmp	r3, r2
    841c:	d104      	bne.n	8428 <_dtoa_r+0xb18>
    841e:	f10a 0a01 	add.w	sl, sl, #1
    8422:	2331      	movs	r3, #49	; 0x31
    8424:	9a03      	ldr	r2, [sp, #12]
    8426:	e784      	b.n	8332 <_dtoa_r+0xa22>
    8428:	4615      	mov	r5, r2
    842a:	e7a7      	b.n	837c <_dtoa_r+0xa6c>
    842c:	4b13      	ldr	r3, [pc, #76]	; (847c <_dtoa_r+0xb6c>)
    842e:	f7ff bad6 	b.w	79de <_dtoa_r+0xce>
    8432:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    8434:	2b00      	cmp	r3, #0
    8436:	f47f aaae 	bne.w	7996 <_dtoa_r+0x86>
    843a:	4b11      	ldr	r3, [pc, #68]	; (8480 <_dtoa_r+0xb70>)
    843c:	f7ff bacf 	b.w	79de <_dtoa_r+0xce>
    8440:	9b04      	ldr	r3, [sp, #16]
    8442:	2b00      	cmp	r3, #0
    8444:	dc03      	bgt.n	844e <_dtoa_r+0xb3e>
    8446:	9b08      	ldr	r3, [sp, #32]
    8448:	2b02      	cmp	r3, #2
    844a:	f73f aedc 	bgt.w	8206 <_dtoa_r+0x8f6>
    844e:	9d03      	ldr	r5, [sp, #12]
    8450:	4621      	mov	r1, r4
    8452:	4640      	mov	r0, r8
    8454:	f7ff f9d0 	bl	77f8 <quorem>
    8458:	f100 0330 	add.w	r3, r0, #48	; 0x30
    845c:	f805 3b01 	strb.w	r3, [r5], #1
    8460:	9a03      	ldr	r2, [sp, #12]
    8462:	9904      	ldr	r1, [sp, #16]
    8464:	1aaa      	subs	r2, r5, r2
    8466:	4291      	cmp	r1, r2
    8468:	ddbc      	ble.n	83e4 <_dtoa_r+0xad4>
    846a:	4641      	mov	r1, r8
    846c:	2300      	movs	r3, #0
    846e:	220a      	movs	r2, #10
    8470:	4658      	mov	r0, fp
    8472:	f000 fe0c 	bl	908e <__multadd>
    8476:	4680      	mov	r8, r0
    8478:	e7ea      	b.n	8450 <_dtoa_r+0xb40>
    847a:	bf00      	nop
    847c:	0000b065 	.word	0x0000b065
    8480:	0000b8a8 	.word	0x0000b8a8

00008484 <__sflush_r>:
__sflush_r():
    8484:	898a      	ldrh	r2, [r1, #12]
    8486:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    848a:	4605      	mov	r5, r0
    848c:	0710      	lsls	r0, r2, #28
    848e:	460c      	mov	r4, r1
    8490:	d458      	bmi.n	8544 <__sflush_r+0xc0>
    8492:	684b      	ldr	r3, [r1, #4]
    8494:	2b00      	cmp	r3, #0
    8496:	dc05      	bgt.n	84a4 <__sflush_r+0x20>
    8498:	6c0b      	ldr	r3, [r1, #64]	; 0x40
    849a:	2b00      	cmp	r3, #0
    849c:	dc02      	bgt.n	84a4 <__sflush_r+0x20>
    849e:	2000      	movs	r0, #0
    84a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    84a4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
    84a6:	2e00      	cmp	r6, #0
    84a8:	d0f9      	beq.n	849e <__sflush_r+0x1a>
    84aa:	2300      	movs	r3, #0
    84ac:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
    84b0:	682f      	ldr	r7, [r5, #0]
    84b2:	602b      	str	r3, [r5, #0]
    84b4:	d032      	beq.n	851c <__sflush_r+0x98>
    84b6:	6d60      	ldr	r0, [r4, #84]	; 0x54
    84b8:	89a3      	ldrh	r3, [r4, #12]
    84ba:	075a      	lsls	r2, r3, #29
    84bc:	d505      	bpl.n	84ca <__sflush_r+0x46>
    84be:	6863      	ldr	r3, [r4, #4]
    84c0:	1ac0      	subs	r0, r0, r3
    84c2:	6b63      	ldr	r3, [r4, #52]	; 0x34
    84c4:	b10b      	cbz	r3, 84ca <__sflush_r+0x46>
    84c6:	6c23      	ldr	r3, [r4, #64]	; 0x40
    84c8:	1ac0      	subs	r0, r0, r3
    84ca:	2300      	movs	r3, #0
    84cc:	4602      	mov	r2, r0
    84ce:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
    84d0:	6a21      	ldr	r1, [r4, #32]
    84d2:	4628      	mov	r0, r5
    84d4:	47b0      	blx	r6
    84d6:	1c43      	adds	r3, r0, #1
    84d8:	89a3      	ldrh	r3, [r4, #12]
    84da:	d106      	bne.n	84ea <__sflush_r+0x66>
    84dc:	6829      	ldr	r1, [r5, #0]
    84de:	291d      	cmp	r1, #29
    84e0:	d82c      	bhi.n	853c <__sflush_r+0xb8>
    84e2:	4a2a      	ldr	r2, [pc, #168]	; (858c <__sflush_r+0x108>)
    84e4:	40ca      	lsrs	r2, r1
    84e6:	07d6      	lsls	r6, r2, #31
    84e8:	d528      	bpl.n	853c <__sflush_r+0xb8>
    84ea:	2200      	movs	r2, #0
    84ec:	6062      	str	r2, [r4, #4]
    84ee:	04d9      	lsls	r1, r3, #19
    84f0:	6922      	ldr	r2, [r4, #16]
    84f2:	6022      	str	r2, [r4, #0]
    84f4:	d504      	bpl.n	8500 <__sflush_r+0x7c>
    84f6:	1c42      	adds	r2, r0, #1
    84f8:	d101      	bne.n	84fe <__sflush_r+0x7a>
    84fa:	682b      	ldr	r3, [r5, #0]
    84fc:	b903      	cbnz	r3, 8500 <__sflush_r+0x7c>
    84fe:	6560      	str	r0, [r4, #84]	; 0x54
    8500:	6b61      	ldr	r1, [r4, #52]	; 0x34
    8502:	602f      	str	r7, [r5, #0]
    8504:	2900      	cmp	r1, #0
    8506:	d0ca      	beq.n	849e <__sflush_r+0x1a>
    8508:	f104 0344 	add.w	r3, r4, #68	; 0x44
    850c:	4299      	cmp	r1, r3
    850e:	d002      	beq.n	8516 <__sflush_r+0x92>
    8510:	4628      	mov	r0, r5
    8512:	f7fd f88b 	bl	562c <_free_r>
    8516:	2000      	movs	r0, #0
    8518:	6360      	str	r0, [r4, #52]	; 0x34
    851a:	e7c1      	b.n	84a0 <__sflush_r+0x1c>
    851c:	6a21      	ldr	r1, [r4, #32]
    851e:	2301      	movs	r3, #1
    8520:	4628      	mov	r0, r5
    8522:	47b0      	blx	r6
    8524:	1c41      	adds	r1, r0, #1
    8526:	d1c7      	bne.n	84b8 <__sflush_r+0x34>
    8528:	682b      	ldr	r3, [r5, #0]
    852a:	2b00      	cmp	r3, #0
    852c:	d0c4      	beq.n	84b8 <__sflush_r+0x34>
    852e:	2b1d      	cmp	r3, #29
    8530:	d001      	beq.n	8536 <__sflush_r+0xb2>
    8532:	2b16      	cmp	r3, #22
    8534:	d101      	bne.n	853a <__sflush_r+0xb6>
    8536:	602f      	str	r7, [r5, #0]
    8538:	e7b1      	b.n	849e <__sflush_r+0x1a>
    853a:	89a3      	ldrh	r3, [r4, #12]
    853c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    8540:	81a3      	strh	r3, [r4, #12]
    8542:	e7ad      	b.n	84a0 <__sflush_r+0x1c>
    8544:	690f      	ldr	r7, [r1, #16]
    8546:	2f00      	cmp	r7, #0
    8548:	d0a9      	beq.n	849e <__sflush_r+0x1a>
    854a:	0793      	lsls	r3, r2, #30
    854c:	680e      	ldr	r6, [r1, #0]
    854e:	bf08      	it	eq
    8550:	694b      	ldreq	r3, [r1, #20]
    8552:	600f      	str	r7, [r1, #0]
    8554:	bf18      	it	ne
    8556:	2300      	movne	r3, #0
    8558:	eba6 0807 	sub.w	r8, r6, r7
    855c:	608b      	str	r3, [r1, #8]
    855e:	f1b8 0f00 	cmp.w	r8, #0
    8562:	dd9c      	ble.n	849e <__sflush_r+0x1a>
    8564:	4643      	mov	r3, r8
    8566:	463a      	mov	r2, r7
    8568:	6a21      	ldr	r1, [r4, #32]
    856a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    856c:	4628      	mov	r0, r5
    856e:	47b0      	blx	r6
    8570:	2800      	cmp	r0, #0
    8572:	dc06      	bgt.n	8582 <__sflush_r+0xfe>
    8574:	89a3      	ldrh	r3, [r4, #12]
    8576:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    857a:	81a3      	strh	r3, [r4, #12]
    857c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    8580:	e78e      	b.n	84a0 <__sflush_r+0x1c>
    8582:	4407      	add	r7, r0
    8584:	eba8 0800 	sub.w	r8, r8, r0
    8588:	e7e9      	b.n	855e <__sflush_r+0xda>
    858a:	bf00      	nop
    858c:	20400001 	.word	0x20400001

00008590 <_fflush_r>:
_fflush_r():
    8590:	b538      	push	{r3, r4, r5, lr}
    8592:	690b      	ldr	r3, [r1, #16]
    8594:	4605      	mov	r5, r0
    8596:	460c      	mov	r4, r1
    8598:	b913      	cbnz	r3, 85a0 <_fflush_r+0x10>
    859a:	2500      	movs	r5, #0
    859c:	4628      	mov	r0, r5
    859e:	bd38      	pop	{r3, r4, r5, pc}
    85a0:	b118      	cbz	r0, 85aa <_fflush_r+0x1a>
    85a2:	6983      	ldr	r3, [r0, #24]
    85a4:	b90b      	cbnz	r3, 85aa <_fflush_r+0x1a>
    85a6:	f000 f887 	bl	86b8 <__sinit>
    85aa:	4b14      	ldr	r3, [pc, #80]	; (85fc <_fflush_r+0x6c>)
    85ac:	429c      	cmp	r4, r3
    85ae:	d11b      	bne.n	85e8 <_fflush_r+0x58>
    85b0:	686c      	ldr	r4, [r5, #4]
    85b2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    85b6:	2b00      	cmp	r3, #0
    85b8:	d0ef      	beq.n	859a <_fflush_r+0xa>
    85ba:	6e62      	ldr	r2, [r4, #100]	; 0x64
    85bc:	07d0      	lsls	r0, r2, #31
    85be:	d404      	bmi.n	85ca <_fflush_r+0x3a>
    85c0:	0599      	lsls	r1, r3, #22
    85c2:	d402      	bmi.n	85ca <_fflush_r+0x3a>
    85c4:	6da0      	ldr	r0, [r4, #88]	; 0x58
    85c6:	f7fc ffee 	bl	55a6 <__retarget_lock_acquire_recursive>
    85ca:	4628      	mov	r0, r5
    85cc:	4621      	mov	r1, r4
    85ce:	f7ff ff59 	bl	8484 <__sflush_r>
    85d2:	6e63      	ldr	r3, [r4, #100]	; 0x64
    85d4:	07da      	lsls	r2, r3, #31
    85d6:	4605      	mov	r5, r0
    85d8:	d4e0      	bmi.n	859c <_fflush_r+0xc>
    85da:	89a3      	ldrh	r3, [r4, #12]
    85dc:	059b      	lsls	r3, r3, #22
    85de:	d4dd      	bmi.n	859c <_fflush_r+0xc>
    85e0:	6da0      	ldr	r0, [r4, #88]	; 0x58
    85e2:	f7fc ffe1 	bl	55a8 <__retarget_lock_release_recursive>
    85e6:	e7d9      	b.n	859c <_fflush_r+0xc>
    85e8:	4b05      	ldr	r3, [pc, #20]	; (8600 <_fflush_r+0x70>)
    85ea:	429c      	cmp	r4, r3
    85ec:	d101      	bne.n	85f2 <_fflush_r+0x62>
    85ee:	68ac      	ldr	r4, [r5, #8]
    85f0:	e7df      	b.n	85b2 <_fflush_r+0x22>
    85f2:	4b04      	ldr	r3, [pc, #16]	; (8604 <_fflush_r+0x74>)
    85f4:	429c      	cmp	r4, r3
    85f6:	bf08      	it	eq
    85f8:	68ec      	ldreq	r4, [r5, #12]
    85fa:	e7da      	b.n	85b2 <_fflush_r+0x22>
    85fc:	0000b8d8 	.word	0x0000b8d8
    8600:	0000b8f8 	.word	0x0000b8f8
    8604:	0000b8b8 	.word	0x0000b8b8

00008608 <std>:
std():
    8608:	2300      	movs	r3, #0
    860a:	b510      	push	{r4, lr}
    860c:	4604      	mov	r4, r0
    860e:	e9c0 3300 	strd	r3, r3, [r0]
    8612:	6083      	str	r3, [r0, #8]
    8614:	8181      	strh	r1, [r0, #12]
    8616:	6643      	str	r3, [r0, #100]	; 0x64
    8618:	81c2      	strh	r2, [r0, #14]
    861a:	e9c0 3304 	strd	r3, r3, [r0, #16]
    861e:	6183      	str	r3, [r0, #24]
    8620:	4619      	mov	r1, r3
    8622:	2208      	movs	r2, #8
    8624:	305c      	adds	r0, #92	; 0x5c
    8626:	f7fc fff9 	bl	561c <memset>
    862a:	4b05      	ldr	r3, [pc, #20]	; (8640 <std+0x38>)
    862c:	6263      	str	r3, [r4, #36]	; 0x24
    862e:	4b05      	ldr	r3, [pc, #20]	; (8644 <std+0x3c>)
    8630:	62a3      	str	r3, [r4, #40]	; 0x28
    8632:	4b05      	ldr	r3, [pc, #20]	; (8648 <std+0x40>)
    8634:	62e3      	str	r3, [r4, #44]	; 0x2c
    8636:	4b05      	ldr	r3, [pc, #20]	; (864c <std+0x44>)
    8638:	6224      	str	r4, [r4, #32]
    863a:	6323      	str	r3, [r4, #48]	; 0x30
    863c:	bd10      	pop	{r4, pc}
    863e:	bf00      	nop
    8640:	00009b09 	.word	0x00009b09
    8644:	00009b2b 	.word	0x00009b2b
    8648:	00009b63 	.word	0x00009b63
    864c:	00009b87 	.word	0x00009b87

00008650 <_cleanup_r>:
_cleanup_r():
    8650:	4901      	ldr	r1, [pc, #4]	; (8658 <_cleanup_r+0x8>)
    8652:	f000 b8af 	b.w	87b4 <_fwalk_reent>
    8656:	bf00      	nop
    8658:	00008591 	.word	0x00008591

0000865c <__sfmoreglue>:
__sfmoreglue():
    865c:	b570      	push	{r4, r5, r6, lr}
    865e:	1e4a      	subs	r2, r1, #1
    8660:	2568      	movs	r5, #104	; 0x68
    8662:	4355      	muls	r5, r2
    8664:	460e      	mov	r6, r1
    8666:	f105 0174 	add.w	r1, r5, #116	; 0x74
    866a:	f7fd f82d 	bl	56c8 <_malloc_r>
    866e:	4604      	mov	r4, r0
    8670:	b140      	cbz	r0, 8684 <__sfmoreglue+0x28>
    8672:	2100      	movs	r1, #0
    8674:	e9c0 1600 	strd	r1, r6, [r0]
    8678:	300c      	adds	r0, #12
    867a:	60a0      	str	r0, [r4, #8]
    867c:	f105 0268 	add.w	r2, r5, #104	; 0x68
    8680:	f7fc ffcc 	bl	561c <memset>
    8684:	4620      	mov	r0, r4
    8686:	bd70      	pop	{r4, r5, r6, pc}

00008688 <__sfp_lock_acquire>:
__sfp_lock_acquire():
    8688:	4801      	ldr	r0, [pc, #4]	; (8690 <__sfp_lock_acquire+0x8>)
    868a:	f7fc bf8c 	b.w	55a6 <__retarget_lock_acquire_recursive>
    868e:	bf00      	nop
    8690:	10000bb0 	.word	0x10000bb0

00008694 <__sfp_lock_release>:
__sfp_lock_release():
    8694:	4801      	ldr	r0, [pc, #4]	; (869c <__sfp_lock_release+0x8>)
    8696:	f7fc bf87 	b.w	55a8 <__retarget_lock_release_recursive>
    869a:	bf00      	nop
    869c:	10000bb0 	.word	0x10000bb0

000086a0 <__sinit_lock_acquire>:
__sinit_lock_acquire():
    86a0:	4801      	ldr	r0, [pc, #4]	; (86a8 <__sinit_lock_acquire+0x8>)
    86a2:	f7fc bf80 	b.w	55a6 <__retarget_lock_acquire_recursive>
    86a6:	bf00      	nop
    86a8:	10000bab 	.word	0x10000bab

000086ac <__sinit_lock_release>:
__sinit_lock_release():
    86ac:	4801      	ldr	r0, [pc, #4]	; (86b4 <__sinit_lock_release+0x8>)
    86ae:	f7fc bf7b 	b.w	55a8 <__retarget_lock_release_recursive>
    86b2:	bf00      	nop
    86b4:	10000bab 	.word	0x10000bab

000086b8 <__sinit>:
__sinit():
    86b8:	b510      	push	{r4, lr}
    86ba:	4604      	mov	r4, r0
    86bc:	f7ff fff0 	bl	86a0 <__sinit_lock_acquire>
    86c0:	69a3      	ldr	r3, [r4, #24]
    86c2:	b11b      	cbz	r3, 86cc <__sinit+0x14>
    86c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    86c8:	f7ff bff0 	b.w	86ac <__sinit_lock_release>
    86cc:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
    86d0:	6523      	str	r3, [r4, #80]	; 0x50
    86d2:	4b13      	ldr	r3, [pc, #76]	; (8720 <__sinit+0x68>)
    86d4:	4a13      	ldr	r2, [pc, #76]	; (8724 <__sinit+0x6c>)
    86d6:	681b      	ldr	r3, [r3, #0]
    86d8:	62a2      	str	r2, [r4, #40]	; 0x28
    86da:	42a3      	cmp	r3, r4
    86dc:	bf04      	itt	eq
    86de:	2301      	moveq	r3, #1
    86e0:	61a3      	streq	r3, [r4, #24]
    86e2:	4620      	mov	r0, r4
    86e4:	f000 f820 	bl	8728 <__sfp>
    86e8:	6060      	str	r0, [r4, #4]
    86ea:	4620      	mov	r0, r4
    86ec:	f000 f81c 	bl	8728 <__sfp>
    86f0:	60a0      	str	r0, [r4, #8]
    86f2:	4620      	mov	r0, r4
    86f4:	f000 f818 	bl	8728 <__sfp>
    86f8:	2200      	movs	r2, #0
    86fa:	60e0      	str	r0, [r4, #12]
    86fc:	2104      	movs	r1, #4
    86fe:	6860      	ldr	r0, [r4, #4]
    8700:	f7ff ff82 	bl	8608 <std>
    8704:	2201      	movs	r2, #1
    8706:	2109      	movs	r1, #9
    8708:	68a0      	ldr	r0, [r4, #8]
    870a:	f7ff ff7d 	bl	8608 <std>
    870e:	2202      	movs	r2, #2
    8710:	2112      	movs	r1, #18
    8712:	68e0      	ldr	r0, [r4, #12]
    8714:	f7ff ff78 	bl	8608 <std>
    8718:	2301      	movs	r3, #1
    871a:	61a3      	str	r3, [r4, #24]
    871c:	e7d2      	b.n	86c4 <__sinit+0xc>
    871e:	bf00      	nop
    8720:	0000b808 	.word	0x0000b808
    8724:	00008651 	.word	0x00008651

00008728 <__sfp>:
__sfp():
    8728:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    872a:	4607      	mov	r7, r0
    872c:	f7ff ffac 	bl	8688 <__sfp_lock_acquire>
    8730:	4b1e      	ldr	r3, [pc, #120]	; (87ac <__sfp+0x84>)
    8732:	681e      	ldr	r6, [r3, #0]
    8734:	69b3      	ldr	r3, [r6, #24]
    8736:	b913      	cbnz	r3, 873e <__sfp+0x16>
    8738:	4630      	mov	r0, r6
    873a:	f7ff ffbd 	bl	86b8 <__sinit>
    873e:	3648      	adds	r6, #72	; 0x48
    8740:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
    8744:	3b01      	subs	r3, #1
    8746:	d503      	bpl.n	8750 <__sfp+0x28>
    8748:	6833      	ldr	r3, [r6, #0]
    874a:	b30b      	cbz	r3, 8790 <__sfp+0x68>
    874c:	6836      	ldr	r6, [r6, #0]
    874e:	e7f7      	b.n	8740 <__sfp+0x18>
    8750:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
    8754:	b9d5      	cbnz	r5, 878c <__sfp+0x64>
    8756:	4b16      	ldr	r3, [pc, #88]	; (87b0 <__sfp+0x88>)
    8758:	60e3      	str	r3, [r4, #12]
    875a:	f104 0058 	add.w	r0, r4, #88	; 0x58
    875e:	6665      	str	r5, [r4, #100]	; 0x64
    8760:	f7fc ff20 	bl	55a4 <__retarget_lock_init_recursive>
    8764:	f7ff ff96 	bl	8694 <__sfp_lock_release>
    8768:	6025      	str	r5, [r4, #0]
    876a:	e9c4 5501 	strd	r5, r5, [r4, #4]
    876e:	e9c4 5504 	strd	r5, r5, [r4, #16]
    8772:	61a5      	str	r5, [r4, #24]
    8774:	2208      	movs	r2, #8
    8776:	4629      	mov	r1, r5
    8778:	f104 005c 	add.w	r0, r4, #92	; 0x5c
    877c:	f7fc ff4e 	bl	561c <memset>
    8780:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
    8784:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
    8788:	4620      	mov	r0, r4
    878a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    878c:	3468      	adds	r4, #104	; 0x68
    878e:	e7d9      	b.n	8744 <__sfp+0x1c>
    8790:	2104      	movs	r1, #4
    8792:	4638      	mov	r0, r7
    8794:	f7ff ff62 	bl	865c <__sfmoreglue>
    8798:	4604      	mov	r4, r0
    879a:	6030      	str	r0, [r6, #0]
    879c:	2800      	cmp	r0, #0
    879e:	d1d5      	bne.n	874c <__sfp+0x24>
    87a0:	f7ff ff78 	bl	8694 <__sfp_lock_release>
    87a4:	230c      	movs	r3, #12
    87a6:	603b      	str	r3, [r7, #0]
    87a8:	e7ee      	b.n	8788 <__sfp+0x60>
    87aa:	bf00      	nop
    87ac:	0000b808 	.word	0x0000b808
    87b0:	ffff0001 	.word	0xffff0001

000087b4 <_fwalk_reent>:
_fwalk_reent():
    87b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    87b8:	4680      	mov	r8, r0
    87ba:	4689      	mov	r9, r1
    87bc:	f100 0448 	add.w	r4, r0, #72	; 0x48
    87c0:	2600      	movs	r6, #0
    87c2:	b914      	cbnz	r4, 87ca <_fwalk_reent+0x16>
    87c4:	4630      	mov	r0, r6
    87c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    87ca:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
    87ce:	3f01      	subs	r7, #1
    87d0:	d501      	bpl.n	87d6 <_fwalk_reent+0x22>
    87d2:	6824      	ldr	r4, [r4, #0]
    87d4:	e7f5      	b.n	87c2 <_fwalk_reent+0xe>
    87d6:	89ab      	ldrh	r3, [r5, #12]
    87d8:	2b01      	cmp	r3, #1
    87da:	d907      	bls.n	87ec <_fwalk_reent+0x38>
    87dc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
    87e0:	3301      	adds	r3, #1
    87e2:	d003      	beq.n	87ec <_fwalk_reent+0x38>
    87e4:	4629      	mov	r1, r5
    87e6:	4640      	mov	r0, r8
    87e8:	47c8      	blx	r9
    87ea:	4306      	orrs	r6, r0
    87ec:	3568      	adds	r5, #104	; 0x68
    87ee:	e7ee      	b.n	87ce <_fwalk_reent+0x1a>

000087f0 <rshift>:
rshift():
    87f0:	b5f0      	push	{r4, r5, r6, r7, lr}
    87f2:	6906      	ldr	r6, [r0, #16]
    87f4:	114b      	asrs	r3, r1, #5
    87f6:	429e      	cmp	r6, r3
    87f8:	f100 0414 	add.w	r4, r0, #20
    87fc:	dd30      	ble.n	8860 <rshift+0x70>
    87fe:	f011 011f 	ands.w	r1, r1, #31
    8802:	eb04 0686 	add.w	r6, r4, r6, lsl #2
    8806:	eb04 0283 	add.w	r2, r4, r3, lsl #2
    880a:	d108      	bne.n	881e <rshift+0x2e>
    880c:	4621      	mov	r1, r4
    880e:	42b2      	cmp	r2, r6
    8810:	460b      	mov	r3, r1
    8812:	d211      	bcs.n	8838 <rshift+0x48>
    8814:	f852 3b04 	ldr.w	r3, [r2], #4
    8818:	f841 3b04 	str.w	r3, [r1], #4
    881c:	e7f7      	b.n	880e <rshift+0x1e>
    881e:	f854 5023 	ldr.w	r5, [r4, r3, lsl #2]
    8822:	f1c1 0c20 	rsb	ip, r1, #32
    8826:	40cd      	lsrs	r5, r1
    8828:	3204      	adds	r2, #4
    882a:	4623      	mov	r3, r4
    882c:	4296      	cmp	r6, r2
    882e:	4617      	mov	r7, r2
    8830:	d80c      	bhi.n	884c <rshift+0x5c>
    8832:	601d      	str	r5, [r3, #0]
    8834:	b105      	cbz	r5, 8838 <rshift+0x48>
    8836:	3304      	adds	r3, #4
    8838:	1b1a      	subs	r2, r3, r4
    883a:	42a3      	cmp	r3, r4
    883c:	ea4f 02a2 	mov.w	r2, r2, asr #2
    8840:	bf08      	it	eq
    8842:	2300      	moveq	r3, #0
    8844:	6102      	str	r2, [r0, #16]
    8846:	bf08      	it	eq
    8848:	6143      	streq	r3, [r0, #20]
    884a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    884c:	683f      	ldr	r7, [r7, #0]
    884e:	fa07 f70c 	lsl.w	r7, r7, ip
    8852:	433d      	orrs	r5, r7
    8854:	f843 5b04 	str.w	r5, [r3], #4
    8858:	f852 5b04 	ldr.w	r5, [r2], #4
    885c:	40cd      	lsrs	r5, r1
    885e:	e7e5      	b.n	882c <rshift+0x3c>
    8860:	4623      	mov	r3, r4
    8862:	e7e9      	b.n	8838 <rshift+0x48>

00008864 <__hexdig_fun>:
__hexdig_fun():
    8864:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
    8868:	2b09      	cmp	r3, #9
    886a:	d802      	bhi.n	8872 <__hexdig_fun+0xe>
    886c:	3820      	subs	r0, #32
    886e:	b2c0      	uxtb	r0, r0
    8870:	4770      	bx	lr
    8872:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
    8876:	2b05      	cmp	r3, #5
    8878:	d801      	bhi.n	887e <__hexdig_fun+0x1a>
    887a:	3847      	subs	r0, #71	; 0x47
    887c:	e7f7      	b.n	886e <__hexdig_fun+0xa>
    887e:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
    8882:	2b05      	cmp	r3, #5
    8884:	d801      	bhi.n	888a <__hexdig_fun+0x26>
    8886:	3827      	subs	r0, #39	; 0x27
    8888:	e7f1      	b.n	886e <__hexdig_fun+0xa>
    888a:	2000      	movs	r0, #0
    888c:	4770      	bx	lr
    888e:	Address 0x000000000000888e is out of bounds.


00008890 <__gethex>:
__gethex():
    8890:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8894:	b08b      	sub	sp, #44	; 0x2c
    8896:	468b      	mov	fp, r1
    8898:	9306      	str	r3, [sp, #24]
    889a:	4bb7      	ldr	r3, [pc, #732]	; (8b78 <__gethex+0x2e8>)
    889c:	9002      	str	r0, [sp, #8]
    889e:	681b      	ldr	r3, [r3, #0]
    88a0:	9303      	str	r3, [sp, #12]
    88a2:	4618      	mov	r0, r3
    88a4:	4690      	mov	r8, r2
    88a6:	f7fe f865 	bl	6974 <strlen>
    88aa:	9b03      	ldr	r3, [sp, #12]
    88ac:	f8db 2000 	ldr.w	r2, [fp]
    88b0:	9001      	str	r0, [sp, #4]
    88b2:	4403      	add	r3, r0
    88b4:	f813 3c01 	ldrb.w	r3, [r3, #-1]
    88b8:	9307      	str	r3, [sp, #28]
    88ba:	1c93      	adds	r3, r2, #2
    88bc:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
    88c0:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
    88c4:	32fe      	adds	r2, #254	; 0xfe
    88c6:	eb02 0a03 	add.w	sl, r2, r3
    88ca:	461f      	mov	r7, r3
    88cc:	f813 0b01 	ldrb.w	r0, [r3], #1
    88d0:	2830      	cmp	r0, #48	; 0x30
    88d2:	d0f8      	beq.n	88c6 <__gethex+0x36>
    88d4:	f7ff ffc6 	bl	8864 <__hexdig_fun>
    88d8:	4604      	mov	r4, r0
    88da:	2800      	cmp	r0, #0
    88dc:	d168      	bne.n	89b0 <__gethex+0x120>
    88de:	9a01      	ldr	r2, [sp, #4]
    88e0:	9903      	ldr	r1, [sp, #12]
    88e2:	4638      	mov	r0, r7
    88e4:	f7fe f84e 	bl	6984 <strncmp>
    88e8:	4605      	mov	r5, r0
    88ea:	2800      	cmp	r0, #0
    88ec:	d163      	bne.n	89b6 <__gethex+0x126>
    88ee:	9b01      	ldr	r3, [sp, #4]
    88f0:	5cf8      	ldrb	r0, [r7, r3]
    88f2:	18fe      	adds	r6, r7, r3
    88f4:	f7ff ffb6 	bl	8864 <__hexdig_fun>
    88f8:	2800      	cmp	r0, #0
    88fa:	d05e      	beq.n	89ba <__gethex+0x12a>
    88fc:	4633      	mov	r3, r6
    88fe:	7818      	ldrb	r0, [r3, #0]
    8900:	2830      	cmp	r0, #48	; 0x30
    8902:	461f      	mov	r7, r3
    8904:	f103 0301 	add.w	r3, r3, #1
    8908:	d0f9      	beq.n	88fe <__gethex+0x6e>
    890a:	f7ff ffab 	bl	8864 <__hexdig_fun>
    890e:	fab0 f480 	clz	r4, r0
    8912:	0964      	lsrs	r4, r4, #5
    8914:	4635      	mov	r5, r6
    8916:	f04f 0a01 	mov.w	sl, #1
    891a:	463a      	mov	r2, r7
    891c:	4616      	mov	r6, r2
    891e:	3201      	adds	r2, #1
    8920:	7830      	ldrb	r0, [r6, #0]
    8922:	f7ff ff9f 	bl	8864 <__hexdig_fun>
    8926:	2800      	cmp	r0, #0
    8928:	d1f8      	bne.n	891c <__gethex+0x8c>
    892a:	9a01      	ldr	r2, [sp, #4]
    892c:	9903      	ldr	r1, [sp, #12]
    892e:	4630      	mov	r0, r6
    8930:	f7fe f828 	bl	6984 <strncmp>
    8934:	b950      	cbnz	r0, 894c <__gethex+0xbc>
    8936:	b955      	cbnz	r5, 894e <__gethex+0xbe>
    8938:	9b01      	ldr	r3, [sp, #4]
    893a:	18f5      	adds	r5, r6, r3
    893c:	462a      	mov	r2, r5
    893e:	4616      	mov	r6, r2
    8940:	3201      	adds	r2, #1
    8942:	7830      	ldrb	r0, [r6, #0]
    8944:	f7ff ff8e 	bl	8864 <__hexdig_fun>
    8948:	2800      	cmp	r0, #0
    894a:	d1f8      	bne.n	893e <__gethex+0xae>
    894c:	b10d      	cbz	r5, 8952 <__gethex+0xc2>
    894e:	1bad      	subs	r5, r5, r6
    8950:	00ad      	lsls	r5, r5, #2
    8952:	7833      	ldrb	r3, [r6, #0]
    8954:	2b50      	cmp	r3, #80	; 0x50
    8956:	d001      	beq.n	895c <__gethex+0xcc>
    8958:	2b70      	cmp	r3, #112	; 0x70
    895a:	d13c      	bne.n	89d6 <__gethex+0x146>
    895c:	7873      	ldrb	r3, [r6, #1]
    895e:	2b2b      	cmp	r3, #43	; 0x2b
    8960:	d02d      	beq.n	89be <__gethex+0x12e>
    8962:	2b2d      	cmp	r3, #45	; 0x2d
    8964:	d02f      	beq.n	89c6 <__gethex+0x136>
    8966:	1c71      	adds	r1, r6, #1
    8968:	f04f 0900 	mov.w	r9, #0
    896c:	7808      	ldrb	r0, [r1, #0]
    896e:	f7ff ff79 	bl	8864 <__hexdig_fun>
    8972:	1e43      	subs	r3, r0, #1
    8974:	b2db      	uxtb	r3, r3
    8976:	2b18      	cmp	r3, #24
    8978:	d82d      	bhi.n	89d6 <__gethex+0x146>
    897a:	f1a0 0210 	sub.w	r2, r0, #16
    897e:	f811 0f01 	ldrb.w	r0, [r1, #1]!
    8982:	f7ff ff6f 	bl	8864 <__hexdig_fun>
    8986:	1e43      	subs	r3, r0, #1
    8988:	b2db      	uxtb	r3, r3
    898a:	2b18      	cmp	r3, #24
    898c:	d91e      	bls.n	89cc <__gethex+0x13c>
    898e:	f1b9 0f00 	cmp.w	r9, #0
    8992:	d000      	beq.n	8996 <__gethex+0x106>
    8994:	4252      	negs	r2, r2
    8996:	4415      	add	r5, r2
    8998:	f8cb 1000 	str.w	r1, [fp]
    899c:	b1ec      	cbz	r4, 89da <__gethex+0x14a>
    899e:	f1ba 0f00 	cmp.w	sl, #0
    89a2:	bf14      	ite	ne
    89a4:	2700      	movne	r7, #0
    89a6:	2706      	moveq	r7, #6
    89a8:	4638      	mov	r0, r7
    89aa:	b00b      	add	sp, #44	; 0x2c
    89ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    89b0:	2400      	movs	r4, #0
    89b2:	4625      	mov	r5, r4
    89b4:	e7b1      	b.n	891a <__gethex+0x8a>
    89b6:	463e      	mov	r6, r7
    89b8:	4625      	mov	r5, r4
    89ba:	2401      	movs	r4, #1
    89bc:	e7c9      	b.n	8952 <__gethex+0xc2>
    89be:	f04f 0900 	mov.w	r9, #0
    89c2:	1cb1      	adds	r1, r6, #2
    89c4:	e7d2      	b.n	896c <__gethex+0xdc>
    89c6:	f04f 0901 	mov.w	r9, #1
    89ca:	e7fa      	b.n	89c2 <__gethex+0x132>
    89cc:	230a      	movs	r3, #10
    89ce:	fb03 0202 	mla	r2, r3, r2, r0
    89d2:	3a10      	subs	r2, #16
    89d4:	e7d3      	b.n	897e <__gethex+0xee>
    89d6:	4631      	mov	r1, r6
    89d8:	e7de      	b.n	8998 <__gethex+0x108>
    89da:	1bf3      	subs	r3, r6, r7
    89dc:	3b01      	subs	r3, #1
    89de:	4621      	mov	r1, r4
    89e0:	2b07      	cmp	r3, #7
    89e2:	dc4f      	bgt.n	8a84 <__gethex+0x1f4>
    89e4:	9802      	ldr	r0, [sp, #8]
    89e6:	f000 fb07 	bl	8ff8 <_Balloc>
    89ea:	9b01      	ldr	r3, [sp, #4]
    89ec:	f100 0914 	add.w	r9, r0, #20
    89f0:	f04f 0b00 	mov.w	fp, #0
    89f4:	f1c3 0301 	rsb	r3, r3, #1
    89f8:	4604      	mov	r4, r0
    89fa:	f8cd 9010 	str.w	r9, [sp, #16]
    89fe:	46da      	mov	sl, fp
    8a00:	9308      	str	r3, [sp, #32]
    8a02:	42b7      	cmp	r7, r6
    8a04:	d341      	bcc.n	8a8a <__gethex+0x1fa>
    8a06:	9804      	ldr	r0, [sp, #16]
    8a08:	f840 ab04 	str.w	sl, [r0], #4
    8a0c:	eba0 0009 	sub.w	r0, r0, r9
    8a10:	1080      	asrs	r0, r0, #2
    8a12:	6120      	str	r0, [r4, #16]
    8a14:	0147      	lsls	r7, r0, #5
    8a16:	4650      	mov	r0, sl
    8a18:	f000 fbb2 	bl	9180 <__hi0bits>
    8a1c:	f8d8 6000 	ldr.w	r6, [r8]
    8a20:	1a3f      	subs	r7, r7, r0
    8a22:	42b7      	cmp	r7, r6
    8a24:	dd63      	ble.n	8aee <__gethex+0x25e>
    8a26:	1bbf      	subs	r7, r7, r6
    8a28:	4639      	mov	r1, r7
    8a2a:	4620      	mov	r0, r4
    8a2c:	f000 febb 	bl	97a6 <__any_on>
    8a30:	4682      	mov	sl, r0
    8a32:	b1a8      	cbz	r0, 8a60 <__gethex+0x1d0>
    8a34:	1e7b      	subs	r3, r7, #1
    8a36:	1159      	asrs	r1, r3, #5
    8a38:	f003 021f 	and.w	r2, r3, #31
    8a3c:	f04f 0a01 	mov.w	sl, #1
    8a40:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
    8a44:	fa0a f202 	lsl.w	r2, sl, r2
    8a48:	420a      	tst	r2, r1
    8a4a:	d009      	beq.n	8a60 <__gethex+0x1d0>
    8a4c:	4553      	cmp	r3, sl
    8a4e:	dd05      	ble.n	8a5c <__gethex+0x1cc>
    8a50:	1eb9      	subs	r1, r7, #2
    8a52:	4620      	mov	r0, r4
    8a54:	f000 fea7 	bl	97a6 <__any_on>
    8a58:	2800      	cmp	r0, #0
    8a5a:	d145      	bne.n	8ae8 <__gethex+0x258>
    8a5c:	f04f 0a02 	mov.w	sl, #2
    8a60:	4639      	mov	r1, r7
    8a62:	4620      	mov	r0, r4
    8a64:	f7ff fec4 	bl	87f0 <rshift>
    8a68:	443d      	add	r5, r7
    8a6a:	f8d8 3008 	ldr.w	r3, [r8, #8]
    8a6e:	42ab      	cmp	r3, r5
    8a70:	da4b      	bge.n	8b0a <__gethex+0x27a>
    8a72:	4621      	mov	r1, r4
    8a74:	9802      	ldr	r0, [sp, #8]
    8a76:	f000 faf3 	bl	9060 <_Bfree>
    8a7a:	9a14      	ldr	r2, [sp, #80]	; 0x50
    8a7c:	2300      	movs	r3, #0
    8a7e:	6013      	str	r3, [r2, #0]
    8a80:	27a3      	movs	r7, #163	; 0xa3
    8a82:	e791      	b.n	89a8 <__gethex+0x118>
    8a84:	3101      	adds	r1, #1
    8a86:	105b      	asrs	r3, r3, #1
    8a88:	e7aa      	b.n	89e0 <__gethex+0x150>
    8a8a:	1e73      	subs	r3, r6, #1
    8a8c:	9305      	str	r3, [sp, #20]
    8a8e:	9a07      	ldr	r2, [sp, #28]
    8a90:	f816 3c01 	ldrb.w	r3, [r6, #-1]
    8a94:	4293      	cmp	r3, r2
    8a96:	d017      	beq.n	8ac8 <__gethex+0x238>
    8a98:	f1bb 0f20 	cmp.w	fp, #32
    8a9c:	d106      	bne.n	8aac <__gethex+0x21c>
    8a9e:	9b04      	ldr	r3, [sp, #16]
    8aa0:	f843 ab04 	str.w	sl, [r3], #4
    8aa4:	f04f 0a00 	mov.w	sl, #0
    8aa8:	9304      	str	r3, [sp, #16]
    8aaa:	46d3      	mov	fp, sl
    8aac:	f816 0c01 	ldrb.w	r0, [r6, #-1]
    8ab0:	f7ff fed8 	bl	8864 <__hexdig_fun>
    8ab4:	f000 000f 	and.w	r0, r0, #15
    8ab8:	fa00 f00b 	lsl.w	r0, r0, fp
    8abc:	ea4a 0a00 	orr.w	sl, sl, r0
    8ac0:	f10b 0b04 	add.w	fp, fp, #4
    8ac4:	9b05      	ldr	r3, [sp, #20]
    8ac6:	e00d      	b.n	8ae4 <__gethex+0x254>
    8ac8:	9b05      	ldr	r3, [sp, #20]
    8aca:	9a08      	ldr	r2, [sp, #32]
    8acc:	4413      	add	r3, r2
    8ace:	42bb      	cmp	r3, r7
    8ad0:	d3e2      	bcc.n	8a98 <__gethex+0x208>
    8ad2:	4618      	mov	r0, r3
    8ad4:	9a01      	ldr	r2, [sp, #4]
    8ad6:	9903      	ldr	r1, [sp, #12]
    8ad8:	9309      	str	r3, [sp, #36]	; 0x24
    8ada:	f7fd ff53 	bl	6984 <strncmp>
    8ade:	9b09      	ldr	r3, [sp, #36]	; 0x24
    8ae0:	2800      	cmp	r0, #0
    8ae2:	d1d9      	bne.n	8a98 <__gethex+0x208>
    8ae4:	461e      	mov	r6, r3
    8ae6:	e78c      	b.n	8a02 <__gethex+0x172>
    8ae8:	f04f 0a03 	mov.w	sl, #3
    8aec:	e7b8      	b.n	8a60 <__gethex+0x1d0>
    8aee:	da09      	bge.n	8b04 <__gethex+0x274>
    8af0:	1bf7      	subs	r7, r6, r7
    8af2:	4621      	mov	r1, r4
    8af4:	463a      	mov	r2, r7
    8af6:	9802      	ldr	r0, [sp, #8]
    8af8:	f000 fc7a 	bl	93f0 <__lshift>
    8afc:	1bed      	subs	r5, r5, r7
    8afe:	4604      	mov	r4, r0
    8b00:	f100 0914 	add.w	r9, r0, #20
    8b04:	f04f 0a00 	mov.w	sl, #0
    8b08:	e7af      	b.n	8a6a <__gethex+0x1da>
    8b0a:	f8d8 3004 	ldr.w	r3, [r8, #4]
    8b0e:	42ab      	cmp	r3, r5
    8b10:	dd6d      	ble.n	8bee <__gethex+0x35e>
    8b12:	1b5d      	subs	r5, r3, r5
    8b14:	42ae      	cmp	r6, r5
    8b16:	dc31      	bgt.n	8b7c <__gethex+0x2ec>
    8b18:	f8d8 300c 	ldr.w	r3, [r8, #12]
    8b1c:	2b02      	cmp	r3, #2
    8b1e:	d022      	beq.n	8b66 <__gethex+0x2d6>
    8b20:	2b03      	cmp	r3, #3
    8b22:	d024      	beq.n	8b6e <__gethex+0x2de>
    8b24:	2b01      	cmp	r3, #1
    8b26:	d115      	bne.n	8b54 <__gethex+0x2c4>
    8b28:	42ae      	cmp	r6, r5
    8b2a:	d113      	bne.n	8b54 <__gethex+0x2c4>
    8b2c:	2e01      	cmp	r6, #1
    8b2e:	d10b      	bne.n	8b48 <__gethex+0x2b8>
    8b30:	9a06      	ldr	r2, [sp, #24]
    8b32:	f8d8 3004 	ldr.w	r3, [r8, #4]
    8b36:	6013      	str	r3, [r2, #0]
    8b38:	2301      	movs	r3, #1
    8b3a:	6123      	str	r3, [r4, #16]
    8b3c:	f8c9 3000 	str.w	r3, [r9]
    8b40:	9b14      	ldr	r3, [sp, #80]	; 0x50
    8b42:	2762      	movs	r7, #98	; 0x62
    8b44:	601c      	str	r4, [r3, #0]
    8b46:	e72f      	b.n	89a8 <__gethex+0x118>
    8b48:	1e71      	subs	r1, r6, #1
    8b4a:	4620      	mov	r0, r4
    8b4c:	f000 fe2b 	bl	97a6 <__any_on>
    8b50:	2800      	cmp	r0, #0
    8b52:	d1ed      	bne.n	8b30 <__gethex+0x2a0>
    8b54:	4621      	mov	r1, r4
    8b56:	9802      	ldr	r0, [sp, #8]
    8b58:	f000 fa82 	bl	9060 <_Bfree>
    8b5c:	9a14      	ldr	r2, [sp, #80]	; 0x50
    8b5e:	2300      	movs	r3, #0
    8b60:	6013      	str	r3, [r2, #0]
    8b62:	2750      	movs	r7, #80	; 0x50
    8b64:	e720      	b.n	89a8 <__gethex+0x118>
    8b66:	9b15      	ldr	r3, [sp, #84]	; 0x54
    8b68:	2b00      	cmp	r3, #0
    8b6a:	d1f3      	bne.n	8b54 <__gethex+0x2c4>
    8b6c:	e7e0      	b.n	8b30 <__gethex+0x2a0>
    8b6e:	9b15      	ldr	r3, [sp, #84]	; 0x54
    8b70:	2b00      	cmp	r3, #0
    8b72:	d1dd      	bne.n	8b30 <__gethex+0x2a0>
    8b74:	e7ee      	b.n	8b54 <__gethex+0x2c4>
    8b76:	bf00      	nop
    8b78:	0000b918 	.word	0x0000b918
    8b7c:	1e6f      	subs	r7, r5, #1
    8b7e:	f1ba 0f00 	cmp.w	sl, #0
    8b82:	d131      	bne.n	8be8 <__gethex+0x358>
    8b84:	b127      	cbz	r7, 8b90 <__gethex+0x300>
    8b86:	4639      	mov	r1, r7
    8b88:	4620      	mov	r0, r4
    8b8a:	f000 fe0c 	bl	97a6 <__any_on>
    8b8e:	4682      	mov	sl, r0
    8b90:	117a      	asrs	r2, r7, #5
    8b92:	2301      	movs	r3, #1
    8b94:	f007 071f 	and.w	r7, r7, #31
    8b98:	fa03 f707 	lsl.w	r7, r3, r7
    8b9c:	f859 3022 	ldr.w	r3, [r9, r2, lsl #2]
    8ba0:	4629      	mov	r1, r5
    8ba2:	421f      	tst	r7, r3
    8ba4:	4620      	mov	r0, r4
    8ba6:	bf18      	it	ne
    8ba8:	f04a 0a02 	orrne.w	sl, sl, #2
    8bac:	1b76      	subs	r6, r6, r5
    8bae:	f7ff fe1f 	bl	87f0 <rshift>
    8bb2:	f8d8 5004 	ldr.w	r5, [r8, #4]
    8bb6:	2702      	movs	r7, #2
    8bb8:	f1ba 0f00 	cmp.w	sl, #0
    8bbc:	d048      	beq.n	8c50 <__gethex+0x3c0>
    8bbe:	f8d8 300c 	ldr.w	r3, [r8, #12]
    8bc2:	2b02      	cmp	r3, #2
    8bc4:	d015      	beq.n	8bf2 <__gethex+0x362>
    8bc6:	2b03      	cmp	r3, #3
    8bc8:	d017      	beq.n	8bfa <__gethex+0x36a>
    8bca:	2b01      	cmp	r3, #1
    8bcc:	d109      	bne.n	8be2 <__gethex+0x352>
    8bce:	f01a 0f02 	tst.w	sl, #2
    8bd2:	d006      	beq.n	8be2 <__gethex+0x352>
    8bd4:	f8d9 3000 	ldr.w	r3, [r9]
    8bd8:	ea4a 0a03 	orr.w	sl, sl, r3
    8bdc:	f01a 0f01 	tst.w	sl, #1
    8be0:	d10e      	bne.n	8c00 <__gethex+0x370>
    8be2:	f047 0710 	orr.w	r7, r7, #16
    8be6:	e033      	b.n	8c50 <__gethex+0x3c0>
    8be8:	f04f 0a01 	mov.w	sl, #1
    8bec:	e7d0      	b.n	8b90 <__gethex+0x300>
    8bee:	2701      	movs	r7, #1
    8bf0:	e7e2      	b.n	8bb8 <__gethex+0x328>
    8bf2:	9b15      	ldr	r3, [sp, #84]	; 0x54
    8bf4:	f1c3 0301 	rsb	r3, r3, #1
    8bf8:	9315      	str	r3, [sp, #84]	; 0x54
    8bfa:	9b15      	ldr	r3, [sp, #84]	; 0x54
    8bfc:	2b00      	cmp	r3, #0
    8bfe:	d0f0      	beq.n	8be2 <__gethex+0x352>
    8c00:	f8d4 9010 	ldr.w	r9, [r4, #16]
    8c04:	f104 0314 	add.w	r3, r4, #20
    8c08:	ea4f 0a89 	mov.w	sl, r9, lsl #2
    8c0c:	eb03 010a 	add.w	r1, r3, sl
    8c10:	f04f 0c00 	mov.w	ip, #0
    8c14:	4618      	mov	r0, r3
    8c16:	f853 2b04 	ldr.w	r2, [r3], #4
    8c1a:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
    8c1e:	d01c      	beq.n	8c5a <__gethex+0x3ca>
    8c20:	3201      	adds	r2, #1
    8c22:	6002      	str	r2, [r0, #0]
    8c24:	2f02      	cmp	r7, #2
    8c26:	f104 0314 	add.w	r3, r4, #20
    8c2a:	d138      	bne.n	8c9e <__gethex+0x40e>
    8c2c:	f8d8 2000 	ldr.w	r2, [r8]
    8c30:	3a01      	subs	r2, #1
    8c32:	42b2      	cmp	r2, r6
    8c34:	d10a      	bne.n	8c4c <__gethex+0x3bc>
    8c36:	1171      	asrs	r1, r6, #5
    8c38:	2201      	movs	r2, #1
    8c3a:	f006 061f 	and.w	r6, r6, #31
    8c3e:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
    8c42:	fa02 f606 	lsl.w	r6, r2, r6
    8c46:	421e      	tst	r6, r3
    8c48:	bf18      	it	ne
    8c4a:	4617      	movne	r7, r2
    8c4c:	f047 0720 	orr.w	r7, r7, #32
    8c50:	9b14      	ldr	r3, [sp, #80]	; 0x50
    8c52:	601c      	str	r4, [r3, #0]
    8c54:	9b06      	ldr	r3, [sp, #24]
    8c56:	601d      	str	r5, [r3, #0]
    8c58:	e6a6      	b.n	89a8 <__gethex+0x118>
    8c5a:	4299      	cmp	r1, r3
    8c5c:	f843 cc04 	str.w	ip, [r3, #-4]
    8c60:	d8d8      	bhi.n	8c14 <__gethex+0x384>
    8c62:	68a3      	ldr	r3, [r4, #8]
    8c64:	4599      	cmp	r9, r3
    8c66:	db12      	blt.n	8c8e <__gethex+0x3fe>
    8c68:	6861      	ldr	r1, [r4, #4]
    8c6a:	9802      	ldr	r0, [sp, #8]
    8c6c:	3101      	adds	r1, #1
    8c6e:	f000 f9c3 	bl	8ff8 <_Balloc>
    8c72:	6922      	ldr	r2, [r4, #16]
    8c74:	3202      	adds	r2, #2
    8c76:	f104 010c 	add.w	r1, r4, #12
    8c7a:	4683      	mov	fp, r0
    8c7c:	0092      	lsls	r2, r2, #2
    8c7e:	300c      	adds	r0, #12
    8c80:	f7fc fca4 	bl	55cc <memcpy>
    8c84:	4621      	mov	r1, r4
    8c86:	9802      	ldr	r0, [sp, #8]
    8c88:	f000 f9ea 	bl	9060 <_Bfree>
    8c8c:	465c      	mov	r4, fp
    8c8e:	6923      	ldr	r3, [r4, #16]
    8c90:	1c5a      	adds	r2, r3, #1
    8c92:	eb04 0383 	add.w	r3, r4, r3, lsl #2
    8c96:	6122      	str	r2, [r4, #16]
    8c98:	2201      	movs	r2, #1
    8c9a:	615a      	str	r2, [r3, #20]
    8c9c:	e7c2      	b.n	8c24 <__gethex+0x394>
    8c9e:	6922      	ldr	r2, [r4, #16]
    8ca0:	454a      	cmp	r2, r9
    8ca2:	dd0b      	ble.n	8cbc <__gethex+0x42c>
    8ca4:	2101      	movs	r1, #1
    8ca6:	4620      	mov	r0, r4
    8ca8:	f7ff fda2 	bl	87f0 <rshift>
    8cac:	f8d8 3008 	ldr.w	r3, [r8, #8]
    8cb0:	3501      	adds	r5, #1
    8cb2:	42ab      	cmp	r3, r5
    8cb4:	f6ff aedd 	blt.w	8a72 <__gethex+0x1e2>
    8cb8:	2701      	movs	r7, #1
    8cba:	e7c7      	b.n	8c4c <__gethex+0x3bc>
    8cbc:	f016 061f 	ands.w	r6, r6, #31
    8cc0:	d0fa      	beq.n	8cb8 <__gethex+0x428>
    8cc2:	449a      	add	sl, r3
    8cc4:	f1c6 0620 	rsb	r6, r6, #32
    8cc8:	f85a 0c04 	ldr.w	r0, [sl, #-4]
    8ccc:	f000 fa58 	bl	9180 <__hi0bits>
    8cd0:	42b0      	cmp	r0, r6
    8cd2:	dbe7      	blt.n	8ca4 <__gethex+0x414>
    8cd4:	e7f0      	b.n	8cb8 <__gethex+0x428>
    8cd6:	bf00      	nop

00008cd8 <L_shift>:
L_shift():
    8cd8:	f1c2 0208 	rsb	r2, r2, #8
    8cdc:	0092      	lsls	r2, r2, #2
    8cde:	b570      	push	{r4, r5, r6, lr}
    8ce0:	f1c2 0620 	rsb	r6, r2, #32
    8ce4:	6843      	ldr	r3, [r0, #4]
    8ce6:	6804      	ldr	r4, [r0, #0]
    8ce8:	fa03 f506 	lsl.w	r5, r3, r6
    8cec:	432c      	orrs	r4, r5
    8cee:	40d3      	lsrs	r3, r2
    8cf0:	6004      	str	r4, [r0, #0]
    8cf2:	f840 3f04 	str.w	r3, [r0, #4]!
    8cf6:	4288      	cmp	r0, r1
    8cf8:	d3f4      	bcc.n	8ce4 <L_shift+0xc>
    8cfa:	bd70      	pop	{r4, r5, r6, pc}

00008cfc <__match>:
__match():
    8cfc:	b530      	push	{r4, r5, lr}
    8cfe:	6803      	ldr	r3, [r0, #0]
    8d00:	3301      	adds	r3, #1
    8d02:	f811 4b01 	ldrb.w	r4, [r1], #1
    8d06:	b914      	cbnz	r4, 8d0e <__match+0x12>
    8d08:	6003      	str	r3, [r0, #0]
    8d0a:	2001      	movs	r0, #1
    8d0c:	bd30      	pop	{r4, r5, pc}
    8d0e:	f813 2b01 	ldrb.w	r2, [r3], #1
    8d12:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
    8d16:	2d19      	cmp	r5, #25
    8d18:	bf98      	it	ls
    8d1a:	3220      	addls	r2, #32
    8d1c:	42a2      	cmp	r2, r4
    8d1e:	d0f0      	beq.n	8d02 <__match+0x6>
    8d20:	2000      	movs	r0, #0
    8d22:	e7f3      	b.n	8d0c <__match+0x10>

00008d24 <__hexnan>:
__hexnan():
    8d24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8d28:	680b      	ldr	r3, [r1, #0]
    8d2a:	6801      	ldr	r1, [r0, #0]
    8d2c:	115f      	asrs	r7, r3, #5
    8d2e:	eb02 0787 	add.w	r7, r2, r7, lsl #2
    8d32:	f013 031f 	ands.w	r3, r3, #31
    8d36:	b087      	sub	sp, #28
    8d38:	bf18      	it	ne
    8d3a:	3704      	addne	r7, #4
    8d3c:	2500      	movs	r5, #0
    8d3e:	1f3e      	subs	r6, r7, #4
    8d40:	4682      	mov	sl, r0
    8d42:	4690      	mov	r8, r2
    8d44:	9301      	str	r3, [sp, #4]
    8d46:	f847 5c04 	str.w	r5, [r7, #-4]
    8d4a:	46b1      	mov	r9, r6
    8d4c:	4634      	mov	r4, r6
    8d4e:	9502      	str	r5, [sp, #8]
    8d50:	46ab      	mov	fp, r5
    8d52:	784a      	ldrb	r2, [r1, #1]
    8d54:	1c4b      	adds	r3, r1, #1
    8d56:	9303      	str	r3, [sp, #12]
    8d58:	b342      	cbz	r2, 8dac <__hexnan+0x88>
    8d5a:	4610      	mov	r0, r2
    8d5c:	9105      	str	r1, [sp, #20]
    8d5e:	9204      	str	r2, [sp, #16]
    8d60:	f7ff fd80 	bl	8864 <__hexdig_fun>
    8d64:	2800      	cmp	r0, #0
    8d66:	d143      	bne.n	8df0 <__hexnan+0xcc>
    8d68:	9a04      	ldr	r2, [sp, #16]
    8d6a:	9905      	ldr	r1, [sp, #20]
    8d6c:	2a20      	cmp	r2, #32
    8d6e:	d818      	bhi.n	8da2 <__hexnan+0x7e>
    8d70:	9b02      	ldr	r3, [sp, #8]
    8d72:	459b      	cmp	fp, r3
    8d74:	dd13      	ble.n	8d9e <__hexnan+0x7a>
    8d76:	454c      	cmp	r4, r9
    8d78:	d206      	bcs.n	8d88 <__hexnan+0x64>
    8d7a:	2d07      	cmp	r5, #7
    8d7c:	dc04      	bgt.n	8d88 <__hexnan+0x64>
    8d7e:	462a      	mov	r2, r5
    8d80:	4649      	mov	r1, r9
    8d82:	4620      	mov	r0, r4
    8d84:	f7ff ffa8 	bl	8cd8 <L_shift>
    8d88:	4544      	cmp	r4, r8
    8d8a:	d944      	bls.n	8e16 <__hexnan+0xf2>
    8d8c:	2300      	movs	r3, #0
    8d8e:	f1a4 0904 	sub.w	r9, r4, #4
    8d92:	f844 3c04 	str.w	r3, [r4, #-4]
    8d96:	f8cd b008 	str.w	fp, [sp, #8]
    8d9a:	464c      	mov	r4, r9
    8d9c:	461d      	mov	r5, r3
    8d9e:	9903      	ldr	r1, [sp, #12]
    8da0:	e7d7      	b.n	8d52 <__hexnan+0x2e>
    8da2:	2a29      	cmp	r2, #41	; 0x29
    8da4:	d14a      	bne.n	8e3c <__hexnan+0x118>
    8da6:	3102      	adds	r1, #2
    8da8:	f8ca 1000 	str.w	r1, [sl]
    8dac:	f1bb 0f00 	cmp.w	fp, #0
    8db0:	d044      	beq.n	8e3c <__hexnan+0x118>
    8db2:	454c      	cmp	r4, r9
    8db4:	d206      	bcs.n	8dc4 <__hexnan+0xa0>
    8db6:	2d07      	cmp	r5, #7
    8db8:	dc04      	bgt.n	8dc4 <__hexnan+0xa0>
    8dba:	462a      	mov	r2, r5
    8dbc:	4649      	mov	r1, r9
    8dbe:	4620      	mov	r0, r4
    8dc0:	f7ff ff8a 	bl	8cd8 <L_shift>
    8dc4:	4544      	cmp	r4, r8
    8dc6:	d928      	bls.n	8e1a <__hexnan+0xf6>
    8dc8:	4643      	mov	r3, r8
    8dca:	f854 2b04 	ldr.w	r2, [r4], #4
    8dce:	f843 2b04 	str.w	r2, [r3], #4
    8dd2:	42a6      	cmp	r6, r4
    8dd4:	d2f9      	bcs.n	8dca <__hexnan+0xa6>
    8dd6:	2200      	movs	r2, #0
    8dd8:	f843 2b04 	str.w	r2, [r3], #4
    8ddc:	429e      	cmp	r6, r3
    8dde:	d2fb      	bcs.n	8dd8 <__hexnan+0xb4>
    8de0:	6833      	ldr	r3, [r6, #0]
    8de2:	b91b      	cbnz	r3, 8dec <__hexnan+0xc8>
    8de4:	4546      	cmp	r6, r8
    8de6:	d127      	bne.n	8e38 <__hexnan+0x114>
    8de8:	2301      	movs	r3, #1
    8dea:	6033      	str	r3, [r6, #0]
    8dec:	2005      	movs	r0, #5
    8dee:	e026      	b.n	8e3e <__hexnan+0x11a>
    8df0:	3501      	adds	r5, #1
    8df2:	2d08      	cmp	r5, #8
    8df4:	f10b 0b01 	add.w	fp, fp, #1
    8df8:	dd06      	ble.n	8e08 <__hexnan+0xe4>
    8dfa:	4544      	cmp	r4, r8
    8dfc:	d9cf      	bls.n	8d9e <__hexnan+0x7a>
    8dfe:	2300      	movs	r3, #0
    8e00:	f844 3c04 	str.w	r3, [r4, #-4]
    8e04:	2501      	movs	r5, #1
    8e06:	3c04      	subs	r4, #4
    8e08:	6822      	ldr	r2, [r4, #0]
    8e0a:	f000 000f 	and.w	r0, r0, #15
    8e0e:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
    8e12:	6020      	str	r0, [r4, #0]
    8e14:	e7c3      	b.n	8d9e <__hexnan+0x7a>
    8e16:	2508      	movs	r5, #8
    8e18:	e7c1      	b.n	8d9e <__hexnan+0x7a>
    8e1a:	9b01      	ldr	r3, [sp, #4]
    8e1c:	2b00      	cmp	r3, #0
    8e1e:	d0df      	beq.n	8de0 <__hexnan+0xbc>
    8e20:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    8e24:	f1c3 0320 	rsb	r3, r3, #32
    8e28:	fa22 f303 	lsr.w	r3, r2, r3
    8e2c:	f857 2c04 	ldr.w	r2, [r7, #-4]
    8e30:	401a      	ands	r2, r3
    8e32:	f847 2c04 	str.w	r2, [r7, #-4]
    8e36:	e7d3      	b.n	8de0 <__hexnan+0xbc>
    8e38:	3e04      	subs	r6, #4
    8e3a:	e7d1      	b.n	8de0 <__hexnan+0xbc>
    8e3c:	2004      	movs	r0, #4
    8e3e:	b007      	add	sp, #28
    8e40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00008e44 <_localeconv_r>:
_localeconv_r():
    8e44:	4800      	ldr	r0, [pc, #0]	; (8e48 <_localeconv_r+0x4>)
    8e46:	4770      	bx	lr
    8e48:	100002a8 	.word	0x100002a8

00008e4c <__swhatbuf_r>:
__swhatbuf_r():
    8e4c:	b570      	push	{r4, r5, r6, lr}
    8e4e:	460e      	mov	r6, r1
    8e50:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    8e54:	2900      	cmp	r1, #0
    8e56:	b096      	sub	sp, #88	; 0x58
    8e58:	4614      	mov	r4, r2
    8e5a:	461d      	mov	r5, r3
    8e5c:	da07      	bge.n	8e6e <__swhatbuf_r+0x22>
    8e5e:	2300      	movs	r3, #0
    8e60:	602b      	str	r3, [r5, #0]
    8e62:	89b3      	ldrh	r3, [r6, #12]
    8e64:	061a      	lsls	r2, r3, #24
    8e66:	d410      	bmi.n	8e8a <__swhatbuf_r+0x3e>
    8e68:	f44f 6380 	mov.w	r3, #1024	; 0x400
    8e6c:	e00e      	b.n	8e8c <__swhatbuf_r+0x40>
    8e6e:	466a      	mov	r2, sp
    8e70:	f000 febc 	bl	9bec <_fstat_r>
    8e74:	2800      	cmp	r0, #0
    8e76:	dbf2      	blt.n	8e5e <__swhatbuf_r+0x12>
    8e78:	9a01      	ldr	r2, [sp, #4]
    8e7a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
    8e7e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
    8e82:	425a      	negs	r2, r3
    8e84:	415a      	adcs	r2, r3
    8e86:	602a      	str	r2, [r5, #0]
    8e88:	e7ee      	b.n	8e68 <__swhatbuf_r+0x1c>
    8e8a:	2340      	movs	r3, #64	; 0x40
    8e8c:	2000      	movs	r0, #0
    8e8e:	6023      	str	r3, [r4, #0]
    8e90:	b016      	add	sp, #88	; 0x58
    8e92:	bd70      	pop	{r4, r5, r6, pc}

00008e94 <__smakebuf_r>:
__smakebuf_r():
    8e94:	898b      	ldrh	r3, [r1, #12]
    8e96:	b573      	push	{r0, r1, r4, r5, r6, lr}
    8e98:	079d      	lsls	r5, r3, #30
    8e9a:	4606      	mov	r6, r0
    8e9c:	460c      	mov	r4, r1
    8e9e:	d507      	bpl.n	8eb0 <__smakebuf_r+0x1c>
    8ea0:	f104 0347 	add.w	r3, r4, #71	; 0x47
    8ea4:	6023      	str	r3, [r4, #0]
    8ea6:	6123      	str	r3, [r4, #16]
    8ea8:	2301      	movs	r3, #1
    8eaa:	6163      	str	r3, [r4, #20]
    8eac:	b002      	add	sp, #8
    8eae:	bd70      	pop	{r4, r5, r6, pc}
    8eb0:	ab01      	add	r3, sp, #4
    8eb2:	466a      	mov	r2, sp
    8eb4:	f7ff ffca 	bl	8e4c <__swhatbuf_r>
    8eb8:	9900      	ldr	r1, [sp, #0]
    8eba:	4605      	mov	r5, r0
    8ebc:	4630      	mov	r0, r6
    8ebe:	f7fc fc03 	bl	56c8 <_malloc_r>
    8ec2:	b948      	cbnz	r0, 8ed8 <__smakebuf_r+0x44>
    8ec4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    8ec8:	059a      	lsls	r2, r3, #22
    8eca:	d4ef      	bmi.n	8eac <__smakebuf_r+0x18>
    8ecc:	f023 0303 	bic.w	r3, r3, #3
    8ed0:	f043 0302 	orr.w	r3, r3, #2
    8ed4:	81a3      	strh	r3, [r4, #12]
    8ed6:	e7e3      	b.n	8ea0 <__smakebuf_r+0xc>
    8ed8:	4b0d      	ldr	r3, [pc, #52]	; (8f10 <__smakebuf_r+0x7c>)
    8eda:	62b3      	str	r3, [r6, #40]	; 0x28
    8edc:	89a3      	ldrh	r3, [r4, #12]
    8ede:	6020      	str	r0, [r4, #0]
    8ee0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    8ee4:	81a3      	strh	r3, [r4, #12]
    8ee6:	9b00      	ldr	r3, [sp, #0]
    8ee8:	6163      	str	r3, [r4, #20]
    8eea:	9b01      	ldr	r3, [sp, #4]
    8eec:	6120      	str	r0, [r4, #16]
    8eee:	b15b      	cbz	r3, 8f08 <__smakebuf_r+0x74>
    8ef0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    8ef4:	4630      	mov	r0, r6
    8ef6:	f000 fe8b 	bl	9c10 <_isatty_r>
    8efa:	b128      	cbz	r0, 8f08 <__smakebuf_r+0x74>
    8efc:	89a3      	ldrh	r3, [r4, #12]
    8efe:	f023 0303 	bic.w	r3, r3, #3
    8f02:	f043 0301 	orr.w	r3, r3, #1
    8f06:	81a3      	strh	r3, [r4, #12]
    8f08:	89a3      	ldrh	r3, [r4, #12]
    8f0a:	431d      	orrs	r5, r3
    8f0c:	81a5      	strh	r5, [r4, #12]
    8f0e:	e7cd      	b.n	8eac <__smakebuf_r+0x18>
    8f10:	00008651 	.word	0x00008651

00008f14 <__ascii_mbtowc>:
__ascii_mbtowc():
    8f14:	b082      	sub	sp, #8
    8f16:	b901      	cbnz	r1, 8f1a <__ascii_mbtowc+0x6>
    8f18:	a901      	add	r1, sp, #4
    8f1a:	b142      	cbz	r2, 8f2e <__ascii_mbtowc+0x1a>
    8f1c:	b14b      	cbz	r3, 8f32 <__ascii_mbtowc+0x1e>
    8f1e:	7813      	ldrb	r3, [r2, #0]
    8f20:	600b      	str	r3, [r1, #0]
    8f22:	7812      	ldrb	r2, [r2, #0]
    8f24:	1c10      	adds	r0, r2, #0
    8f26:	bf18      	it	ne
    8f28:	2001      	movne	r0, #1
    8f2a:	b002      	add	sp, #8
    8f2c:	4770      	bx	lr
    8f2e:	4610      	mov	r0, r2
    8f30:	e7fb      	b.n	8f2a <__ascii_mbtowc+0x16>
    8f32:	f06f 0001 	mvn.w	r0, #1
    8f36:	e7f8      	b.n	8f2a <__ascii_mbtowc+0x16>
    8f38:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
    8f3c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff

00008f40 <memchr>:
memchr():
    8f40:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    8f44:	2a10      	cmp	r2, #16
    8f46:	db2b      	blt.n	8fa0 <memchr+0x60>
    8f48:	f010 0f07 	tst.w	r0, #7
    8f4c:	d008      	beq.n	8f60 <memchr+0x20>
    8f4e:	f810 3b01 	ldrb.w	r3, [r0], #1
    8f52:	3a01      	subs	r2, #1
    8f54:	428b      	cmp	r3, r1
    8f56:	d02d      	beq.n	8fb4 <memchr+0x74>
    8f58:	f010 0f07 	tst.w	r0, #7
    8f5c:	b342      	cbz	r2, 8fb0 <memchr+0x70>
    8f5e:	d1f6      	bne.n	8f4e <memchr+0xe>
    8f60:	b4f0      	push	{r4, r5, r6, r7}
    8f62:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
    8f66:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
    8f6a:	f022 0407 	bic.w	r4, r2, #7
    8f6e:	f07f 0700 	mvns.w	r7, #0
    8f72:	2300      	movs	r3, #0
    8f74:	e8f0 5602 	ldrd	r5, r6, [r0], #8
    8f78:	3c08      	subs	r4, #8
    8f7a:	ea85 0501 	eor.w	r5, r5, r1
    8f7e:	ea86 0601 	eor.w	r6, r6, r1
    8f82:	fa85 f547 	uadd8	r5, r5, r7
    8f86:	faa3 f587 	sel	r5, r3, r7
    8f8a:	fa86 f647 	uadd8	r6, r6, r7
    8f8e:	faa5 f687 	sel	r6, r5, r7
    8f92:	b98e      	cbnz	r6, 8fb8 <memchr+0x78>
    8f94:	d1ee      	bne.n	8f74 <memchr+0x34>
    8f96:	bcf0      	pop	{r4, r5, r6, r7}
    8f98:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    8f9c:	f002 0207 	and.w	r2, r2, #7
    8fa0:	b132      	cbz	r2, 8fb0 <memchr+0x70>
    8fa2:	f810 3b01 	ldrb.w	r3, [r0], #1
    8fa6:	3a01      	subs	r2, #1
    8fa8:	ea83 0301 	eor.w	r3, r3, r1
    8fac:	b113      	cbz	r3, 8fb4 <memchr+0x74>
    8fae:	d1f8      	bne.n	8fa2 <memchr+0x62>
    8fb0:	2000      	movs	r0, #0
    8fb2:	4770      	bx	lr
    8fb4:	3801      	subs	r0, #1
    8fb6:	4770      	bx	lr
    8fb8:	2d00      	cmp	r5, #0
    8fba:	bf06      	itte	eq
    8fbc:	4635      	moveq	r5, r6
    8fbe:	3803      	subeq	r0, #3
    8fc0:	3807      	subne	r0, #7
    8fc2:	f015 0f01 	tst.w	r5, #1
    8fc6:	d107      	bne.n	8fd8 <memchr+0x98>
    8fc8:	3001      	adds	r0, #1
    8fca:	f415 7f80 	tst.w	r5, #256	; 0x100
    8fce:	bf02      	ittt	eq
    8fd0:	3001      	addeq	r0, #1
    8fd2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
    8fd6:	3001      	addeq	r0, #1
    8fd8:	bcf0      	pop	{r4, r5, r6, r7}
    8fda:	3801      	subs	r0, #1
    8fdc:	4770      	bx	lr
    8fde:	bf00      	nop

00008fe0 <__malloc_lock>:
__malloc_lock():
    8fe0:	4801      	ldr	r0, [pc, #4]	; (8fe8 <__malloc_lock+0x8>)
    8fe2:	f7fc bae0 	b.w	55a6 <__retarget_lock_acquire_recursive>
    8fe6:	bf00      	nop
    8fe8:	10000bac 	.word	0x10000bac

00008fec <__malloc_unlock>:
__malloc_unlock():
    8fec:	4801      	ldr	r0, [pc, #4]	; (8ff4 <__malloc_unlock+0x8>)
    8fee:	f7fc badb 	b.w	55a8 <__retarget_lock_release_recursive>
    8ff2:	bf00      	nop
    8ff4:	10000bac 	.word	0x10000bac

00008ff8 <_Balloc>:
_Balloc():
    8ff8:	b570      	push	{r4, r5, r6, lr}
    8ffa:	6a45      	ldr	r5, [r0, #36]	; 0x24
    8ffc:	4604      	mov	r4, r0
    8ffe:	460e      	mov	r6, r1
    9000:	b93d      	cbnz	r5, 9012 <_Balloc+0x1a>
    9002:	2010      	movs	r0, #16
    9004:	f7fc fad2 	bl	55ac <malloc>
    9008:	e9c0 5501 	strd	r5, r5, [r0, #4]
    900c:	6260      	str	r0, [r4, #36]	; 0x24
    900e:	6005      	str	r5, [r0, #0]
    9010:	60c5      	str	r5, [r0, #12]
    9012:	6a65      	ldr	r5, [r4, #36]	; 0x24
    9014:	68eb      	ldr	r3, [r5, #12]
    9016:	b183      	cbz	r3, 903a <_Balloc+0x42>
    9018:	6a63      	ldr	r3, [r4, #36]	; 0x24
    901a:	68db      	ldr	r3, [r3, #12]
    901c:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
    9020:	b9b8      	cbnz	r0, 9052 <_Balloc+0x5a>
    9022:	2101      	movs	r1, #1
    9024:	fa01 f506 	lsl.w	r5, r1, r6
    9028:	1d6a      	adds	r2, r5, #5
    902a:	0092      	lsls	r2, r2, #2
    902c:	4620      	mov	r0, r4
    902e:	f000 fbdb 	bl	97e8 <_calloc_r>
    9032:	b160      	cbz	r0, 904e <_Balloc+0x56>
    9034:	e9c0 6501 	strd	r6, r5, [r0, #4]
    9038:	e00e      	b.n	9058 <_Balloc+0x60>
    903a:	2221      	movs	r2, #33	; 0x21
    903c:	2104      	movs	r1, #4
    903e:	4620      	mov	r0, r4
    9040:	f000 fbd2 	bl	97e8 <_calloc_r>
    9044:	6a63      	ldr	r3, [r4, #36]	; 0x24
    9046:	60e8      	str	r0, [r5, #12]
    9048:	68db      	ldr	r3, [r3, #12]
    904a:	2b00      	cmp	r3, #0
    904c:	d1e4      	bne.n	9018 <_Balloc+0x20>
    904e:	2000      	movs	r0, #0
    9050:	bd70      	pop	{r4, r5, r6, pc}
    9052:	6802      	ldr	r2, [r0, #0]
    9054:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
    9058:	2300      	movs	r3, #0
    905a:	e9c0 3303 	strd	r3, r3, [r0, #12]
    905e:	e7f7      	b.n	9050 <_Balloc+0x58>

00009060 <_Bfree>:
_Bfree():
    9060:	b570      	push	{r4, r5, r6, lr}
    9062:	6a44      	ldr	r4, [r0, #36]	; 0x24
    9064:	4606      	mov	r6, r0
    9066:	460d      	mov	r5, r1
    9068:	b93c      	cbnz	r4, 907a <_Bfree+0x1a>
    906a:	2010      	movs	r0, #16
    906c:	f7fc fa9e 	bl	55ac <malloc>
    9070:	e9c0 4401 	strd	r4, r4, [r0, #4]
    9074:	6270      	str	r0, [r6, #36]	; 0x24
    9076:	6004      	str	r4, [r0, #0]
    9078:	60c4      	str	r4, [r0, #12]
    907a:	b13d      	cbz	r5, 908c <_Bfree+0x2c>
    907c:	6a73      	ldr	r3, [r6, #36]	; 0x24
    907e:	686a      	ldr	r2, [r5, #4]
    9080:	68db      	ldr	r3, [r3, #12]
    9082:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
    9086:	6029      	str	r1, [r5, #0]
    9088:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
    908c:	bd70      	pop	{r4, r5, r6, pc}

0000908e <__multadd>:
__multadd():
    908e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    9092:	690d      	ldr	r5, [r1, #16]
    9094:	461f      	mov	r7, r3
    9096:	4606      	mov	r6, r0
    9098:	460c      	mov	r4, r1
    909a:	f101 0c14 	add.w	ip, r1, #20
    909e:	2300      	movs	r3, #0
    90a0:	f8dc 0000 	ldr.w	r0, [ip]
    90a4:	b281      	uxth	r1, r0
    90a6:	fb02 7101 	mla	r1, r2, r1, r7
    90aa:	0c0f      	lsrs	r7, r1, #16
    90ac:	0c00      	lsrs	r0, r0, #16
    90ae:	fb02 7000 	mla	r0, r2, r0, r7
    90b2:	b289      	uxth	r1, r1
    90b4:	3301      	adds	r3, #1
    90b6:	eb01 4100 	add.w	r1, r1, r0, lsl #16
    90ba:	429d      	cmp	r5, r3
    90bc:	ea4f 4710 	mov.w	r7, r0, lsr #16
    90c0:	f84c 1b04 	str.w	r1, [ip], #4
    90c4:	dcec      	bgt.n	90a0 <__multadd+0x12>
    90c6:	b1d7      	cbz	r7, 90fe <__multadd+0x70>
    90c8:	68a3      	ldr	r3, [r4, #8]
    90ca:	42ab      	cmp	r3, r5
    90cc:	dc12      	bgt.n	90f4 <__multadd+0x66>
    90ce:	6861      	ldr	r1, [r4, #4]
    90d0:	4630      	mov	r0, r6
    90d2:	3101      	adds	r1, #1
    90d4:	f7ff ff90 	bl	8ff8 <_Balloc>
    90d8:	6922      	ldr	r2, [r4, #16]
    90da:	3202      	adds	r2, #2
    90dc:	f104 010c 	add.w	r1, r4, #12
    90e0:	4680      	mov	r8, r0
    90e2:	0092      	lsls	r2, r2, #2
    90e4:	300c      	adds	r0, #12
    90e6:	f7fc fa71 	bl	55cc <memcpy>
    90ea:	4621      	mov	r1, r4
    90ec:	4630      	mov	r0, r6
    90ee:	f7ff ffb7 	bl	9060 <_Bfree>
    90f2:	4644      	mov	r4, r8
    90f4:	eb04 0385 	add.w	r3, r4, r5, lsl #2
    90f8:	3501      	adds	r5, #1
    90fa:	615f      	str	r7, [r3, #20]
    90fc:	6125      	str	r5, [r4, #16]
    90fe:	4620      	mov	r0, r4
    9100:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00009104 <__s2b>:
__s2b():
    9104:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    9108:	460c      	mov	r4, r1
    910a:	4615      	mov	r5, r2
    910c:	461f      	mov	r7, r3
    910e:	2209      	movs	r2, #9
    9110:	3308      	adds	r3, #8
    9112:	4606      	mov	r6, r0
    9114:	fb93 f3f2 	sdiv	r3, r3, r2
    9118:	2100      	movs	r1, #0
    911a:	2201      	movs	r2, #1
    911c:	429a      	cmp	r2, r3
    911e:	db20      	blt.n	9162 <__s2b+0x5e>
    9120:	4630      	mov	r0, r6
    9122:	f7ff ff69 	bl	8ff8 <_Balloc>
    9126:	9b08      	ldr	r3, [sp, #32]
    9128:	6143      	str	r3, [r0, #20]
    912a:	2d09      	cmp	r5, #9
    912c:	f04f 0301 	mov.w	r3, #1
    9130:	6103      	str	r3, [r0, #16]
    9132:	dd19      	ble.n	9168 <__s2b+0x64>
    9134:	f104 0909 	add.w	r9, r4, #9
    9138:	46c8      	mov	r8, r9
    913a:	442c      	add	r4, r5
    913c:	f818 3b01 	ldrb.w	r3, [r8], #1
    9140:	4601      	mov	r1, r0
    9142:	3b30      	subs	r3, #48	; 0x30
    9144:	220a      	movs	r2, #10
    9146:	4630      	mov	r0, r6
    9148:	f7ff ffa1 	bl	908e <__multadd>
    914c:	45a0      	cmp	r8, r4
    914e:	d1f5      	bne.n	913c <__s2b+0x38>
    9150:	f1a5 0408 	sub.w	r4, r5, #8
    9154:	444c      	add	r4, r9
    9156:	1b2d      	subs	r5, r5, r4
    9158:	1963      	adds	r3, r4, r5
    915a:	42bb      	cmp	r3, r7
    915c:	db07      	blt.n	916e <__s2b+0x6a>
    915e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    9162:	0052      	lsls	r2, r2, #1
    9164:	3101      	adds	r1, #1
    9166:	e7d9      	b.n	911c <__s2b+0x18>
    9168:	340a      	adds	r4, #10
    916a:	2509      	movs	r5, #9
    916c:	e7f3      	b.n	9156 <__s2b+0x52>
    916e:	f814 3b01 	ldrb.w	r3, [r4], #1
    9172:	4601      	mov	r1, r0
    9174:	3b30      	subs	r3, #48	; 0x30
    9176:	220a      	movs	r2, #10
    9178:	4630      	mov	r0, r6
    917a:	f7ff ff88 	bl	908e <__multadd>
    917e:	e7eb      	b.n	9158 <__s2b+0x54>

00009180 <__hi0bits>:
__hi0bits():
    9180:	0c02      	lsrs	r2, r0, #16
    9182:	0412      	lsls	r2, r2, #16
    9184:	4603      	mov	r3, r0
    9186:	b9ca      	cbnz	r2, 91bc <__hi0bits+0x3c>
    9188:	0403      	lsls	r3, r0, #16
    918a:	2010      	movs	r0, #16
    918c:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
    9190:	bf04      	itt	eq
    9192:	021b      	lsleq	r3, r3, #8
    9194:	3008      	addeq	r0, #8
    9196:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
    919a:	bf04      	itt	eq
    919c:	011b      	lsleq	r3, r3, #4
    919e:	3004      	addeq	r0, #4
    91a0:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
    91a4:	bf04      	itt	eq
    91a6:	009b      	lsleq	r3, r3, #2
    91a8:	3002      	addeq	r0, #2
    91aa:	2b00      	cmp	r3, #0
    91ac:	db05      	blt.n	91ba <__hi0bits+0x3a>
    91ae:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
    91b2:	f100 0001 	add.w	r0, r0, #1
    91b6:	bf08      	it	eq
    91b8:	2020      	moveq	r0, #32
    91ba:	4770      	bx	lr
    91bc:	2000      	movs	r0, #0
    91be:	e7e5      	b.n	918c <__hi0bits+0xc>

000091c0 <__lo0bits>:
__lo0bits():
    91c0:	6803      	ldr	r3, [r0, #0]
    91c2:	f013 0207 	ands.w	r2, r3, #7
    91c6:	4601      	mov	r1, r0
    91c8:	d00b      	beq.n	91e2 <__lo0bits+0x22>
    91ca:	07da      	lsls	r2, r3, #31
    91cc:	d424      	bmi.n	9218 <__lo0bits+0x58>
    91ce:	0798      	lsls	r0, r3, #30
    91d0:	bf49      	itett	mi
    91d2:	085b      	lsrmi	r3, r3, #1
    91d4:	089b      	lsrpl	r3, r3, #2
    91d6:	2001      	movmi	r0, #1
    91d8:	600b      	strmi	r3, [r1, #0]
    91da:	bf5c      	itt	pl
    91dc:	600b      	strpl	r3, [r1, #0]
    91de:	2002      	movpl	r0, #2
    91e0:	4770      	bx	lr
    91e2:	b298      	uxth	r0, r3
    91e4:	b9b0      	cbnz	r0, 9214 <__lo0bits+0x54>
    91e6:	0c1b      	lsrs	r3, r3, #16
    91e8:	2010      	movs	r0, #16
    91ea:	f013 0fff 	tst.w	r3, #255	; 0xff
    91ee:	bf04      	itt	eq
    91f0:	0a1b      	lsreq	r3, r3, #8
    91f2:	3008      	addeq	r0, #8
    91f4:	071a      	lsls	r2, r3, #28
    91f6:	bf04      	itt	eq
    91f8:	091b      	lsreq	r3, r3, #4
    91fa:	3004      	addeq	r0, #4
    91fc:	079a      	lsls	r2, r3, #30
    91fe:	bf04      	itt	eq
    9200:	089b      	lsreq	r3, r3, #2
    9202:	3002      	addeq	r0, #2
    9204:	07da      	lsls	r2, r3, #31
    9206:	d403      	bmi.n	9210 <__lo0bits+0x50>
    9208:	085b      	lsrs	r3, r3, #1
    920a:	f100 0001 	add.w	r0, r0, #1
    920e:	d005      	beq.n	921c <__lo0bits+0x5c>
    9210:	600b      	str	r3, [r1, #0]
    9212:	4770      	bx	lr
    9214:	4610      	mov	r0, r2
    9216:	e7e8      	b.n	91ea <__lo0bits+0x2a>
    9218:	2000      	movs	r0, #0
    921a:	4770      	bx	lr
    921c:	2020      	movs	r0, #32
    921e:	4770      	bx	lr

00009220 <__i2b>:
__i2b():
    9220:	b510      	push	{r4, lr}
    9222:	460c      	mov	r4, r1
    9224:	2101      	movs	r1, #1
    9226:	f7ff fee7 	bl	8ff8 <_Balloc>
    922a:	2201      	movs	r2, #1
    922c:	6144      	str	r4, [r0, #20]
    922e:	6102      	str	r2, [r0, #16]
    9230:	bd10      	pop	{r4, pc}

00009232 <__multiply>:
__multiply():
    9232:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9236:	4690      	mov	r8, r2
    9238:	690a      	ldr	r2, [r1, #16]
    923a:	f8d8 3010 	ldr.w	r3, [r8, #16]
    923e:	429a      	cmp	r2, r3
    9240:	bfb8      	it	lt
    9242:	460b      	movlt	r3, r1
    9244:	460c      	mov	r4, r1
    9246:	bfbc      	itt	lt
    9248:	4644      	movlt	r4, r8
    924a:	4698      	movlt	r8, r3
    924c:	6927      	ldr	r7, [r4, #16]
    924e:	f8d8 9010 	ldr.w	r9, [r8, #16]
    9252:	68a3      	ldr	r3, [r4, #8]
    9254:	6861      	ldr	r1, [r4, #4]
    9256:	eb07 0609 	add.w	r6, r7, r9
    925a:	42b3      	cmp	r3, r6
    925c:	bfb8      	it	lt
    925e:	3101      	addlt	r1, #1
    9260:	f7ff feca 	bl	8ff8 <_Balloc>
    9264:	f100 0514 	add.w	r5, r0, #20
    9268:	eb05 0e86 	add.w	lr, r5, r6, lsl #2
    926c:	462b      	mov	r3, r5
    926e:	2200      	movs	r2, #0
    9270:	4573      	cmp	r3, lr
    9272:	d316      	bcc.n	92a2 <__multiply+0x70>
    9274:	f104 0314 	add.w	r3, r4, #20
    9278:	f108 0214 	add.w	r2, r8, #20
    927c:	eb03 0787 	add.w	r7, r3, r7, lsl #2
    9280:	eb02 0389 	add.w	r3, r2, r9, lsl #2
    9284:	9300      	str	r3, [sp, #0]
    9286:	9b00      	ldr	r3, [sp, #0]
    9288:	9201      	str	r2, [sp, #4]
    928a:	4293      	cmp	r3, r2
    928c:	d80c      	bhi.n	92a8 <__multiply+0x76>
    928e:	2e00      	cmp	r6, #0
    9290:	dd03      	ble.n	929a <__multiply+0x68>
    9292:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
    9296:	2b00      	cmp	r3, #0
    9298:	d059      	beq.n	934e <__multiply+0x11c>
    929a:	6106      	str	r6, [r0, #16]
    929c:	b003      	add	sp, #12
    929e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    92a2:	f843 2b04 	str.w	r2, [r3], #4
    92a6:	e7e3      	b.n	9270 <__multiply+0x3e>
    92a8:	f8b2 a000 	ldrh.w	sl, [r2]
    92ac:	f1ba 0f00 	cmp.w	sl, #0
    92b0:	d023      	beq.n	92fa <__multiply+0xc8>
    92b2:	f104 0914 	add.w	r9, r4, #20
    92b6:	46ac      	mov	ip, r5
    92b8:	f04f 0800 	mov.w	r8, #0
    92bc:	f859 1b04 	ldr.w	r1, [r9], #4
    92c0:	f8dc b000 	ldr.w	fp, [ip]
    92c4:	b28b      	uxth	r3, r1
    92c6:	fa1f fb8b 	uxth.w	fp, fp
    92ca:	fb0a b303 	mla	r3, sl, r3, fp
    92ce:	ea4f 4b11 	mov.w	fp, r1, lsr #16
    92d2:	f8dc 1000 	ldr.w	r1, [ip]
    92d6:	4443      	add	r3, r8
    92d8:	ea4f 4811 	mov.w	r8, r1, lsr #16
    92dc:	fb0a 810b 	mla	r1, sl, fp, r8
    92e0:	eb01 4113 	add.w	r1, r1, r3, lsr #16
    92e4:	b29b      	uxth	r3, r3
    92e6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
    92ea:	454f      	cmp	r7, r9
    92ec:	ea4f 4811 	mov.w	r8, r1, lsr #16
    92f0:	f84c 3b04 	str.w	r3, [ip], #4
    92f4:	d8e2      	bhi.n	92bc <__multiply+0x8a>
    92f6:	f8cc 8000 	str.w	r8, [ip]
    92fa:	9b01      	ldr	r3, [sp, #4]
    92fc:	f8b3 9002 	ldrh.w	r9, [r3, #2]
    9300:	3204      	adds	r2, #4
    9302:	f1b9 0f00 	cmp.w	r9, #0
    9306:	d020      	beq.n	934a <__multiply+0x118>
    9308:	682b      	ldr	r3, [r5, #0]
    930a:	f104 0814 	add.w	r8, r4, #20
    930e:	46ac      	mov	ip, r5
    9310:	f04f 0a00 	mov.w	sl, #0
    9314:	f8b8 1000 	ldrh.w	r1, [r8]
    9318:	f8bc b002 	ldrh.w	fp, [ip, #2]
    931c:	fb09 b101 	mla	r1, r9, r1, fp
    9320:	448a      	add	sl, r1
    9322:	b29b      	uxth	r3, r3
    9324:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
    9328:	f84c 3b04 	str.w	r3, [ip], #4
    932c:	f858 3b04 	ldr.w	r3, [r8], #4
    9330:	f8bc 1000 	ldrh.w	r1, [ip]
    9334:	0c1b      	lsrs	r3, r3, #16
    9336:	fb09 1303 	mla	r3, r9, r3, r1
    933a:	eb03 431a 	add.w	r3, r3, sl, lsr #16
    933e:	4547      	cmp	r7, r8
    9340:	ea4f 4a13 	mov.w	sl, r3, lsr #16
    9344:	d8e6      	bhi.n	9314 <__multiply+0xe2>
    9346:	f8cc 3000 	str.w	r3, [ip]
    934a:	3504      	adds	r5, #4
    934c:	e79b      	b.n	9286 <__multiply+0x54>
    934e:	3e01      	subs	r6, #1
    9350:	e79d      	b.n	928e <__multiply+0x5c>
    9352:	Address 0x0000000000009352 is out of bounds.


00009354 <__pow5mult>:
__pow5mult():
    9354:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    9358:	4615      	mov	r5, r2
    935a:	f012 0203 	ands.w	r2, r2, #3
    935e:	4606      	mov	r6, r0
    9360:	460f      	mov	r7, r1
    9362:	d007      	beq.n	9374 <__pow5mult+0x20>
    9364:	3a01      	subs	r2, #1
    9366:	4c21      	ldr	r4, [pc, #132]	; (93ec <__pow5mult+0x98>)
    9368:	2300      	movs	r3, #0
    936a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
    936e:	f7ff fe8e 	bl	908e <__multadd>
    9372:	4607      	mov	r7, r0
    9374:	10ad      	asrs	r5, r5, #2
    9376:	d035      	beq.n	93e4 <__pow5mult+0x90>
    9378:	6a74      	ldr	r4, [r6, #36]	; 0x24
    937a:	b93c      	cbnz	r4, 938c <__pow5mult+0x38>
    937c:	2010      	movs	r0, #16
    937e:	f7fc f915 	bl	55ac <malloc>
    9382:	e9c0 4401 	strd	r4, r4, [r0, #4]
    9386:	6270      	str	r0, [r6, #36]	; 0x24
    9388:	6004      	str	r4, [r0, #0]
    938a:	60c4      	str	r4, [r0, #12]
    938c:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
    9390:	f8d8 4008 	ldr.w	r4, [r8, #8]
    9394:	b94c      	cbnz	r4, 93aa <__pow5mult+0x56>
    9396:	f240 2171 	movw	r1, #625	; 0x271
    939a:	4630      	mov	r0, r6
    939c:	f7ff ff40 	bl	9220 <__i2b>
    93a0:	2300      	movs	r3, #0
    93a2:	f8c8 0008 	str.w	r0, [r8, #8]
    93a6:	4604      	mov	r4, r0
    93a8:	6003      	str	r3, [r0, #0]
    93aa:	f04f 0800 	mov.w	r8, #0
    93ae:	07eb      	lsls	r3, r5, #31
    93b0:	d50a      	bpl.n	93c8 <__pow5mult+0x74>
    93b2:	4639      	mov	r1, r7
    93b4:	4622      	mov	r2, r4
    93b6:	4630      	mov	r0, r6
    93b8:	f7ff ff3b 	bl	9232 <__multiply>
    93bc:	4639      	mov	r1, r7
    93be:	4681      	mov	r9, r0
    93c0:	4630      	mov	r0, r6
    93c2:	f7ff fe4d 	bl	9060 <_Bfree>
    93c6:	464f      	mov	r7, r9
    93c8:	106d      	asrs	r5, r5, #1
    93ca:	d00b      	beq.n	93e4 <__pow5mult+0x90>
    93cc:	6820      	ldr	r0, [r4, #0]
    93ce:	b938      	cbnz	r0, 93e0 <__pow5mult+0x8c>
    93d0:	4622      	mov	r2, r4
    93d2:	4621      	mov	r1, r4
    93d4:	4630      	mov	r0, r6
    93d6:	f7ff ff2c 	bl	9232 <__multiply>
    93da:	6020      	str	r0, [r4, #0]
    93dc:	f8c0 8000 	str.w	r8, [r0]
    93e0:	4604      	mov	r4, r0
    93e2:	e7e4      	b.n	93ae <__pow5mult+0x5a>
    93e4:	4638      	mov	r0, r7
    93e6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    93ea:	bf00      	nop
    93ec:	0000ba20 	.word	0x0000ba20

000093f0 <__lshift>:
__lshift():
    93f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    93f4:	460c      	mov	r4, r1
    93f6:	ea4f 1a62 	mov.w	sl, r2, asr #5
    93fa:	6923      	ldr	r3, [r4, #16]
    93fc:	6849      	ldr	r1, [r1, #4]
    93fe:	eb0a 0903 	add.w	r9, sl, r3
    9402:	68a3      	ldr	r3, [r4, #8]
    9404:	4607      	mov	r7, r0
    9406:	4616      	mov	r6, r2
    9408:	f109 0501 	add.w	r5, r9, #1
    940c:	42ab      	cmp	r3, r5
    940e:	db33      	blt.n	9478 <__lshift+0x88>
    9410:	4638      	mov	r0, r7
    9412:	f7ff fdf1 	bl	8ff8 <_Balloc>
    9416:	2300      	movs	r3, #0
    9418:	4680      	mov	r8, r0
    941a:	f100 0114 	add.w	r1, r0, #20
    941e:	f100 0210 	add.w	r2, r0, #16
    9422:	4618      	mov	r0, r3
    9424:	4553      	cmp	r3, sl
    9426:	db2a      	blt.n	947e <__lshift+0x8e>
    9428:	6920      	ldr	r0, [r4, #16]
    942a:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
    942e:	f104 0314 	add.w	r3, r4, #20
    9432:	f016 021f 	ands.w	r2, r6, #31
    9436:	eb01 018a 	add.w	r1, r1, sl, lsl #2
    943a:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
    943e:	d022      	beq.n	9486 <__lshift+0x96>
    9440:	f1c2 0e20 	rsb	lr, r2, #32
    9444:	2000      	movs	r0, #0
    9446:	681e      	ldr	r6, [r3, #0]
    9448:	4096      	lsls	r6, r2
    944a:	4330      	orrs	r0, r6
    944c:	f841 0b04 	str.w	r0, [r1], #4
    9450:	f853 0b04 	ldr.w	r0, [r3], #4
    9454:	459c      	cmp	ip, r3
    9456:	fa20 f00e 	lsr.w	r0, r0, lr
    945a:	d8f4      	bhi.n	9446 <__lshift+0x56>
    945c:	6008      	str	r0, [r1, #0]
    945e:	b108      	cbz	r0, 9464 <__lshift+0x74>
    9460:	f109 0502 	add.w	r5, r9, #2
    9464:	3d01      	subs	r5, #1
    9466:	4638      	mov	r0, r7
    9468:	f8c8 5010 	str.w	r5, [r8, #16]
    946c:	4621      	mov	r1, r4
    946e:	f7ff fdf7 	bl	9060 <_Bfree>
    9472:	4640      	mov	r0, r8
    9474:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    9478:	3101      	adds	r1, #1
    947a:	005b      	lsls	r3, r3, #1
    947c:	e7c6      	b.n	940c <__lshift+0x1c>
    947e:	f842 0f04 	str.w	r0, [r2, #4]!
    9482:	3301      	adds	r3, #1
    9484:	e7ce      	b.n	9424 <__lshift+0x34>
    9486:	3904      	subs	r1, #4
    9488:	f853 2b04 	ldr.w	r2, [r3], #4
    948c:	f841 2f04 	str.w	r2, [r1, #4]!
    9490:	459c      	cmp	ip, r3
    9492:	d8f9      	bhi.n	9488 <__lshift+0x98>
    9494:	e7e6      	b.n	9464 <__lshift+0x74>

00009496 <__mcmp>:
__mcmp():
    9496:	6903      	ldr	r3, [r0, #16]
    9498:	690a      	ldr	r2, [r1, #16]
    949a:	1a9b      	subs	r3, r3, r2
    949c:	b530      	push	{r4, r5, lr}
    949e:	d10c      	bne.n	94ba <__mcmp+0x24>
    94a0:	0092      	lsls	r2, r2, #2
    94a2:	3014      	adds	r0, #20
    94a4:	3114      	adds	r1, #20
    94a6:	1884      	adds	r4, r0, r2
    94a8:	4411      	add	r1, r2
    94aa:	f854 5d04 	ldr.w	r5, [r4, #-4]!
    94ae:	f851 2d04 	ldr.w	r2, [r1, #-4]!
    94b2:	4295      	cmp	r5, r2
    94b4:	d003      	beq.n	94be <__mcmp+0x28>
    94b6:	d305      	bcc.n	94c4 <__mcmp+0x2e>
    94b8:	2301      	movs	r3, #1
    94ba:	4618      	mov	r0, r3
    94bc:	bd30      	pop	{r4, r5, pc}
    94be:	42a0      	cmp	r0, r4
    94c0:	d3f3      	bcc.n	94aa <__mcmp+0x14>
    94c2:	e7fa      	b.n	94ba <__mcmp+0x24>
    94c4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    94c8:	e7f7      	b.n	94ba <__mcmp+0x24>

000094ca <__mdiff>:
__mdiff():
    94ca:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    94ce:	460d      	mov	r5, r1
    94d0:	4607      	mov	r7, r0
    94d2:	4611      	mov	r1, r2
    94d4:	4628      	mov	r0, r5
    94d6:	4614      	mov	r4, r2
    94d8:	f7ff ffdd 	bl	9496 <__mcmp>
    94dc:	1e06      	subs	r6, r0, #0
    94de:	d108      	bne.n	94f2 <__mdiff+0x28>
    94e0:	4631      	mov	r1, r6
    94e2:	4638      	mov	r0, r7
    94e4:	f7ff fd88 	bl	8ff8 <_Balloc>
    94e8:	2301      	movs	r3, #1
    94ea:	e9c0 3604 	strd	r3, r6, [r0, #16]
    94ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    94f2:	bfa4      	itt	ge
    94f4:	4623      	movge	r3, r4
    94f6:	462c      	movge	r4, r5
    94f8:	4638      	mov	r0, r7
    94fa:	6861      	ldr	r1, [r4, #4]
    94fc:	bfa6      	itte	ge
    94fe:	461d      	movge	r5, r3
    9500:	2600      	movge	r6, #0
    9502:	2601      	movlt	r6, #1
    9504:	f7ff fd78 	bl	8ff8 <_Balloc>
    9508:	692b      	ldr	r3, [r5, #16]
    950a:	60c6      	str	r6, [r0, #12]
    950c:	6926      	ldr	r6, [r4, #16]
    950e:	f105 0914 	add.w	r9, r5, #20
    9512:	f104 0214 	add.w	r2, r4, #20
    9516:	eb02 0786 	add.w	r7, r2, r6, lsl #2
    951a:	eb09 0883 	add.w	r8, r9, r3, lsl #2
    951e:	f100 0514 	add.w	r5, r0, #20
    9522:	f04f 0e00 	mov.w	lr, #0
    9526:	f852 ab04 	ldr.w	sl, [r2], #4
    952a:	f859 4b04 	ldr.w	r4, [r9], #4
    952e:	fa1e f18a 	uxtah	r1, lr, sl
    9532:	b2a3      	uxth	r3, r4
    9534:	1ac9      	subs	r1, r1, r3
    9536:	0c23      	lsrs	r3, r4, #16
    9538:	ebc3 431a 	rsb	r3, r3, sl, lsr #16
    953c:	eb03 4321 	add.w	r3, r3, r1, asr #16
    9540:	b289      	uxth	r1, r1
    9542:	ea4f 4e23 	mov.w	lr, r3, asr #16
    9546:	45c8      	cmp	r8, r9
    9548:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
    954c:	4694      	mov	ip, r2
    954e:	f845 3b04 	str.w	r3, [r5], #4
    9552:	d8e8      	bhi.n	9526 <__mdiff+0x5c>
    9554:	45bc      	cmp	ip, r7
    9556:	d304      	bcc.n	9562 <__mdiff+0x98>
    9558:	f855 3d04 	ldr.w	r3, [r5, #-4]!
    955c:	b183      	cbz	r3, 9580 <__mdiff+0xb6>
    955e:	6106      	str	r6, [r0, #16]
    9560:	e7c5      	b.n	94ee <__mdiff+0x24>
    9562:	f85c 1b04 	ldr.w	r1, [ip], #4
    9566:	fa1e f381 	uxtah	r3, lr, r1
    956a:	141a      	asrs	r2, r3, #16
    956c:	eb02 4211 	add.w	r2, r2, r1, lsr #16
    9570:	b29b      	uxth	r3, r3
    9572:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
    9576:	ea4f 4e22 	mov.w	lr, r2, asr #16
    957a:	f845 3b04 	str.w	r3, [r5], #4
    957e:	e7e9      	b.n	9554 <__mdiff+0x8a>
    9580:	3e01      	subs	r6, #1
    9582:	e7e9      	b.n	9558 <__mdiff+0x8e>

00009584 <__ulp>:
__ulp():
    9584:	4b11      	ldr	r3, [pc, #68]	; (95cc <__ulp+0x48>)
    9586:	ee10 2a90 	vmov	r2, s1
    958a:	401a      	ands	r2, r3
    958c:	f1a2 7350 	sub.w	r3, r2, #54525952	; 0x3400000
    9590:	2b00      	cmp	r3, #0
    9592:	dd04      	ble.n	959e <__ulp+0x1a>
    9594:	2000      	movs	r0, #0
    9596:	4619      	mov	r1, r3
    9598:	ec41 0b10 	vmov	d0, r0, r1
    959c:	4770      	bx	lr
    959e:	425b      	negs	r3, r3
    95a0:	151b      	asrs	r3, r3, #20
    95a2:	2b13      	cmp	r3, #19
    95a4:	f04f 0000 	mov.w	r0, #0
    95a8:	f04f 0100 	mov.w	r1, #0
    95ac:	dc04      	bgt.n	95b8 <__ulp+0x34>
    95ae:	f44f 2200 	mov.w	r2, #524288	; 0x80000
    95b2:	fa42 f103 	asr.w	r1, r2, r3
    95b6:	e7ef      	b.n	9598 <__ulp+0x14>
    95b8:	3b14      	subs	r3, #20
    95ba:	2b1e      	cmp	r3, #30
    95bc:	bfda      	itte	le
    95be:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
    95c2:	fa22 f303 	lsrle.w	r3, r2, r3
    95c6:	2301      	movgt	r3, #1
    95c8:	4618      	mov	r0, r3
    95ca:	e7e5      	b.n	9598 <__ulp+0x14>
    95cc:	7ff00000 	.word	0x7ff00000

000095d0 <__b2d>:
__b2d():
    95d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    95d2:	6905      	ldr	r5, [r0, #16]
    95d4:	f100 0714 	add.w	r7, r0, #20
    95d8:	eb07 0585 	add.w	r5, r7, r5, lsl #2
    95dc:	1f2e      	subs	r6, r5, #4
    95de:	f855 4c04 	ldr.w	r4, [r5, #-4]
    95e2:	4620      	mov	r0, r4
    95e4:	f7ff fdcc 	bl	9180 <__hi0bits>
    95e8:	f1c0 0320 	rsb	r3, r0, #32
    95ec:	280a      	cmp	r0, #10
    95ee:	600b      	str	r3, [r1, #0]
    95f0:	f8df c078 	ldr.w	ip, [pc, #120]	; 966c <__b2d+0x9c>
    95f4:	dc14      	bgt.n	9620 <__b2d+0x50>
    95f6:	f1c0 0e0b 	rsb	lr, r0, #11
    95fa:	fa24 f10e 	lsr.w	r1, r4, lr
    95fe:	42b7      	cmp	r7, r6
    9600:	ea41 030c 	orr.w	r3, r1, ip
    9604:	bf34      	ite	cc
    9606:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
    960a:	2100      	movcs	r1, #0
    960c:	3015      	adds	r0, #21
    960e:	fa04 f000 	lsl.w	r0, r4, r0
    9612:	fa21 f10e 	lsr.w	r1, r1, lr
    9616:	ea40 0201 	orr.w	r2, r0, r1
    961a:	ec43 2b10 	vmov	d0, r2, r3
    961e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    9620:	42b7      	cmp	r7, r6
    9622:	bf3a      	itte	cc
    9624:	f1a5 0608 	subcc.w	r6, r5, #8
    9628:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
    962c:	2100      	movcs	r1, #0
    962e:	380b      	subs	r0, #11
    9630:	d017      	beq.n	9662 <__b2d+0x92>
    9632:	f1c0 0c20 	rsb	ip, r0, #32
    9636:	fa04 f500 	lsl.w	r5, r4, r0
    963a:	42be      	cmp	r6, r7
    963c:	fa21 f40c 	lsr.w	r4, r1, ip
    9640:	ea45 0504 	orr.w	r5, r5, r4
    9644:	bf8c      	ite	hi
    9646:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
    964a:	2400      	movls	r4, #0
    964c:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
    9650:	fa01 f000 	lsl.w	r0, r1, r0
    9654:	fa24 f40c 	lsr.w	r4, r4, ip
    9658:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
    965c:	ea40 0204 	orr.w	r2, r0, r4
    9660:	e7db      	b.n	961a <__b2d+0x4a>
    9662:	ea44 030c 	orr.w	r3, r4, ip
    9666:	460a      	mov	r2, r1
    9668:	e7d7      	b.n	961a <__b2d+0x4a>
    966a:	bf00      	nop
    966c:	3ff00000 	.word	0x3ff00000

00009670 <__d2b>:
__d2b():
    9670:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    9674:	460e      	mov	r6, r1
    9676:	2101      	movs	r1, #1
    9678:	ec59 8b10 	vmov	r8, r9, d0
    967c:	4615      	mov	r5, r2
    967e:	f7ff fcbb 	bl	8ff8 <_Balloc>
    9682:	f3c9 540a 	ubfx	r4, r9, #20, #11
    9686:	4607      	mov	r7, r0
    9688:	f3c9 0313 	ubfx	r3, r9, #0, #20
    968c:	bb2c      	cbnz	r4, 96da <__d2b+0x6a>
    968e:	9301      	str	r3, [sp, #4]
    9690:	f1b8 0300 	subs.w	r3, r8, #0
    9694:	d026      	beq.n	96e4 <__d2b+0x74>
    9696:	4668      	mov	r0, sp
    9698:	9300      	str	r3, [sp, #0]
    969a:	f7ff fd91 	bl	91c0 <__lo0bits>
    969e:	9900      	ldr	r1, [sp, #0]
    96a0:	b1f0      	cbz	r0, 96e0 <__d2b+0x70>
    96a2:	9a01      	ldr	r2, [sp, #4]
    96a4:	f1c0 0320 	rsb	r3, r0, #32
    96a8:	fa02 f303 	lsl.w	r3, r2, r3
    96ac:	430b      	orrs	r3, r1
    96ae:	40c2      	lsrs	r2, r0
    96b0:	617b      	str	r3, [r7, #20]
    96b2:	9201      	str	r2, [sp, #4]
    96b4:	9b01      	ldr	r3, [sp, #4]
    96b6:	61bb      	str	r3, [r7, #24]
    96b8:	2b00      	cmp	r3, #0
    96ba:	bf14      	ite	ne
    96bc:	2102      	movne	r1, #2
    96be:	2101      	moveq	r1, #1
    96c0:	6139      	str	r1, [r7, #16]
    96c2:	b1c4      	cbz	r4, 96f6 <__d2b+0x86>
    96c4:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
    96c8:	4404      	add	r4, r0
    96ca:	6034      	str	r4, [r6, #0]
    96cc:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
    96d0:	6028      	str	r0, [r5, #0]
    96d2:	4638      	mov	r0, r7
    96d4:	b003      	add	sp, #12
    96d6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    96da:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
    96de:	e7d6      	b.n	968e <__d2b+0x1e>
    96e0:	6179      	str	r1, [r7, #20]
    96e2:	e7e7      	b.n	96b4 <__d2b+0x44>
    96e4:	a801      	add	r0, sp, #4
    96e6:	f7ff fd6b 	bl	91c0 <__lo0bits>
    96ea:	9b01      	ldr	r3, [sp, #4]
    96ec:	617b      	str	r3, [r7, #20]
    96ee:	2101      	movs	r1, #1
    96f0:	6139      	str	r1, [r7, #16]
    96f2:	3020      	adds	r0, #32
    96f4:	e7e5      	b.n	96c2 <__d2b+0x52>
    96f6:	eb07 0381 	add.w	r3, r7, r1, lsl #2
    96fa:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
    96fe:	6030      	str	r0, [r6, #0]
    9700:	6918      	ldr	r0, [r3, #16]
    9702:	f7ff fd3d 	bl	9180 <__hi0bits>
    9706:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
    970a:	e7e1      	b.n	96d0 <__d2b+0x60>

0000970c <__ratio>:
__ratio():
    970c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9710:	4688      	mov	r8, r1
    9712:	4669      	mov	r1, sp
    9714:	4681      	mov	r9, r0
    9716:	f7ff ff5b 	bl	95d0 <__b2d>
    971a:	a901      	add	r1, sp, #4
    971c:	4640      	mov	r0, r8
    971e:	ec57 6b10 	vmov	r6, r7, d0
    9722:	f7ff ff55 	bl	95d0 <__b2d>
    9726:	f8d9 3010 	ldr.w	r3, [r9, #16]
    972a:	f8d8 2010 	ldr.w	r2, [r8, #16]
    972e:	eba3 0c02 	sub.w	ip, r3, r2
    9732:	e9dd 3200 	ldrd	r3, r2, [sp]
    9736:	1a9b      	subs	r3, r3, r2
    9738:	eb03 134c 	add.w	r3, r3, ip, lsl #5
    973c:	ec5b ab10 	vmov	sl, fp, d0
    9740:	2b00      	cmp	r3, #0
    9742:	bfce      	itee	gt
    9744:	463a      	movgt	r2, r7
    9746:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
    974a:	465a      	movle	r2, fp
    974c:	4659      	mov	r1, fp
    974e:	463d      	mov	r5, r7
    9750:	bfd4      	ite	le
    9752:	eb02 5103 	addle.w	r1, r2, r3, lsl #20
    9756:	eb02 5503 	addgt.w	r5, r2, r3, lsl #20
    975a:	4630      	mov	r0, r6
    975c:	ee10 2a10 	vmov	r2, s0
    9760:	460b      	mov	r3, r1
    9762:	4629      	mov	r1, r5
    9764:	f000 fbba 	bl	9edc <__aeabi_ddiv>
    9768:	ec41 0b10 	vmov	d0, r0, r1
    976c:	b003      	add	sp, #12
    976e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00009772 <__copybits>:
__copybits():
    9772:	3901      	subs	r1, #1
    9774:	b510      	push	{r4, lr}
    9776:	1149      	asrs	r1, r1, #5
    9778:	6914      	ldr	r4, [r2, #16]
    977a:	3101      	adds	r1, #1
    977c:	f102 0314 	add.w	r3, r2, #20
    9780:	eb00 0181 	add.w	r1, r0, r1, lsl #2
    9784:	eb03 0484 	add.w	r4, r3, r4, lsl #2
    9788:	42a3      	cmp	r3, r4
    978a:	4602      	mov	r2, r0
    978c:	d303      	bcc.n	9796 <__copybits+0x24>
    978e:	2300      	movs	r3, #0
    9790:	428a      	cmp	r2, r1
    9792:	d305      	bcc.n	97a0 <__copybits+0x2e>
    9794:	bd10      	pop	{r4, pc}
    9796:	f853 2b04 	ldr.w	r2, [r3], #4
    979a:	f840 2b04 	str.w	r2, [r0], #4
    979e:	e7f3      	b.n	9788 <__copybits+0x16>
    97a0:	f842 3b04 	str.w	r3, [r2], #4
    97a4:	e7f4      	b.n	9790 <__copybits+0x1e>

000097a6 <__any_on>:
__any_on():
    97a6:	f100 0214 	add.w	r2, r0, #20
    97aa:	6900      	ldr	r0, [r0, #16]
    97ac:	114b      	asrs	r3, r1, #5
    97ae:	4298      	cmp	r0, r3
    97b0:	b510      	push	{r4, lr}
    97b2:	db11      	blt.n	97d8 <__any_on+0x32>
    97b4:	dd0a      	ble.n	97cc <__any_on+0x26>
    97b6:	f011 011f 	ands.w	r1, r1, #31
    97ba:	d007      	beq.n	97cc <__any_on+0x26>
    97bc:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
    97c0:	fa24 f001 	lsr.w	r0, r4, r1
    97c4:	fa00 f101 	lsl.w	r1, r0, r1
    97c8:	428c      	cmp	r4, r1
    97ca:	d10b      	bne.n	97e4 <__any_on+0x3e>
    97cc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
    97d0:	4293      	cmp	r3, r2
    97d2:	d803      	bhi.n	97dc <__any_on+0x36>
    97d4:	2000      	movs	r0, #0
    97d6:	bd10      	pop	{r4, pc}
    97d8:	4603      	mov	r3, r0
    97da:	e7f7      	b.n	97cc <__any_on+0x26>
    97dc:	f853 1d04 	ldr.w	r1, [r3, #-4]!
    97e0:	2900      	cmp	r1, #0
    97e2:	d0f5      	beq.n	97d0 <__any_on+0x2a>
    97e4:	2001      	movs	r0, #1
    97e6:	e7f6      	b.n	97d6 <__any_on+0x30>

000097e8 <_calloc_r>:
_calloc_r():
    97e8:	b538      	push	{r3, r4, r5, lr}
    97ea:	fb02 f401 	mul.w	r4, r2, r1
    97ee:	4621      	mov	r1, r4
    97f0:	f7fb ff6a 	bl	56c8 <_malloc_r>
    97f4:	4605      	mov	r5, r0
    97f6:	b118      	cbz	r0, 9800 <_calloc_r+0x18>
    97f8:	4622      	mov	r2, r4
    97fa:	2100      	movs	r1, #0
    97fc:	f7fb ff0e 	bl	561c <memset>
    9800:	4628      	mov	r0, r5
    9802:	bd38      	pop	{r3, r4, r5, pc}

00009804 <_realloc_r>:
_realloc_r():
    9804:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    9806:	4607      	mov	r7, r0
    9808:	4614      	mov	r4, r2
    980a:	460e      	mov	r6, r1
    980c:	b921      	cbnz	r1, 9818 <_realloc_r+0x14>
    980e:	4611      	mov	r1, r2
    9810:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    9814:	f7fb bf58 	b.w	56c8 <_malloc_r>
    9818:	b922      	cbnz	r2, 9824 <_realloc_r+0x20>
    981a:	f7fb ff07 	bl	562c <_free_r>
    981e:	4625      	mov	r5, r4
    9820:	4628      	mov	r0, r5
    9822:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    9824:	f000 fa16 	bl	9c54 <_malloc_usable_size_r>
    9828:	42a0      	cmp	r0, r4
    982a:	d20f      	bcs.n	984c <_realloc_r+0x48>
    982c:	4621      	mov	r1, r4
    982e:	4638      	mov	r0, r7
    9830:	f7fb ff4a 	bl	56c8 <_malloc_r>
    9834:	4605      	mov	r5, r0
    9836:	2800      	cmp	r0, #0
    9838:	d0f2      	beq.n	9820 <_realloc_r+0x1c>
    983a:	4631      	mov	r1, r6
    983c:	4622      	mov	r2, r4
    983e:	f7fb fec5 	bl	55cc <memcpy>
    9842:	4631      	mov	r1, r6
    9844:	4638      	mov	r0, r7
    9846:	f7fb fef1 	bl	562c <_free_r>
    984a:	e7e9      	b.n	9820 <_realloc_r+0x1c>
    984c:	4635      	mov	r5, r6
    984e:	e7e7      	b.n	9820 <_realloc_r+0x1c>

00009850 <__ssputs_r>:
__ssputs_r():
    9850:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    9854:	688e      	ldr	r6, [r1, #8]
    9856:	429e      	cmp	r6, r3
    9858:	4682      	mov	sl, r0
    985a:	460c      	mov	r4, r1
    985c:	4691      	mov	r9, r2
    985e:	4698      	mov	r8, r3
    9860:	d838      	bhi.n	98d4 <__ssputs_r+0x84>
    9862:	f8b1 c00c 	ldrh.w	ip, [r1, #12]
    9866:	f41c 6f90 	tst.w	ip, #1152	; 0x480
    986a:	d031      	beq.n	98d0 <__ssputs_r+0x80>
    986c:	6962      	ldr	r2, [r4, #20]
    986e:	6825      	ldr	r5, [r4, #0]
    9870:	6909      	ldr	r1, [r1, #16]
    9872:	eb02 0242 	add.w	r2, r2, r2, lsl #1
    9876:	1a6f      	subs	r7, r5, r1
    9878:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
    987c:	3301      	adds	r3, #1
    987e:	1055      	asrs	r5, r2, #1
    9880:	443b      	add	r3, r7
    9882:	429d      	cmp	r5, r3
    9884:	bf38      	it	cc
    9886:	461d      	movcc	r5, r3
    9888:	f41c 6f80 	tst.w	ip, #1024	; 0x400
    988c:	d030      	beq.n	98f0 <__ssputs_r+0xa0>
    988e:	4629      	mov	r1, r5
    9890:	f7fb ff1a 	bl	56c8 <_malloc_r>
    9894:	4606      	mov	r6, r0
    9896:	b950      	cbnz	r0, 98ae <__ssputs_r+0x5e>
    9898:	230c      	movs	r3, #12
    989a:	f8ca 3000 	str.w	r3, [sl]
    989e:	89a3      	ldrh	r3, [r4, #12]
    98a0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    98a4:	81a3      	strh	r3, [r4, #12]
    98a6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    98aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    98ae:	463a      	mov	r2, r7
    98b0:	6921      	ldr	r1, [r4, #16]
    98b2:	f7fb fe8b 	bl	55cc <memcpy>
    98b6:	89a3      	ldrh	r3, [r4, #12]
    98b8:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
    98bc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    98c0:	81a3      	strh	r3, [r4, #12]
    98c2:	6126      	str	r6, [r4, #16]
    98c4:	6165      	str	r5, [r4, #20]
    98c6:	443e      	add	r6, r7
    98c8:	1bed      	subs	r5, r5, r7
    98ca:	6026      	str	r6, [r4, #0]
    98cc:	60a5      	str	r5, [r4, #8]
    98ce:	4646      	mov	r6, r8
    98d0:	4546      	cmp	r6, r8
    98d2:	d900      	bls.n	98d6 <__ssputs_r+0x86>
    98d4:	4646      	mov	r6, r8
    98d6:	4632      	mov	r2, r6
    98d8:	4649      	mov	r1, r9
    98da:	6820      	ldr	r0, [r4, #0]
    98dc:	f7fb fe84 	bl	55e8 <memmove>
    98e0:	68a3      	ldr	r3, [r4, #8]
    98e2:	1b9b      	subs	r3, r3, r6
    98e4:	60a3      	str	r3, [r4, #8]
    98e6:	6823      	ldr	r3, [r4, #0]
    98e8:	441e      	add	r6, r3
    98ea:	6026      	str	r6, [r4, #0]
    98ec:	2000      	movs	r0, #0
    98ee:	e7dc      	b.n	98aa <__ssputs_r+0x5a>
    98f0:	462a      	mov	r2, r5
    98f2:	f7ff ff87 	bl	9804 <_realloc_r>
    98f6:	4606      	mov	r6, r0
    98f8:	2800      	cmp	r0, #0
    98fa:	d1e2      	bne.n	98c2 <__ssputs_r+0x72>
    98fc:	6921      	ldr	r1, [r4, #16]
    98fe:	4650      	mov	r0, sl
    9900:	f7fb fe94 	bl	562c <_free_r>
    9904:	e7c8      	b.n	9898 <__ssputs_r+0x48>
    9906:	Address 0x0000000000009906 is out of bounds.


00009908 <_svfiprintf_r>:
_svfiprintf_r():
    9908:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    990c:	461e      	mov	r6, r3
    990e:	898b      	ldrh	r3, [r1, #12]
    9910:	061b      	lsls	r3, r3, #24
    9912:	b09d      	sub	sp, #116	; 0x74
    9914:	4607      	mov	r7, r0
    9916:	460d      	mov	r5, r1
    9918:	4614      	mov	r4, r2
    991a:	d50e      	bpl.n	993a <_svfiprintf_r+0x32>
    991c:	690b      	ldr	r3, [r1, #16]
    991e:	b963      	cbnz	r3, 993a <_svfiprintf_r+0x32>
    9920:	2140      	movs	r1, #64	; 0x40
    9922:	f7fb fed1 	bl	56c8 <_malloc_r>
    9926:	6028      	str	r0, [r5, #0]
    9928:	6128      	str	r0, [r5, #16]
    992a:	b920      	cbnz	r0, 9936 <_svfiprintf_r+0x2e>
    992c:	230c      	movs	r3, #12
    992e:	603b      	str	r3, [r7, #0]
    9930:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    9934:	e0c9      	b.n	9aca <_svfiprintf_r+0x1c2>
    9936:	2340      	movs	r3, #64	; 0x40
    9938:	616b      	str	r3, [r5, #20]
    993a:	2300      	movs	r3, #0
    993c:	9309      	str	r3, [sp, #36]	; 0x24
    993e:	2320      	movs	r3, #32
    9940:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
    9944:	f8df 919c 	ldr.w	r9, [pc, #412]	; 9ae4 <_svfiprintf_r+0x1dc>
    9948:	9603      	str	r6, [sp, #12]
    994a:	2330      	movs	r3, #48	; 0x30
    994c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
    9950:	f04f 0a01 	mov.w	sl, #1
    9954:	4623      	mov	r3, r4
    9956:	461e      	mov	r6, r3
    9958:	f813 2b01 	ldrb.w	r2, [r3], #1
    995c:	b10a      	cbz	r2, 9962 <_svfiprintf_r+0x5a>
    995e:	2a25      	cmp	r2, #37	; 0x25
    9960:	d1f9      	bne.n	9956 <_svfiprintf_r+0x4e>
    9962:	ebb6 0b04 	subs.w	fp, r6, r4
    9966:	d00b      	beq.n	9980 <_svfiprintf_r+0x78>
    9968:	465b      	mov	r3, fp
    996a:	4622      	mov	r2, r4
    996c:	4629      	mov	r1, r5
    996e:	4638      	mov	r0, r7
    9970:	f7ff ff6e 	bl	9850 <__ssputs_r>
    9974:	3001      	adds	r0, #1
    9976:	f000 80a3 	beq.w	9ac0 <_svfiprintf_r+0x1b8>
    997a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    997c:	445b      	add	r3, fp
    997e:	9309      	str	r3, [sp, #36]	; 0x24
    9980:	7833      	ldrb	r3, [r6, #0]
    9982:	2b00      	cmp	r3, #0
    9984:	f000 809c 	beq.w	9ac0 <_svfiprintf_r+0x1b8>
    9988:	2300      	movs	r3, #0
    998a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    998e:	e9cd 2305 	strd	r2, r3, [sp, #20]
    9992:	3601      	adds	r6, #1
    9994:	9304      	str	r3, [sp, #16]
    9996:	9307      	str	r3, [sp, #28]
    9998:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
    999c:	931a      	str	r3, [sp, #104]	; 0x68
    999e:	4634      	mov	r4, r6
    99a0:	2205      	movs	r2, #5
    99a2:	f814 1b01 	ldrb.w	r1, [r4], #1
    99a6:	484f      	ldr	r0, [pc, #316]	; (9ae4 <_svfiprintf_r+0x1dc>)
    99a8:	f7ff faca 	bl	8f40 <memchr>
    99ac:	9b04      	ldr	r3, [sp, #16]
    99ae:	b9c0      	cbnz	r0, 99e2 <_svfiprintf_r+0xda>
    99b0:	06d9      	lsls	r1, r3, #27
    99b2:	bf44      	itt	mi
    99b4:	2220      	movmi	r2, #32
    99b6:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    99ba:	071a      	lsls	r2, r3, #28
    99bc:	bf44      	itt	mi
    99be:	222b      	movmi	r2, #43	; 0x2b
    99c0:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    99c4:	7832      	ldrb	r2, [r6, #0]
    99c6:	2a2a      	cmp	r2, #42	; 0x2a
    99c8:	d013      	beq.n	99f2 <_svfiprintf_r+0xea>
    99ca:	9a07      	ldr	r2, [sp, #28]
    99cc:	4634      	mov	r4, r6
    99ce:	2000      	movs	r0, #0
    99d0:	260a      	movs	r6, #10
    99d2:	4621      	mov	r1, r4
    99d4:	f811 3b01 	ldrb.w	r3, [r1], #1
    99d8:	3b30      	subs	r3, #48	; 0x30
    99da:	2b09      	cmp	r3, #9
    99dc:	d94b      	bls.n	9a76 <_svfiprintf_r+0x16e>
    99de:	b970      	cbnz	r0, 99fe <_svfiprintf_r+0xf6>
    99e0:	e014      	b.n	9a0c <_svfiprintf_r+0x104>
    99e2:	eba0 0009 	sub.w	r0, r0, r9
    99e6:	fa0a f000 	lsl.w	r0, sl, r0
    99ea:	4318      	orrs	r0, r3
    99ec:	9004      	str	r0, [sp, #16]
    99ee:	4626      	mov	r6, r4
    99f0:	e7d5      	b.n	999e <_svfiprintf_r+0x96>
    99f2:	9a03      	ldr	r2, [sp, #12]
    99f4:	1d11      	adds	r1, r2, #4
    99f6:	6812      	ldr	r2, [r2, #0]
    99f8:	9103      	str	r1, [sp, #12]
    99fa:	2a00      	cmp	r2, #0
    99fc:	db01      	blt.n	9a02 <_svfiprintf_r+0xfa>
    99fe:	9207      	str	r2, [sp, #28]
    9a00:	e004      	b.n	9a0c <_svfiprintf_r+0x104>
    9a02:	4252      	negs	r2, r2
    9a04:	f043 0302 	orr.w	r3, r3, #2
    9a08:	9207      	str	r2, [sp, #28]
    9a0a:	9304      	str	r3, [sp, #16]
    9a0c:	7823      	ldrb	r3, [r4, #0]
    9a0e:	2b2e      	cmp	r3, #46	; 0x2e
    9a10:	d10c      	bne.n	9a2c <_svfiprintf_r+0x124>
    9a12:	7863      	ldrb	r3, [r4, #1]
    9a14:	2b2a      	cmp	r3, #42	; 0x2a
    9a16:	d133      	bne.n	9a80 <_svfiprintf_r+0x178>
    9a18:	9b03      	ldr	r3, [sp, #12]
    9a1a:	1d1a      	adds	r2, r3, #4
    9a1c:	681b      	ldr	r3, [r3, #0]
    9a1e:	9203      	str	r2, [sp, #12]
    9a20:	2b00      	cmp	r3, #0
    9a22:	bfb8      	it	lt
    9a24:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
    9a28:	3402      	adds	r4, #2
    9a2a:	9305      	str	r3, [sp, #20]
    9a2c:	4e2e      	ldr	r6, [pc, #184]	; (9ae8 <_svfiprintf_r+0x1e0>)
    9a2e:	7821      	ldrb	r1, [r4, #0]
    9a30:	2203      	movs	r2, #3
    9a32:	4630      	mov	r0, r6
    9a34:	f7ff fa84 	bl	8f40 <memchr>
    9a38:	b138      	cbz	r0, 9a4a <_svfiprintf_r+0x142>
    9a3a:	2340      	movs	r3, #64	; 0x40
    9a3c:	1b80      	subs	r0, r0, r6
    9a3e:	fa03 f000 	lsl.w	r0, r3, r0
    9a42:	9b04      	ldr	r3, [sp, #16]
    9a44:	4303      	orrs	r3, r0
    9a46:	3401      	adds	r4, #1
    9a48:	9304      	str	r3, [sp, #16]
    9a4a:	f814 1b01 	ldrb.w	r1, [r4], #1
    9a4e:	4827      	ldr	r0, [pc, #156]	; (9aec <_svfiprintf_r+0x1e4>)
    9a50:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
    9a54:	2206      	movs	r2, #6
    9a56:	f7ff fa73 	bl	8f40 <memchr>
    9a5a:	2800      	cmp	r0, #0
    9a5c:	d038      	beq.n	9ad0 <_svfiprintf_r+0x1c8>
    9a5e:	4b24      	ldr	r3, [pc, #144]	; (9af0 <_svfiprintf_r+0x1e8>)
    9a60:	bb13      	cbnz	r3, 9aa8 <_svfiprintf_r+0x1a0>
    9a62:	9b03      	ldr	r3, [sp, #12]
    9a64:	3307      	adds	r3, #7
    9a66:	f023 0307 	bic.w	r3, r3, #7
    9a6a:	3308      	adds	r3, #8
    9a6c:	9303      	str	r3, [sp, #12]
    9a6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9a70:	4443      	add	r3, r8
    9a72:	9309      	str	r3, [sp, #36]	; 0x24
    9a74:	e76e      	b.n	9954 <_svfiprintf_r+0x4c>
    9a76:	fb06 3202 	mla	r2, r6, r2, r3
    9a7a:	2001      	movs	r0, #1
    9a7c:	460c      	mov	r4, r1
    9a7e:	e7a8      	b.n	99d2 <_svfiprintf_r+0xca>
    9a80:	2300      	movs	r3, #0
    9a82:	3401      	adds	r4, #1
    9a84:	9305      	str	r3, [sp, #20]
    9a86:	4619      	mov	r1, r3
    9a88:	260a      	movs	r6, #10
    9a8a:	4620      	mov	r0, r4
    9a8c:	f810 2b01 	ldrb.w	r2, [r0], #1
    9a90:	3a30      	subs	r2, #48	; 0x30
    9a92:	2a09      	cmp	r2, #9
    9a94:	d903      	bls.n	9a9e <_svfiprintf_r+0x196>
    9a96:	2b00      	cmp	r3, #0
    9a98:	d0c8      	beq.n	9a2c <_svfiprintf_r+0x124>
    9a9a:	9105      	str	r1, [sp, #20]
    9a9c:	e7c6      	b.n	9a2c <_svfiprintf_r+0x124>
    9a9e:	fb06 2101 	mla	r1, r6, r1, r2
    9aa2:	2301      	movs	r3, #1
    9aa4:	4604      	mov	r4, r0
    9aa6:	e7f0      	b.n	9a8a <_svfiprintf_r+0x182>
    9aa8:	ab03      	add	r3, sp, #12
    9aaa:	9300      	str	r3, [sp, #0]
    9aac:	462a      	mov	r2, r5
    9aae:	4b11      	ldr	r3, [pc, #68]	; (9af4 <_svfiprintf_r+0x1ec>)
    9ab0:	a904      	add	r1, sp, #16
    9ab2:	4638      	mov	r0, r7
    9ab4:	f7fc f844 	bl	5b40 <_printf_float>
    9ab8:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
    9abc:	4680      	mov	r8, r0
    9abe:	d1d6      	bne.n	9a6e <_svfiprintf_r+0x166>
    9ac0:	89ab      	ldrh	r3, [r5, #12]
    9ac2:	065b      	lsls	r3, r3, #25
    9ac4:	f53f af34 	bmi.w	9930 <_svfiprintf_r+0x28>
    9ac8:	9809      	ldr	r0, [sp, #36]	; 0x24
    9aca:	b01d      	add	sp, #116	; 0x74
    9acc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9ad0:	ab03      	add	r3, sp, #12
    9ad2:	9300      	str	r3, [sp, #0]
    9ad4:	462a      	mov	r2, r5
    9ad6:	4b07      	ldr	r3, [pc, #28]	; (9af4 <_svfiprintf_r+0x1ec>)
    9ad8:	a904      	add	r1, sp, #16
    9ada:	4638      	mov	r0, r7
    9adc:	f7fc fad0 	bl	6080 <_printf_i>
    9ae0:	e7ea      	b.n	9ab8 <_svfiprintf_r+0x1b0>
    9ae2:	bf00      	nop
    9ae4:	0000b80c 	.word	0x0000b80c
    9ae8:	0000b812 	.word	0x0000b812
    9aec:	0000b816 	.word	0x0000b816
    9af0:	00005b41 	.word	0x00005b41
    9af4:	00009851 	.word	0x00009851

00009af8 <nan>:
nan():
    9af8:	ed9f 0b01 	vldr	d0, [pc, #4]	; 9b00 <nan+0x8>
    9afc:	4770      	bx	lr
    9afe:	bf00      	nop
    9b00:	00000000 	.word	0x00000000
    9b04:	7ff80000 	.word	0x7ff80000

00009b08 <__sread>:
__sread():
    9b08:	b510      	push	{r4, lr}
    9b0a:	460c      	mov	r4, r1
    9b0c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    9b10:	f000 f8a8 	bl	9c64 <_read_r>
    9b14:	2800      	cmp	r0, #0
    9b16:	bfab      	itete	ge
    9b18:	6d63      	ldrge	r3, [r4, #84]	; 0x54
    9b1a:	89a3      	ldrhlt	r3, [r4, #12]
    9b1c:	181b      	addge	r3, r3, r0
    9b1e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
    9b22:	bfac      	ite	ge
    9b24:	6563      	strge	r3, [r4, #84]	; 0x54
    9b26:	81a3      	strhlt	r3, [r4, #12]
    9b28:	bd10      	pop	{r4, pc}

00009b2a <__swrite>:
__swrite():
    9b2a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    9b2e:	461f      	mov	r7, r3
    9b30:	898b      	ldrh	r3, [r1, #12]
    9b32:	05db      	lsls	r3, r3, #23
    9b34:	4605      	mov	r5, r0
    9b36:	460c      	mov	r4, r1
    9b38:	4616      	mov	r6, r2
    9b3a:	d505      	bpl.n	9b48 <__swrite+0x1e>
    9b3c:	2302      	movs	r3, #2
    9b3e:	2200      	movs	r2, #0
    9b40:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    9b44:	f000 f874 	bl	9c30 <_lseek_r>
    9b48:	89a3      	ldrh	r3, [r4, #12]
    9b4a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    9b4e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
    9b52:	81a3      	strh	r3, [r4, #12]
    9b54:	4632      	mov	r2, r6
    9b56:	463b      	mov	r3, r7
    9b58:	4628      	mov	r0, r5
    9b5a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    9b5e:	f000 b823 	b.w	9ba8 <_write_r>

00009b62 <__sseek>:
__sseek():
    9b62:	b510      	push	{r4, lr}
    9b64:	460c      	mov	r4, r1
    9b66:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    9b6a:	f000 f861 	bl	9c30 <_lseek_r>
    9b6e:	1c43      	adds	r3, r0, #1
    9b70:	89a3      	ldrh	r3, [r4, #12]
    9b72:	bf15      	itete	ne
    9b74:	6560      	strne	r0, [r4, #84]	; 0x54
    9b76:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
    9b7a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
    9b7e:	81a3      	strheq	r3, [r4, #12]
    9b80:	bf18      	it	ne
    9b82:	81a3      	strhne	r3, [r4, #12]
    9b84:	bd10      	pop	{r4, pc}

00009b86 <__sclose>:
__sclose():
    9b86:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    9b8a:	f000 b81f 	b.w	9bcc <_close_r>

00009b8e <__ascii_wctomb>:
__ascii_wctomb():
    9b8e:	b149      	cbz	r1, 9ba4 <__ascii_wctomb+0x16>
    9b90:	2aff      	cmp	r2, #255	; 0xff
    9b92:	bf85      	ittet	hi
    9b94:	238a      	movhi	r3, #138	; 0x8a
    9b96:	6003      	strhi	r3, [r0, #0]
    9b98:	700a      	strbls	r2, [r1, #0]
    9b9a:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
    9b9e:	bf98      	it	ls
    9ba0:	2001      	movls	r0, #1
    9ba2:	4770      	bx	lr
    9ba4:	4608      	mov	r0, r1
    9ba6:	4770      	bx	lr

00009ba8 <_write_r>:
_write_r():
    9ba8:	b538      	push	{r3, r4, r5, lr}
    9baa:	4c07      	ldr	r4, [pc, #28]	; (9bc8 <_write_r+0x20>)
    9bac:	4605      	mov	r5, r0
    9bae:	4608      	mov	r0, r1
    9bb0:	4611      	mov	r1, r2
    9bb2:	2200      	movs	r2, #0
    9bb4:	6022      	str	r2, [r4, #0]
    9bb6:	461a      	mov	r2, r3
    9bb8:	f7f8 fb24 	bl	2204 <_write>
    9bbc:	1c43      	adds	r3, r0, #1
    9bbe:	d102      	bne.n	9bc6 <_write_r+0x1e>
    9bc0:	6823      	ldr	r3, [r4, #0]
    9bc2:	b103      	cbz	r3, 9bc6 <_write_r+0x1e>
    9bc4:	602b      	str	r3, [r5, #0]
    9bc6:	bd38      	pop	{r3, r4, r5, pc}
    9bc8:	10000bb4 	.word	0x10000bb4

00009bcc <_close_r>:
_close_r():
    9bcc:	b538      	push	{r3, r4, r5, lr}
    9bce:	4c06      	ldr	r4, [pc, #24]	; (9be8 <_close_r+0x1c>)
    9bd0:	2300      	movs	r3, #0
    9bd2:	4605      	mov	r5, r0
    9bd4:	4608      	mov	r0, r1
    9bd6:	6023      	str	r3, [r4, #0]
    9bd8:	f7f8 fb0a 	bl	21f0 <_close>
    9bdc:	1c43      	adds	r3, r0, #1
    9bde:	d102      	bne.n	9be6 <_close_r+0x1a>
    9be0:	6823      	ldr	r3, [r4, #0]
    9be2:	b103      	cbz	r3, 9be6 <_close_r+0x1a>
    9be4:	602b      	str	r3, [r5, #0]
    9be6:	bd38      	pop	{r3, r4, r5, pc}
    9be8:	10000bb4 	.word	0x10000bb4

00009bec <_fstat_r>:
_fstat_r():
    9bec:	b538      	push	{r3, r4, r5, lr}
    9bee:	4c07      	ldr	r4, [pc, #28]	; (9c0c <_fstat_r+0x20>)
    9bf0:	2300      	movs	r3, #0
    9bf2:	4605      	mov	r5, r0
    9bf4:	4608      	mov	r0, r1
    9bf6:	4611      	mov	r1, r2
    9bf8:	6023      	str	r3, [r4, #0]
    9bfa:	f7f8 faff 	bl	21fc <_fstat>
    9bfe:	1c43      	adds	r3, r0, #1
    9c00:	d102      	bne.n	9c08 <_fstat_r+0x1c>
    9c02:	6823      	ldr	r3, [r4, #0]
    9c04:	b103      	cbz	r3, 9c08 <_fstat_r+0x1c>
    9c06:	602b      	str	r3, [r5, #0]
    9c08:	bd38      	pop	{r3, r4, r5, pc}
    9c0a:	bf00      	nop
    9c0c:	10000bb4 	.word	0x10000bb4

00009c10 <_isatty_r>:
_isatty_r():
    9c10:	b538      	push	{r3, r4, r5, lr}
    9c12:	4c06      	ldr	r4, [pc, #24]	; (9c2c <_isatty_r+0x1c>)
    9c14:	2300      	movs	r3, #0
    9c16:	4605      	mov	r5, r0
    9c18:	4608      	mov	r0, r1
    9c1a:	6023      	str	r3, [r4, #0]
    9c1c:	f7f8 fad4 	bl	21c8 <_isatty>
    9c20:	1c43      	adds	r3, r0, #1
    9c22:	d102      	bne.n	9c2a <_isatty_r+0x1a>
    9c24:	6823      	ldr	r3, [r4, #0]
    9c26:	b103      	cbz	r3, 9c2a <_isatty_r+0x1a>
    9c28:	602b      	str	r3, [r5, #0]
    9c2a:	bd38      	pop	{r3, r4, r5, pc}
    9c2c:	10000bb4 	.word	0x10000bb4

00009c30 <_lseek_r>:
_lseek_r():
    9c30:	b538      	push	{r3, r4, r5, lr}
    9c32:	4c07      	ldr	r4, [pc, #28]	; (9c50 <_lseek_r+0x20>)
    9c34:	4605      	mov	r5, r0
    9c36:	4608      	mov	r0, r1
    9c38:	4611      	mov	r1, r2
    9c3a:	2200      	movs	r2, #0
    9c3c:	6022      	str	r2, [r4, #0]
    9c3e:	461a      	mov	r2, r3
    9c40:	f7f8 fade 	bl	2200 <_lseek>
    9c44:	1c43      	adds	r3, r0, #1
    9c46:	d102      	bne.n	9c4e <_lseek_r+0x1e>
    9c48:	6823      	ldr	r3, [r4, #0]
    9c4a:	b103      	cbz	r3, 9c4e <_lseek_r+0x1e>
    9c4c:	602b      	str	r3, [r5, #0]
    9c4e:	bd38      	pop	{r3, r4, r5, pc}
    9c50:	10000bb4 	.word	0x10000bb4

00009c54 <_malloc_usable_size_r>:
_malloc_usable_size_r():
    9c54:	f851 3c04 	ldr.w	r3, [r1, #-4]
    9c58:	1f18      	subs	r0, r3, #4
    9c5a:	2b00      	cmp	r3, #0
    9c5c:	bfbc      	itt	lt
    9c5e:	580b      	ldrlt	r3, [r1, r0]
    9c60:	18c0      	addlt	r0, r0, r3
    9c62:	4770      	bx	lr

00009c64 <_read_r>:
_read_r():
    9c64:	b538      	push	{r3, r4, r5, lr}
    9c66:	4c07      	ldr	r4, [pc, #28]	; (9c84 <_read_r+0x20>)
    9c68:	4605      	mov	r5, r0
    9c6a:	4608      	mov	r0, r1
    9c6c:	4611      	mov	r1, r2
    9c6e:	2200      	movs	r2, #0
    9c70:	6022      	str	r2, [r4, #0]
    9c72:	461a      	mov	r2, r3
    9c74:	f7f8 fafe 	bl	2274 <_read>
    9c78:	1c43      	adds	r3, r0, #1
    9c7a:	d102      	bne.n	9c82 <_read_r+0x1e>
    9c7c:	6823      	ldr	r3, [r4, #0]
    9c7e:	b103      	cbz	r3, 9c82 <_read_r+0x1e>
    9c80:	602b      	str	r3, [r5, #0]
    9c82:	bd38      	pop	{r3, r4, r5, pc}
    9c84:	10000bb4 	.word	0x10000bb4

00009c88 <__aeabi_dmul>:
__muldf3():
    9c88:	b570      	push	{r4, r5, r6, lr}
    9c8a:	f04f 0cff 	mov.w	ip, #255	; 0xff
    9c8e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
    9c92:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
    9c96:	bf1d      	ittte	ne
    9c98:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
    9c9c:	ea94 0f0c 	teqne	r4, ip
    9ca0:	ea95 0f0c 	teqne	r5, ip
    9ca4:	f000 f8de 	bleq	9e64 <__aeabi_dmul+0x1dc>
    9ca8:	442c      	add	r4, r5
    9caa:	ea81 0603 	eor.w	r6, r1, r3
    9cae:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
    9cb2:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
    9cb6:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
    9cba:	bf18      	it	ne
    9cbc:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
    9cc0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    9cc4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
    9cc8:	d038      	beq.n	9d3c <__aeabi_dmul+0xb4>
    9cca:	fba0 ce02 	umull	ip, lr, r0, r2
    9cce:	f04f 0500 	mov.w	r5, #0
    9cd2:	fbe1 e502 	umlal	lr, r5, r1, r2
    9cd6:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
    9cda:	fbe0 e503 	umlal	lr, r5, r0, r3
    9cde:	f04f 0600 	mov.w	r6, #0
    9ce2:	fbe1 5603 	umlal	r5, r6, r1, r3
    9ce6:	f09c 0f00 	teq	ip, #0
    9cea:	bf18      	it	ne
    9cec:	f04e 0e01 	orrne.w	lr, lr, #1
    9cf0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
    9cf4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
    9cf8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
    9cfc:	d204      	bcs.n	9d08 <__aeabi_dmul+0x80>
    9cfe:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
    9d02:	416d      	adcs	r5, r5
    9d04:	eb46 0606 	adc.w	r6, r6, r6
    9d08:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
    9d0c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
    9d10:	ea4f 20c5 	mov.w	r0, r5, lsl #11
    9d14:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
    9d18:	ea4f 2ece 	mov.w	lr, lr, lsl #11
    9d1c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
    9d20:	bf88      	it	hi
    9d22:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
    9d26:	d81e      	bhi.n	9d66 <__aeabi_dmul+0xde>
    9d28:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
    9d2c:	bf08      	it	eq
    9d2e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
    9d32:	f150 0000 	adcs.w	r0, r0, #0
    9d36:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
    9d3a:	bd70      	pop	{r4, r5, r6, pc}
    9d3c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
    9d40:	ea46 0101 	orr.w	r1, r6, r1
    9d44:	ea40 0002 	orr.w	r0, r0, r2
    9d48:	ea81 0103 	eor.w	r1, r1, r3
    9d4c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
    9d50:	bfc2      	ittt	gt
    9d52:	ebd4 050c 	rsbsgt	r5, r4, ip
    9d56:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
    9d5a:	bd70      	popgt	{r4, r5, r6, pc}
    9d5c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    9d60:	f04f 0e00 	mov.w	lr, #0
    9d64:	3c01      	subs	r4, #1
    9d66:	f300 80ab 	bgt.w	9ec0 <__aeabi_dmul+0x238>
    9d6a:	f114 0f36 	cmn.w	r4, #54	; 0x36
    9d6e:	bfde      	ittt	le
    9d70:	2000      	movle	r0, #0
    9d72:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
    9d76:	bd70      	pople	{r4, r5, r6, pc}
    9d78:	f1c4 0400 	rsb	r4, r4, #0
    9d7c:	3c20      	subs	r4, #32
    9d7e:	da35      	bge.n	9dec <__aeabi_dmul+0x164>
    9d80:	340c      	adds	r4, #12
    9d82:	dc1b      	bgt.n	9dbc <__aeabi_dmul+0x134>
    9d84:	f104 0414 	add.w	r4, r4, #20
    9d88:	f1c4 0520 	rsb	r5, r4, #32
    9d8c:	fa00 f305 	lsl.w	r3, r0, r5
    9d90:	fa20 f004 	lsr.w	r0, r0, r4
    9d94:	fa01 f205 	lsl.w	r2, r1, r5
    9d98:	ea40 0002 	orr.w	r0, r0, r2
    9d9c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
    9da0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
    9da4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
    9da8:	fa21 f604 	lsr.w	r6, r1, r4
    9dac:	eb42 0106 	adc.w	r1, r2, r6
    9db0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
    9db4:	bf08      	it	eq
    9db6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
    9dba:	bd70      	pop	{r4, r5, r6, pc}
    9dbc:	f1c4 040c 	rsb	r4, r4, #12
    9dc0:	f1c4 0520 	rsb	r5, r4, #32
    9dc4:	fa00 f304 	lsl.w	r3, r0, r4
    9dc8:	fa20 f005 	lsr.w	r0, r0, r5
    9dcc:	fa01 f204 	lsl.w	r2, r1, r4
    9dd0:	ea40 0002 	orr.w	r0, r0, r2
    9dd4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    9dd8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
    9ddc:	f141 0100 	adc.w	r1, r1, #0
    9de0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
    9de4:	bf08      	it	eq
    9de6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
    9dea:	bd70      	pop	{r4, r5, r6, pc}
    9dec:	f1c4 0520 	rsb	r5, r4, #32
    9df0:	fa00 f205 	lsl.w	r2, r0, r5
    9df4:	ea4e 0e02 	orr.w	lr, lr, r2
    9df8:	fa20 f304 	lsr.w	r3, r0, r4
    9dfc:	fa01 f205 	lsl.w	r2, r1, r5
    9e00:	ea43 0302 	orr.w	r3, r3, r2
    9e04:	fa21 f004 	lsr.w	r0, r1, r4
    9e08:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    9e0c:	fa21 f204 	lsr.w	r2, r1, r4
    9e10:	ea20 0002 	bic.w	r0, r0, r2
    9e14:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
    9e18:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
    9e1c:	bf08      	it	eq
    9e1e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
    9e22:	bd70      	pop	{r4, r5, r6, pc}
    9e24:	f094 0f00 	teq	r4, #0
    9e28:	d10f      	bne.n	9e4a <__aeabi_dmul+0x1c2>
    9e2a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
    9e2e:	0040      	lsls	r0, r0, #1
    9e30:	eb41 0101 	adc.w	r1, r1, r1
    9e34:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    9e38:	bf08      	it	eq
    9e3a:	3c01      	subeq	r4, #1
    9e3c:	d0f7      	beq.n	9e2e <__aeabi_dmul+0x1a6>
    9e3e:	ea41 0106 	orr.w	r1, r1, r6
    9e42:	f095 0f00 	teq	r5, #0
    9e46:	bf18      	it	ne
    9e48:	4770      	bxne	lr
    9e4a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
    9e4e:	0052      	lsls	r2, r2, #1
    9e50:	eb43 0303 	adc.w	r3, r3, r3
    9e54:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
    9e58:	bf08      	it	eq
    9e5a:	3d01      	subeq	r5, #1
    9e5c:	d0f7      	beq.n	9e4e <__aeabi_dmul+0x1c6>
    9e5e:	ea43 0306 	orr.w	r3, r3, r6
    9e62:	4770      	bx	lr
    9e64:	ea94 0f0c 	teq	r4, ip
    9e68:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
    9e6c:	bf18      	it	ne
    9e6e:	ea95 0f0c 	teqne	r5, ip
    9e72:	d00c      	beq.n	9e8e <__aeabi_dmul+0x206>
    9e74:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
    9e78:	bf18      	it	ne
    9e7a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
    9e7e:	d1d1      	bne.n	9e24 <__aeabi_dmul+0x19c>
    9e80:	ea81 0103 	eor.w	r1, r1, r3
    9e84:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    9e88:	f04f 0000 	mov.w	r0, #0
    9e8c:	bd70      	pop	{r4, r5, r6, pc}
    9e8e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
    9e92:	bf06      	itte	eq
    9e94:	4610      	moveq	r0, r2
    9e96:	4619      	moveq	r1, r3
    9e98:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
    9e9c:	d019      	beq.n	9ed2 <__aeabi_dmul+0x24a>
    9e9e:	ea94 0f0c 	teq	r4, ip
    9ea2:	d102      	bne.n	9eaa <__aeabi_dmul+0x222>
    9ea4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
    9ea8:	d113      	bne.n	9ed2 <__aeabi_dmul+0x24a>
    9eaa:	ea95 0f0c 	teq	r5, ip
    9eae:	d105      	bne.n	9ebc <__aeabi_dmul+0x234>
    9eb0:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
    9eb4:	bf1c      	itt	ne
    9eb6:	4610      	movne	r0, r2
    9eb8:	4619      	movne	r1, r3
    9eba:	d10a      	bne.n	9ed2 <__aeabi_dmul+0x24a>
    9ebc:	ea81 0103 	eor.w	r1, r1, r3
    9ec0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    9ec4:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
    9ec8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
    9ecc:	f04f 0000 	mov.w	r0, #0
    9ed0:	bd70      	pop	{r4, r5, r6, pc}
    9ed2:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
    9ed6:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
    9eda:	bd70      	pop	{r4, r5, r6, pc}

00009edc <__aeabi_ddiv>:
__divdf3():
    9edc:	b570      	push	{r4, r5, r6, lr}
    9ede:	f04f 0cff 	mov.w	ip, #255	; 0xff
    9ee2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
    9ee6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
    9eea:	bf1d      	ittte	ne
    9eec:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
    9ef0:	ea94 0f0c 	teqne	r4, ip
    9ef4:	ea95 0f0c 	teqne	r5, ip
    9ef8:	f000 f8a7 	bleq	a04a <__aeabi_ddiv+0x16e>
    9efc:	eba4 0405 	sub.w	r4, r4, r5
    9f00:	ea81 0e03 	eor.w	lr, r1, r3
    9f04:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
    9f08:	ea4f 3101 	mov.w	r1, r1, lsl #12
    9f0c:	f000 8088 	beq.w	a020 <__aeabi_ddiv+0x144>
    9f10:	ea4f 3303 	mov.w	r3, r3, lsl #12
    9f14:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
    9f18:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
    9f1c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
    9f20:	ea4f 2202 	mov.w	r2, r2, lsl #8
    9f24:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
    9f28:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
    9f2c:	ea4f 2600 	mov.w	r6, r0, lsl #8
    9f30:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
    9f34:	429d      	cmp	r5, r3
    9f36:	bf08      	it	eq
    9f38:	4296      	cmpeq	r6, r2
    9f3a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
    9f3e:	f504 7440 	add.w	r4, r4, #768	; 0x300
    9f42:	d202      	bcs.n	9f4a <__aeabi_ddiv+0x6e>
    9f44:	085b      	lsrs	r3, r3, #1
    9f46:	ea4f 0232 	mov.w	r2, r2, rrx
    9f4a:	1ab6      	subs	r6, r6, r2
    9f4c:	eb65 0503 	sbc.w	r5, r5, r3
    9f50:	085b      	lsrs	r3, r3, #1
    9f52:	ea4f 0232 	mov.w	r2, r2, rrx
    9f56:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
    9f5a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
    9f5e:	ebb6 0e02 	subs.w	lr, r6, r2
    9f62:	eb75 0e03 	sbcs.w	lr, r5, r3
    9f66:	bf22      	ittt	cs
    9f68:	1ab6      	subcs	r6, r6, r2
    9f6a:	4675      	movcs	r5, lr
    9f6c:	ea40 000c 	orrcs.w	r0, r0, ip
    9f70:	085b      	lsrs	r3, r3, #1
    9f72:	ea4f 0232 	mov.w	r2, r2, rrx
    9f76:	ebb6 0e02 	subs.w	lr, r6, r2
    9f7a:	eb75 0e03 	sbcs.w	lr, r5, r3
    9f7e:	bf22      	ittt	cs
    9f80:	1ab6      	subcs	r6, r6, r2
    9f82:	4675      	movcs	r5, lr
    9f84:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
    9f88:	085b      	lsrs	r3, r3, #1
    9f8a:	ea4f 0232 	mov.w	r2, r2, rrx
    9f8e:	ebb6 0e02 	subs.w	lr, r6, r2
    9f92:	eb75 0e03 	sbcs.w	lr, r5, r3
    9f96:	bf22      	ittt	cs
    9f98:	1ab6      	subcs	r6, r6, r2
    9f9a:	4675      	movcs	r5, lr
    9f9c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
    9fa0:	085b      	lsrs	r3, r3, #1
    9fa2:	ea4f 0232 	mov.w	r2, r2, rrx
    9fa6:	ebb6 0e02 	subs.w	lr, r6, r2
    9faa:	eb75 0e03 	sbcs.w	lr, r5, r3
    9fae:	bf22      	ittt	cs
    9fb0:	1ab6      	subcs	r6, r6, r2
    9fb2:	4675      	movcs	r5, lr
    9fb4:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
    9fb8:	ea55 0e06 	orrs.w	lr, r5, r6
    9fbc:	d018      	beq.n	9ff0 <__aeabi_ddiv+0x114>
    9fbe:	ea4f 1505 	mov.w	r5, r5, lsl #4
    9fc2:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
    9fc6:	ea4f 1606 	mov.w	r6, r6, lsl #4
    9fca:	ea4f 03c3 	mov.w	r3, r3, lsl #3
    9fce:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
    9fd2:	ea4f 02c2 	mov.w	r2, r2, lsl #3
    9fd6:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
    9fda:	d1c0      	bne.n	9f5e <__aeabi_ddiv+0x82>
    9fdc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    9fe0:	d10b      	bne.n	9ffa <__aeabi_ddiv+0x11e>
    9fe2:	ea41 0100 	orr.w	r1, r1, r0
    9fe6:	f04f 0000 	mov.w	r0, #0
    9fea:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
    9fee:	e7b6      	b.n	9f5e <__aeabi_ddiv+0x82>
    9ff0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    9ff4:	bf04      	itt	eq
    9ff6:	4301      	orreq	r1, r0
    9ff8:	2000      	moveq	r0, #0
    9ffa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
    9ffe:	bf88      	it	hi
    a000:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
    a004:	f63f aeaf 	bhi.w	9d66 <__aeabi_dmul+0xde>
    a008:	ebb5 0c03 	subs.w	ip, r5, r3
    a00c:	bf04      	itt	eq
    a00e:	ebb6 0c02 	subseq.w	ip, r6, r2
    a012:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
    a016:	f150 0000 	adcs.w	r0, r0, #0
    a01a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
    a01e:	bd70      	pop	{r4, r5, r6, pc}
    a020:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
    a024:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
    a028:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
    a02c:	bfc2      	ittt	gt
    a02e:	ebd4 050c 	rsbsgt	r5, r4, ip
    a032:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
    a036:	bd70      	popgt	{r4, r5, r6, pc}
    a038:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    a03c:	f04f 0e00 	mov.w	lr, #0
    a040:	3c01      	subs	r4, #1
    a042:	e690      	b.n	9d66 <__aeabi_dmul+0xde>
    a044:	ea45 0e06 	orr.w	lr, r5, r6
    a048:	e68d      	b.n	9d66 <__aeabi_dmul+0xde>
    a04a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
    a04e:	ea94 0f0c 	teq	r4, ip
    a052:	bf08      	it	eq
    a054:	ea95 0f0c 	teqeq	r5, ip
    a058:	f43f af3b 	beq.w	9ed2 <__aeabi_dmul+0x24a>
    a05c:	ea94 0f0c 	teq	r4, ip
    a060:	d10a      	bne.n	a078 <__aeabi_ddiv+0x19c>
    a062:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
    a066:	f47f af34 	bne.w	9ed2 <__aeabi_dmul+0x24a>
    a06a:	ea95 0f0c 	teq	r5, ip
    a06e:	f47f af25 	bne.w	9ebc <__aeabi_dmul+0x234>
    a072:	4610      	mov	r0, r2
    a074:	4619      	mov	r1, r3
    a076:	e72c      	b.n	9ed2 <__aeabi_dmul+0x24a>
    a078:	ea95 0f0c 	teq	r5, ip
    a07c:	d106      	bne.n	a08c <__aeabi_ddiv+0x1b0>
    a07e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
    a082:	f43f aefd 	beq.w	9e80 <__aeabi_dmul+0x1f8>
    a086:	4610      	mov	r0, r2
    a088:	4619      	mov	r1, r3
    a08a:	e722      	b.n	9ed2 <__aeabi_dmul+0x24a>
    a08c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
    a090:	bf18      	it	ne
    a092:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
    a096:	f47f aec5 	bne.w	9e24 <__aeabi_dmul+0x19c>
    a09a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
    a09e:	f47f af0d 	bne.w	9ebc <__aeabi_dmul+0x234>
    a0a2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
    a0a6:	f47f aeeb 	bne.w	9e80 <__aeabi_dmul+0x1f8>
    a0aa:	e712      	b.n	9ed2 <__aeabi_dmul+0x24a>

0000a0ac <__gedf2>:
__gedf2():
    a0ac:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
    a0b0:	e006      	b.n	a0c0 <__cmpdf2+0x4>
    a0b2:	bf00      	nop

0000a0b4 <__ledf2>:
__ledf2():
    a0b4:	f04f 0c01 	mov.w	ip, #1
    a0b8:	e002      	b.n	a0c0 <__cmpdf2+0x4>
    a0ba:	bf00      	nop

0000a0bc <__cmpdf2>:
__nedf2():
    a0bc:	f04f 0c01 	mov.w	ip, #1
    a0c0:	f84d cd04 	str.w	ip, [sp, #-4]!
    a0c4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
    a0c8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    a0cc:	ea4f 0c43 	mov.w	ip, r3, lsl #1
    a0d0:	bf18      	it	ne
    a0d2:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
    a0d6:	d01b      	beq.n	a110 <__cmpdf2+0x54>
    a0d8:	b001      	add	sp, #4
    a0da:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
    a0de:	bf0c      	ite	eq
    a0e0:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
    a0e4:	ea91 0f03 	teqne	r1, r3
    a0e8:	bf02      	ittt	eq
    a0ea:	ea90 0f02 	teqeq	r0, r2
    a0ee:	2000      	moveq	r0, #0
    a0f0:	4770      	bxeq	lr
    a0f2:	f110 0f00 	cmn.w	r0, #0
    a0f6:	ea91 0f03 	teq	r1, r3
    a0fa:	bf58      	it	pl
    a0fc:	4299      	cmppl	r1, r3
    a0fe:	bf08      	it	eq
    a100:	4290      	cmpeq	r0, r2
    a102:	bf2c      	ite	cs
    a104:	17d8      	asrcs	r0, r3, #31
    a106:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
    a10a:	f040 0001 	orr.w	r0, r0, #1
    a10e:	4770      	bx	lr
    a110:	ea4f 0c41 	mov.w	ip, r1, lsl #1
    a114:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    a118:	d102      	bne.n	a120 <__cmpdf2+0x64>
    a11a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
    a11e:	d107      	bne.n	a130 <__cmpdf2+0x74>
    a120:	ea4f 0c43 	mov.w	ip, r3, lsl #1
    a124:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    a128:	d1d6      	bne.n	a0d8 <__cmpdf2+0x1c>
    a12a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
    a12e:	d0d3      	beq.n	a0d8 <__cmpdf2+0x1c>
    a130:	f85d 0b04 	ldr.w	r0, [sp], #4
    a134:	4770      	bx	lr
    a136:	bf00      	nop

0000a138 <__aeabi_cdrcmple>:
__aeabi_cdrcmple():
    a138:	4684      	mov	ip, r0
    a13a:	4610      	mov	r0, r2
    a13c:	4662      	mov	r2, ip
    a13e:	468c      	mov	ip, r1
    a140:	4619      	mov	r1, r3
    a142:	4663      	mov	r3, ip
    a144:	e000      	b.n	a148 <__aeabi_cdcmpeq>
    a146:	bf00      	nop

0000a148 <__aeabi_cdcmpeq>:
__aeabi_cdcmpeq():
    a148:	b501      	push	{r0, lr}
    a14a:	f7ff ffb7 	bl	a0bc <__cmpdf2>
    a14e:	2800      	cmp	r0, #0
    a150:	bf48      	it	mi
    a152:	f110 0f00 	cmnmi.w	r0, #0
    a156:	bd01      	pop	{r0, pc}

0000a158 <__aeabi_dcmpeq>:
__aeabi_dcmpeq():
    a158:	f84d ed08 	str.w	lr, [sp, #-8]!
    a15c:	f7ff fff4 	bl	a148 <__aeabi_cdcmpeq>
    a160:	bf0c      	ite	eq
    a162:	2001      	moveq	r0, #1
    a164:	2000      	movne	r0, #0
    a166:	f85d fb08 	ldr.w	pc, [sp], #8
    a16a:	bf00      	nop

0000a16c <__aeabi_dcmplt>:
__aeabi_dcmplt():
    a16c:	f84d ed08 	str.w	lr, [sp, #-8]!
    a170:	f7ff ffea 	bl	a148 <__aeabi_cdcmpeq>
    a174:	bf34      	ite	cc
    a176:	2001      	movcc	r0, #1
    a178:	2000      	movcs	r0, #0
    a17a:	f85d fb08 	ldr.w	pc, [sp], #8
    a17e:	bf00      	nop

0000a180 <__aeabi_dcmple>:
__aeabi_dcmple():
    a180:	f84d ed08 	str.w	lr, [sp, #-8]!
    a184:	f7ff ffe0 	bl	a148 <__aeabi_cdcmpeq>
    a188:	bf94      	ite	ls
    a18a:	2001      	movls	r0, #1
    a18c:	2000      	movhi	r0, #0
    a18e:	f85d fb08 	ldr.w	pc, [sp], #8
    a192:	bf00      	nop

0000a194 <__aeabi_dcmpge>:
__aeabi_dcmpge():
    a194:	f84d ed08 	str.w	lr, [sp, #-8]!
    a198:	f7ff ffce 	bl	a138 <__aeabi_cdrcmple>
    a19c:	bf94      	ite	ls
    a19e:	2001      	movls	r0, #1
    a1a0:	2000      	movhi	r0, #0
    a1a2:	f85d fb08 	ldr.w	pc, [sp], #8
    a1a6:	bf00      	nop

0000a1a8 <__aeabi_dcmpgt>:
__aeabi_dcmpgt():
    a1a8:	f84d ed08 	str.w	lr, [sp, #-8]!
    a1ac:	f7ff ffc4 	bl	a138 <__aeabi_cdrcmple>
    a1b0:	bf34      	ite	cc
    a1b2:	2001      	movcc	r0, #1
    a1b4:	2000      	movcs	r0, #0
    a1b6:	f85d fb08 	ldr.w	pc, [sp], #8
    a1ba:	bf00      	nop

0000a1bc <__aeabi_dcmpun>:
__unorddf2():
    a1bc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
    a1c0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    a1c4:	d102      	bne.n	a1cc <__aeabi_dcmpun+0x10>
    a1c6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
    a1ca:	d10a      	bne.n	a1e2 <__aeabi_dcmpun+0x26>
    a1cc:	ea4f 0c43 	mov.w	ip, r3, lsl #1
    a1d0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    a1d4:	d102      	bne.n	a1dc <__aeabi_dcmpun+0x20>
    a1d6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
    a1da:	d102      	bne.n	a1e2 <__aeabi_dcmpun+0x26>
    a1dc:	f04f 0000 	mov.w	r0, #0
    a1e0:	4770      	bx	lr
    a1e2:	f04f 0001 	mov.w	r0, #1
    a1e6:	4770      	bx	lr

0000a1e8 <__aeabi_d2iz>:
__aeabi_d2iz():
    a1e8:	ea4f 0241 	mov.w	r2, r1, lsl #1
    a1ec:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
    a1f0:	d215      	bcs.n	a21e <__aeabi_d2iz+0x36>
    a1f2:	d511      	bpl.n	a218 <__aeabi_d2iz+0x30>
    a1f4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
    a1f8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
    a1fc:	d912      	bls.n	a224 <__aeabi_d2iz+0x3c>
    a1fe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
    a202:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
    a206:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
    a20a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
    a20e:	fa23 f002 	lsr.w	r0, r3, r2
    a212:	bf18      	it	ne
    a214:	4240      	negne	r0, r0
    a216:	4770      	bx	lr
    a218:	f04f 0000 	mov.w	r0, #0
    a21c:	4770      	bx	lr
    a21e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
    a222:	d105      	bne.n	a230 <__aeabi_d2iz+0x48>
    a224:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
    a228:	bf08      	it	eq
    a22a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
    a22e:	4770      	bx	lr
    a230:	f04f 0000 	mov.w	r0, #0
    a234:	4770      	bx	lr
    a236:	bf00      	nop

0000a238 <__aeabi_d2uiz>:
__aeabi_d2uiz():
    a238:	004a      	lsls	r2, r1, #1
    a23a:	d211      	bcs.n	a260 <__aeabi_d2uiz+0x28>
    a23c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
    a240:	d211      	bcs.n	a266 <__aeabi_d2uiz+0x2e>
    a242:	d50d      	bpl.n	a260 <__aeabi_d2uiz+0x28>
    a244:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
    a248:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
    a24c:	d40e      	bmi.n	a26c <__aeabi_d2uiz+0x34>
    a24e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
    a252:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
    a256:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
    a25a:	fa23 f002 	lsr.w	r0, r3, r2
    a25e:	4770      	bx	lr
    a260:	f04f 0000 	mov.w	r0, #0
    a264:	4770      	bx	lr
    a266:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
    a26a:	d102      	bne.n	a272 <__aeabi_d2uiz+0x3a>
    a26c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    a270:	4770      	bx	lr
    a272:	f04f 0000 	mov.w	r0, #0
    a276:	4770      	bx	lr

0000a278 <__aeabi_d2f>:
__truncdfsf2():
    a278:	ea4f 0241 	mov.w	r2, r1, lsl #1
    a27c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
    a280:	bf24      	itt	cs
    a282:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
    a286:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
    a28a:	d90d      	bls.n	a2a8 <__aeabi_d2f+0x30>
    a28c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
    a290:	ea4f 02c0 	mov.w	r2, r0, lsl #3
    a294:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
    a298:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
    a29c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
    a2a0:	bf08      	it	eq
    a2a2:	f020 0001 	biceq.w	r0, r0, #1
    a2a6:	4770      	bx	lr
    a2a8:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
    a2ac:	d121      	bne.n	a2f2 <__aeabi_d2f+0x7a>
    a2ae:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
    a2b2:	bfbc      	itt	lt
    a2b4:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
    a2b8:	4770      	bxlt	lr
    a2ba:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    a2be:	ea4f 5252 	mov.w	r2, r2, lsr #21
    a2c2:	f1c2 0218 	rsb	r2, r2, #24
    a2c6:	f1c2 0c20 	rsb	ip, r2, #32
    a2ca:	fa10 f30c 	lsls.w	r3, r0, ip
    a2ce:	fa20 f002 	lsr.w	r0, r0, r2
    a2d2:	bf18      	it	ne
    a2d4:	f040 0001 	orrne.w	r0, r0, #1
    a2d8:	ea4f 23c1 	mov.w	r3, r1, lsl #11
    a2dc:	ea4f 23d3 	mov.w	r3, r3, lsr #11
    a2e0:	fa03 fc0c 	lsl.w	ip, r3, ip
    a2e4:	ea40 000c 	orr.w	r0, r0, ip
    a2e8:	fa23 f302 	lsr.w	r3, r3, r2
    a2ec:	ea4f 0343 	mov.w	r3, r3, lsl #1
    a2f0:	e7cc      	b.n	a28c <__aeabi_d2f+0x14>
    a2f2:	ea7f 5362 	mvns.w	r3, r2, asr #21
    a2f6:	d107      	bne.n	a308 <__aeabi_d2f+0x90>
    a2f8:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
    a2fc:	bf1e      	ittt	ne
    a2fe:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
    a302:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
    a306:	4770      	bxne	lr
    a308:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
    a30c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
    a310:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    a314:	4770      	bx	lr
    a316:	bf00      	nop

0000a318 <__aeabi_d2lz>:
__fixdfdi():
    a318:	b538      	push	{r3, r4, r5, lr}
    a31a:	2200      	movs	r2, #0
    a31c:	2300      	movs	r3, #0
    a31e:	4604      	mov	r4, r0
    a320:	460d      	mov	r5, r1
    a322:	f7ff ff23 	bl	a16c <__aeabi_dcmplt>
    a326:	b928      	cbnz	r0, a334 <__aeabi_d2lz+0x1c>
    a328:	4620      	mov	r0, r4
    a32a:	4629      	mov	r1, r5
    a32c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    a330:	f000 b80a 	b.w	a348 <__aeabi_d2ulz>
    a334:	4620      	mov	r0, r4
    a336:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
    a33a:	f000 f805 	bl	a348 <__aeabi_d2ulz>
    a33e:	4240      	negs	r0, r0
    a340:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    a344:	bd38      	pop	{r3, r4, r5, pc}
    a346:	bf00      	nop

0000a348 <__aeabi_d2ulz>:
__fixunsdfdi():
    a348:	b5d0      	push	{r4, r6, r7, lr}
    a34a:	2200      	movs	r2, #0
    a34c:	4b0b      	ldr	r3, [pc, #44]	; (a37c <__aeabi_d2ulz+0x34>)
    a34e:	4606      	mov	r6, r0
    a350:	460f      	mov	r7, r1
    a352:	f7ff fc99 	bl	9c88 <__aeabi_dmul>
    a356:	f7ff ff6f 	bl	a238 <__aeabi_d2uiz>
    a35a:	4604      	mov	r4, r0
    a35c:	f7fa fea6 	bl	50ac <__aeabi_ui2d>
    a360:	2200      	movs	r2, #0
    a362:	4b07      	ldr	r3, [pc, #28]	; (a380 <__aeabi_d2ulz+0x38>)
    a364:	f7ff fc90 	bl	9c88 <__aeabi_dmul>
    a368:	4602      	mov	r2, r0
    a36a:	460b      	mov	r3, r1
    a36c:	4630      	mov	r0, r6
    a36e:	4639      	mov	r1, r7
    a370:	f7fa fd5e 	bl	4e30 <__aeabi_dsub>
    a374:	f7ff ff60 	bl	a238 <__aeabi_d2uiz>
    a378:	4621      	mov	r1, r4
    a37a:	bdd0      	pop	{r4, r6, r7, pc}
    a37c:	3df00000 	.word	0x3df00000
    a380:	41f00000 	.word	0x41f00000

0000a384 <__FUNCTION__.8190>:
    a384:	72746e65 6f705f79 00746e69 2873250a     entry_point..%s(
    a394:	57203a29 494e5241 203a474e 736e6553     ): WARNING: Sens
    a3a4:	6520726f 726f7272 6e6f2073 69687420     or errors on thi
    a3b4:	6f622073 0a647261 73250a00 203a2928     s board...%s(): 
    a3c4:	65746e45 676e6972 69616d20 0a29286e     Entering main().
    a3d4:	52524500 203a524f 6e69616d 73202928     .ERROR: main() s
    a3e4:	6c756f68 656e2064 20726576 75746572     hould never retu
    a3f4:	202c6e72 676f7270 206d6172 20736168     rn, program has 
    a404:	6e656562 6c616820 00646574 78656e55     been halted.Unex
    a414:	74636570 43206465 65205550 70656378     pected CPU excep
    a424:	6e6f6974 75250020 6e692820 72726574     tion .%u (interr
    a434:	29747075 73616820 63636f20 64657275     upt) has occured
    a444:	646e6120 65687420 6f727020 6d617267      and the program
    a454:	6c697720 6f6e206c 61682077 000a746c      will now halt..
    a464:	65637845 6f697470 7061206e 72616570     Exception appear
    a474:	6f742073 20656220 27732527 6944000a     s to be '%s'..Di
    a484:	6f792064 65722075 74736967 74207265     d you register t
    a494:	69206568 7265746e 74707572 726f6320     he interrupt cor
    a4a4:	74636572 7520796c 676e6973 63706c20     rectly using lpc
    a4b4:	7265705f 65687069 736c6172 4120682e     _peripherals.h A
    a4c4:	003f4950 61747365 72006b63 74657365     PI?.estack.reset
    a4d4:	494d4e00 72616800 61662064 00746c75     .NMI.hard fault.
    a4e4:	6f6d656d 66207972 746c7561 73756200     memory fault.bus
    a4f4:	75616620 7500746c 65676173 75616620      fault.usage fau
    a504:	7200746c 72657365 00646576 736f7472     lt.reserved.rtos
    a514:	62656400 ff006775                       .debug..

0000a51c <table.8042>:
    a51c:	0000a4c8 0000a4cf 0000a4d5 0000a4d9     ................
    a52c:	0000a4e4 0000a4f1 0000a4fb 0000a507     ................
    a53c:	0000a507 0000a507 0000a507 0000a510     ................
    a54c:	0000a515 0000a507 0000a510 0000a510     ................
    a55c:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    a56c:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    a57c:	2d2d2d2d 2d2d2d2d 2d2d2d0a 4157202d     --------.---- WA
    a58c:	4e494e52 57203a47 72632065 65687361     RNING: We crashe
    a59c:	72702064 6f697665 796c7375 2d2d2d20     d previously ---
    a5ac:	20000a2d 3a435020 25783020 586c3830     -..  PC: 0x%08lX
    a5bc:	2020000a 203a524c 30257830 0a586c38     ..  LR: 0x%08lX.
    a5cc:	53502000 30203a52 38302578 000a586c     . PSR: 0x%08lX..
    a5dc:	30522020 7830203a 6c383025 20000a58       R0: 0x%08lX.. 
    a5ec:	3a315220 25783020 586c3830 2020000a      R1: 0x%08lX..  
    a5fc:	203a3252 30257830 0a586c38 52202000     R2: 0x%08lX..  R
    a60c:	30203a33 38302578 000a586c 4620200a     3: 0x%08lX...  F
    a61c:	20646e69 20656874 736c2e2a 69662074     ind the *.lst fi
    a62c:	6920656c 6f79206e 5f207275 6c697562     le in your _buil
    a63c:	69642064 74636572 2c79726f 646e6120     d directory, and
    a64c:	6f6f6c20 0a70756b 68742020 43502065      lookup.  the PC
    a65c:	6c617620 74206575 6f6c206f 65746163      value to locate
    a66c:	69687720 66206863 74636e75 206e6f69      which function 
    a67c:	73756163 74206465 2e736968 5420200a     caused this..  T
    a68c:	4c206568 68732052 646c756f 20656220     he LR should be 
    a69c:	20656874 65727027 756f6976 66202773     the 'previous' f
    a6ac:	74636e75 206e6f69 74616874 73617720     unction that was
    a6bc:	6e757220 676e696e 20200a2e 522d3052      running..  R0-R
    a6cc:	72612033 61702065 656d6172 73726574     3 are parameters
    a6dc:	206f7420 636e7566 6e6f6974 000a2e73      to functions...

0000a6ec <ExCvt>:
    a6ec:	41459a80 808f418e 49454545 8f8e4949     ..EA.A..EEEIII..
    a6fc:	4f929290 55554f99 9b9a9959 9f9e9d9c     ...O.OUUY.......
    a70c:	554f4941 a7a6a5a5 abaaa9a8 afaeadac     AIOU............
    a71c:	b3b2b1b0 b7b6b5b4 bbbab9b8 bfbebdbc     ................
    a72c:	c3c2c1c0 c7c6c5c4 cbcac9c8 cfcecdcc     ................
    a73c:	d3d2d1d0 d7d6d5d4 dbdad9d8 dfdedddc     ................
    a74c:	e3e2e1e0 e7e6e5e4 ebeae9e8 efeeedec     ................
    a75c:	f3f2f1f0 f7f6f5f4 fbfaf9f8 fffefdfc     ................

0000a76c <LfnOfs>:
    a76c:	07050301 12100e09 1c181614 5441461e     .............FAT
    a77c:	54414600 22003233 3e3c3a2a 007f7c3f     .FAT32."*:<>?|..
    a78c:	3d3b2c2b ff005d5b                       +,;=[]..

0000a794 <cvt1.8022>:
    a794:	031a0061 031700e0 030700f8 000100ff     a...............
    a7a4:	01000178 01320130 01390106 014a0110     x...0.2...9...J.
    a7b4:	0179012e 01800106 0243004d 01820181     ..y.....M.C.....
    a7c4:	01840182 01860184 01870187 018a0189     ................
    a7d4:	018b018b 018e018d 0190018f 01910191     ................
    a7e4:	01940193 019601f6 01980197 023d0198     ..............=.
    a7f4:	019c019b 0220019d 01a0019f 01a201a0     ...... .........
    a804:	01a401a2 01a601a4 01a701a7 01aa01a9     ................
    a814:	01ac01ab 01ae01ac 01af01af 01b201b1     ................
    a824:	01b301b3 01b501b5 01b801b7 01ba01b8     ................
    a834:	01bc01bb 01be01bc 01c001f7 01c201c1     ................
    a844:	01c401c3 01c401c5 01c801c7 01ca01c7     ................
    a854:	01ca01cb 011001cd 000101dd 01de018e     ................
    a864:	01f30112 01f10003 01f401f4 012801f8     ..............(.
    a874:	01120222 0009023a 023b2c65 023d023b     "...:...e,;.;.=.
    a884:	023f2c66 02410240 02460241 0253010a     f,?.@.A.A.F...S.
    a894:	01810040 02550186 018a0189 018f0258     @.....U.....X...
    a8a4:	0190025a 025d025c 025f025e 02610193     Z...\.].^._...a.
    a8b4:	01940262 02650264 02670266 01960197     b...d.e.f.g.....
    a8c4:	2c62026a 026d026c 019c026e 02710270     j.b,l.m.n...p.q.
    a8d4:	0273019d 019f0274 02770276 02790278     ..s.t...v.w.x.y.
    a8e4:	027b027a 2c64027c 027f027e 028101a6     z.{.|.d,~.......
    a8f4:	01a90282 02850284 02870286 024401ae     ..............D.
    a904:	01b201b1 028d0245 028f028e 02910290     ....E...........
    a914:	037b01b7 03fd0003 03ff03fe 000403ac     ..{.............
    a924:	03880386 038a0389 031103b1 000203c2     ................
    a934:	03a303a3 030803c4 000303cc 038e038c     ................
    a944:	03d8038f 03f20118 03f9000a 03f403f3     ................
    a954:	03f603f5 03f703f7 03fa03f9 043003fa     ..............0.
    a964:	04500320 04600710 048a0122 04c10136      .P...`."...6...
    a974:	04cf010e 04c00001 014404d0 04260561     ..........D.a.&.
	...

0000a986 <cvt2.8023>:
    a986:	00011d7d 1e002c63 1ea00196 1f00015a     }...c,......Z...
    a996:	1f100608 1f200606 1f300608 1f400608     ...... ...0...@.
    a9a6:	1f510606 1f590007 1f5b1f52 1f5d1f54     ..Q...Y.R.[.T.].
    a9b6:	1f5f1f56 06081f60 000e1f70 1fbb1fba     V._.`...p.......
    a9c6:	1fc91fc8 1fcb1fca 1fdb1fda 1ff91ff8     ................
    a9d6:	1feb1fea 1ffb1ffa 06081f80 06081f90     ................
    a9e6:	06081fa0 00041fb0 1fb91fb8 1fbc1fb2     ................
    a9f6:	00011fcc 1fd01fc3 1fe00602 1fe50602     ................
    aa06:	1fec0001 00011ff3 214e1ffc 21320001     ..........N!..2!
    aa16:	02102170 00012184 24d02183 2c30051a     p!...!...!.$..0,
    aa26:	2c60042f 2c670102 2c750106 2c800102     /.`,..g,..u,...,
    aa36:	2d000164 ff410826 0000031a              d..-&.A.....

0000aa42 <uc437>:
    aa42:	00fc00c7 00e200e9 00e000e4 00e700e5     ................
    aa52:	00eb00ea 00ef00e8 00ec00ee 00c500c4     ................
    aa62:	00e600c9 00f400c6 00f200f6 00f900fb     ................
    aa72:	00d600ff 00a200dc 00a500a3 019220a7     ............. ..
    aa82:	00ed00e1 00fa00f3 00d100f1 00ba00aa     ................
    aa92:	231000bf 00bd00ac 00a100bc 00bb00ab     ...#............
    aaa2:	25922591 25022593 25612524 25562562     .%.%.%.%$%a%b%V%
    aab2:	25632555 25572551 255c255d 2510255b     U%c%Q%W%]%\%[%.%
    aac2:	25342514 251c252c 253c2500 255f255e     .%4%,%.%.%<%^%_%
    aad2:	2554255a 25662569 25502560 2567256c     Z%T%i%f%`%P%l%g%
    aae2:	25642568 25592565 25522558 256b2553     h%d%e%Y%X%R%S%k%
    aaf2:	2518256a 2588250c 258c2584 25802590     j%.%.%.%.%.%.%.%
    ab02:	00df03b1 03c00393 03c303a3 03c400b5     ................
    ab12:	039803a6 03b403a9 03c6221e 222903b5     ........."....)"
    ab22:	00b12261 22642265 23212320 224800f7     a"..e"d" #!#..H"
    ab32:	221900b0 221a00b7 00b2207f 00a025a0     ..."...". ...%..
    ab42:	4f525245 43203a52 206c6c61 5f206f74     ERROR: Call to _
    ab52:	736f6c63 20292865 20746f6e 65707865     close() not expe
    ab62:	64657463 5245000a 3a524f52 6c614320     cted..ERROR: Cal
    ab72:	6f74206c 65725f20 29286461 74697720     l to _read() wit
    ab82:	6e612068 736e7520 6f707075 64657472     h an unsupported
    ab92:	6e616820 00656c64 4f525245 43203a52      handle.ERROR: C
    aba2:	206c6c61 5f206f74 74697277 20292865     all to _write() 
    abb2:	68746977 206e6120 75736e75 726f7070     with an unsuppor
    abc2:	20646574 646e6168                        ted handle.

0000abcd <__FUNCTION__.9195>:
    abcd:	69726570 72656870 5f736c61 74696e69     peripherals_init
    abdd:	20445300 64726163 756f6d20 6465746e     .SD card mounted
    abed:	63757320 73736563 6c6c7566 57000a79      successfully..W
    abfd:	494e5241 203a474e 63204453 20647261     ARNING: SD card 
    ac0d:	6c756f63 6f6e2064 65622074 756f6d20     could not be mou
    ac1d:	6465746e 2d2d000a 2d2d2d2d 2d2d2d2d     nted..----------
    ac2d:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    ac3d:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    ac4d:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    ac5d:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    ac6d:	2d2d2d2d 0a002d2d 250a7325 3a292873     ------..%s.%s():
    ac7d:	776f4c20 76656c20 73206c65 74726174      Low level start
    ac8d:	250a7075 49000a73 73204332 6576616c     up.%s..I2C slave
    ac9d:	74656420 65746365 74612064 64646120      detected at add
    acad:	73736572 7830203a 58323025 7246000a     ress: 0x%02X..Fr
    acbd:	54526565 4120534f 52455353 20292854     eeRTOS ASSERT() 
    accd:	7563636f 64657272 646e6920 74616369     occurred indicat
    acdd:	20676e69 65206e61 726f7272 6e6f6320     ing an error con
    aced:	69746964 74206e6f 20746168 756f6873     dition that shou
    acfd:	4e20646c 52455645 70616820 006e6570     ld NEVER happen.
    ad0d:	44202d20 79206469 6320756f 206c6c61      - Did you call 
    ad1d:	6c622061 696b636f 4120676e 6f204950     a blocking API o
    ad2d:	6f6e2072 7246206e 53496d6f 20292852     r non FromISR() 
    ad3d:	20495041 69736e69 61206564 5349206e     API inside an IS
    ad4d:	20003f52 6944202d 6f792064 6f662075     R?. - Did you fo
    ad5d:	74656772 206f7420 20657375 69727066     rget to use fpri
    ad6d:	2866746e 65647473 20297272 61206e69     ntf(stderr) in a
    ad7d:	5349206e 48003f52 20657265 74207369     n ISR?.Here is t
    ad8d:	6c206568 20656e69 6320666f 2065646f     he line of code 
    ad9d:	74616874 6c616820 20646574 20656874     that halted the 
    adad:	3a555043 41760020 696c7070 69746163     CPU: .vApplicati
    adbd:	614d6e6f 636f6c6c 6c696146 6f486465     onMallocFailedHo
    adcd:	29286b6f 6c616320 3b64656c 206f6e20     ok() called; no 
    addd:	65726f6d 4d415220 6d656d20 0079726f     more RAM memory.
    aded:	63617473 766f206b 6c667265 6220776f     stack overflow b
    adfd:	68742079 74207369 3a6b7361 43787500     y this task:.uxC
    ae0d:	69746972 4e6c6163 69747365 3d20676e     riticalNesting =
    ae1d:	307e203d 28004c55 726f7020 49564e74     = ~0UL.( portNVI
    ae2d:	4e495f43 54435f54 525f4c52 26204745     C_INT_CTRL_REG &
    ae3d:	726f7020 43455674 54434154 5f455649      portVECTACTIVE_
    ae4d:	4b53414d 3d202920 0030203d 72437875     MASK ) == 0.uxCr
    ae5d:	63697469 654e6c61 6e697473 63750067     iticalNesting.uc
    ae6d:	72727543 50746e65 726f6972 20797469     CurrentPriority 
    ae7d:	75203d3e 78614d63 43737953 506c6c61     >= ucMaxSysCallP
    ae8d:	726f6972 00797469 6f702028 49417472     riority.( portAI
    ae9d:	5f524352 20474552 6f702026 52507472     RCR_REG & portPR
    aead:	49524f49 475f5954 50554f52 53414d5f     IORITY_GROUP_MAS
    aebd:	2029204b 75203d3c 78614d6c 47495250     K ) <= ulMaxPRIG
    aecd:	50554f52 756c6156 6f700065 50437472     ROUPValue.portCP
    aedd:	20444955 70203d21 4374726f 4554524f     UID != portCORTE
    aeed:	374d5f58 7030725f 44495f31 726f7000     X_M7_r0p1_ID.por
    aefd:	55504374 21204449 6f70203d 4f437472     tCPUID != portCO
    af0d:	58455452 5f374d5f 30703072 0044495f     RTEX_M7_r0p0_ID.
    af1d:	6f702028 414d7472 52505f58 4f524749     ( portMAX_PRIGRO
    af2d:	425f5055 20535449 6c75202d 5078614d     UP_BITS - ulMaxP
    af3d:	52474952 5650554f 65756c61 3d202920     RIGROUPValue ) =
    af4d:	5f5f203d 4349564e 4952505f 49425f4f     = __NVIC_PRIO_BI
    af5d:	28005354 42787520 54737469 7465536f     TS.( uxBitsToSet
    af6d:	65202620 746e6576 4e455645 49425f54      & eventEVENT_BI
    af7d:	435f5354 52544e4f 425f4c4f 53455459     TS_CONTROL_BYTES
    af8d:	3d202920 0030203d 65764578 7247746e      ) == 0.xEventGr
    af9d:	0070756f 78752028 73746942 61576f54     oup.( uxBitsToWa
    afad:	6f467469 20262072 6e657665 45564574     itFor & eventEVE
    afbd:	425f544e 5f535449 544e4f43 5f4c4f52     NT_BITS_CONTROL_
    afcd:	45545942 20292053 30203d3d 42787500     BYTES ) == 0.uxB
    afdd:	54737469 6961576f 726f4674 203d2120     itsToWaitFor != 
    afed:	28210030 78202820 6b736154 53746547     0.!( ( xTaskGetS
    affd:	64656863 72656c75 74617453 20292865     chedulerState() 
    b00d:	74203d3d 536b7361 44454843 52454c55     == taskSCHEDULER
    b01d:	5355535f 444e4550 29204445 20262620     _SUSPENDED ) && 
    b02d:	54782028 736b6369 61576f54 21207469     ( xTicksToWait !
    b03d:	2030203d 00292029 75517875 4c657565     = 0 ) ).uxQueueL
    b04d:	74676e65 203e2068 42552028 54657361     ength > ( UBaseT
    b05d:	5f657079 20292074 78700030 74617453     ype_t ) 0.pxStat
    b06d:	75516369 20657565 4e203d21 004c4c55     icQueue != NULL.
    b07d:	28202821 63757020 75657551 6f745365     !( ( pucQueueSto
    b08d:	65676172 203d2120 4c4c554e 26202920     rage != NULL ) &
    b09d:	20282026 74497875 69536d65 3d20657a     & ( uxItemSize =
    b0ad:	2030203d 00292029 28202821 63757020     = 0 ) ).!( ( puc
    b0bd:	75657551 6f745365 65676172 203d3d20     QueueStorage == 
    b0cd:	4c4c554e 26202920 20282026 74497875     NULL ) && ( uxIt
    b0dd:	69536d65 2120657a 2030203d 00292029     emSize != 0 ) ).
    b0ed:	7a695378 3d3d2065 7a697320 28666f65     xSize == sizeof(
    b0fd:	65755120 745f6575 70002920 65755178      Queue_t ).pxQue
    b10d:	21006575 20282028 74497670 6f546d65     ue.!( ( pvItemTo
    b11d:	75657551 3d3d2065 4c554e20 2029204c     Queue == NULL ) 
    b12d:	28202626 51787020 65756575 78753e2d     && ( pxQueue->ux
    b13d:	6d657449 657a6953 203d2120 42552028     ItemSize != ( UB
    b14d:	54657361 5f657079 20292074 29205530     aseType_t ) 0U )
    b15d:	21002920 20282028 706f4378 736f5079      ).!( ( xCopyPos
    b16d:	6f697469 3d3d206e 65757120 564f6575     ition == queueOV
    b17d:	52575245 20455449 26262029 70202820     ERWRITE ) && ( p
    b18d:	65755178 3e2d6575 654c7875 6874676e     xQueue->uxLength
    b19d:	203d2120 20292031 78700029 75657551      != 1 ) ).pxQueu
    b1ad:	753e2d65 65744978 7a69536d 3d3d2065     e->uxItemSize ==
    b1bd:	21003020 20282028 75517870 2d657565      0.!( ( pxQueue-
    b1cd:	5178753e 65756575 65707954 203d3d20     >uxQueueType == 
    b1dd:	75657571 45555165 495f4555 554d5f53     queueQUEUE_IS_MU
    b1ed:	20584554 26262029 70202820 65755178     TEX ) && ( pxQue
    b1fd:	3e2d6575 53782e75 70616d65 65726f68     ue->u.xSemaphore
    b20d:	754d782e 48786574 65646c6f 3d212072     .xMutexHolder !=
    b21d:	4c554e20 2029204c 20280029 75517870      NULL ) ).( pxQu
    b22d:	20657565 28210029 28202820 42767020     eue ).!( ( ( pvB
    b23d:	65666675 20292072 4e203d3d 204c4c55     uffer ) == NULL 
    b24d:	26262029 28202820 51787020 65756575     ) && ( ( pxQueue
    b25d:	3e2d2920 74497875 69536d65 2120657a      )->uxItemSize !
    b26d:	2028203d 73614255 70795465 20745f65     = ( UBaseType_t 
    b27d:	55302029 29202920 20282100 76702028     ) 0U ) ).!( ( pv
    b28d:	66667542 3d207265 554e203d 29204c4c     Buffer == NULL )
    b29d:	20262620 78702028 75657551 753e2d65      && ( pxQueue->u
    b2ad:	65744978 7a69536d 3d212065 55202820     xItemSize != ( U
    b2bd:	65736142 65707954 2920745f 20553020     BaseType_t ) 0U 
    b2cd:	00292029 686e4978 74697265 65636e61     ) ).xInheritance
    b2dd:	7563634f 64657272 203d3d20 41466470     Occurred == pdFA
    b2ed:	0045534c 72507870 6f697665 61577375     LSE.pxPreviousWa
    b2fd:	6954656b 2800656d 69547820 6e49656d     keTime.( xTimeIn
    b30d:	6d657263 20746e65 5530203e 75002920     crement > 0U ).u
    b31d:	68635378 6c756465 75537265 6e657073     xSchedulerSuspen
    b32d:	20646564 30203d3d 45787000 746e6576     ded == 0.pxEvent
    b33d:	7473694c 53787500 64656863 72656c75     List.uxScheduler
    b34d:	70737553 65646e65 3d212064 70003020     Suspended != 0.p
    b35d:	42435478 203d2120 75437870 6e657272     xTCB != pxCurren
    b36d:	42435474 53787500 64656863 72656c75     tTCB.uxScheduler
    b37d:	70737553 65646e65 3d212064 46647020     Suspended != pdF
    b38d:	45534c41 54787000 4f656d69 49007475     ALSE.pxTimeOut.I
    b39d:	00454c44 7473696c 52525543 5f544e45     DLE.listCURRENT_
    b3ad:	5453494c 4e454c5f 28485447 20282620     LIST_LENGTH( &( 
    b3bd:	65527870 54796461 736b7361 7473694c     pxReadyTasksList
    b3cd:	75205b73 706f5478 6f697250 79746972     s[ uxTopPriority
    b3dd:	29205d20 3e202920 70003020 63695478      ] ) ) > 0.pxTic
    b3ed:	6f54736b 74696157 78757000 63617453     ksToWait.puxStac
    b3fd:	6675426b 20726566 4e203d21 004c4c55     kBuffer != NULL.
    b40d:	61547870 75426b73 72656666 203d2120     pxTaskBuffer != 
    b41d:	4c4c554e 69537800 3d20657a 6973203d     NULL.xSize == si
    b42d:	666f657a 43542028 20745f42 20280029     zeof( TCB_t ).( 
    b43d:	7473696c 5453494c 5f53495f 54504d45     listLIST_IS_EMPT
    b44d:	70202859 6c654478 64657961 6b736154     Y( pxDelayedTask
    b45d:	7473694c 29202920 54787000 3d204243     List ) ).pxTCB =
    b46d:	7870203d 72727543 54746e65 70004243     = pxCurrentTCB.p
    b47d:	42435478 78753e2d 6574754d 48736578     xTCB->uxMutexesH
    b48d:	00646c65 6e557870 636f6c62 5464656b     eld.pxUnblockedT
    b49d:	75004243 68635378 6c756465 75537265     CB.uxSchedulerSu
    b4ad:	6e657073 00646564                        spended....

0000b4b8 <gpio_memory_map>:
    b4b8:	20098000 20098020 20098040 20098060     ...  .. @.. `.. 
    b4c8:	20098080 200980a0                       ... ... 

0000b4d0 <hw_timers>:
    b4d0:	40004000 00000001 0000b500 40008000     .@.@...........@
    b4e0:	00000002 0000b506 40090000 00000003     ...........@....
    b4f0:	0000b50c 40094000 00000004 0000b512     .....@.@........
    b500:	545f5748 57480030 0031545f 545f5748     HW_T0.HW_T1.HW_T
    b510:	57480032 0033545f 0000453d 00004531     2.HW_T3.=E..1E..
    b520:	00004525 30633269 63326900 32690031     %E..i2c0.i2c1.i2
    b530:	                                         c2.

0000b533 <lpc_peripheral_pconp_bit_map>:
    b533:	16020100 18040317 13070619 0a15001a     ................
    b543:	00000000 000c0000 001d0d00 00000000     ................
    b553:	00000000 00000014 00000000 00000000     ................
	...
    b58b:	61550e00 00307472 74726155 61550031     ..Uart0.Uart1.Ua
    b59b:	00327472 74726155 ffff0033               rt2.Uart3....

0000b5a8 <uart__isrs>:
    b5a8:	00004985 00004979 0000496d 00004961     .I..yI..mI..aI..

0000b5b8 <uart_peripheral_ids>:
    b5b8:	08070605 203a6925 25203a78 79202c69     ....%i: x: %i, y
    b5c8:	6925203a 3a7a202c 0a692520 6f725000     : %i, z: %i..Pro
    b5d8:	65637564 6f430072 6d75736e 57007265     ducer.Consumer.W
    b5e8:	68637461 00676f64 72617453 676e6974     atchdog.Starting
    b5f8:	4f545220 61540053 20736b73 20646964      RTOS.Tasks did 
    b608:	20746f6e 706d6f63 6574656c 7250203a     not complete: Pr
    b618:	6375646f 61207265 4320646e 75736e6f     oducer and Consu
    b628:	2072656d 6c696166 000a6465 6b736154     mer failed..Task
    b638:	69642073 6f6e2064 6f632074 656c706d     s did not comple
    b648:	203a6574 646f7250 72656375 63755320     te: Producer Suc
    b658:	64656563 202c6465 756e6f43 72656d73     ceeded, Conusmer
    b668:	69614620 0a64656c 73615400 6420736b      Failed..Tasks d
    b678:	6e206469 6320746f 6c706d6f 3a657465     id not complete:
    b688:	6f725020 65637564 61462072 64656c69      Producer Failed
    b698:	6f43202c 6d73756e 53207265 65636375     , Conusmer Succe
    b6a8:	64656465 6154000a 20736b73 706d6f63     eded..Tasks comp
    b6b8:	6574656c 66000a64 2e656c69 00747874     leted..file.txt.
    b6c8:	4f525245 46203a52 656c6961 6f742064     ERROR: Failed to
    b6d8:	69727720 64206574 20617461 66206f74      write data to f
    b6e8:	00656c69 4f525245 46203a52 656c6961     ile.ERROR: Faile
    b6f8:	6f742064 65706f20 25203a6e               d to open: %s..

0000b707 <_ctype_>:
    b707:	20202000 20202020 28282020 20282828     .         ((((( 
    b717:	20202020 20202020 20202020 20202020                     
    b727:	10108820 10101010 10101010 10101010      ...............
    b737:	04040410 04040404 10040404 10101010     ................
    b747:	41411010 41414141 01010101 01010101     ..AAAAAA........
    b757:	01010101 01010101 01010101 10101010     ................
    b767:	42421010 42424242 02020202 02020202     ..BBBBBB........
    b777:	02020202 02020202 02020202 10101010     ................
    b787:	00000020 00000000 00000000 00000000      ...............
	...

0000b808 <_global_impure_ptr>:
    b808:	10000154 2b302d23 6c680020 6665004c     T...#-0+ .hlL.ef
    b818:	47464567 464e4900 666e6900 4e414e00     gEFG.INF.inf.NAN
    b828:	6e616e00 32313000 36353433 41393837     .nan.0123456789A
    b838:	45444342 31300046 35343332 39383736     BCDEF.0123456789
    b848:	64636261 65006665 00646c25              abcdef.e%ld.

0000b854 <fpi.7522>:
    b854:	00000035 fffffbce 000003cb 00000001     5...............
    b864:	00000000                                ....

0000b868 <fpinan.7558>:
    b868:	00000034 fffffbce 000003cb 00000001     4...............
    b878:	00000000 ffffffff                       ........

0000b880 <tinytens>:
    b880:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
    b890:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
    b8a0:	64ac6f43 11680628 69666e49 7974696e     Co.d(.h.Infinity
    b8b0:	4e614e00 ffffff00                       .NaN....

0000b8b8 <__sf_fake_stderr>:
	...

0000b8d8 <__sf_fake_stdin>:
	...

0000b8f8 <__sf_fake_stdout>:
	...

0000b918 <_C_numeric_locale>:
    b918:	0000b924 0000a481 100001b4 0043002e     $.............C.
    b928:	49534f50 ffff0058                       POSIX...

0000b930 <__mprec_bigtens>:
    b930:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
    b940:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
    b950:	7f73bf3c 75154fdd                       <.s..O.u

0000b958 <__mprec_tens>:
    b958:	00000000 3ff00000 00000000 40240000     .......?......$@
    b968:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
    b978:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
    b988:	00000000 412e8480 00000000 416312d0     .......A......cA
    b998:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
    b9a8:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
    b9b8:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
    b9c8:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
    b9d8:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
    b9e8:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
    b9f8:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
    ba08:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
    ba18:	79d99db4 44ea7843                       ...yCx.D

0000ba20 <p05.7444>:
    ba20:	00000005 00000019 0000007d              ........}...
